<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.SharePoint</name>
    </assembly>
    <members>
        <member name="T:CMS.SharePoint.SharePointConnectionData">
            <summary>
            Encapsulates information regarding connection parameters for SharePoint server.
            Any connection data item can be retrieved via <see cref="M:CMS.SharePoint.SharePointConnectionData.GetSharePointConnectionDataItem(System.String)"/>.
            For access to frequently used items getter properties are available.
            </summary>
            <seealso cref="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionSiteUrl"/>
            <seealso cref="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionUserName"/>
            <seealso cref="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionPassword"/>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionName">
            <summary>
            Gets or sets SharePointConnectionName.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionSiteUrl">
            <summary>
            Gets or sets SharePointConnectionSiteUrl.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionUserName">
            <summary>
            Gets or sets SharePointConnectionUserName.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionPassword">
            <summary>
            Gets or sets SharePointConnectionPassword.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionData.Item(System.String)">
            <summary>
            Gets or sets SharePoint connection item by name.
            </summary>
            <param name="name">Name of the item</param>
            <returns>Item value, or null if not present</returns>
            <seealso cref="M:CMS.SharePoint.SharePointConnectionData.GetSharePointConnectionDataItem(System.String)"/>
            <seealso cref="M:CMS.SharePoint.SharePointConnectionData.SetSharePointConnectionDataItem(System.String,System.Object)"/>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionData.SharePointConnectionDataItemNames">
            <summary>
            Gets list of connection item names.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionData.#ctor">
            <summary>
            Creates new empty SharePoint connection data.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionData.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates new SharePoint connection data filled with connectionData.
            </summary>
            <param name="connectionData">Connection data</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionData.GetSharePointConnectionDataItem(System.String)">
            <summary>
            Gets connection data item for given name.
            </summary>
            <param name="name">Name of the item</param>
            <returns>Item value, or null if not present</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionData.SetSharePointConnectionDataItem(System.String,System.Object)">
            <summary>
            Sets connection data item for given name.
            </summary>
            <param name="name">Name of the item</param>
            <param name="value">Item value</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionData.Clone">
            <summary>
            Returns clone of SharePoint connection data.
            </summary>
            <returns>Clone of SharePoint connection data.</returns>
        </member>
        <member name="T:CMS.SharePoint.SharePointConnectionInfo">
            <summary>
            Class defines connection to the SharePoint server including credentials.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointConnectionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointConnectionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointConnectionInfo.connectionDataPropertyBlacklist">
            <summary>
            Properties to be skipped when transforming to SharePointConnectionData
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionDisplayName">
            <summary>
            Name under which the object appears in the user interface
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionName">
            <summary>
            Internal name used by the system to identify the object
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionSiteUrl">
            <summary>
            The URL of a SharePoint site.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionUserName">
            <summary>
            Username that will be used for authentication.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionPassword">
            <summary>
            Password that will be used for authentication.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionID">
            <summary>
            Share point connection ID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionSiteID">
            <summary>
            Share point connection site ID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionGUID">
            <summary>
            Share point connection GUID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointConnectionInfo.SharePointConnectionLastModified">
            <summary>
            Share point connection last modified
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfo.ToSharePointConnectionData">
            <summary>
            Gets <see cref="T:CMS.SharePoint.SharePointConnectionData"/> representing this object.
            </summary>
            <returns>This object as SharePointConnectionData</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfo.#ctor">
            <summary>
            Constructor - Creates an empty SharePointConnectionInfo object.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SharePointConnectionInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointConnectionInfoProvider">
            <summary>
            Class providing SharePointConnectionInfo management.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.GetSharePointConnections">
            <summary>
            Returns a query for all the SharePointConnectionInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.GetSharePointConnectionInfo(System.Int32)">
            <summary>
            Returns SharePointConnectionInfo with specified ID.
            </summary>
            <param name="id">SharePointConnectionInfo ID</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.GetSharePointConnectionInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns SharePointConnectionInfo with specified name.
            </summary>
            <param name="name">SharePointConnectionInfo name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.GetSharePointConnectionInfo(System.Guid)">
            <summary>
            Returns SharePointConnectionInfo with specified GUID.
            </summary>
            <param name="guid">SharePointConnectionInfo GUID</param>                
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.SetSharePointConnectionInfo(CMS.SharePoint.SharePointConnectionInfo)">
            <summary>
            Sets (updates or inserts) specified SharePointConnectionInfo.
            </summary>
            <param name="infoObj">SharePointConnectionInfo to be set</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.DeleteSharePointConnectionInfo(CMS.SharePoint.SharePointConnectionInfo)">
            <summary>
            Deletes specified SharePointConnectionInfo.
            </summary>
            <param name="infoObj">SharePointConnectionInfo to be deleted</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.DeleteSharePointConnectionInfo(System.Int32)">
            <summary>
            Deletes SharePointConnectionInfo with specified ID.
            </summary>
            <param name="id">SharePointConnectionInfo ID</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.GetSharePointConnections(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the SharePointConnectionInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionInfoProvider.GetSharePointConnectionsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the SharePointConnectionInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointVersion">
            <summary>
            Contains known SharePoint version constants.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointVersion.SHAREPOINT_ONLINE">
            <summary>
            Specifies SharePoint Online.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.SharePointConnectionNotFoundException">
            <summary>
            Thrown when SharePoint connection can not be found.
            </summary>
            <seealso cref="T:CMS.SharePoint.SharePointConnectionInfo"/>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionNotFoundException.#ctor">
            <summary>
            Thrown when SharePoint connection can not be found.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionNotFoundException.#ctor(System.String)">
            <summary>
            Thrown when SharePoint connection can not be found.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Thrown when SharePoint connection can not be found.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointConnectionNotSupportedException">
            <summary>
            Indicates that given SharePoint connection is not suitable for SharePoint service implementation.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionNotSupportedException.#ctor">
            <summary>
            Indicates that given SharePoint connection is not suitable for SharePoint service implementation.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionNotSupportedException.#ctor(System.String)">
            <summary>
            Indicates that given SharePoint connection is not suitable for SharePoint service implementation.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointConnectionNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Indicates that given SharePoint connection is not suitable for SharePoint service implementation.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointFileAlreadyExistsException">
            <summary>
            Thrown when trying to create a SharePoint file which already exists.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileAlreadyExistsException.#ctor">
            <summary>
            Thrown when trying to create a SharePoint file which already exists.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileAlreadyExistsException.#ctor(System.String)">
            <summary>
            Thrown when trying to create a SharePoint file which already exists.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Thrown when trying to create a SharePoint file which already exists.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointServerException">
            <summary>
            Thrown when error at SharePoint server occurs.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointServerException.#ctor">
            <summary>
            Thrown when error at SharePoint server occurs.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointServerException.#ctor(System.String)">
            <summary>
            Thrown when error at SharePoint server occurs.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointServerException.#ctor(System.String,System.Exception)">
            <summary>
            Thrown when error at SharePoint server occurs.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">
            <summary>
            Indicates the desired SharePoint service factory does not have an implementation.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceFactoryNotSupportedException.#ctor">
            <summary>
            Indicates the desired SharePoint service factory does not have an implementation.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceFactoryNotSupportedException.#ctor(System.String)">
            <summary>
            Indicates the desired SharePoint service factory does not have an implementation.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceFactoryNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Indicates the desired SharePoint service factory does not have an implementation.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointServiceNotSupportedException">
            <summary>
            Indicates the desired SharePoint service does not have an implementation.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceNotSupportedException.#ctor">
            <summary>
            Indicates the desired SharePoint service does not have an implementation.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceNotSupportedException.#ctor(System.String)">
            <summary>
            Indicates the desired SharePoint service does not have an implementation.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Indicates the desired SharePoint service does not have an implementation.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.SharePoint.AbstractGetSharePointFileService">
            <summary>
            Abstract SharePoint service that serves SharePoint files.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.AbstractGetSharePointFileService.CACHE_TIME_PARAMETER">
            <summary>
            Name of the query parameter for cache minutes setting.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.AbstractGetSharePointFileService.CACHE_SIZE_PARAMETER">
            <summary>
            Name of the query parameter for cache size limit setting.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.AbstractGetSharePointFileService.IMAGE_WIDTH_PARAMETER">
            <summary>
            Name of the query parameter for image width setting.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.AbstractGetSharePointFileService.IMAGE_HEIGHT_PARAMETER">
            <summary>
            Name of the query parameter for image height setting.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.AbstractGetSharePointFileService.IMAGE_MAXSIDESIZE_PARAMETER">
            <summary>
            Name of the query parameter for image max side size setting.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.AbstractGetSharePointFileService.FORCE_DOWNLOAD_MIMETYPE">
            <summary>
            Mime type that forces browsers to download the file
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.CacheItemName">
            <summary>
            Gets the cache item name for currently requested file that will be used when composing the cache key.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.CacheMinutes">
            <summary>
            Number of minutes the file will be cached. Zero means the file won't be cached.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.CacheFileSizeLimit">
            <summary>
            Maximum size of the file that will be cached (bytes).
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.AllowCache">
            <summary>
            Returns true if the process allows cache.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.ForceDownload">
            <summary>
            Indicates whether file forced to be saved on client
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.Width">
            <summary>
            Image width.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.Height">
            <summary>
            Image height.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.AbstractGetSharePointFileService.MaxSideSize">
            <summary>
            Image maximum side size.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.AbstractGetSharePointFileService.GetSharePointFile">
            <summary>
            Gets the requested SharePoint file.
            </summary>
            <returns>Requested SharePoint file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file was not found.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error.</exception>
        </member>
        <member name="M:CMS.SharePoint.AbstractGetSharePointFileService.GetActionResultInternal">
            <summary>
            Process get SharePoint file request.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.AbstractGetSharePointFileService.LoadFile(CMS.Helpers.CacheSettings)">
            <summary>
            Loads requested SharePoint file.
            Loaded file will be cached if it satisfies the cache conditions.
            </summary>
            <param name="cs">Cache settings that are used if file is cached.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file was not found.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error.</exception>
        </member>
        <member name="M:CMS.SharePoint.AbstractGetSharePointFileService.LoadFile">
            <summary>
            Loads requested SharePoint file. Image is resized when needed.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file was not found.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error.</exception>
        </member>
        <member name="M:CMS.SharePoint.AbstractGetSharePointFileService.SendFile(CMS.SharePoint.ISharePointFile)">
            <summary>
            Sends the given file within response.
            </summary>
            <param name="file">File to send</param>
        </member>
        <member name="M:CMS.SharePoint.AbstractGetSharePointFileService.ValidateRequest">
            <summary>
            Validates the request.
            Returns true on success.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.GetLocalSharePointFileService">
            <summary>
            Handler that serves SharePoint files from local storage.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.GetLocalSharePointFileService.FileID">
            <summary>
            SharePointFileInfo identifier.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.GetLocalSharePointFileService.ForceDownload">
            <summary>
            Indicates whether file forced to be saved on client
            </summary>
        </member>
        <member name="P:CMS.SharePoint.GetLocalSharePointFileService.CacheItemName">
            <summary>
            Gets the cache item name for currently requested file that will be used when composing the cache key.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.GetLocalSharePointFileService.GetSharePointFileUrl(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns a URL that will return a sharepoint file upon GET request.
            </summary>
            <param name="localSharePointFileHandlerUrl">Relative or absolute URL of the handler's ASHX file</param>
            <param name="sharePointFileID">ID if the sharepoint file to return</param>
            <param name="forceDownload">Indicates whether you want to force user to download the file upon GET request.</param>
            <returns>Returns a URL that will return a sharepoint file upon GET request.</returns>
        </member>
        <member name="M:CMS.SharePoint.GetLocalSharePointFileService.GetSharePointFile">
            <summary>
            Gets the requested SharePoint file from local storage.
            </summary>
            <returns>Requested SharePoint file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file was not found.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error.</exception>
        </member>
        <member name="M:CMS.SharePoint.GetLocalSharePointFileService.ValidateRequest">
            <summary>
            Validates the request.
            Returns true on success.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.GetSharePointFileService">
            <summary>
            Handler that serves SharePoint files directly from SharePoint server.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.GetSharePointFileService.FilePath">
            <summary>
            SharePoint file path.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.GetSharePointFileService.SharePointConnection">
            <summary>
            SharePoint connection info.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.GetSharePointFileService.CacheItemName">
            <summary>
            Gets the cache item name for currently requested file that will be used when composing the cache key.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.GetSharePointFileService.GetSharePointFile">
            <summary>
            Gets the requested SharePoint file from SharePoint server.
            </summary>
            <returns>Requested SharePoint file.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file was not found.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error.</exception>
        </member>
        <member name="M:CMS.SharePoint.GetSharePointFileService.ValidateRequest">
            <summary>
            Validates the request.
            Returns true on success.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.GetSharePointFileService.GetService(CMS.SharePoint.SharePointConnectionInfo)">
            <summary>
            Gets the necessary service for getting the specified file.
            </summary>
            <param name="connection">Connection containing information about connection to the SharePoint site on which the file is located.</param>
            <exception cref="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">Thrown when no service factory for specified SharePoint version found.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServiceNotSupportedException">Thrown when IService implementation is not available.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when available service implementation does not support given connectionData.</exception>
        </member>
        <member name="T:CMS.SharePoint.ISharePointUrlProvider">
            <summary>
            The URL provider for the SharePoint files.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.ISharePointUrlProvider.GetSharePointFileUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the URL for a file at the SharePoint server.
            </summary>
            <param name="filePath">The SharePoint server path to file in the format "/&lt;appName&gt;/&lt;filePath&gt;"</param>
            <param name="width">Maximum width (px) of the image the handler should return.</param>
            <param name="height">Maximum height (px) of the image the handler should return.</param>
            <param name="maxSideSize">Maximum side size (px) of the image the handler should return.</param>
            <returns>The URL which the file can be accessed at.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="filePath"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="filePath"/> is empty string.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointFileCacheOptions">
            <summary>
            Represents the SharePoint file options used by the SharePoint handler.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileCacheOptions.CacheMinutes">
            <summary>
            Gets or sets time the SharePoint file will be cached for (after accessing the URL). The <c>null</c> value means that the settings value will be used, 0 means no cache.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileCacheOptions.CacheFileSize">
            <summary>
            Gets or sets the maximum size of the file to be cached (value in kB). <c>null</c> value means that the settins value vill be used.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.SharePointUrlProvider">
            <summary>
            The URL provider for the SharePoint files.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointUrlProvider.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:CMS.SharePoint.SharePointUrlProvider"/>.
            </summary>
            <param name="connectionName">Code name of SharePoint connection to be used.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionName"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointUrlProvider.#ctor(System.String,CMS.SharePoint.SharePointFileCacheOptions)">
            <summary>
            Creates a new instance of <see cref="T:CMS.SharePoint.SharePointUrlProvider"/>.
            </summary>
            <param name="connectionName">The code name of the SharePoint connection to be used.</param>
            <param name="cacheOptions">The code name of the SharePoint connection to be used.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionName"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointUrlProvider.GetSharePointFileUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the URL for a file at the SharePoint server.
            </summary>
            <param name="filePath">The SharePoint server path to file in the format "/&lt;appName&gt;/&lt;filePath&gt;"</param>
            <param name="width">Maximum width (px) of the image the handler should return.</param>
            <param name="height">Maximum height (px) of the image the handler should return.</param>
            <param name="maxSideSize">Maximum side size (px) of the image the handler should return.</param>
            <returns>The URL which the file can be accessed at.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="filePath"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="filePath"/> is empty string.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointFileInfo">
            <summary>
            SharePointFileInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointFileInfo.OBJECT_TYPE">
            <summary>
            SharePointFile object type.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointFileInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileID">
            <summary>
            SharePoint file ID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileGUID">
            <summary>
            SharePoint file GUID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileSiteID">
            <summary>
            SharePoint file site ID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileName">
            <summary>
            SharePoint file name
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileExtension">
            <summary>
            SharePoint file extension
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileMimeType">
            <summary>
            SharePoint file mime type
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileETag">
            <summary>
            SharePoint file E-tag
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileSize">
            <summary>
            SharePoint file size (bytes)
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileBinary">
            <summary>
            SharePoint file binary content
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileServerLastModified">
            <summary>
            SharePoint file server last modified
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileServerRelativeURL">
            <summary>
            SharePoint file server relative URL
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFileInfo.SharePointFileSharePointLibraryID">
            <summary>
            SharePoint file SharePoint library ID
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfo.#ctor">
            <summary>
            Constructor - Creates an empty SharePointFileInfo object.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SharePointFileInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfo.ToSharePointFile">
            <summary>
            Gets <see cref="T:CMS.SharePoint.SharePointFile"/> representing this object.
            </summary>
            <returns>This object as SharePointFile.</returns>
        </member>
        <member name="T:CMS.SharePoint.SharePointFileInfoProvider">
            <summary>
            Class providing SharePointFileInfo management.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFiles(System.Boolean)">
            <summary>
            Returns a query for all the SharePointFileInfo objects.
            </summary>
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFileInfo(System.Int32,System.Boolean)">
            <summary>
            Returns SharePointFileInfo with specified ID.
            </summary>
            <param name="id">SharePointFileInfo ID</param>
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFileInfo(System.Guid,System.Boolean)">
            <summary>
            Returns SharePointFileInfo with specified GUID.
            </summary>
            <param name="guid">SharePointFileInfo GUID</param>      
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>          
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.SetSharePointFileInfo(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Sets (updates or inserts) specified SharePointFileInfo.
            </summary>
            <param name="infoObj">SharePointFileInfo to be set</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.DeleteSharePointFileInfo(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Deletes specified SharePointFileInfo.
            </summary>
            <param name="infoObj">SharePointFileInfo to be deleted</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.DeleteSharePointFileInfo(System.Int32)">
            <summary>
            Deletes SharePointFileInfo with specified ID.
            </summary>
            <param name="id">SharePointFileInfo ID</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFiles(System.Int32,System.Boolean)">
            <summary>
            Returns a query for all the SharePointFileInfo objects of a specified library.
            </summary>
            <param name="libraryId">Library ID</param>
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.UploadFile(CMS.SharePoint.SharePointLibraryInfo,System.IO.Stream,System.String)">
            <summary>
            Uploads a new file to the specified SharePoint library.
            The newly uploaded file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="libraryInfo">SharePoint library to which the file is uploaded.</param>
            <param name="contentStream">Stream containing binary data of the file.</param>
            <param name="libraryRelativeUrl">Relative URL of the file within library (i.e. "myPicture.jpeg" uploads file to the root folder of the library).</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined (is read-only).</exception>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="libraryRelativeUrl"/> already exists.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.UpdateFile(CMS.SharePoint.SharePointFileInfo,System.IO.Stream,System.String)">
            <summary>
            Updates file in SharePoint library with new content and name.
            The <paramref name="newFileName"/> can be the same as the old one.
            The updated file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="fileInfo">SharePoint file to be updated.</param>
            <param name="contentStream">Stream containing the new file's binary content.</param>
            <param name="newFileName">File name of the updated file.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="newFileName"/> identifies an already existing file within the library.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file identified by <paramref name="fileInfo"/> does not exist on SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.DeleteFile(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Deletes the specified file on the SharePoint server and from the local library.
            Deleting a non-existent file within SharePoint library (i.e. file is out of sync) deletes the file from the local library as well.
            </summary>
            <param name="fileInfo">SharePoint file to be deleted</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.RecycleFile(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Moves the specified file to the recycle bin of the SharePoint server.
            Deletes the file from the local library.
            Returns the identifier of the new recycle bin item on SharePoint.
            Recycling a non-existent file within SharePoint library (i.e. file is out of sync) returns empty GUID and deletes the file from the local library as well.
            </summary>
            <param name="fileInfo">SharePoint file to be recycled on the SharePoint server</param>
            <returns>GUID of the new recycle bin item on SharePoint, or <see cref="F:System.Guid.Empty"/> when file does not exist.</returns>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFilesInternal(System.Boolean)">
            <summary>
            Returns a query for all the SharePointFileInfo objects.
            </summary>
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFileInfoInternal(System.Int32,System.Boolean)">
            <summary>
            Returns SharePointFileInfo with specified ID.
            </summary>
            <param name="id">SharePointFileInfo ID</param> 
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>       
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFileInfoInternal(System.Guid,System.Boolean)">
            <summary>
            Returns SharePointFileInfo with specified GUID.
            </summary>
            <param name="guid">SharePointFileInfo GUID</param>
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.GetSharePointFilesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns a query for all the SharePointFileInfo objects of a specified library.
            </summary>
            <param name="libraryId">Library ID</param>
            <param name="getBinary">If false, no binary data is returned for the SharePoint file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.UploadFileInternal(CMS.SharePoint.SharePointLibraryInfo,System.IO.Stream,System.String)">
            <summary>
            Uploads a new file to the specified SharePoint library.
            The newly uploaded file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="libraryInfo">SharePoint library to which the file is uploaded.</param>
            <param name="contentStream">Stream containing binary data of the file.</param>
            <param name="libraryRelativeUrl">Relative URL of the file within library (i.e. "myPicture.jpeg" uploads file to the root folder of the library).</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined (is read-only).</exception>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="libraryRelativeUrl"/> already exists.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.UpdateFileInternal(CMS.SharePoint.SharePointFileInfo,System.IO.Stream,System.String)">
            <summary>
            Updates file in SharePoint library with new content and name.
            The <paramref name="newFileName"/> can be the same as the old one.
            The updated file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="fileInfo">SharePoint file to be updated.</param>
            <param name="contentStream">Stream containing the new file's binary content.</param>
            <param name="newFileName">File name of the updated file.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="newFileName"/> identifies an already existing file within the library.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file identified by <paramref name="fileInfo"/> does not exist on SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.DeleteFileInternal(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Deletes the specified file on the SharePoint server and from the local library.
            Deleting a non-existent file within SharePoint library (i.e. file is out of sync) deletes the file from the local library as well.
            </summary>
            <param name="fileInfo">SharePoint file to be deleted</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointFileInfoProvider.RecycleFileInternal(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Moves the specified file to the recycle bin of the SharePoint server.
            Deletes the file from the local library.
            Returns the identifier of the new recycle bin item on SharePoint.
            Recycling a non-existent file within SharePoint library (i.e. file is out of sync) returns empty GUID and deletes the file from the local library as well.
            </summary>
            <param name="fileInfo">SharePoint file to be recycled on the SharePoint server</param>
            <returns>GUID of the new recycle bin item on SharePoint, or <see cref="F:System.Guid.Empty"/> when file does not exist.</returns>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointLibraryHelper">
            <summary>
            Contains useful methods for SharePoint libraries.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointLibraryHelper.DUPLICATE_KEY_ROW_EXCEPTION_ERROR_NUMBER">
            <summary>
            Error number of <see cref="T:System.Data.SqlClient.SqlException"/> thrown when unique constraint is violated.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.SynchronizeLibrary(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Synchronizes the SharePoint library so that the local and server files are the same.
            The synchronization utilizes the modification time of each processed file.
            </summary>
            <param name="sharePointLibrary">SharePointLibraryInfo to be synchronized with the SharePoint server.</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.UploadFile(CMS.SharePoint.SharePointLibraryInfo,System.IO.Stream,System.String)">
            <summary>
            Uploads a new file to the specified SharePoint library.
            The newly uploaded file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="sharePointLibrary">SharePointLibraryInfo where to upload the file.</param>
            <param name="contentStream">Stream containing binary data of the file.</param>
            <param name="libraryRelativeUrl">Relative URL of the file within library (i.e. "myPicture.jpeg" uploads file to the root folder of the library).</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="libraryRelativeUrl"/> already exists.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.UpdateFile(CMS.SharePoint.SharePointFileInfo,System.IO.Stream,System.String)">
            <summary>
            Updates file in SharePoint library with new content and name.
            The <paramref name="newFileName"/> can be the same as the old one.
            The updated file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="sharePointFile">SharePoint file to be updated.</param>
            <param name="contentStream">Stream containing the new file's binary content.</param>
            <param name="newFileName">File name of the updated file.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="newFileName"/> identifies an already existing file within the library.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file identified by <paramref name="sharePointFile"/> does not exist on SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.DeleteFile(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Deletes the specified file on the SharePoint server and from the local library.
            Deleting a non-existent file within SharePoint library (i.e. file is out of sync) deletes the file from the local library as well.
            </summary>
            <param name="sharePointFile">SharePoint file to be deleted</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.RecycleFile(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Moves the specified file to the recycle bin of the SharePoint server.
            Deletes the file from the local library.
            Returns the identifier of the new recycle bin item on SharePoint.
            Recycling a non-existent file within SharePoint library (i.e. file is out of sync) returns empty GUID and deletes the file from the local library as well.
            </summary>
            <param name="sharePointFile">SharePoint file to be recycled on the SharePoint server</param>
            <returns>GUID of the new recycle bin item on SharePoint, or <see cref="F:System.Guid.Empty"/> when file does not exist.</returns>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.SynchronizeLibraryInternal(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Synchronizes the SharePoint library so that the local and server files are the same.
            The synchronization utilizes the modification time of each processed file.
            </summary>
            <param name="sharePointLibrary">SharePointLibraryInfo to be synchronized with the SharePoint server.</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.UploadFileInternal(CMS.SharePoint.SharePointLibraryInfo,System.IO.Stream,System.String)">
            <summary>
            Uploads a new file to the specified SharePoint library.
            The newly uploaded file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="sharePointLibrary">SharePointLibraryInfo where to upload the file.</param>
            <param name="contentStream">Stream containing binary data of the file.</param>
            <param name="libraryRelativeUrl">Relative URL of the file within library (i.e. "myPicture.jpeg" uploads file to the root folder of the library).</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="libraryRelativeUrl"/> already exists.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.UpdateFileInternal(CMS.SharePoint.SharePointFileInfo,System.IO.Stream,System.String)">
            <summary>
            Updates file in SharePoint library with new content and name.
            The <paramref name="newFileName"/> can be the same as the old one.
            The updated file is immediately available both on the SharePoint server and locally in the library.
            </summary>
            <param name="sharePointFile">SharePoint file to be updated.</param>
            <param name="contentStream">Stream containing the new file's binary content.</param>
            <param name="newFileName">File name of the updated file.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="newFileName"/> identifies an already existing file within the library.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file identified by <paramref name="sharePointFile"/> does not exist on SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
            <remarks>
            Trying to update a file which no longer exists on SharePoint server removes the file locally and throws <see cref="T:System.IO.FileNotFoundException"/>.
            </remarks>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.DeleteFileInternal(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Deletes the specified file on the SharePoint server and from the local library.
            Deleting a non-existent file within SharePoint library (i.e. file is out of sync) deletes the file from the local library as well.
            </summary>
            <param name="sharePointFile">SharePoint file to be deleted</param>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.RecycleFileInternal(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Moves the specified file to the recycle bin of the SharePoint server.
            Deletes the file from the local library.
            Returns the identifier of the new recycle bin item on SharePoint.
            Recycling a non-existent file within SharePoint library (i.e. file is out of sync) returns empty GUID and deletes the file from the local library as well.
            </summary>
            <param name="sharePointFile">SharePoint file to be recycled on the SharePoint server</param>
            <returns>GUID of the new recycle bin item on SharePoint, or <see cref="F:System.Guid.Empty"/> when file does not exist.</returns>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">Thrown when the SharePoint library has no valid connection defined.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.GetSharePointLibraryBySharePointFile(CMS.SharePoint.SharePointFileInfo)">
            <summary>
            Gets <see cref="T:CMS.SharePoint.SharePointLibraryInfo"/> for given SharePoint file, or throws exception.
            </summary>
            <param name="sharePointFile">File for which to search the library.</param>
            <returns>Library of the file.</returns>
            <exception cref="T:System.ArgumentException">When <see cref="P:CMS.SharePoint.SharePointFileInfo.SharePointFileSharePointLibraryID"/> does not specify an existing library.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.GetSharePointConnectionBySharePointLibrary(CMS.SharePoint.SharePointLibraryInfo,System.String)">
            <summary>
            Gets <see cref="T:CMS.SharePoint.SharePointConnectionInfo"/> for given SharePoint library, or throws exception.
            Additional error message to the default exception message can be provided.
            </summary>
            <param name="sharePointLibrary">Library for which to search the connection.</param>
            <param name="additionalErrorMessage">Additional error message.</param>
            <returns>Connection of the library.</returns>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotFoundException">When library has not valid connection defined (is read-only).</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.PerformLibrarySynchronization(CMS.SharePoint.SharePointLibraryInfo,CMS.SharePoint.ISharePointFileService,System.Data.DataSet,System.Collections.Generic.Dictionary{System.String,CMS.SharePoint.SharePointFileInfo})">
            <summary>
            Performs SharePoint library synchronization.
            The columns "FileRef" and "Modified" of the <paramref name="serverFiles"/> data set's table must be set.
            </summary>
            <param name="sharePointLibrary">SharePointLibraryInfo to which the files belong.</param>
            <param name="fileService">SharePoint file service used for server file's content and metadata retrieval.</param>
            <param name="serverFiles">DataSet containing server file listing.</param>
            <param name="localFileRefDictionary">Dictionary containing mapping of FileRef path to SharePointFileInfo. The dictionary is modified during the process of synchronization and shall not be used afterwards.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.SynchronizeCommonFileProperties(CMS.SharePoint.SharePointFileInfo,CMS.SharePoint.ISharePointFile)">
            <summary>
            Synchronizes properties which are common to <see cref="T:CMS.SharePoint.SharePointFileInfo"/> and <see cref="T:CMS.SharePoint.ISharePointFile"/>.
            The <paramref name="sharePointFile"/> is considered to be the source and <paramref name="fileInfo"/> the target.
            </summary>
            <param name="fileInfo">Local representation of SharePoint file.</param>
            <param name="sharePointFile">Server representation of SharePoint file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.CreateSharePointFiles(CMS.SharePoint.SharePointLibraryInfo,CMS.SharePoint.ISharePointFileService,System.Collections.Generic.IEnumerable{System.Data.DataRow})">
            <summary>
            Creates local representation of SharePoint files from a list containing DataRow items describing each file.
            The fields "FileRef" and "Modified" of each DataRow must be specified.
            All necessary data is retrieved from the SharePoint server using <paramref name="fileService"/>.
            Since the library content can change during the processing of all files, files which are not found on SharePoint are skipped,
            files which are found in local library are not being added again.
            </summary>
            <param name="libraryInfo">SharePoint library in which to store the files.</param>
            <param name="fileService">SharePoint file service used for files retrieval.</param>
            <param name="filesToBeCreated">Enumeration of data rows representing files to be added.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.CreateSharePointFile(CMS.SharePoint.SharePointLibraryInfo,CMS.SharePoint.ISharePointFileService,System.String,System.DateTime)">
            <summary>
            Creates local representation of SharePoint file from its server relative URL and last modification time.
            Returns true if the file has been created.
            Returns false if the file is already present in the library.
            </summary>
            <param name="libraryInfo">SharePoint library in which to store the file.</param>
            <param name="fileService">SharePoint file service used for file retrieval.</param>
            <param name="fileServerRelativeUrl">Server relative URL of created file.</param>
            <param name="fileServerLastModified">Last modification time of the file - taken from the corresponding list item, not directly from the file's metadata.</param>
            <returns>True on successful file creation, false if the file already exists in the library.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
            <remarks>
            The newly created file does not use the last modification time from the file's metadata, because it can not be retrieved in one query for multiple files.
            Therefore future library synchronization would be ineffective.
            </remarks>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.UpdateSharePointFiles(CMS.SharePoint.ISharePointFileService,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{CMS.SharePoint.SharePointFileInfo,System.Data.DataRow}})">
            <summary>
            Updates local representation of SharePoint files from a list containing corresponding pairs of SharePointFileInfo and DataRow.
            Since the library content can change during the processing of all files, files which are not found on SharePoint are skipped.
            </summary>
            <param name="fileService">SharePoint file service used for files retrieval.</param>
            <param name="filesToBeUpdated">Enumeration of corresponding SharePointFileInfo objects and data rows representing files to be updated.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.UpdateSharePointFile(CMS.SharePoint.ISharePointFileService,CMS.SharePoint.SharePointFileInfo,System.String,System.DateTime)">
            <summary>
            Updates local representation of SharePoint file from a DataRow representing the list item on SharePoint. Can handle rename of the file.
            Returns true if the file has been updated.
            Returns false if the file name has changed and the file is already present in the library.
            </summary>
            <param name="fileService">SharePoint file service used for files retrieval.</param>
            <param name="localFileInfo">Existing SharePointFileInfo object and data row representing the file.</param>
            <param name="fileServerRelativeUrl">Server relative URL of the file after update.</param>
            <param name="fileServerLastModified">Last modification time of the file - taken from the corresponding list item, not directly from the file's metadata.</param>
            <returns>True on successful update, false if the file is being renamed and the file is already present locally.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.UpdateFileOnSharePointServerOrRemoveFromLibrary(CMS.SharePoint.ISharePointFileService,CMS.SharePoint.SharePointFileInfo,System.IO.Stream,System.String)">
            <summary>
            Updates file's content and name on SharePoint server. If the file does not exists within the server (usually caused by library being out of sync),
            removes the file from local SharePoint library and throws <see cref="T:System.IO.FileNotFoundException"/>.
            </summary>
            <param name="fileService">File service to be used for accessing SharePoint server.</param>
            <param name="sharePointFile">SharePoint file to be updated on the server.</param>
            <param name="contentStream">Stream containing the new file's binary content.</param>
            <param name="newServerRelativeUrl">Server relative URL of the file after update.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="newServerRelativeUrl"/> identifies an already existing file within the library.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file identified by <paramref name="sharePointFile"/> does not exist on SharePoint server.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.DeleteSharePointFiles(System.Collections.Generic.IEnumerable{CMS.SharePoint.SharePointFileInfo})">
            <summary>
            Deletes local representation of SharePoint files specified in the <paramref name="filesToBeDeleted"/>.
            </summary>
            <param name="filesToBeDeleted">Enumeration of files to be deleted.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.CreateServerRelativeUrl(System.String,System.String,System.String)">
            <summary>
            Creates SharePoint server relative URL from SharePoint site URL, title of the SharePoint library and relative URL within the library.
            </summary>
            <param name="sharePointSiteUrl">SharePoint site URL</param>
            <param name="listTitle">Title of the library or list</param>
            <param name="libraryRelativeUrl">Relative URL within the library or list (optionally containing a leading slash)</param>
            <returns>SharePoint server relative URL</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.GetNewFileServerRelativeUrl(System.String,System.String)">
            <summary>
            Gets new file server relative URL based on server relative URL of an old file and a new file name.
            </summary>
            <param name="oldServerRelativeUrl">Original server relative path identifying an old file.</param>
            <param name="newFileName">File name of the new file.</param>
            <returns>Server relative path to the new file.</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryHelper.RetrieveListItemByFileRef(CMS.SharePoint.ISharePointListService,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves list item as a DataRow from SharePoint list or library.
            </summary>
            <param name="listService">List service to be used for SharePoint server querying.</param>
            <param name="listTitle">Title of the list or library to retrieve the item from.</param>
            <param name="serverRelativeUrl">Server relative URL (FileRef) of the retrieved item.</param>
            <param name="viewFields">Fields to be retrieved.</param>
            <returns>DataRow containing file whose FileRef column equals to <paramref name="serverRelativeUrl"/>, or null if none found.</returns>
        </member>
        <member name="T:CMS.SharePoint.SharePointLibraryInfo">
            <summary>
            SharePointLibraryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointLibraryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointLibraryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibraryID">
            <summary>
            SharePoint library ID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibraryGUID">
            <summary>
            SharePoint library guid
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibrarySiteID">
            <summary>
            SharePoint library site ID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibraryLastModified">
            <summary>
            SharePoint library last modified
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibraryDisplayName">
            <summary>
            The name of the SharePoint library used in the system's administration interface.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibraryName">
            <summary>
            The string identifier of the SharePoint connection object used by the system to identify the object.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibrarySharePointConnectionID">
            <summary>
            SharePoint library SharePoint connection ID
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibraryListType">
            <summary>
            SharePoint library list type
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibraryListTitle">
            <summary>
            SharePoint library list title
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibraryInfo.SharePointLibrarySynchronizationPeriod">
            <summary>
            SharePoint library synchronization period in number of minutes
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfo.#ctor">
            <summary>
            Constructor - Creates an empty SharePointLibraryInfo object.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SharePointLibraryInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointLibraryInfoProvider">
            <summary>
            Class providing SharePointLibraryInfo management.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibraries">
            <summary>
            Returns a query for all the SharePointLibraryInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibraryInfo(System.Int32)">
            <summary>
            Returns SharePointLibraryInfo with specified ID.
            </summary>
            <param name="id">SharePointLibraryInfo ID</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibraryInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns SharePointLibraryInfo with specified name.
            </summary>
            <param name="name">SharePointLibraryInfo name</param>
            <param name="siteId">SharePointLibraryInfo's site identifier</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.SetSharePointLibraryInfo(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Sets (updates or inserts) specified SharePointLibraryInfo.
            </summary>
            <param name="infoObj">SharePointLibraryInfo to be set</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.DeleteSharePointLibraryInfo(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Deletes specified SharePointLibraryInfo.
            </summary>
            <param name="infoObj">SharePointLibraryInfo to be deleted</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.DeleteSharePointLibraryInfo(System.Int32)">
            <summary>
            Deletes SharePointLibraryInfo with specified ID.
            </summary>
            <param name="id">SharePointLibraryInfo ID</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibrarySynchronizationState(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Gets state of SharePoint library synchronization.
            </summary>
            <param name="libraryInfo">SharePoint library for which to get the synchronization state.</param>
            <returns>Current state of the synchronization.</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.SynchronizeSharePointLibrary(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Schedules the SharePoint library synchronization for an immediate run and returns.
            Use <see cref="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibrarySynchronizationState(CMS.SharePoint.SharePointLibraryInfo)"/> to see whether the synchronization
            is in the scheduler's queue (<see cref="P:CMS.SharePoint.SharePointLibrarySynchronizationState.NextRunTime"/> is from the past),
            is running (<see cref="P:CMS.SharePoint.SharePointLibrarySynchronizationState.IsRunning"/> is set), or will be run
            (<see cref="P:CMS.SharePoint.SharePointLibrarySynchronizationState.NextRunTime"/> is in the future).
            </summary>
            <param name="libraryInfo">SharePoint library to be synchronized immediately.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="libraryInfo"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the library can not be scheduled for synchronization (the scheduler's task is missing).</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.SetInfo(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.DeleteInfo(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibrarySynchronizationStateInternal(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Gets state of SharePoint library synchronization.
            </summary>
            <param name="libraryInfo">SharePoint library for which to get the synchronization state.</param>
            <returns>Current state of the synchronization.</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.SynchronizeSharePointLibraryInternal(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Schedules the SharePoint library synchronization for an immediate run and returns.
            Use <see cref="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibrarySynchronizationState(CMS.SharePoint.SharePointLibraryInfo)"/> to see whether the synchronization
            is in the scheduler's queue (<see cref="P:CMS.SharePoint.SharePointLibrarySynchronizationState.NextRunTime"/> is from the past),
            is running (<see cref="P:CMS.SharePoint.SharePointLibrarySynchronizationState.IsRunning"/> is set), or will be run
            (<see cref="P:CMS.SharePoint.SharePointLibrarySynchronizationState.NextRunTime"/> is in the future).
            </summary>
            <param name="libraryInfo">SharePoint library to be synchronized immediately.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="libraryInfo"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the library can not be scheduled for synchronization (the scheduler's task is missing).</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.CreateOrUpdateSharePointLibrarySynchronizationTask(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Creates or updates the scheduled synchronization task for given SharePoint library.
            The task is updated only when the synchronization period of the <paramref name="libraryInfo"/> has changed.
            The method can be called to recreate the task in case it has been incidentally deleted by someone.
            </summary>
            <param name="libraryInfo">SharePoint library whose task is created or updated.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.DeleteSharePointLibrarySynchronizationTask(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Deletes the scheduled synchronization task for given SharePoint library, if it exists.
            Does nothing when <paramref name="libraryInfo"/> is null or the task does not exist.
            </summary>
            <param name="libraryInfo">SharePoint library which no longer needs the task.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibraryInfoProvider.GetSharePointLibrarySynchronizationTask(CMS.SharePoint.SharePointLibraryInfo)">
            <summary>
            Gets synchronization task used for scheduled SharePoint library synchronization.
            </summary>
            <param name="libraryInfo">SharePoint library for which to return the scheduled task.</param>
            <returns>Synchronization task, or null if it does not exist for the specified library.</returns>
        </member>
        <member name="T:CMS.SharePoint.SharePointLibrarySynchronizationState">
            <summary>
            State of the SharePoint library synchronization.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibrarySynchronizationState.IsRunning">
            <summary>
            True if the synchronization is currently being performed.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibrarySynchronizationState.LastRunTime">
            <summary>
            Last run time of the synchronization.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibrarySynchronizationState.LastResult">
            <summary>
            Last result of the synchronization. Null if the synchronization was performed successfully.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointLibrarySynchronizationState.NextRunTime">
            <summary>
            Next run time of the synchronization. If the time is from the past, it means the synchronization
            is waiting for the scheduler to execute it.
            Gets null if the synchronization is currently running (<see cref="P:CMS.SharePoint.SharePointLibrarySynchronizationState.IsRunning"/> is set).
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibrarySynchronizationState.#ctor(System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime})">
            <summary>
            Creates a new state of SharePoint library synchronization.
            </summary>
            <param name="lastRunTime">Last time the synchronization was run.</param>
            <param name="lastResult">Result of the last synchronization (if error condition was met), null otherwise.</param>
            <param name="nextRunTime">Next time the synchronization is scheduled for run. Null means the synchronization is currently running.</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointLibrarySynchronizationTask">
            <summary>
            Handles SharePoint library synchronization when activated by the scheduler.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointLibrarySynchronizationTask.TASK_CODENAME_PREFIX">
            <summary>
            Scheduled task name prefix for SharePoint library synchronization.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointLibrarySynchronizationTask.TASK_CODENAME_FORMAT">
            <summary>
            Scheduled task name format for SharePoint library synchronization.
            Usage: <code>var completeTaskCodeName = String.Format(SharePointLibrarySynchronizationTask.TASK_CODENAME_FORMAT, {SharePointLibraryID});</code>
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibrarySynchronizationTask.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes synchronization of <see cref="T:CMS.SharePoint.SharePointLibraryInfo"/>.
            </summary>
            <param name="taskInfo">Contains task data with information related to the SharePoint library.</param>
            <returns>Null on success, error description otherwise.</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibrarySynchronizationTask.GetTaskCodeName(System.Int32)">
            <summary>
            Gets synchronization task code name based on SharePointLibraryInfo identifier.
            </summary>
            <param name="sharePointLibraryId">ID of SharePointLibraryInfo</param>
            <returns>Task code name</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointLibrarySynchronizationTask.IsFeatureAvailable(CMS.Scheduler.TaskInfo)">
            <summary>
            Checks whether SharePoint is available.
            </summary>
            <param name="taskInfo">Task info.</param>
            <returns>True if SharePoint is available, false otherwise.</returns>
        </member>
        <member name="T:CMS.SharePoint.SharePointModule">
            <summary>
            Represents the SharePoint module.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.SharePoint.SharePointModuleMetadata">
            <summary>
            Represents the SharePoint module metadata.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.SharePoint.ISharePointServiceFactoryProvider">
            <summary>
            Describes SharePoint service factory.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.ISharePointServiceFactoryProvider.RegisterFactory``1(System.String)">
            <summary>
            Registers new implementation of ISharePointServiceFactory for given SharePoint version.
            </summary>
            <typeparam name="TServiceFactory">Class implementing ISharePointServiceFactory</typeparam>
            <param name="sharePointVersion">SharePoint version</param>
            <seealso cref="T:CMS.SharePoint.SharePointVersion"/>
        </member>
        <member name="M:CMS.SharePoint.ISharePointServiceFactoryProvider.GetSharePointServiceFactory(System.String)">
            <summary>
            Gets instance of ISharePointServiceFactory.
            </summary>
            <param name="sharePointVersion">SharePoint version for which to get service factory</param>
            <returns>ISharePointServiceFactory instance</returns>
            <exception cref="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">Thrown when no service factory for sharePointVersion found.</exception>
            <seealso cref="T:CMS.SharePoint.SharePointVersion"/>
        </member>
        <member name="T:CMS.SharePoint.RegisterSharePointServiceFactoryAttribute">
            <summary>
            Attribute for registering custom SharePoint service factory for certain SharePoint version.
            The registration is performed on current SharePoint service factory provider.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.RegisterSharePointServiceFactoryAttribute.MarkedType">
            <summary>
            SharePoint service factory.
            </summary>
            <exception cref="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">Thrown when MarkedType does not implement ISharePointServiceFactory.</exception>
        </member>
        <member name="P:CMS.SharePoint.RegisterSharePointServiceFactoryAttribute.SharePointVersion">
            <summary>
            SharePoint version.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when sharePointVersion is null.</exception>
        </member>
        <member name="M:CMS.SharePoint.RegisterSharePointServiceFactoryAttribute.#ctor(System.String,System.Type)">
            <summary>
            Registers new implementation of ISharePointServiceFactory for given SharePoint version.
            </summary>
            <param name="sharePointVersion">SharePoint version</param>
            <param name="serviceFactory">Class implementing ISharePointServiceFactory</param>
            <exception cref="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">Thrown when serviceFactory does not implement ISharePointServiceFactory.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when sharePointVersion is null.</exception>
        </member>
        <member name="M:CMS.SharePoint.RegisterSharePointServiceFactoryAttribute.Init">
            <summary>
            Registers SharePoint service factory in current service factory provider.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.SharePointServiceFactoryProvider">
            <summary>
            Provides access to proper instance of ISharePointServiceFactory.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointServiceFactoryProvider.serviceFactoryImplementations">
            <summary>
            Dictionary mapping SharePoint versions to ISharePointServiceFactory implementations.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointServiceFactoryProvider.Current">
            <summary>
            Gets instance of current implementation of ISharePointServiceFactory.
            </summary>
            <returns>ISharePointServiceFactory implementation</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceFactoryProvider.RegisterFactory``1(System.String)">
            <summary>
            Registers new implementation of ISharePointServiceFactory for given SharePoint version.
            </summary>
            <typeparam name="TServiceFactory">Class implementing ISharePointServiceFactory</typeparam>
            <param name="sharePointVersion">SharePoint version</param>
            <seealso cref="T:CMS.SharePoint.SharePointVersion"/>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceFactoryProvider.GetSharePointServiceFactory(System.String)">
            <summary>
            Gets instance of ISharePointServiceFactory.
            </summary>
            <param name="sharePointVersion">SharePoint version for which to get service factory</param>
            <returns>ISharePointServiceFactory instance</returns>
            <exception cref="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">Thrown when no service factory for sharePointVersion found.</exception>
            <seealso cref="T:CMS.SharePoint.SharePointVersion"/>
        </member>
        <member name="M:CMS.SharePoint.SharePointServiceFactoryProvider.GetSharePointServiceFactoryInternal(System.String)">
            <summary>
            Gets instance of ISharePointServiceFactory.
            </summary>
            <param name="sharePointVersion">SharePoint version for which to get service factory</param>
            <returns>ISharePointServiceFactory instance</returns>
            <exception cref="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">Thrown when no service factory for sharePointVersion found.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointServices">
            <summary>
            Provides access to SharePoint services using current implementation of <see cref="T:CMS.SharePoint.ISharePointServiceFactoryProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointServices.GetService``1(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Gets implementation of SharePoint service suitable for version specified in connectionData. The service uses given connectionData.
            </summary>
            <typeparam name="IService">Type of service to get implementation for</typeparam>
            <param name="connectionData">Data (credentials etc.) needed to establish connection to SharePoint server</param>
            <returns>Service implementation</returns>
            <exception cref="T:CMS.SharePoint.SharePointServiceFactoryNotSupportedException">Thrown when no service factory for specified SharePoint version found.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServiceNotSupportedException">Thrown when IService implementation is not available.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when available service implementation does not support given connectionData.</exception>
        </member>
        <member name="T:CMS.SharePoint.ISharePointServiceFactory">
            <summary>
            Describes SharePoint service factory.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.ISharePointServiceFactory.GetImplementationFor``1(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Gets implementation of SharePoint service. The service uses given connectionData.
            </summary>
            <typeparam name="IService">Type of service to get implementation for</typeparam>
            <param name="connectionData">Data (credentials etc.) needed to establish connection to SharePoint server</param>
            <returns>Service implementation</returns>
            <exception cref="T:CMS.SharePoint.SharePointServiceNotSupportedException">Thrown when IService implementation is not available.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when available service implementation does not support given connectionData.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointListItemsSelection">
            <summary>
            <para>
            Holds a triplet for list items selection specification. The triplet is semantically equivalent to following SharePoint Query expression<br />
            &lt;FieldRef Name="FieldName" />&lt;Value Type="FieldType">FieldValue&lt;/Value><br />
            </para>
            <para>
            In order for the selection to be valid the <see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldName"/>, <see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldType"/> and <see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldValue"/> should be provided.
            </para>
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointListItemsSelection.FieldName">
            <summary>
            Field name (internal name) on which to perform selection.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointListItemsSelection.FieldType">
            <summary>
            Field type on which the selection is performed.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointListItemsSelection.FieldValue">
            <summary>
            Field value which is looked up in the list.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointListItemsSelection.#ctor">
            <summary>
            Creates a new list items selection with no parameters.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointListItemsSelection.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new list items selection with selection parameters specified.
            </summary>
            <param name="fieldName">Field name (internal name) on which to perform selection.</param>
            <param name="fieldType">Field type on which the selection is performed.</param>
            <param name="fieldValue">Field value which is looked up in the list.</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointView">
            <summary>
            Represents the &lt;View> element used for SharePoint data retrieval configuration.
            Only certain configuration options are made available.
            The class is version independent and each SharePoint service implementation may process it differently.
            </summary>
            <remarks>
            The class will likely extend in the future.
            </remarks>
        </member>
        <member name="P:CMS.SharePoint.SharePointView.Attributes">
            <summary>
            Provides access to the collection of &lt;View> element attributes.
            Attributes which are not contained in the collection have their default meaning.
            Access to some attributes is provided via short hand properties.
            </summary>
            <seealso cref="P:CMS.SharePoint.SharePointView.Scope"/>
            <remarks>
            For informational list of possible attributes see http://msdn.microsoft.com/en-us/library/office/ms438338(v=office.14).aspx
            Please note that the actual recognized attributes are service type and version dependent and each implementing <see cref="T:CMS.SharePoint.ISharePointService"/> may handle them differently.
            </remarks>
        </member>
        <member name="P:CMS.SharePoint.SharePointView.Scope">
            <summary>
            Gets or sets the Scope attribute value.
            Null value removes the attribute (keeping it default).
            Typical values are <strong>FilesOnly</strong> (show only the files of a specific folder), <strong>Recursive</strong> (show all files of all folders)
            or <strong>RecursiveAll</strong> (show all files and all subfolders of all folders). The default lists only files and subfolders of a specific folder.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointView.QueryInnerXml">
            <summary>
            The inner XML of &lt;Query> element.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointView.ViewFields">
            <summary>
            List of view fields (fields that will be retrieved from the server; some system fields are always retrieved).
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointView.RowLimit">
            <summary>
            Specifies the limit of rows retrieved from SharePoint server.
            Non-positive values mean no limit.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.ISharePointFile">
            <summary>
            Represents version independent SharePoint file.
            The file or its properties may be loaded eagerly or lazily (depends on implementation).
            </summary>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.ETag">
            <summary>
            File's ETag (entity tag) from SharePoint server.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.Extension">
            <summary>
            File's extension.
            Determined by <see cref="P:CMS.SharePoint.ISharePointFile.ServerRelativeUrl"/>.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.MimeType">
            <summary>
            File's MIME type.
            Determined by <see cref="P:CMS.SharePoint.ISharePointFile.ServerRelativeUrl"/>.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.Length">
            <summary>
            Length of the file's binary content.
            May not be supported by all SharePoint server versions.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the property is not supported.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.Name">
            <summary>
            File's name from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.ISharePointFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.ServerRelativeUrl">
            <summary>
            Gets SharePoint server relative URL this instance refers to.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.TimeCreated">
            <summary>
            File's creation time from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.ISharePointFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.TimeLastModified">
            <summary>
            File's last modification time from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.ISharePointFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.ISharePointFile.Title">
            <summary>
            File's title from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.ISharePointFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.ISharePointFile.GetContentBytes">
            <summary>
            Gets the file's content as an array of bytes.
            </summary>
            <returns>Array of bytes containing SharePoint file's binary data</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.ISharePointFile.GetContentStream">
            <summary>
            Gets the file's content as a stream.
            </summary>
            <returns>Stream providing SharePoint file's binary data</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointFile">
            <summary>
            Represents general SharePoint file.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.ETag">
            <summary>
            File's ETag (entity tag) from SharePoint server.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.Extension">
            <summary>
            File's extension.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.MimeType">
            <summary>
            File's MIME type.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.Length">
            <summary>
            Length of the file's binary content.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.IsLengthSupported">
            <summary>
            Tells you whether <see cref="P:CMS.SharePoint.SharePointFile.Length"/> property is supported.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.Name">
            <summary>
            File's name from SharePoint server.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.ServerRelativeUrl">
            <summary>
            Gets SharePoint server relative URL this instance refers to.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.TimeCreated">
            <summary>
            File's creation time from SharePoint server.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.TimeLastModified">
            <summary>
            File's last modification time from SharePoint server.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointFile.Title">
            <summary>
            File's title from SharePoint server.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointFile.#ctor(System.Byte[])">
            <summary>
            Initializes a new SharePointFile instance.
            </summary>
            <param name="contentBytes">File content.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointFile.GetContentBytes">
            <summary>
            Gets the file's content as an array of bytes.
            </summary>
            <returns>Array of bytes containing SharePoint file's binary data</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointFile.GetContentStream">
            <summary>
            Gets the file's content as a stream.
            </summary>
            <returns>Stream providing SharePoint file's binary data</returns>
        </member>
        <member name="T:CMS.SharePoint.ISharePointFileService">
            <summary>
            Provides access to SharePoint files.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.ISharePointFileService.GetFile(System.String)">
            <summary>
            Gets SharePoint file identified by server relative URL.
            The file may be loaded eagerly or lazily (depends on implementation). In such case an invalid serverRelativeUrl is not reported immediately.
            </summary>
            <param name="serverRelativeUrl">Server relative URL</param>
            <returns>SharePoint file, or null</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server (and eager loading is used).</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.ISharePointFileService.UploadFile(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Uploads the file's content specified as a stream to the <paramref name="serverRelativeUrl"/> location.
            </summary>
            <param name="sharePointLibraryTitle">Title of the library on SharePoint.</param>
            <param name="serverRelativeUrl">Server relative URL of the file.</param>
            <param name="stream">Stream with the file content.</param>
            <param name="overwriteExisting">If true, an existing file will be overwritten when it already exists.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when trying to upload to <paramref name="serverRelativeUrl"/> location which already exists and <paramref name="overwriteExisting"/> is set to false.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when trying to upload to the library <paramref name="sharePointLibraryTitle"/> which does not exist.</exception>
            <exception cref="T:System.ArgumentException">Thrown when trying to upload to <paramref name="serverRelativeUrl"/> location which already exists, <paramref name="overwriteExisting"/> is set to true, but the location can not be overwritten.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="serverRelativeUrl"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="serverRelativeUrl"/> is in invalid format.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.ISharePointFileService.DeleteFile(System.String)">
            <summary>
            Deletes the file specified by <paramref name="serverRelativeUrl"/> from the SharePoint server.
            Deleting a non-existent file within SharePoint site is a void action.
            Throws exception when <paramref name="serverRelativeUrl"/> is invalid (does not point within any SharePoint site).
            </summary>
            <param name="serverRelativeUrl">Server relative URL of the file.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="serverRelativeUrl"/> does not point within any SharePoint library.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="serverRelativeUrl"/> is null.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.ISharePointFileService.RecycleFile(System.String)">
            <summary>
            Moves the file specified by <paramref name="serverRelativeUrl"/> to the recycle bin of the SharePoint server.
            Returns the identifier of the new recycle bin item.
            Recycling a non-existent file within SharePoint site returns empty GUID.
            Throws exception when <paramref name="serverRelativeUrl"/> is invalid (does not point within any SharePoint site).
            </summary>
            <param name="serverRelativeUrl">Server relative URL of the file.</param>
            <returns>GUID of the new recycle bin item, or <see cref="F:System.Guid.Empty"/> when file does not exist.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="serverRelativeUrl"/> does not point within any SharePoint library.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="serverRelativeUrl"/> is null.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.ISharePointFileService.UpdateFile(System.String,System.IO.Stream,System.String)">
            <summary>
            Updates file identified by <paramref name="serverRelativeUrl"/>. New content and file name can be provided.
            </summary>
            <param name="serverRelativeUrl">Server relative URL of the file being updated.</param>
            <param name="stream">Stream providing file's binary content.</param>
            <param name="newServerRelativeUrl">New server relative URL of the file.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="newServerRelativeUrl"/> identifies existing file.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file identified by <paramref name="serverRelativeUrl"/> does not exist on SharePoint server.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="T:CMS.SharePoint.ISharePointListService">
            <summary>
            Provides access to SharePoint lists.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.ISharePointListService.GetLists(System.Int32)">
            <summary>
            Gets all lists on SharePoint server.
            The DataSet has an empty table (with possibly no columns) if no lists are retrieved.
            </summary>
            <param name="listType">Specifies whether to list only lists of certain type.</param>
            <returns>DataSet containing DataTable with all lists.</returns>
            <seealso cref="T:CMS.SharePoint.SharePointListType"/>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.ISharePointListService.GetListItems(System.String,System.String,CMS.SharePoint.SharePointView,CMS.SharePoint.SharePointListItemsSelection)">
            <summary>
            <para>
            Gets a selection of items of a SharePoint list identified by its title.
            Keeping <see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldName"/> or <see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldType"/> unspecified causes all items (optionally restricted by <see cref="P:CMS.SharePoint.SharePointView.QueryInnerXml"/>) to be selected.
            Keeping <see cref="P:CMS.SharePoint.SharePointView.QueryInnerXml"/> unspecified causes all list items to be selected (the <paramref name="listItemsSelection"/> still applies).
            </para>
            <para>
            The <paramref name="listItemsSelection"/> parameter is provided just for comfortability reason and produces a query similar to the following
            <pre>
            &lt;Query>
                &lt;And>
                    <see cref="P:CMS.SharePoint.SharePointView.QueryInnerXml"/> &lt;Eq>&lt;FieldRef Name="<see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldName"/>" />&lt;Value Type="<see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldType"/>"><see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldValue"/>&lt;/Value>&lt;/Eq>
                &lt;/And>
            &lt;/Query>
            </pre>
            </para>
            <para>
            The DataSet has an empty table (with no columns) if no list items are retrieved.
            </para>
            </summary>
            <param name="listTitle">SharePoint list title</param>
            <param name="folderServerRelativeUrl">Relative URL of listed folder (if list supports subfolders). Keep blank for root listing.</param>
            <param name="view">Configuration options for list items retrieval.</param>
            <param name="listItemsSelection">Constraint for selection of certain items.</param>
            <returns>DataSet containing DataTable with list items.</returns>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
            <remarks>
            The value of parameter folderServerRelativeUrl can originate from <em>FileRef</em> column of parent folder items listing. To determine whether an item is a folder,
            check the <em>FSObjType</em> column's value equality to <strong>1</strong>.
            </remarks>
        </member>
        <member name="T:CMS.SharePoint.ISharePointService">
            <summary>
            Specifies common SharePoint service properties.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.ISharePointService.IsConnectionSupported">
            <summary>
            Tells you whether connection parameters can be used by instantiated SharePoint service implementation.
            </summary>
            <returns>True if connection parameters can be used by current implementation, false otherwise.</returns>
        </member>
        <member name="T:CMS.SharePoint.ISharePointSiteService">
            <summary>
            Provides access to information about SharePoint site.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.ISharePointSiteService.GetSiteUrl">
            <summary>
            Gets SharePoint site URL.
            </summary>
            <returns>SharePoint site URL.</returns>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointListType">
            <summary>
            Specifies well-known list types.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointListType.ALL">
            <summary>
            All list types.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointListType.GENERIC_LIST">
            <summary>
            Custom list.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointListType.DOCUMENT_LIBRARY">
            <summary>
            Document library.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointListType.PICTURE_LIBRARY">
            <summary>
            Picture library.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.SharePointViewScope">
            <summary>
            Contains well-known constants specifying the recursive scope of a SharePoint library.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointViewScope.DEFAULT">
            <summary>
            Show only the files and subfolders of a specific folder.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointViewScope.FILES_ONLY">
            <summary>
            Show only the files of a specific folder.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointViewScope.RECURSIVE_ALL">
            <summary>
            Show all files and all subfolders of all folders.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointViewScope.RECURSIVE">
            <summary>
            Show only the files of a specific folder.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.CamlQueryBuilder">
            <summary>
            Helps building Collaborative Application Markup Language (CAML) queries.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.CamlQueryBuilder.QueryInnerXml">
            <summary>
            Gets or sets the inner XML of CAML Query element.
            </summary>
            <seealso cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldName"/>
            <seealso cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldType"/>
            <seealso cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldValue"/>
        </member>
        <member name="P:CMS.SharePoint.CamlQueryBuilder.Query">
            <summary>
            Gets the CAML Query root element.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.CamlQueryBuilder.RowLimit">
            <summary>
            Specifies the limit of rows retrieved from SharePoint server.
            Non-positive values mean no limit.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.CamlQueryBuilder.ViewFields">
            <summary>
            List containing field names to be retrieved from SharePoint server.
            The SharePoint internal names must be used.
            Keeping null causes all fields to be retrieved.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldName">
            <summary>
            Field name (internal name) for selection of certain item(s) in which the <see cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldValue"/> is being searched (using equality operator).
            The field is usually some unique field but it is not a must.
            The selection is made from elements satisfying the <see cref="P:CMS.SharePoint.CamlQueryBuilder.Query"/>.
            The selection part of query will look like the following<br />
            &lt;Eq>&lt;FieldRef Name="ItemSelectionFieldName" />&lt;Value Type="ItemSelectionFieldType">ItemSelectionFieldValue&lt;/Value>&lt;/Eq>
            </summary>
        </member>
        <member name="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldType">
            <summary>
            Type of field specified in <see cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldName"/> for selection of certain item(s).
            </summary>
        </member>
        <member name="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldValue">
            <summary>
            Searched value of <see cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldName"/> for selection of certain item(s).
            The selection is made from elements satisfying the <see cref="P:CMS.SharePoint.CamlQueryBuilder.Query"/>.
            The selection part of query will look like the following<br />
            &lt;Eq>&lt;FieldRef Name="ItemSelectionFieldName" />&lt;Value Type="ItemSelectionFieldType">ItemSelectionFieldValue&lt;/Value>&lt;/Eq>
            </summary>
        </member>
        <member name="M:CMS.SharePoint.CamlQueryBuilder.GetViewXmlAsString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets CAML suitable for <see cref="P:Microsoft.SharePoint.Client.CamlQuery.ViewXml"/> property (including &lt;View> element).
            </summary>
            <param name="viewAttributes">Collection of view element attributes.</param>
            <returns>View XML.</returns>
            <seealso cref="P:Microsoft.SharePoint.Client.CamlQuery.ViewXml"/>
        </member>
        <member name="M:CMS.SharePoint.CamlQueryBuilder.GetItemSelectionXml">
            <summary>
            Gets CAML for item selection. Something like
            &lt;Eq>&lt;FieldRef Name="ItemSelectionFieldName" />&lt;Value Type="ItemSelectionFieldType">ItemSelectionFieldValue&lt;/Value>&lt;/Eq>
            </summary>
            <returns>CAML for item selection, or null if <see cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldName"/>, <see cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldType"/> or <see cref="P:CMS.SharePoint.CamlQueryBuilder.ItemSelectionFieldValue"/> are not provided.</returns>
        </member>
        <member name="M:CMS.SharePoint.CamlQueryBuilder.CreateViewDocument(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a new document with &lt;View> as a root and optionally with attributes.
            </summary>
            <param name="viewAttributes">Attributes for &lt;View> element</param>
            <returns>Document with View element and its attributes</returns>
        </member>
        <member name="M:CMS.SharePoint.CamlQueryBuilder.#ctor">
            <summary>
            Creates a new CAML query builder.
            </summary>
        </member>
        <member name="T:CMS.SharePoint.SharePointOnlineFile">
            <summary>
            Implementation of SharePoint Online file.
            The file or its properties are loaded lazily.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointOnlineFile.FILE_NOT_FOUND_SERVER_ERROR_CODE">
            <summary>
            Error code of <see cref="T:Microsoft.SharePoint.Client.ServerException"/> thrown when requested file is not present at SharePoint server.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointOnlineFile.mFileService">
            <summary>
            SharePoint service instance this instance came from.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointOnlineFile.metadataLoaded">
            <summary>
            Indicates whether metadata has been loaded from SharePoint server.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.ETag">
            <summary>
            File's ETag (entity tag) from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.Extension">
            <summary>
            File's extension.
            Determined by <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/>.
            Null if <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/> is null.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.MimeType">
            <summary>
            File's MIME type.
            Determined by <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/>.
            Null if <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/> is null.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.Length">
            <summary>
            Length of the file's binary content.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
            <seealso cref="P:CMS.SharePoint.SharePointOnlineFile.IsLengthSupported"/>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.IsLengthSupported">
            <summary>
            Tells you whether <see cref="P:CMS.SharePoint.SharePointOnlineFile.Length"/> property is supported.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.Name">
            <summary>
            File's name from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl">
            <summary>
            Gets SharePoint server relative URL this instance refers to.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.TimeCreated">
            <summary>
            File's creation time from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.TimeLastModified">
            <summary>
            File's last modification time from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="P:CMS.SharePoint.SharePointOnlineFile.Title">
            <summary>
            File's title from SharePoint server.
            Null if <see cref="P:CMS.SharePoint.SharePointOnlineFile.ServerRelativeUrl"/> is null.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineFile.#ctor(CMS.SharePoint.SharePointOnlineFileService,System.String)">
            <summary>
            Creates a new SharePointOnlineFile instance linked to originating SharePointOnlineFileService.
            </summary>
            <param name="fileService">File service this instance came from.</param>
            <param name="serverRelativeUrl">Server relative URL of the file.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineFile.GetContentBytes">
            <summary>
            Gets the file's content as an array of bytes.
            </summary>
            <returns>Array of bytes containing SharePoint file's binary data, or null if ServerRelativeUrl is null.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineFile.GetContentStream">
            <summary>
            Gets the file's content as a stream.
            </summary>
            <returns>Stream providing SharePoint file's binary data, or null if ServerRelativeUrl is null.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineFile.EnsureMetadata">
            <summary>
            Ensures file's metadata are loaded from SharePoint server.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointOnlineFileService">
            <summary>
            Provides access to SharePoint files.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineFileService.#ctor(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Creates an instance of the <see cref="T:CMS.SharePoint.SharePointOnlineFileService"/> class.
            </summary>
            <param name="connectionData">Connection data</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineFileService.GetFile(System.String)">
            <summary>
            Gets SharePoint file identified by server relative URL.
            The file may be loaded lazily. In such case an invalid serverRelativeUrl is not reported immediately.
            </summary>
            <param name="serverRelativeUrl">Server relative URL</param>
            <returns>SharePoint file, or null</returns>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when requested file is not present at SharePoint server (and eager loading is used).</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointOnlineListService">
            <summary>
            Provides access to SharePoint lists.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineListService.#ctor(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Creates an instance of the <see cref="T:CMS.SharePoint.SharePointOnlineListService"/> class.
            </summary>
            <param name="connectionData">SharePoint connection data.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineListService.GetLists(System.Int32)">
            <summary>
            Gets all lists on SharePoint server.
            The DataSet has an empty table (with no columns) if no lists are retrieved.
            Includes only public properties of value type (not Nullable) or string type.
            </summary>
            <param name="listType">Specifies whether to list only lists of certain type.</param>
            <returns>DataSet containing DataTable with all lists.</returns>
            <seealso cref="T:CMS.SharePoint.SharePointListType"/>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineListService.GetListItems(System.String,System.String,CMS.SharePoint.SharePointView,CMS.SharePoint.SharePointListItemsSelection)">
            <summary>
            <para>
            Gets a selection of items of a SharePoint list identified by its title.
            Keeping <see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldName"/> or <see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldType"/> unspecified causes all items (optionally restricted by <see cref="P:CMS.SharePoint.SharePointView.QueryInnerXml"/>) to be selected.
            Keeping <see cref="P:CMS.SharePoint.SharePointView.QueryInnerXml"/> unspecified causes all list items to be selected (the <paramref name="listItemsSelection"/> still applies).
            </para>
            <para>
            The <paramref name="listItemsSelection"/> parameter is provided just for comfortability reason and produces a query similar to the following
            <pre>
            &lt;Query>
                &lt;And>
                    <see cref="P:CMS.SharePoint.SharePointView.QueryInnerXml"/> &lt;Eq>&lt;FieldRef Name="<see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldName"/>" />&lt;Value Type="<see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldType"/>"><see cref="P:CMS.SharePoint.SharePointListItemsSelection.FieldValue"/>&lt;/Value>&lt;/Eq>
                &lt;/And>
            &lt;/Query>
            </pre>
            </para>
            <para>
            The DataSet has an empty table (with no columns) if no list items are retrieved.
            </para>
            </summary>
            <param name="listTitle">SharePoint list title</param>
            <param name="folderServerRelativeUrl">Relative URL of listed folder (if list supports subfolders). Keep blank for root listing.</param>
            <param name="view">Configuration options for list items retrieval.</param>
            <param name="listItemsSelection">Constraint for selection of certain items.</param>
            <returns>DataSet containing DataTable with list items.</returns>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
            <remarks>
            The value of parameter folderServerRelativeUrl can originate from <em>FileRef</em> column of parent folder items listing. To determine whether an item is a folder,
            check the <em>FSObjType</em> column's value equality to <strong>1</strong>.
            </remarks>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineListService.ListItemCollectionToDataTable(Microsoft.SharePoint.Client.ListItemCollection)">
            <summary>
            Converts ListItemCollection to DataTable.
            Returns empty DataTable if ListItemCollection contains no items.
            </summary>
            <param name="listItemCollection">Items to be converted</param>
            <returns>DataTable containing all items, or empty one if zero items provided</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineListService.GetFieldValue(System.Object)">
            <summary>
            Returns Sharepoint list item's field value in the form which is suitable for storing in <see cref="T:System.Data.DataRow"/> value.
            If <paramref name="fieldValue"/> is an array then its element values are concatenated using a new line sequence.
            </summary>
            <param name="fieldValue">List item field value</param>
            <remarks>
            <paramref name="fieldValue"/> may represent a complex type which can't be simply stored in <see cref="T:System.Data.DataRow"/> value. The method transforms
            the complex values into string composed of the complex type components.
            </remarks>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineListService.ListCollectionToDataTable(System.Collections.Generic.IList{Microsoft.SharePoint.Client.List})">
            <summary>
            Converts ListCollection to DataTable.
            Returns empty DataTable if ListCollection contains no items.
            Includes only public properties of value type (not Nullable) or string type.
            </summary>
            <param name="listCollection">Lists to be converted</param>
            <returns>DataTable containing all lists, or empty one if zero items provided</returns>
        </member>
        <member name="T:CMS.SharePoint.SharePointOnlineSiteService">
            <summary>
            Provides access to information about SharePoint Online site. 
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineSiteService.#ctor(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Creates an instance of the <see cref="T:CMS.SharePoint.SharePointOnlineSiteService"/> class.
            </summary>
            <param name="connectionData">SharePoint connection data.</param>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineSiteService.GetSiteUrl">
            <summary>
            Gets SharePoint site URL.
            </summary>
            <returns>SharePoint site URL.</returns>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointOnlineServiceFactory">
            <summary>
            Provides instances of SharePoint Online services' implementations.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointOnlineServiceFactory.serviceImplementations">
            <summary>
            Contains mapping of SharePoint service interfaces to SharePoint Online implementations.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointOnlineServiceFactory.GetImplementationFor``1(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Gets implementation of SharePoint service. The service is provided given connectionData.
            </summary>
            <typeparam name="IService">Type of service to get implementation for</typeparam>
            <param name="connectionData">Data (credentials etc.) needed to establish connection to SharePoint server</param>
            <returns>Service implementation</returns>
            <exception cref="T:CMS.SharePoint.SharePointServiceNotSupportedException">Thrown when IService implementation is not available.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when available service implementation does not support given connectionData.</exception>
        </member>
        <member name="T:CMS.SharePoint.SharePointAbstractFileService">
            <summary>
            Provides common methods suitable for SharePoint services handling files.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointAbstractFileService.LIBRARY_DOES_NOT_EXIST_SHAREPOINT_EXCEPTION_MESSAGE">
            <summary>
            Message of <see cref="T:Microsoft.SharePoint.Client.ServerException"/> thrown when saving a file to library that does not exist.
            It does not seem like there is any publicly available error code associated with such error condition.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointAbstractFileService.FILE_ALREADY_EXISTS_SERVER_ERROR_CODE">
            <summary>
            Error code of <see cref="T:Microsoft.SharePoint.Client.ServerException"/> thrown when trying to move file to location, which already exists.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointAbstractFileService.NO_SUCH_FILE_OR_FOLDER_SERVER_ERROR_CODE">
            <summary>
            Error code of <see cref="T:Microsoft.SharePoint.Client.ServerException"/> thrown when trying to move file which does not exist.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractFileService.UploadFile(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Uploads the file's content specified as a stream to the <paramref name="serverRelativeUrl"/> location.
            </summary>
            <param name="sharePointLibraryTitle">Title of the library on SharePoint.</param>
            <param name="serverRelativeUrl">Server relative URL of the file.</param>
            <param name="stream">Stream with the file content.</param>
            <param name="overwriteExisting">If true, an existing file will be overwritten when it already exists.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when trying to upload to <paramref name="serverRelativeUrl"/> location which already exists and <paramref name="overwriteExisting"/> is set to false.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when trying to upload to the library <paramref name="sharePointLibraryTitle"/> which does not exist.</exception>
            <exception cref="T:System.ArgumentException">Thrown when trying to upload to <paramref name="serverRelativeUrl"/> location which already exists, <paramref name="overwriteExisting"/> is set to true, but the location can not be overwritten.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="serverRelativeUrl"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="serverRelativeUrl"/> is in invalid format.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractFileService.UpdateFile(System.String,System.IO.Stream,System.String)">
            <summary>
            Updates file identified by <paramref name="serverRelativeUrl"/>. New content and file name can be provided.
            </summary>
            <param name="serverRelativeUrl">Server relative URL of the file being updated.</param>
            <param name="stream">Stream providing file's binary content.</param>
            <param name="newServerRelativeUrl">New server relative URL of the file.</param>
            <exception cref="T:CMS.SharePoint.SharePointFileAlreadyExistsException">Thrown when <paramref name="newServerRelativeUrl"/> identifies existing file.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when file identified by <paramref name="serverRelativeUrl"/> does not exist on SharePoint server.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractFileService.DeleteFile(System.String)">
            <summary>
            Deletes the file specified by <paramref name="serverRelativeUrl"/> from the SharePoint server.
            Deleting a non-existent file within SharePoint site is a void action.
            Throws exception when <paramref name="serverRelativeUrl"/> is invalid (does not point within any SharePoint site).
            </summary>
            <param name="serverRelativeUrl">Server relative URL of the file.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="serverRelativeUrl"/> does not point within any SharePoint library.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="serverRelativeUrl"/> is null.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractFileService.RecycleFile(System.String)">
            <summary>
            Moves the file specified by <paramref name="serverRelativeUrl"/> to the recycle bin of the SharePoint server.
            Returns the identifier of the new recycle bin item.
            Recycling a non-existent file within SharePoint site returns empty GUID.
            Throws exception when <paramref name="serverRelativeUrl"/> is invalid (does not point within any SharePoint site).
            </summary>
            <param name="serverRelativeUrl">Server relative URL of the file.</param>
            <returns>GUID of the new recycle bin item, or <see cref="F:System.Guid.Empty"/> when file does not exist.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="serverRelativeUrl"/> does not point within any SharePoint library.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="serverRelativeUrl"/> is null.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractFileService.ExecuteFileQuery(Microsoft.SharePoint.Client.ClientContext,System.String)">
            <summary>
            Executes query specified by <paramref name="context"/> while taking proper care of some typical file related SharePoint exceptions.
            </summary>
            <param name="context">Context on which to execute the query</param>
            <param name="serverRelativeUrl">Server relative URL of the file manipulated by the query.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="serverRelativeUrl"/> does not point within any SharePoint library.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="serverRelativeUrl"/> is null.</exception>
            <exception cref="T:CMS.SharePoint.SharePointServerException">Thrown whenever server error occurs.</exception>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:CMS.SharePoint.SharePointConnectionNotSupportedException">Thrown when given connectionData contains unsupported authentication mode or invalid URL.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractFileService.#ctor(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Initializes SharePoint connection for any service built on this abstract service.
            </summary>
            <param name="connectionData">Connection data</param>
        </member>
        <member name="T:CMS.SharePoint.SharePointAbstractService">
            <summary>
            Provides common methods suitable for all SharePoint services.
            </summary>
        </member>
        <member name="F:CMS.SharePoint.SharePointAbstractService.ERROR_CODE_INVALID_CREDENTIALS">
            <summary>
            Error code of <see cref="T:Microsoft.SharePoint.Client.IdcrlException"/> thrown when the credentials are not valid.
            The corresponding exception message is: The sign-in name or password does not match one in the Microsoft account system.
            </summary>
        </member>
        <member name="P:CMS.SharePoint.SharePointAbstractService.ConnectionData">
            <summary>
            Connection data used by service instance.
            </summary>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractService.IsConnectionSupported">
            <summary>
            Tells you whether provided ConnectionData can be used (eg. site URL is in incorrect format).
            </summary>
            <returns>True if ConnectionData can be used by this implementation, false otherwise.</returns>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractService.CreateClientContext(OfficeDevPnP.Core.AuthenticationManager)">
            <summary>
            Create a new ClientContext for SharePoint Online based on ConnectionData.
            </summary>
            <param name="authenticationManager">Authentication manager.</param>
            <returns>ClientContext</returns>
            <exception cref="T:System.Net.WebException"></exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractService.ExecuteQuery(Microsoft.SharePoint.Client.ClientContext)">
            <summary>
            Executes query on SharePoint server.
            </summary>
            <param name="clientContext">Client context on which to perform query execution.</param>
            <exception cref="T:System.Net.WebException">Thrown when error related to network or protocol occurs.</exception>
            <exception cref="T:System.Exception">Thrown in case of unexpected error condition.</exception>
        </member>
        <member name="M:CMS.SharePoint.SharePointAbstractService.#ctor(CMS.SharePoint.SharePointConnectionData)">
            <summary>
            Initializes SharePoint connection for any service built on this abstract service.
            </summary>
            <param name="connectionData">Connection data</param>
        </member>
    </members>
</doc>
