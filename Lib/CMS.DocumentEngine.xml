<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.DocumentEngine</name>
    </assembly>
    <members>
        <member name="T:CMS.DocumentEngine.AttachmentBinaryHelper">
            <summary>
            Helper for getting and managing attachment binary data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentBinaryHelper.DeletePhysicalFiles">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentBinaryHelper.ThumbnailQuality">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GenerateThumbnails(System.String)">
            <summary>
            Returns the current settings whether the thumbnails should be generated.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.ResizeImageAttachment(CMS.DocumentEngine.IAttachment,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes image to specified dimensions.
            </summary>
            <param name="attachment">Attachment.</param>
            <param name="width">New width of the attachment.</param>
            <param name="height">New height of the attachment.</param>
            <param name="maxSideSize">Maximal side size of the attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetAttachmentBinary(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="attachment">Document attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetAttachmentBinary(System.Guid,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="guid">GUID of the file to get.</param>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetImageThumbnailBinary(CMS.DocumentEngine.DocumentAttachment,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="height">Image thumbnail width.</param>
            <param name="width">Image thumbnail height.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetImageThumbnailBinary(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="guid">GUID of the file to get.</param>
            <param name="siteName">Site name.</param>
            <param name="height">Image thumbnail width.</param>
            <param name="width">Image thumbnail height.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetImageThumbnailBinary(CMS.DocumentEngine.DocumentAttachment,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesn't exist).
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="maxSideSize">Maximum side size.</param>
            <param name="searchThumbnailFile">Indicates if thumbnail should be searched on the disk.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.EnsurePhysicalFile(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Ensures the file in the file system and returns the path to the file.
            </summary>
            <param name="attachment">Document attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.EnsureThumbnailFile(CMS.DocumentEngine.DocumentAttachment,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the thumbnail file.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="width">File width.</param>
            <param name="height">File height.</param>
            <param name="maxSideSize">Maximum side size.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.SaveFileToDisk(System.String,System.String,System.String,System.String,CMS.Core.BinaryData,System.Boolean,System.Boolean)">
            <summary>
            Saves file to the disk.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="guid">File GUID.</param>
            <param name="fileName">File name.</param>
            <param name="fileExtension">File extension.</param>
            <param name="fileData">File data (byte[] or Stream).</param>
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted.</param>
            <param name="synchronization">Indicates if this function is called from "ProcessTask".</param>
            <returns>Returns the path to the file on the disk.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.DeleteFile(System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*) in specified directory.
            </summary>
            <param name="fileGuid">GUID of the file to delete.</param>
            <param name="siteName">Site name.</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not.</param>
            <param name="synchronization">Indicates whether the method is called due to synchronization.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.CanResizeImage(CMS.DocumentEngine.IAttachment,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether the image should be processed (resized) by the Image manager (if the destination size is smaller).
            </summary>
            <param name="attachment">Attachment.</param>
            <param name="width">New width.</param>
            <param name="height">New height.</param>
            <param name="maxSideSize">Max side size.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetFilesFolderPath(System.String)">
            <summary>
            Returns files folder physical path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetFilesFolderRelativePath(System.String)">
            <summary>
            Returns files folder relative path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetFilePhysicalPath(System.String,System.String,System.String)">
            <summary>
            Returns physical path to the file.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="guid">File GUID.</param>
            <param name="extension">File extension.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetThumbnailPhysicalPath(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns physical path to the thumbnail.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="guid">File GUID.</param>
            <param name="extension">File extension.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.ResizeImageAttachmentInternal(CMS.DocumentEngine.IAttachment,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes image to specified dimensions.
            </summary>
            <param name="attachment">Attachment.</param>
            <param name="width">New width of the attachment.</param>
            <param name="height">New height of the attachment.</param>
            <param name="maxSideSize">Maximal side size of the attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetAttachmentBinaryInternal(System.Guid,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns attachment binary and optionally store it in file system.
            </summary>
            <param name="guid">GUID of the attachment to get.</param>
            <param name="id">ID of the attachment to get.</param>
            <param name="siteName">Site name.</param>
            <param name="storeInFileSystem">If true, given attachment is stored in file system.</param>
            <returns>Attachment binary.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetAttachmentBinaryInternal(System.Guid,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="guid">GUID of the file to get.</param>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetAttachmentBinaryInternal(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="attachment">Document attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetImageThumbnailBinaryFileInternal(CMS.DocumentEngine.DocumentAttachment,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="height">Image thumbnail width.</param>
            <param name="width">Image thumbnail height.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetImageThumbnailInternal(CMS.DocumentEngine.DocumentAttachment,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesn't exist).
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="maxSideSize">Maximum side size.</param>
            <param name="searchThumbnailFile">Indicates if thumbnail should be searched on the disk.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetImageThumbnailInternal(System.Guid,System.Byte[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesn't exist).
            </summary>
            <param name="guid">File GUID.</param>
            <param name="imageData">Image data.</param>
            <param name="extension">Image extension.</param>
            <param name="siteName">Site name.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="maxSideSize">Maximum side size.</param>
            <param name="originalWidth">Original width of the image.</param>
            <param name="originalHeight">Original height of the image.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.EnsurePhysicalFileInternal(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Ensures the file in the file system and returns the path to the file.
            </summary>
            <param name="attachment">Document attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.EnsureThumbnailFileInternal(CMS.DocumentEngine.DocumentAttachment,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the thumbnail file.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="width">File width.</param>
            <param name="height">File height.</param>
            <param name="maxSideSize">Maximum side size.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.SaveFileToDiskInternal(System.String,System.String,System.String,System.String,CMS.Core.BinaryData,System.Boolean,System.Boolean)">
            <summary>
            Saves file to the disk.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="guid">File GUID.</param>
            <param name="fileName">File name.</param>
            <param name="fileExtension">File extension.</param>
            <param name="fileData">File data (byte[] or Stream).</param>
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted.</param>
            <param name="synchronization">Indicates if this function is called from "ProcessTask".</param>
            <returns>Returns the path to the file on the disk.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.DeleteFileInternal(System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*) in specified directory.
            </summary>
            <param name="fileGuid">GUID of the file to delete.</param>
            <param name="siteName">Site name.</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not.</param>
            <param name="synchronization">Indicates whether the method is called due to synchronization.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.CanResizeImageInternal(CMS.DocumentEngine.IAttachment,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether the image should be processed (resized) by the Image manager (if the destination size is smaller).
            </summary>
            <param name="attachment">Attachment.</param>
            <param name="width">New width.</param>
            <param name="height">New height.</param>
            <param name="maxSideSize">Max side size.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetFilesFolderPathInternal(System.String)">
            <summary>
            Returns files folder physical path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetFilesFolderRelativePathInternal(System.String)">
            <summary>
            Returns files folder relative path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetFileFolder(System.String,System.String)">
            <summary>
            Returns physical path to the file folder(files folder path + subfolder).
            </summary>
            <param name="siteName">Site name.</param>
            <param name="guid">File GUID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetFilePhysicalPathInternal(System.String,System.String,System.String)">
            <summary>
            Returns physical path to the file.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="guid">File GUID.</param>
            <param name="extension">File extension.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentBinaryHelper.GetThumbnailPhysicalPathInternal(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns physical path to the thumbnail.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="guid">File GUID.</param>
            <param name="extension">File extension.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentExtensions">
            <summary>
            Extension methods for <see cref="T:CMS.DocumentEngine.AttachmentInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.IsVariant(CMS.DocumentEngine.IAttachment)">
            <summary>
            Returns true if the attachment is a variant of an original attachment.
            </summary>
            <param name="attachment">Attachment to check.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.ExceptVariants(CMS.DataEngine.ObjectQuery{CMS.DocumentEngine.AttachmentInfo})">
            <summary>
            Filters attachments to get only ones which do not represent variants.
            </summary>
            <param name="query">Query for retrieving attachments.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.VariantsForAttachments(CMS.DataEngine.ObjectQuery{CMS.DocumentEngine.AttachmentInfo},System.Int32[])">
            <summary>
            Gets attachment variants for given set of parent attachments.
            </summary>
            <param name="query">Query for retrieving attachments.</param>
            <param name="parentAttachmentIds">Collection of parent attachment IDs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.GetVariant(CMS.DocumentEngine.AttachmentInfo,System.String)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> that represents variant of the given attachment. The variant is specified by <paramref name="definitionIdentifier"/> parameter.
            </summary>
            <param name="attachment">Attachment info object.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when either of the parameters are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="definitionIdentifier"/> is empty.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.GenerateVariant(CMS.DocumentEngine.AttachmentInfo,CMS.ResponsiveImages.IVariantContext,System.String)">
            <summary>
            Generates single image variant for given attachment. The variant is specified by <paramref name="definitionIdentifier"/> parameter.
            </summary>
            <remarks>Deletes an existing variant if the given variant definition is no longer applicable on the attachment.</remarks>
            <param name="attachment">Attachment info object.</param>
            <param name="context">Variant processing context.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <returns>Generated image variant from the main attachment or <c>null</c> if variant did not generate.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when either of the parameters are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="definitionIdentifier"/> is empty.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.GenerateAllVariants(CMS.DocumentEngine.AttachmentInfo,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates all image variants for given attachment overwriting existing variants.
            </summary>
            <remarks>Only applicable variants will be generated. Variant definitions which are no more applicable to the attachment will be deleted.</remarks>
            <param name="attachment">Attachment info object.</param>
            <param name="context">Variant processing context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachment"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.GenerateMissingVariants(CMS.DocumentEngine.AttachmentInfo,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates attachment image variants which were not yet generated.
            </summary>
            <param name="attachment">Attachment info object.</param>
            <param name="context">Context</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachment"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExtensions.SetAttachmentVariantGenerator(CMS.DocumentEngine.IAttachmentVariantGenerator{CMS.DocumentEngine.AttachmentInfo})">
            <summary>
            Sets the attachment variant generator.
            </summary>
            <param name="generator">Attachment variant generator instance.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentInfo">
            <summary>
            Attachment info data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.OBJECT_TYPE_TEMPORARY">
            <summary>
            Object type for temporary attachments.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.OBJECT_TYPE_VARIANT">
            <summary>
            Object type for attachment variants.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.TYPEINFO_TEMPORARY">
            <summary>
            Type information for temporary attachment.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.TYPEINFO_VARIANT">
            <summary>
            Type information for attachment variant.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mInputStream">
            <summary>
            Input stream - for file upload.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mStreamProcessed">
            <summary>
            True if the input stream has already been processed.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mAttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mAttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentID">
            <summary>
            Attachment ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentVariantParentID">
            <summary>
            Attachment variant parent ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentVariantDefinitionIdentifier">
            <summary>
            Text identification of used variant definition.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentName">
            <summary>
            Attachment name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentExtension">
            <summary>
            Attachment extension.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentSize">
            <summary>
            Attachment size.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentMimeType">
            <summary>
            Attachment mime type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentBinary">
            <summary>
            Attachment binary.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentImageWidth">
            <summary>
            Attachment image width.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentImageHeight">
            <summary>
            Attachment image height.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentDocumentID">
            <summary>
            Attachment document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentGUID">
            <summary>
            Attachment GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentSiteID">
            <summary>
            Attachment site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentLastModified">
            <summary>
            Attachment last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is an unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentFormGUID">
            <summary>
            Indicates that the attachment is temporary and it is bound to the specific instance of form with this GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.InputStream">
            <summary>
            File input stream (for large files).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentHash">
            <summary>
            Attachment hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentTitle">
            <summary>
            Attachment title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentDescription">
            <summary>
            Attachment description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.GetSiblingsWhereCondition">
            <summary>
            Creates where condition for sibling objects
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.SetObjectOrderPostprocessing">
            <summary>
            Method which is called after the order of the object was changed. Generates staging tasks and webfarm tasks by default.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor">
            <summary>
            Constructor of AttachmentInfo structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor of AttachmentInfo structure, creates a new AttachmentInfo object from the given DataRow data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.Web.HttpPostedFile)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(CMS.Base.IUploadedFile)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.Web.HttpPostedFile,System.Int32,System.Guid)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(CMS.Base.IUploadedFile,System.Int32,System.Guid)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.String)">
            <summary>
            Creates a new AttachmentInfo object based on the file specified by given path.
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.String,System.Int32,System.Guid)">
            <summary>
            Creates a new AttachmentInfo object based on the file specified by given path.
            </summary>
            <param name="filePath">File path</param>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.GetBinaryData">
            <summary>
            Returns binary data of the attachment in the BinaryData wrapper.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.EnsureSearchContent(CMS.Search.ExtractionContext,CMS.DataEngine.ISearchFields)">
            <summary>
            Returns the search content of the attachment (including names, title, description and extracted content of the attachment binary data) which should be included to the content field of the SearchDocument.
            Caches the extracted value to the AttachmentSearchContent field if called for the first time (calls AttachmentInfoProvider.SetAttachmentInfo(this, false) in this case to save to value to the DB).
            </summary>
            <param name="context">Extration context passed to the text extractors</param>
            <param name="searchFields">Search fields collection that can be extended by extractors (DOES NOT modify the content field, this is dealt with separately - as a return value of this method)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.EnsureBinaryData(System.Boolean)">
            <summary>
            Ensures the binary data - loads the binary data from file stream if present.
            </summary>
            <param name="forceLoadFromDB">If true, the data are loaded even from DB</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.GetFileStream">
            <summary>
            Returns the FileStream if file physically exists on disk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.LoadDataFromStream">
            <summary>
            Loads the attachment data from the input stream.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.Clone(System.Boolean)">
            <summary>
            Returns clone object of current attachment info.
            </summary>
            <param name="clear">If true, the attachment is cleared to allow create new object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks whether the specified user has permissions for this object. This method is called automatically after CheckPermissions event was fired.
            </summary>
            <param name="permission">Permission to perform this operation will be checked</param>
            <param name="siteName">Permissions on this site will be checked</param>
            <param name="userInfo">Permissions of this user will be checked</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
            <returns>True if user is allowed to perform specified operation on the this object; otherwise false</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.ResetChanges">
            <summary>
            Resets the object changes and keeps the new values as unchanged according to the asUnchanged parameter.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.ResetSearchContent(System.Boolean)">
            <summary>
            Sets the value of the flag indicating whether extracted search content of the attachment is to be cleared upon save
            (causing the search content to be loaded during search indexing).
            True by default.
            </summary>
            <param name="reset">Specifies if search content field is to be set to null to be forced to be loaded again.</param>
            <seealso cref="M:CMS.DocumentEngine.AttachmentInfoProvider.Set(CMS.DocumentEngine.AttachmentInfo)"/>
            <seealso cref="M:CMS.DocumentEngine.AttachmentInfoProvider.SetAttachmentInfo(CMS.DocumentEngine.AttachmentInfo,System.Boolean)"/>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentInfoProvider">
            <summary>
            Class providing attachment management.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.MAXATTACHMENTNAMELENGTH">
            <summary>
            Maximal length of the attachment name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.mDeleteTemporaryAttachmentsOlderThan">
            <summary>
            Specifies how old (in hours) should be attachments deleted by the 'Delete old temporary attachments' scheduled task.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachmentsOlderThan">
            <summary>
            Specifies how old (in hours) should be attachments deleted by the 'Delete old temporary attachments' scheduled task.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:CMS.DocumentEngine.AttachmentInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Int32,System.Guid)">
            <summary>
            Gets the attachment by the document ID and attachment GUID.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">GUID of the attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the attachment by the document ID and file name.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Get the binary data?</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.String,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoWithoutBinary(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment without binary data.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Int32,System.Boolean)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="getBinary">If false, no binary data is retrieved from the database</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.Set(CMS.DocumentEngine.AttachmentInfo)">
            <summary>
            Inserts or updates the <paramref name="info"/> object in the underlying data store.
            </summary>
            <param name="info">Info object to be inserted or updated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="info"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SetAttachmentInfo(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Sets (updates or inserts) specified attachment.
            </summary>
            <param name="attachment">Attachment to set</param>
            <param name="resetSearchContent">If true, the search content field is set to null to be forced to load again</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.Delete(CMS.DocumentEngine.AttachmentInfo)">
            <summary>
            Deletes the <paramref name="info"/> object from the underlying data store.
            </summary>
            <param name="info">Info object to be deleted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="info"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachmentInfo(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachmentInfo(System.Int32,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachments(System.Int32,System.Boolean)">
            <summary>
            Returns object query of attachments with specified document id.
            </summary>
            <param name="documentId">Document id</param>
            <param name="getBinary">If false, no binary data is returned for the attachments</param>
            <remarks>The IncludeBinaryData property and the BinaryData method don't load binary data 
            for attachments stored on the filesystem. To load binary data for attachments stored on the 
            filesystem, use the AttachmentBinary property of every record.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachments">
            <summary>
            Gets the query for all attachments
            </summary>
            <remarks>The IncludeBinaryData property and the BinaryData method don't load binary data 
            for attachments stored on the filesystem. To load binary data for attachments stored on the 
            filesystem, use the AttachmentBinary property of every record.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachments(System.Int32)">
            <summary>
            Deletes all the attachments of specified document. 
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachments(CMS.DataEngine.IWhereCondition)">
            <summary>
            Deletes the main attachments based on given where condition together with their variants.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachment(CMS.DocumentEngine.AttachmentInfo,System.Int32)">
            <summary>
            Moves the attachment data to the target site.
            </summary>
            <param name="attachment">Attachment object</param>
            <param name="targetSiteId">Target site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetTemporaryAttachmentInfo(System.Guid)">
            <summary>
            Gets a temporary attachment
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteOldTemporaryAttachments">
            <summary>
            Deletes old temporary attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachments(System.Int32)">
            <summary>
            Deletes old temporary attachments.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file path</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,CMS.Base.IUploadedFile,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachment(System.Guid,System.String,System.Guid,System.Guid,CMS.DocumentEngine.AttachmentSource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file (HttpPostedFile or file path)</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachment(System.Guid,System.String)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="attachmentGuid">GUID of the attachment</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetUniqueTemporaryAttachmentFileName(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Method gets unique temporary attachment file name in the form scope.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <param name="siteId">Site ID</param>
            <returns>Unique attachment name</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.IsUniqueTemporaryAttachmentName(System.Guid,System.String,System.String,System.Int32)">
            <summary>
            Finds out whether the given temporary attachment file name is unique.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="extension">Extension of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <returns>True if attachment name is unique</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeys(CMS.DocumentEngine.IAttachment)">
            <summary>
            Gets the cache key dependencies array for the attachment (cache item keys affected when the attachment changes).
            </summary>
            <param name="ai">Attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeys(System.Int32)">
            <summary>
            Gets the cache key dependencies array for the attachment order change (cache item keys affected when the attachment order changes).
            </summary>
            <param name="documentId">Attachment document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CheckFilesPermissions(System.String)">
            <summary>
            Returns the current settings whether the files should check document permissions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CheckPublishedFiles(System.String)">
            <summary>
            Returns the current settings whether the files should check if the document is published.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ClearSearchCache">
            <summary>
            Clears the AttachmentSearchContent for all attachments in the DB.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Int32,System.Guid)">
            <summary>
            Gets the attachment by the document ID and attachment GUID.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">GUID of the attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the attachment by the document ID and file name.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Get the binary data?</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoWithoutBinaryInternal(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment without binary data.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Int32,System.Boolean)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="getBinary">If false, no binary data is retrieved from the database</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SetAttachmentInfoInternal(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Sets (updates or inserts) specified attachment.
            </summary>
            <param name="attachment">Attachment to set</param>
            <param name="resetSearchContent">If true, the search content field is set to null to be forced to load again</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachmentInfoInternal(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachmentInternal(CMS.DocumentEngine.AttachmentInfo,System.Int32)">
            <summary>
            Moves the attachment data to the target site.
            </summary>
            <param name="attachment">Attachment object</param>
            <param name="targetSiteId">Target site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.IsUniqueAttachmentName(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Indicates whether the given attachment name is unique.
            </summary>
            <param name="documentId">ID of the document</param>
            <param name="fileName">Name of file</param>
            <param name="extension">Extension of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteOldTemporaryAttachmentsInternal">
            <summary>
            Deletes old temporary attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachmentsInternal(System.Int32)">
            <summary>
            Deletes old temporary attachments.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CreateNewAttachment(CMS.DocumentEngine.AttachmentSource,System.Guid,System.Int32,System.String)">
            <summary>
            Creates a new attachment info using the given data
            </summary>
            <param name="file">File object, HttpPostedFile, file path or attachment info</param>
            <param name="newGuid">Attachment GUID</param>
            <param name="documentId">Document ID</param>
            <param name="siteName">Site name</param>
            <remarks>Does not save the attachment to database</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachmentInternal(System.Guid,System.String,System.Guid,System.Guid,CMS.DocumentEngine.AttachmentSource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file (HttpPostedFile or file path)</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CopyAttachmentProperties(CMS.DocumentEngine.DocumentAttachment,CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Takes attachment data from <paramref name="source"/> and sets corresponding fields in <paramref name="target"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetUniqueTemporaryAttachmentFileNameInternal(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Method gets unique temporary attachment file name in the form scope.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <param name="siteId">Site ID</param>
            <returns>Unique attachment name</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.IsUniqueTemporaryAttachmentNameInternal(System.Guid,System.String,System.String,System.Int32)">
            <summary>
            Indicates whether the given temporary attachment name is unique.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="extension">Extension of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeysInternal(CMS.DocumentEngine.IAttachment)">
            <summary>
            Gets the cache key dependencies array for the attachment (cache item keys affected when the attachment changes).
            </summary>
            <param name="ai">Attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeysInternal(System.Int32)">
            <summary>
            Gets the cache key dependencies array for the attachment order change (cache item keys affected when the attachment order changes).
            </summary>
            <param name="documentId">Attachment document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ClearSearchCacheInternal">
            <summary>
            Clears the AttachmentSearchContent for all attachments in the DB.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentInfoProviderExtensions">
            <summary>
            Contains extension methods for <see cref="T:CMS.DocumentEngine.IAttachmentHistoryInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProviderExtensions.GetWithoutBinary(CMS.DocumentEngine.IAttachmentInfoProvider,System.Int32)">
            <summary>
            Gets an instance of attachment based on its ID.
            </summary>
            <param name="attachmentInfoProvider">Provider for <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> management.</param>
            <param name="id">ID of the attachment to look for.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> corresponding to <paramref name="id"/> or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProviderExtensions.GetWithoutBinary(CMS.DocumentEngine.IAttachmentInfoProvider,System.Guid,System.Int32)">
            <summary>
            Gets an instance of attachment based on its GUID and site ID.
            </summary>
            <param name="attachmentInfoProvider">Provider for <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> management.</param>
            <param name="guid">GUID of the attachment to look for.</param>
            <param name="siteId">ID of the site to which to constrain the lookup.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> corresponding to <paramref name="guid"/> and <paramref name="siteId"/> or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachmentInfoProvider"/> is null.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentListInfo">
            <summary>
            Represents a list info for list of all attachments in the system
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AttachmentListInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentListInfo.GetColumnNames">
            <summary>
            Gets the default list of column names for this class
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentSource">
            <summary>
            Wrapper class to provide source attachment data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentSource.Attachment">
            <summary>
            Existing attachment
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentSource.FilePath">
            <summary>
            File path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentSource.PostedFile">
            <summary>
            POsted file
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentSource.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:CMS.DocumentEngine.AttachmentSource"/> class from being created.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentSource.#ctor(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.AttachmentSource"/> class.
            </summary>
            <param name="attachment">Attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.AttachmentSource"/> class.
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentSource.#ctor(CMS.Base.IUploadedFile)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.AttachmentSource"/> class.
            </summary>
            <param name="postedFile">The posted file.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentSource.op_Implicit(CMS.DocumentEngine.DocumentAttachment)~CMS.DocumentEngine.AttachmentSource">
            <summary>
            Implicit operator to convert DocumentAttachment to Attachment source
            </summary>
            <param name="attachment">Attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentSource.op_Implicit(System.String)~CMS.DocumentEngine.AttachmentSource">
            <summary>
            Implicit operator to convert file path to Attachment source
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentSource.op_Implicit(System.Web.HttpPostedFile)~CMS.DocumentEngine.AttachmentSource">
            <summary>
            Implicit operator to convert posted file to Attachment source
            </summary>
            <param name="postedFile">POsted file</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentURLProvider">
            <summary>
            URL provider for the attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetFilePhysicalUrl(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name.</param>
            <param name="guid">Attachment GUID.</param>
            <param name="extension">File extension.</param>
            <param name="width">Image width in pixels.</param>
            <param name="height">Image height in pixels.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Returns friendly attachment URL.
            </summary>
            <param name="safeFileName">Attachment safe file name. Use <see cref="M:CMS.Helpers.ValidationHelper.GetSafeFileName(System.String,System.String)"/> method to get file name in format suitable for URL.</param>
            <param name="aliasPath">Node alias path.</param>
            <param name="extension">File extension.</param>
            <param name="variant">Identifier of the attachment variant definition.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID.</param>
            <param name="safeFileName">Attachment safe file name. Use <see cref="M:CMS.Helpers.ValidationHelper.GetSafeFileName(System.String,System.String)"/> method to get file name in format suitable for URL.</param>
            <param name="extension">File extension.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.Guid,System.String,System.String,System.Int32)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID.</param>
            <param name="safeFileName">Attachment safe file name. Use <see cref="M:CMS.Helpers.ValidationHelper.GetSafeFileName(System.String,System.String)"/> method to get file name in format suitable for URL.</param>
            <param name="extension">File extension.</param>
            <param name="versionHistoryId">ID of the document version for which the attachment version should be displayed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.Guid,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID.</param>
            <param name="safeFileName">Attachment safe file name. Use <see cref="M:CMS.Helpers.ValidationHelper.GetSafeFileName(System.String,System.String)"/> method to get file name in format suitable for URL.</param>
            <param name="extension">File extension.</param>
            <param name="versionHistoryId">ID of the document version for which the attachment version should be displayed.</param>
            <param name="prefix">URL prefix, if null, "getattachment" is used, the prefix must be supported by the URL rewriting engine.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.Guid,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID.</param>
            <param name="safeFileName">Attachment safe file name. Use <see cref="M:CMS.Helpers.ValidationHelper.GetSafeFileName(System.String,System.String)"/> method to get file name in format suitable for URL.</param>
            <param name="extension">File extension.</param>
            <param name="versionHistoryId">ID of the document version for which the attachment version should be displayed.</param>
            <param name="prefix">URL prefix, if null, "getattachment" is used, the prefix must be supported by the URL rewriting engine.</param>
            <param name="variant">Identifier of the attachment variant definition.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.Guid,System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID.</param>
            <param name="fileName">Attachment file name.</param>
            <param name="versionHistoryId">ID of the document version for which the attachment version should be displayed.</param>
            <param name="prefix">URL prefix, if null, "getattachment" is used, the prefix must be supported by the URL rewriting engine.</param>
            <param name="variant">Identifier of the attachment variant definition.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetFilePhysicalUrlInternal(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name.</param>
            <param name="guid">Attachment GUID.</param>
            <param name="extension">File extension.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrlInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Returns friendly attachment URL.
            </summary>
            <param name="safeFileName">Attachment safe file name. Use <see cref="M:CMS.Helpers.ValidationHelper.GetSafeFileName(System.String,System.String)"/> method to get file name in format suitable for URL.</param>
            <param name="aliasPath">Node alias path.</param>
            <param name="extension">File extension.</param>
            <param name="variant">Identifier of the attachment variant.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrlInternal(System.Guid,System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID.</param>
            <param name="fileName">Attachment file name.</param>
            <param name="versionHistoryId">ID of the document version for which the attachment version should be displayed.</param>
            <param name="prefix">URL prefix, if null, "getattachment" is used, the prefix must be supported by the URL rewriting engine.</param>
            <param name="variant">Identifier of the attachment variant.</param>
        </member>
        <member name="T:CMS.DocumentEngine.CMSOutputAttachment">
            <summary>
            Represents <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> object used for response output.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.Attachment">
            <summary>
            Attachment without AttachmentBinary.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.LastModified">
            <summary>
            Time when the file was last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.IsSecured">
            <summary>
            File is secured (located within the secured area document).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.AliasPath">
            <summary>
            Document alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.SiteName">
            <summary>
            Document site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.CultureCode">
            <summary>
            Document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.RedirectTo">
            <summary>
            If set, file should be redirected to the file system.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.FileNode">
            <summary>
            File document node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.MimeType">
            <summary>
            Mime type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.ValidTo">
            <summary>
            Time to which the file is valid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.ValidFrom">
            <summary>
            Time from which the file is valid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.IsValid">
            <summary>
            Returns true if the file is valid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.IsPublished">
            <summary>
            Returns true if the file is published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.PhysicalFile">
            <summary>
            Physical file path to the data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.#ctor(CMS.DocumentEngine.DocumentAttachment,System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="ai">AttachmentInfo</param>
            <param name="data">Output file data</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.EnsureData(System.Byte[])">
            <summary>
            Ensures that the object contains the output data.
            </summary>
            <param name="defaultData">Default data which should be loaded if data required</param>
            <returns>Returns true if new data has been loaded</returns>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.LoadData(System.Byte[])">
            <summary>
            Loads the data to the object.
            </summary>
            <param name="data">New data</param>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="T:CMS.DocumentEngine.CombinedDocumentAttachmentCollection">
            <summary>
            Combined collection of attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CombinedDocumentAttachmentCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAttachmentCollection">
            <summary>
            Collection of the attachments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachmentCollection.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.#ctor(System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentDocument">Parent document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.CreateNewObject(System.Data.DataRow)">
            <summary>
            Creates new instance of the encapsulated object.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.GetNameWhereCondition(System.String)">
            <summary>
            Gets the where condition by object name
            </summary>
            <param name="name">Object name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.GetCompleteWhereCondition">
            <summary>
            Gets the complete where condition for the collection
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.GetData(CMS.DataEngine.IWhereCondition,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition</param>
            <param name="offset">Starting offset for the data</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="totalRecords">Returning total number of records</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.Clone">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentCollection.CopyPropertiesTo(CMS.DataEngine.IInfoObjectCollection)">
            <summary>
            Copies the properties of this collection to the other collection
            </summary>
            <param name="targetCollection">Target collection</param>
        </member>
        <member name="T:CMS.DocumentEngine.UnsortedDocumentAttachmentCollection">
            <summary>
            Collection of the attachments which only covers unsorted attachments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UnsortedDocumentAttachmentCollection.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentDocument">Parent document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.UnsortedDocumentAttachmentCollection.EnsureObjectValues(CMS.DataEngine.BaseInfo)">
            <summary>
            Ensures the proper values for the given object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UnsortedDocumentAttachmentCollection.GetCompleteWhereCondition">
            <summary>
            Gets the complete where condition for the collection
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAttachmentRepository">
            <summary>
            Repository for document attachments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachmentRepository.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentRepository.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentDocument">Parent document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentRepository.LoadCollection(CMS.DataEngine.InfoCollectionSettings)">
            <summary>
            Loads the given collection.
            </summary>
            <param name="settings">Collection settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentRepository.NewCollection(System.String)">
            <summary>
            Creates new collection for the data.
            </summary>
            <param name="type">Object type of the collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentRepository.NewCombinedCollection">
            <summary>
            Creates new combined collection for the data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAttachmentsCopier">
            <summary>
            Provides methods to copy document attachments for a published data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentsCopier.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.DocumentAttachmentsCopier"/>.
            </summary>
            <param name="sourceDocument">Source document.</param>
            <param name="targetDocument">Target document.</param>
            <remarks>Copies attachments from source document to target document.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentsCopier.SaveAttachment(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves a copied main attachment.
            </summary>
            <param name="attachment">Main attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentsCopier.GetAttachmentsExceptVariants(CMS.DataEngine.IWhereCondition)">
            <summary>
            Gets the main attachments for the source document.
            </summary>
            <param name="where">Where condition.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentsCopier.GetVariants(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets attachments variants based on the given list of parent IDs.
            </summary>
            <param name="parentAttachmentIds">Parent attachment IDs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentsCopier.SaveVariant(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves a copied attachment variant.
            </summary>
            <param name="variant">Attachment variant.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase">
            <summary>
            Base class for copying document attachments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.TargetDocument">
            <summary>
            Target document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.SourceDocument">
            <summary>
            Source document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.AttachmentGUIDs">
            <summary>
            Collection of original attachment GUID as key and copied attachment GUID as value.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.CopyVariants">
            <summary>
            Indicates if variants should be copied.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase"/>.
            </summary>
            <param name="sourceDocument">Source document.</param>
            <param name="targetDocument">Target document.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.Copy">
            <summary>
            Copies attachments.
            </summary>
            <returns>Indicates if any of the field attachments was copied and the document data should be updated.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.CopyFieldAttachments">
            <summary>
            Copies field attachments.
            </summary>
            <returns>Indicates if any of the field attachments was copied and the document data should be updated.</returns>
            <remarks> Expects that <see cref="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.TargetDocument"/> is newly created culture 
            version of <see cref="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.SourceDocument"/>  and its values of field attachments are not cleared. </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.UpdateDocumentFieldValues(System.Collections.Generic.List{CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.AttachmentField})">
            <summary>
            Updates document fields with GUID of copied attachment.
            </summary>
            <param name="fields">List of attachment fields.</param>
            <returns>Indicates if at least one value of document field was updated.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.GetFieldWhere(System.Collections.Generic.List{CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.AttachmentField})">
            <summary>
            Gets where condition for field attachments.
            </summary>
            <param name="fields">List of attachment fields.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.GetAttachmentFields">
            <summary>
            Gets list of attachment fields.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.CopyAttachmentsExceptVariants(CMS.DataEngine.WhereCondition)">
            <summary>
            Copies attachments except variants.
            </summary>
            <param name="where">Where condition to limit copied attachments.</param>
            <returns>Dictionary of copied attachments where key is the original attachment ID.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.EnsureBinaryData(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Ensures binary data within the given attachment.
            </summary>
            <param name="sourceAttachment">Source attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.SaveVariantInternal(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves the attachment variant as <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> published attachment.
            </summary>
            <param name="attachment">Attachment to save.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.SaveVariantHistoryInternal(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves the attachment variant as <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/> attachment version.
            </summary>
            <param name="attachment">Attachment to save.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.GetVariants(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets attachments variants based on the given list of parent IDs.
            </summary>
            <param name="parentAttachmentIds">Parent attachment IDs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.SaveVariant(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves a copied attachment variant.
            </summary>
            <param name="variant">Attachment variant.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.GetAttachmentsExceptVariants(CMS.DataEngine.IWhereCondition)">
            <summary>
            Gets the attachments except variants for the source document.
            </summary>
            <param name="where">Where condition.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.SaveAttachment(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves a copied attachment.
            </summary>
            <param name="attachment">Attachment.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.AttachmentField">
            <summary>
            Attachment field.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.AttachmentField.Name">
            <summary>
            Name of the field.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentAttachmentsCopierBase.AttachmentField.Value">
            <summary>
            Value of the field.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier">
            <summary>
            Provides methods to copy latest version of document attachments to the target document during creation of a new culture version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier"/>.
            </summary>
            <param name="sourceDocument">Source document.</param>
            <param name="targetDocument">Target document.</param>
            <param name="generateVariants">Indicates if variants should be generated, not copied.</param>
            <remarks>Copies attachments from source document to target document.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier.GetAttachmentsExceptVariants(CMS.DataEngine.IWhereCondition)">
            <summary>
            Gets the attachments except varinats for the source document.
            </summary>
            <param name="where">Where condition.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier.SaveAttachment(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves a copied attachment.
            </summary>
            <param name="attachment">Attachment.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier.SaveVariant(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Saves a copied attachment variant.
            </summary>
            <param name="variant">Attachment variant.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier.GetVariants(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets attachments variants based on the given list of parent IDs.
            </summary>
            <param name="parentAttachmentIds">Parent attachment IDs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NewCultureVersionAttachmentsCopier.EnsureBinaryData(CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Ensures binary data within the given attachment.
            </summary>
            <param name="sourceAttachment">Source attachment.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentCultureDataInfo">
            <summary>
            Class representing the culture specific data of a document.
            </summary>
            <remarks>
            This class is intended for internal usage only.
            </remarks>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentNodeID">
            <summary>
            Document related tree node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentName">
            <summary>
            Document name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCulture">
            <summary>
            Document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentForeignKeyValue">
            <summary>
            Document foreign key ID. Connects page with custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPublishFrom">
            <summary>
            Indicates from when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPublishTo">
            <summary>
            Indicates to when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentTags">
            <summary>
            Document tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentTagGroupID">
            <summary>
            Document tag group ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPublishedVersionHistoryID">
            <summary>
            Document published version history ID (latest published document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCheckedOutVersionHistoryID">
            <summary>
            Document checked out version history ID (latest document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCheckedOutByUserID">
            <summary>
            ID of a user who has checked the document out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentWorkflowStepID">
            <summary>
            Document workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentIsArchived">
            <summary>
            Indicates whether document is archived.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentWorkflowActionStatus">
            <summary>
            Returns string representing workflow action status.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentSearchExcluded">
            <summary>
            Indicates whether the document will be excluded from search.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentGUID">
            <summary>
            GUID to identify the document within site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentWorkflowCycleGUID">
            <summary>
            Workflow cycle GUID to obtain preview link for document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentIsWaitingForTranslation">
            <summary>
            Indicates whether the document is in the process of translation (submitted to a translation service).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCanBePublished">
            <summary>
            Indicates whether document can be considered published if published from / to matches the current time.
            This property is automatically updated when the object is saved and aggregates the state of other properties which participate on this status.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPageBuilderWidgets">
            <summary>
            Gets or sets configuration of Page builder document widgets used for MVC support only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPageTemplateConfiguration">
            <summary>
            Gets or sets configuration of page template used for MVC support only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentABTestConfiguration">
            <summary>
            Gets or sets configuration of A/B test.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentContent">
            <summary>
            Document content.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCreatedByUserID">
            <summary>
            ID of a user who has created the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCreatedWhen">
            <summary>
            Date and time when the document was created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCheckedOutWhen">
            <summary>
            Date and time when was the document checked out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentLastPublished">
            <summary>
            Date and time when was the document last published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentLastVersionName">
            <summary>
            Document last version name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentLastVersionNumber">
            <summary>
            Document last version number.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentModifiedByUserID">
            <summary>
            ID of a user who modified the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentModifiedWhen">
            <summary>
            Date and time when was the document modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPageDescription">
            <summary>
            Document page description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPageTitle">
            <summary>
            Document page title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentPageKeyWords">
            <summary>
            Document page key words.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentSKUDescription">
            <summary>
            Document SKU description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentSKUName">
            <summary>
            Document SKU name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentSKUShortDescription">
            <summary>
            Document SKU short description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentShowInMenu">
            <summary>
            Indicates that the page is included if web site menu.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentCultureDataInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
            <returns>Returns true if the operation was successful</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.LoadDefaultData">
            <summary>
            Loads the default object data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.EnsureDocumentCanBePublishedValue">
            <summary>
            Method ensures that property <see cref="P:CMS.DocumentEngine.Internal.DocumentCultureDataInfo.DocumentCanBePublished"/> is correctly initialized.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider">
            <summary>
            Class providing document culture specific data management.
            </summary>
            <remarks>
            This class is intended for internal usage only.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.GetDocumentCultures">
            <summary>
            Returns document culture data object query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.GetDocumentCultureInfo(System.Int32)">
            <summary>
            Returns document culture data with specified ID.
            </summary>
            <param name="dataId">Document culture ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.SetDocumentCultureInfo(CMS.DocumentEngine.Internal.DocumentCultureDataInfo)">
            <summary>
            Sets (updates or inserts) specified document culture data.
            </summary>
            <param name="data">Document culture data to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.DeleteDocumentCultureInfo(CMS.DocumentEngine.Internal.DocumentCultureDataInfo)">
            <summary>
            Deletes specified document culture data.
            </summary>
            <param name="data">Document culture data to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.DeleteDocumentCultureInfo(System.Int32)">
            <summary>
            Deletes document culture data with specified ID.
            </summary>
            <param name="dataId">Document culture data ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.BulkUpdateData(CMS.DataEngine.WhereCondition,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Updates the data based on the given where condition using a database query
            </summary>
            <param name="where">Where condition</param>
            <param name="values">New values for the data. Dictionary of [columnName] => [value]</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.SetInfo(CMS.DocumentEngine.Internal.DocumentCultureDataInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.ValidateCodeName(CMS.DocumentEngine.Internal.DocumentCultureDataInfo)">
            <summary>
            Validates the object code name. Returns true if the code name is valid.
            </summary>
            <param name="info">Object to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentCultureDataInfoProvider.CheckUniqueCodeName(CMS.DocumentEngine.Internal.DocumentCultureDataInfo)">
            <summary>
            Checks if the object has unique code name. Returns true if the object has unique code name.
            </summary>
            <param name="infoObj">Info object to check</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentFieldsInfo">
            <summary>
            Class providing access to document custom fields.
            </summary>
            <remarks>
            This class is intended for internal usage only.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.Clone">
            <summary>
            Creates a clone of document fields
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentFieldsInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentFieldsInfo"/> based on give class name.
            </summary>
            <param name="className">Class name of the document fields.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.#ctor(System.String,System.Data.DataRow)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentFieldsInfo"/> based on give class name and data.
            </summary>
            <param name="className">Class name of the document fields.</param>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.LoadData(CMS.DataEngine.LoadDataSettings)">
            <summary>
            Loads the object using the given settings.
            </summary>
            <param name="settings">Data settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.NewObject(CMS.DataEngine.LoadDataSettings)">
            <summary>
            Creates a new object from the given DataRow.
            </summary>
            <param name="settings">Data settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.New(System.String,System.Data.DataRow)">
            <summary>
            Creates new DocumentFieldsInfo instance which must inherit the DocumentFieldsInfo class.
            </summary>
            <param name="className">Class name in format application.class.</param>
            <param name="dataRow">Data row containing both tree node and coupled table.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.New(System.String,CMS.Base.IDataContainer)">
            <summary>
            Creates new document fields instance.
            </summary>
            <param name="className">Class name in format application.class.</param>
            <param name="data">Data container containing both tree node and coupled table.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.Initialize(System.String,System.Data.DataRow)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing document fields from data row.
            </summary>
            <param name="className">Document type name in format application.type.</param>
            <param name="dr">Data row containing all document data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfo.Initialize(System.String,CMS.Base.IDataContainer)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing document fields from data row.
            </summary>
            <param name="className">Document type name in format application.type.</param>
            <param name="data">Data container containing all document data.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider">
            <summary>
            Class for managing document custom fields.
            </summary>
            <remarks>
            This provider is not managed by the IoC container.
            </remarks>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.DOCUMENT_FIELDS_PREFIX">
            <summary>
            Document fields prefix for object type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.IsValid">
            <summary>
            Indicates if the provider instance is up-to-date and can be used to manage object instances.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.TypeInfos">
            <summary>
            Document fields TypeInfo's [className.ToLowerCSafe()] -> [TypeInfo].
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider"/> based on given class name.
            </summary>
            <param name="className">Class name of the document type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.GetDocumentFieldsInfo(System.Int32,System.String)">
            <summary>
            Returns document fields with specified ID.
            </summary>
            <param name="fieldsId">Document fields ID.</param>
            <param name="className">Class name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.GetDocumentFields(System.String)">
            <summary>
            Returns document fields object query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.DeleteDocumentFieldsInfo(CMS.DocumentEngine.Internal.DocumentFieldsInfo)">
            <summary>
            Deletes specified document fields.
            </summary>
            <param name="fields">Document fields to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.DeleteDocumentFieldsInfo(System.Int32,System.String)">
            <summary>
            Deletes document fields data with specified ID.
            </summary>
            <param name="fieldsId">Document fields data ID.</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.SetDocumentFieldsInfo(CMS.DocumentEngine.Internal.DocumentFieldsInfo)">
            <summary>
            Sets (updates or inserts) specified document fields.
            </summary>
            <param name="fields">Document fields to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.GetObjectQueryInternal">
            <summary>
            Gets the object query for the provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.GetClassName(System.String)">
            <summary>
            Gets document type class name from given object type.
            </summary>
            <param name="objectType">Object type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.GetObjectType(System.String)">
            <summary>
            Gets document type object type from given class name.
            </summary>
            <param name="className">Class name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.IsDocumentFieldsObjectType(System.String)">
            <summary>
            Indicates if given object type represents document type.
            </summary>
            <param name="objectType">Object type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.GetProviderObject(System.String)">
            <summary>
            Gets provider object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.LoadProviderInternal(System.String)">
            <summary>
            Loads document fields provider for given object type.
            </summary>
            <param name="objectType">Document fields object type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.InvalidateProvider(System.String)">
            <summary>
            Invalidates specific provider.
            </summary>
            <param name="objectType">Type of the object.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.CreateInfo(System.Data.DataRow,System.Boolean)">
            <summary>
            Gets new document fields instance.
            </summary>
            <param name="dr">Data row with the object data.</param>
            <param name="useGenerator">If true, the process allows using the generator to differentiate between particular info types based on data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.GetTypeInfo(System.String)">
            <summary>
            Returns the TypeInfo for specified class.
            </summary>
            <param name="className">Class name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear the class info's and properties lists of all object types.
            </summary>
            <param name="logTask">If true, web farm tasks are logged.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.InvalidateTypeInfo(System.String,System.Boolean)">
            <summary>
            Invalidates typeinfo specified by class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.ValidateClass(System.String)">
            <summary>
            Validates given class name if represents existing document type.
            </summary>
            <param name="className">Class name to validate.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.CreateTypeInfo(System.String)">
            <summary>
            Creates new typeinfo.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentNodeDataInfo">
            <summary>
            Class representing document tree structure data container.
            </summary>
            <remarks>
            This class is intended for internal usage only.
            </remarks>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.IsSecuredNode">
            <summary>
            Indicates if the security should be checked for this node. The 'null' value means that the value is inherited from the parent node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeName">
            <summary>
            Node name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeAlias">
            <summary>
            Node alias.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeAliasPath">
            <summary>
            Node alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeHasChildren">
            <summary>
            Indicates if node has child nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeHasLinks">
            <summary>
            Indicates if node has linked nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeID">
            <summary>
            Node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeParentID">
            <summary>
            Node parent ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeLevel">
            <summary>
            Node level in the tree hierarchy (starting from 0 for root node).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeSiteID">
            <summary>
            Node site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeOrder">
            <summary>
            Node order in sibling sequence (same level).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeOwner">
            <summary>
            User ID representing the node owner.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeSKUID">
            <summary>
            E-commerce SKU (product) ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeClassID">
            <summary>
            ID of a document type of this document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeACLID">
            <summary>
            ID of a access controller list assigned to the node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeIsACLOwner">
            <summary>
            Indicates if node owns its ACL item.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeLinkedNodeID">
            <summary>
            ID of a document to which this linked document is related.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeLinkedNodeSiteID">
            <summary>
            Site ID of a document to which this linked document is related.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeOriginalNodeID">
            <summary>
            Original node ID.
            </summary>
            <remarks>
            Represents <see cref="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeID"/> for standard document, <see cref="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeLinkedNodeID"/> for linked document. 
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeSiteName">
            <summary>
            Node site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.Site">
            <summary>
            Site of the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeClassName">
            <summary>
            Node class name in format application.class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.HasSKU">
            <summary>
            Indicates whether the document contains SKU data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.IsLink">
            <summary>
            Indicates whether the document is link to another document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.OriginalNodeSiteID">
            <summary>
            Original node site ID. Returns NodeSiteID for standard document, LinkedNodeSiteID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.NodeParent">
            <summary>
            Parent node instance.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentNodeDataInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.Insert">
            <summary>
            Data need to be inserted with parent specified.  Specify NodeParentID property or use Insert(DocumentNodeDataInfo parent) instead.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.Insert(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Inserts node data.
            </summary>
            <param name="parent">Parent node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.SetObject">
            <summary>
            Sets node data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.DeleteObject">
            <summary>
            Deletes node data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes object dependencies. First tries to execute removedependencies query, if not found, automatic process is executed.
            </summary>
            <param name="deleteAll">If false, only required dependencies are deleted, dependencies with default value are replaced with default value and nullable values are replaced with null.</param>
            <param name="clearHashtables">If true, hashtables of all objecttypes which were potentially modified are cleared.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified node column.
            </summary>
            <param name="columnName">Column name.</param>
            <param name="value">Value.</param>
            <returns>Returns true if the operation was successful.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.LoadDefaultData">
            <summary>
            Loads the default object data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.GetAliasPath">
            <summary>
            Gets the alias path from parent and node alias.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.GetSiteName">
            <summary>
            Gets site name. Throws exception when site is not specified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfo.InsertRootInternal">
            <summary>
            Inserts the root node data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider">
            <summary>
            Class providing document tree nodes management.
            </summary>
            <remarks>
            This class is intended for internal usage only.
            </remarks>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.SynchronizedLinkColumns">
            <summary>
            List of columns automatically synchronized between linked documents and their original.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.GetDocumentNodes">
            <summary>
            Returns document nodes object query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.GetDocumentNodeDataInfo(System.Int32)">
            <summary>
            Returns document node with specified ID.
            </summary>
            <param name="nodeId">Document node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.SetDocumentNodeDataInfo(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Sets (updates or inserts) specified document node.
            </summary>
            <param name="node">Document node to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.DeleteDocumentNodeDataInfo(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Deletes specified document node.
            </summary>
            <param name="node">Document node to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.DeleteDocumentNodeDataInfo(System.Int32)">
            <summary>
            Deletes document node with specified ID.
            </summary>
            <param name="nodeId">Document node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.BulkUpdateData(CMS.DataEngine.WhereCondition,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Updates the data based on the given where condition using a database query.
            </summary>
            <param name="where">Where condition.</param>
            <param name="values">New values for the data. Dictionary of [columnName] => [value].</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.SetInfo(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.InsertNodeDataInfoInternal(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Inserts new node data.
            </summary>
            <param name="node">Node data to insert.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.UpdateNodeDataInfoInternal(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Updates node data.
            </summary>
            <param name="node">Node data to update.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.DeleteInfo(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.EnsureDefaultData(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Ensures default data for the instance
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.EnsureACLOwnerFlag(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Ensures that the NodeIsACLOwner flag is properly set.
            </summary>
            <param name="node">Document node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.UpdateParentNodeHasChildrenFlag(System.Int32)">
            <summary>
            Updates NodeHasChildren flag only if there is no child node.
            </summary>
            <param name="parentId">Parent ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.EnsureParentNodeHasChildrenFlag(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Sets NodeHasChildren flag to true, if hasn't been set already.
            </summary>
            <param name="parent">Parent node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.EnsureOriginalNodeHasLinksFlag(System.Int32)">
            <summary>
            Sets NodeHasLinks flag to true, if hasn't been set already.
            </summary>
            <param name="originalNodeId">Original node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.UpdateLinks(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Updates the data in the linked documents.
            Update all nodes which are linked together, except current node which is expected to be already updated.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.UpdateOriginalNodeHasLinksFlag(System.Int32)">
            <summary>
            Updates NodeHasLinks flag only if there is no links.
            </summary>
            <param name="originalNodeId">Original node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.EnsureFieldValues(CMS.DocumentEngine.Internal.DocumentNodeDataInfo,CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Ensures special field values for node data during insertion.
            </summary>
            <param name="parent">Parent node.</param>
            <param name="node">Node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.EnsureNodeOriginalNodeID(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Ensures original node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.ValidateCodeName(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Validates the object code name. Returns true if the code name is valid.
            </summary>
            <param name="info">Object to check.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentNodeDataInfoProvider.CheckUniqueCodeName(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Checks if the object has unique code name. Returns true if the object has unique code name.
            </summary>
            <param name="infoObj">Info object to check.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.IDocumentCultureDataInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.Internal.DocumentCultureDataInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.IDocumentNodeDataInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.Internal.DocumentNodeDataInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs">
            <summary>
            Attachment send file event arguments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs.#ctor(CMS.DocumentEngine.CMSOutputAttachment,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs"/> class.
            </summary>
            <param name="attachment">Output attachment.</param>
            <param name="siteName">Site name.</param>
            <param name="isLiveSite">Indicates if handler requested on a live site.</param>
            <param name="isMultipart">Indicates whether it is multipart range request.</param>
            <param name="isRangeRequest">Indicates whether it is range request.</param>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs.Attachment">
            <summary>
            Attachment object for output.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs.SiteName">
            <summary>
            Site name of the site context of the request.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs.IsLiveSite">
            <summary>
            Indicates if live site mode.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs.IsMultipart">
            <summary>
            Indicates whether it is multipart range request.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.AttachmentSendFileEventArgs.IsRangeRequest">
            <summary>
            Indicates whether it is range request.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentEventsInternal">
            <summary>
            Document events for internal purposes.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.DocumentEventsInternal.GeneratePreviewLink">
            <summary>
            Fires during preview link generation.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever">
            <summary>
            Helps with retrieving <see cref="T:CMS.DataEngine.ISearchable"/> objects and <see cref="T:CMS.Search.SearchIndexInfo"/>s
            related to document search tasks.
            </summary>
            <seealso cref="M:CMS.Search.Internal.SearchablesRetrievers.Register``1(System.String)"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetSearchableObjects(CMS.Search.SearchIndexInfo)">
            <summary>
            Returns collection of all <see cref="T:CMS.DataEngine.ISearchable"/> objects for given <paramref name="indexInfo"/>.
            </summary>
            <param name="indexInfo"><see cref="T:CMS.Search.SearchIndexInfo"/> for which to return collection of <see cref="T:CMS.DataEngine.ISearchable"/>s.</param>
            <seealso cref="M:CMS.DataEngine.ISearchable.GetSearchDocument(CMS.DataEngine.ISearchIndexInfo)"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetRelevantIndexes(System.String,System.String)">
            <summary>
            Returns dataset of index IDs for specific type.
            </summary>
            <param name="taskType">Task type.</param>
            <param name="searchProvider">
            Defines search provider for which to return relevant indexes.
            If not defined then indexes for all search providers are returned.
            </param>
            <seealso cref="P:CMS.Search.SearchIndexInfo.IndexProvider"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetRelevantIndexes(CMS.DataEngine.ISearchable,System.String)">
            <summary>
            Gets the list of indexes relevant to the given object.
            </summary>
            <param name="searchObject">Search object.</param>
            <param name="searchProvider">
            Defines search provider for which to return relevant indexes.
            If not defined then indexes for all search providers are returned.
            </param>
            <seealso cref="P:CMS.Search.SearchIndexInfo.IndexProvider"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetRelevantIndexes(System.String,System.String,System.String)">
            <summary>
            Gets relevant indexes for given <paramref name="indexType"/>, <paramref name="siteName"/> and <paramref name="searchProvider"/>.
            </summary>
            <param name="indexType">Defines object type that index covers. Indexes with <see cref="P:CMS.Search.SearchIndexInfo.IndexType"/> that equals to this parameter are returned.</param>
            <param name="siteName">Only indexes on given site are checked. If not specified then indexes through all sites are checked if they are relevant.</param>
            <param name="searchProvider">
            Defines search provider for which to return relevant indexes.
            If not defined then indexes for all search providers are returned.
            </param>
            <seealso cref="P:CMS.Search.SearchIndexInfo.IndexProvider"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.PrepareBuildingValues(CMS.Search.SearchIndexInfo,System.Collections.Generic.List{System.Int32}@,System.Collections.Generic.List{System.String}@,CMS.Base.SafeDictionary{System.String,System.String}@,CMS.Base.SafeDictionary{System.String,System.String}@,System.String)">
            <summary>
            Prepares sites, cultures, allowed and excluded collections for partial or full rebuild.
            </summary>
            <param name="indexInfo">Search index</param>
            <param name="sites">List of sites</param>
            <param name="cultures">List of cultures</param>
            <param name="allowedNodes">List of allowed classes</param>
            <param name="excludedNodes">List of excluded classes</param>
            <param name="nodeAliasPath">Node alias path. If is specified, all allowed nodes must be beneath this path</param>
            <returns>Returns true if values are ready</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetSearchableObjects(CMS.Search.SearchIndexInfo,System.String,System.String)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ISearchable"/> objects for given <paramref name="nodeAliasPath"/>.
            </summary>
            <param name="index">Index for which to find <see cref="T:CMS.DataEngine.ISearchable"/> objects.</param>
            <param name="nodeAliasPath">Node alias path for which to find <see cref="T:CMS.DataEngine.ISearchable"/> objects.</param>
            <param name="siteName">Site for which to find <see cref="T:CMS.DataEngine.ISearchable"/> objects. By default are used sites from <paramref name="index"/>'s settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.ToSiteInfoEnumerable(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets enumeration of existing <see cref="T:CMS.SiteProvider.SiteInfo"/> objects for enumeration of <see cref="P:CMS.SiteProvider.SiteInfo.SiteID"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetSearchableObjectsInternal(CMS.Search.SearchIndexInfo,System.Collections.Generic.IEnumerable{CMS.SiteProvider.SiteInfo},System.Collections.Generic.IEnumerable{System.String},CMS.Base.SafeDictionary{System.String,System.String},CMS.Base.SafeDictionary{System.String,System.String})">
            <summary>
            Returns collection of <see cref="T:CMS.DataEngine.ISearchable"/>s for given <paramref name="indexInfo"/> and cms.document parameters.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetSearchDocumentsParams">
            <summary>
            Get search document parameters
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetSearchDocuments(CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.GetSearchDocumentsParams,System.Int32@)">
            <summary>
            Returns list of <see cref="T:CMS.DataEngine.ISearchable"/> objects (documents) for given index and document parameters
            </summary>
            <param name="documentsParameters">Search parameters</param>
            <param name="lastId">ID of last processed document</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.IsDocumentRelatedType(System.String)">
            <summary>
            Returns true of task type is related to document object
            </summary>
            <param name="taskType">Task type</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchablesRetriever.LogBatchStart(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Logs the start of batch processing.
            </summary>
            <param name="batchNumber">Number of batch</param>
            <param name="lastID">ID of last item that is not present in the batch</param>
            <param name="documentTypeCodeName">Code name of the document type</param>
            <param name="siteDisplayName">Display name of the site</param>
            <param name="linkedNodes">Indicates whether standard documents or linked documents are processed in the batch</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.AttachmentHandlerEvents">
            <summary>
            Events for document attachment handler.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.AttachmentHandlerEvents.SendFile">
            <summary>
            Fires when an attachment is being served either from cache or for the first time.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Internal.AttachmentHandlerEvents.ProcessRequest">
            <summary>
            Fires when the attachment handler request is being processed before the attachment is being processed and served.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.DocumentSearchTriggerFieldsHelper">
            <summary>
            Provides helper methods to determine if index update trigger field changed.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchTriggerFieldsHelper.TriggerFieldChanged(CMS.DocumentEngine.TreeNode,System.Collections.Generic.List{System.String})">
            <summary>
            Returns true if any field that should trigger index update is changed (checks fields defined in Class Search Settings).
            </summary>
            <param name="node">Document node</param>
            <param name="changedColumns">List of changed columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.DocumentSearchTriggerFieldsHelper.TriggerFieldChanged(CMS.DataEngine.BaseInfo,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Returns true if any field that should trigger index update is changed (checks fields defined in Class Search Settings).
            </summary>
            <param name="info">Info object</param>
            <param name="changedColumns">List of changed columns, if not provided, retrieves the list from the object</param>
            <param name="checkSpecialFields">If true, the special fields like (ClassSearchTitleColumn, etc.) are checked for changes</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PageTemplateConfiguration">
            <summary>
            Page template configuration for a MVC page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.PageTemplateConfiguration.Identifier">
            <summary>
            Identifier of the page template.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.PageTemplateConfiguration.ConfigurationIdentifier">
            <summary>
            Identifier of the page template configuration based on which the page was created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.PageTemplateConfiguration.Properties">
            <summary>
            Properties of the page template.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PageTemplateConfigurationForEmptyCultureVersionProvider">
            <summary>
            Provides the best template configuration for a new page culture version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PageTemplateConfigurationForEmptyCultureVersionProvider.Get(System.Int32,System.String)">
            <summary>
            Provides the best template configuration for a new page culture version.
            </summary>
            <param name="nodeId">Node ID.</param>
            <param name="defaultCulture">Culture code of the default culture.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PageTemplateConfigurationSerializer">
            <summary>
            Handles serialization and deserialization of page template configuration to/from JSON format.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PageTemplateConfigurationSerializer.Serialize(CMS.DocumentEngine.Internal.PageTemplateConfiguration)">
            <summary>
            Serializes page template configuration to JSON string.
            </summary>
            <param name="configuration">Page template configuration.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PageTemplateConfigurationSerializer.Deserialize(System.String)">
            <summary>
            Deserializes JSON string to page template configuration.
            </summary>
            <param name="json">JSON string.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PageTemplateWebServiceUrlProvider">
            <summary>
            Encapsulates methods related to providing web service URLs of MVC page templates.  
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PageTemplateWebServiceUrlProvider.#ctor(CMS.Base.IUserInfo)">
            <summary>
            Creates a new instance of <see cref="T:CMS.DocumentEngine.Internal.PageTemplateWebServiceUrlProvider"/>.
            </summary>
            <param name="user">The user used to authenticate the request.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PageTemplateWebServiceUrlProvider.GetTemplatesEndpointUrl(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Gets URL of an endpoint which provides definition of allowed page templates for the given parent node.
            </summary>
            <param name="parentNode">The parent node for which the endpoint retrieves filtered page templates.</param>
            <param name="pageType">The page type for which the endpoint retrieves filtered page templates.</param>
            <param name="culture">The culture for which the endpoint retrieves filtered page templates.</param>
            <returns>A string representation of the endpoint URL</returns>
            <exception cref="T:System.InvalidOperationException">Site's <see cref="P:CMS.SiteProvider.SiteInfo.SitePresentationURL"/> is not in correct format.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="parentNode"/>, <paramref name="pageType"/> or <paramref name="culture"/> is <c>null</c>.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.AlternativeUrlHelper">
            <summary>
            Helper methods for alternative URLs.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.IsAlternativeUrlUIEnabled(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if the alternative URLs UI is enabled for given site.
            </summary>
            <param name="site">Site context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetMainDocument(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns main document of given <paramref name="alternativeUrl"/>.
            </summary>
            <param name="alternativeUrl"></param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="alternativeUrl"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetMainDocumentInternal(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns main document of given <paramref name="alternativeUrl"/>.
            </summary>
            <param name="alternativeUrl"></param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.IsAlternativeUrlsSiteConflict(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Checks whether the given site contains any of the alternative URLs defined for the given page or its child pages in all cultures.
            </summary>
            <param name="node">Page for which alternative URLs will be checked.</param>
            <param name="siteId">ID of the site to check for alternative URLs.</param>
            <returns>True if the site has at least one identical alternative URL.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="node"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="siteId"/> is invalid.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.IsAlternativeUrlsSiteConflictInternal(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Checks whether the given site contains any of the alternative URLs defined for the given page or its child pages in all cultures.
            </summary>
            <param name="node">Page for which alternative URLs will be checked.</param>
            <param name="siteId">ID of the site to check for alternative URLs.</param>
            <returns>True if the site has at least one identical alternative URL.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingAlternativeUrl(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> that has the same URL on the same site as given <paramref name="alternativeUrl"/>.
            </summary>
            <param name="alternativeUrl">Alternative URL to find conflict with.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingAlternativeUrlInternal(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> that has the same URL on the same site as given <paramref name="alternativeUrl"/>.
            </summary>
            <param name="alternativeUrl">Alternative URL to find conflict with.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingAlternativeUrl(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns alternative URL that is in conflict with given <paramref name="node"/>.
            Alternative URL is in conflict with the <paramref name="node"/> when their URLs match.
            </summary>
            <param name="node">Page for which to find an alternative URL it might be in conflict with.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingAlternativeUrlInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns alternative URL that is in conflict with given <paramref name="node"/>.
            Alternative URL is in conflict with the <paramref name="node"/> when their URLs match.
            </summary>
            <param name="node">Page for which to find an alternative URL it might be in conflict with.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingPage(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns a page that is in conflict with given <paramref name="alternativeUrlInfo"/>.
            Page is in conflict with the <paramref name="alternativeUrlInfo"/> when their URLs match.
            </summary>
            <param name="alternativeUrlInfo">Alternative URL for which to find a page it might be in conflict with.</param>
            <returns>Page that is in conflict with <paramref name="alternativeUrlInfo"/>.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetCollisionDataForMainUrl(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns collision data for page that is in conflict with given <paramref name="alternativeUrlInfo"/>.
            </summary>
            <param name="alternativeUrlInfo">Alternative URL for which to find a page it might be in conflict with.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingPageInternal(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns a page that is in conflict with given <paramref name="alternativeUrl"/>.
            Page is in conflict with the <paramref name="alternativeUrl"/> when their URLs match.
            </summary>
            <param name="alternativeUrl">Alternative URL for which to find a page it might be in conflict with.</param>
            <returns>Page that is in conflict with <paramref name="alternativeUrl"/>.</returns>
            <seealso cref="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingPage(CMS.DocumentEngine.AlternativeUrlInfo)"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.FindConflictingPage(CMS.DocumentEngine.DocumentQuery,System.String[])">
            <summary>
            Returns a page that is in conflict with <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> represented by <paramref name="alternativeUrlSegments"/>.
            </summary>
            <param name="documentQuery">Document query used for retrieving pages that might be in conflict with <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> represented by <paramref name="alternativeUrlSegments"/>.</param>
            <param name="alternativeUrlSegments">
            Represents alternative URL to be checked against the pages.
            <see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> is split into segments e.g. alternative URL 'short/example/url' is split into ["short","example","url"]. 
            </param>
            <returns> Returns a page that s in conflict with alternative URL, otherwise returns null.</returns>
            <seealso cref="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.IsInCollision(CMS.DocumentEngine.TreeNode,System.String[])"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.UrlMatchesConstraint(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns <c>true</c> if <paramref name="alternativeUrl"/> matches allowed alternative URL constraint defined in settings application.
            </summary>
            <param name="alternativeUrl"><see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> to be match against the pattern constraint.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="alternativeUrl"/> is <c>null</c>.</exception>
            <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Thrown when matching pattern constraint against <see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> takes too long.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.UrlMatchesConstraintInternal(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns <c>true</c> if <paramref name="alternativeUrl"/> matches allowed alternative URL constraint defined in settings application.
            </summary>
            <param name="alternativeUrl"><see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> to be match against the pattern constraint.</param>
            <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Thrown when matching pattern constraint against <see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> takes too long.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingExcludedUrl(CMS.DocumentEngine.NormalizedAlternativeUrl,System.Int32)">
            <summary>
            Returns conflicting URL when given <paramref name="alternativeUrl"/> matches any excluded URL defined in settings application or any system URL.
            </summary>
            <remarks>The <paramref name="alternativeUrl"/> is matched against global settings and site settings identified by <paramref name="siteId"/>.</remarks>
            <param name="alternativeUrl"><see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> to be matched against alternative URL constraints.</param>
            <param name="siteId">Identifier of the site to which the URL belongs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.MatchesAnyExcludedUrl(CMS.DocumentEngine.NormalizedAlternativeUrl,System.Int32)">
            <summary>
            Returns <c>true</c> if <paramref name="alternativeUrl"/> matches any excluded URL defined in settings application.
            </summary>
            <remarks>The <paramref name="alternativeUrl"/> is matched against global settings and site settings identified by <paramref name="siteId"/>.</remarks>
            <param name="alternativeUrl"><see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> to be matched against alternative URL constraints.</param>
            <param name="siteId">Identifier of the site to which the URL belongs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.MatchesAnyExcludedUrlInternal(CMS.DocumentEngine.NormalizedAlternativeUrl,System.Int32)">
            <summary>
            Returns <c>true</c> if <paramref name="alternativeUrl"/> matches any excluded URL defined in settings application.
            </summary>
            <remarks>The <paramref name="alternativeUrl"/> is matched against global settings and site settings identified by <paramref name="siteId"/>.</remarks>
            <param name="alternativeUrl"><see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> to be matched against alternative URL constraints.</param>
            <param name="siteId">Identifier of the site to which the URL belongs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetConflictingExcludedUrlInternal(CMS.DocumentEngine.NormalizedAlternativeUrl,System.Int32)">
            <summary>
            Returns conflicting URL when given <paramref name="alternativeUrl"/> matches any excluded URL defined in settings application or any system URL.
            </summary>
            <remarks>The <paramref name="alternativeUrl"/> is matched against global settings and site settings identified by <paramref name="siteId"/>.</remarks>
            <param name="alternativeUrl"><see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> to be matched against alternative URL constraints.</param>
            <param name="siteId">Identifier of the site to which the URL belongs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.NormalizeAlternativeUrl(System.String)">
            <summary>
            Ensures correct format of the <paramref name="alternativeUrl"/>.
            </summary>
            <remarks>
            <para>
            Following rules are applied
            <para>
            Leading/trailing whitespace characters are trimmed.
            </para>
            <para>
            Leading tilde with slash or leading slash is removed.
            </para>
            <para>
            Multiple slashes are replaced by single slash.
            </para>
            <para>
            Trailing slash is removed.
            </para>
            <para>
            Query string and anchor is removed.
            </para>
            <para>
            Value is decoded.
            </para>
            </para>
            </remarks>
            <param name="alternativeUrl">Url in string to be normalized.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.NormalizeAlternativeUrlInternal(System.String)">
            <summary>
            Ensures correct format of the <paramref name="alternativeUrl"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetDocumentIdentification(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Returns human-readable document identification for given <paramref name="alternativeUrl"/>.
            </summary>
            <returns>
            String value in form 'document name path' (document culture).
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetDocumentIdentification(System.String,System.String)">
            <summary>
            Returns human-readable document identification for given <paramref name="documentName"/> and <paramref name="documentCulture"/>.
            </summary>
            <returns>
            String value in form 'document name' (document culture).
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetDocumentIdentificationInternal(System.String,System.String)">
            <summary>
            Returns human-readable document identification for given <paramref name="documentName"/> and <paramref name="documentCulture"/>.
            </summary>
            <returns>
            String value in form 'document name' (document culture).
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.IsUrlPatternSuspect(CMS.DataEngine.DataClassInfo,System.String[],System.Collections.Generic.IEnumerable{CMS.DataEngine.ColumnDefinition})">
            <summary>
            Checks whether <paramref name="dataClassInfo"/>'s URL pattern might be resolved to an alternative URL composed of <paramref name="alternativeUrlSegments"/>.
            Returns a <see cref="T:CMS.DataEngine.WhereCondition"/> to be used for a <see cref="T:CMS.DocumentEngine.DocumentQuery"/> to locate documents that might be in conflict with alternative URL.
            Returns null, if the <paramref name="dataClassInfo"/>'s URL pattern will not be in conflict with alternative URL.  
            </summary>
            <example>
            <para>
            URL pattern contains a constant part e.g. /Articles/{%NodeGuid%} and alternative URL is like /News/Example
            then we do not need to check pages of that page type.
            </para>
            <para>
            {%NodeName%}/{%DocumentName%}/News might be a suspect when alternative URL is /Awesome/Fresh/News.
            </para>
            <para>
            {%NodeId%}/{%NodeGuid%}/News cannot be a suspect when alternative URL is /Awesome/Fresh/News, because 'Awesome'
            cannot be converted to int supposed that {%NodeId%} macro is backed by integer type. {%NodeGuid%} is also incompatible with 'Fresh'.
            </para>
            </example>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.TryConvertToDatabaseValue(System.String,CMS.DataEngine.ColumnDefinition,System.Object@)">
            <summary>
            Tries to convert the value from the alternative URL's segment to a type defined by <paramref name="columnDefinition"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetPageDefaultColumnDefinitions">
            <summary>
            Returns columns definitions for a page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.IsInCollision(CMS.DocumentEngine.TreeNode,System.String[])">
            <summary>
            Returns true, if <paramref name="page"/> is in conflict with alternative URL represented by <paramref name="alternativeUrlSegments"/>.
            </summary>
            <param name="page">Page to be checked if it is in conflict with given alternative URL.</param>
            <param name="alternativeUrlSegments">
            Represents alternative URL to be checked against the <paramref name="page"/>.
            <see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> is split into segments e.g. alternative URL 'short/example/url' is split into ["short","example","url"]. 
            </param>
            <seealso cref="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.FindConflictingPage(CMS.DocumentEngine.DocumentQuery,System.String[])"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.GetPageTypes">
            <summary>
            Returns collection of page types with URL pattern 
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.IsAllowedPathColumn(System.String)">
            <summary>
            Indicates whether the given <paramref name="columnName"/> belongs to a limited set of page columns which contain a path.
            </summary>
            <param name="columnName">Column name.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.ExcludedAlternativeUrlEvaluator">
            <summary>
            Class for evaluating excluded alternative URLs in settings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.ExcludedAlternativeUrlEvaluator.GetMatchingExcludedUrl(System.String,System.String)">
            <summary>
            Processes <paramref name="excludedUrls"/> from settings and returns excluded URL that matches given <paramref name="alternativeUrl"/>.
            </summary>
            <param name="alternativeUrl">Alternative URL for which matching excluded URL is found.</param>
            <param name="excludedUrls">Excluded URLs to which alternative URL is matched.</param>
            <returns>Matched excluded URL or <c>String.Empty</c> if no match is found.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.GeneratePreviewLinkEventArgs">
            <summary>
            Encapsulates event arguments to generate preview link for a <see cref="T:CMS.DocumentEngine.TreeNode"/>.
            </summary>
            <seealso cref="T:CMS.DocumentEngine.Internal.PreviewLinkGenerator"/>
            <seealso cref="T:CMS.DocumentEngine.Internal.GeneratePreviewLinkHandler"/>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.GeneratePreviewLinkEventArgs.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes an instance of <see cref="T:CMS.DocumentEngine.Internal.GeneratePreviewLinkEventArgs"/>.
            </summary>
            <param name="page">Defines a <see cref="T:CMS.DocumentEngine.TreeNode"/> for which the preview link is generated.</param>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.GeneratePreviewLinkEventArgs.Page">
            <summary>
            Returns a <see cref="T:CMS.DocumentEngine.TreeNode"/> for which the preview link is generated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.GeneratePreviewLinkEventArgs.QueryStringParameters">
            <summary>
            Defines query string parameters to add the preview link.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.GeneratePreviewLinkHandler">
            <summary>
            Handler for event raised during the preview link generation to be decorated.
            </summary>
            <seealso cref="T:CMS.DocumentEngine.Internal.PreviewLinkGenerator"/>
            <seealso cref="T:CMS.DocumentEngine.Internal.GeneratePreviewLinkEventArgs"/>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.IDefaultPreferredCultureEvaluator">
            <summary>
            Interface for default preferred culture evaluation.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.IDefaultPreferredCultureEvaluator.Evaluate">
            <summary>
            Evaluates the best matching preferred culture code. Culture is obtained with following priorities:
                - Site domain alias visitor culture
                - Site default visitor culture
                - User preferred content culture
                - Browser culture
                - Default culture (from application settings)
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.IPageByUrlRetriever">
            <summary>
            Encapsulates retrieving of a page based on virtual path.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.IPageByUrlRetriever.TryRetrieve(System.String,CMS.DataEngine.SiteInfoIdentifier,CMS.DocumentEngine.TreeNode@)">
            <summary>
            Tries to retrieve a page based on given <paramref name="url"/>.
            </summary>
            <param name="url">URL of a page to retrieve.</param>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="page">If successful, represents a page available under given URL.</param>
            <returns>Returns <c>true</c> in case a page with matching URL was found.</returns>
            <remarks>The method reflects router mode setting. In case of <see cref="F:CMS.DocumentEngine.Routing.PageRoutingModeEnum.Custom"/> mode
            the method may not be able to find a corresponding page if URL pattern contains a complex macro.</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.NormalizedUrlPath">
            <summary>
            Normalized URL path used for routing feature.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.NormalizedUrlPath.Path">
            <summary>
            Gets normalized URL path.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NormalizedUrlPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.DocumentEngine.Internal.NormalizedUrlPath"/>.
            </summary>
            <param name="normalizedUrlPath">URL path in normalized state.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.NormalizedUrlPath.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PageByUrlRetriever">
            <summary>
            Encapsulates retrieving of a page based on virtual path.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PageByUrlRetriever.TryRetrieve(System.String,CMS.DataEngine.SiteInfoIdentifier,CMS.DocumentEngine.TreeNode@)">
            <inheritdoc/>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PageUrlDataContext">
            <summary>
            URL Data context of currently processed page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.PageUrlDataContext.CultureCode">
            <summary>
            Gets culture code representing the language version of currently processed page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.PageUrlDataContext.RedirectionPath">
            <summary>
            Gets the redirection path for currently processed page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Internal.PageUrlDataContext.RedirectionPresentationUrl">
            <summary>
            Gets the redirection presentation URL for currently processed page.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PageUrlPathNormalizer">
            <summary>
            Normalizes URL for routing feature.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PageUrlPathNormalizer.Normalize(System.String)">
            <summary>
            Ensures correct format of the <paramref name="urlPath"/>.
            </summary>
            <remarks>
            <para>
            Following rules are applied
            <para>
            Multiple slashes are replaced by single slash.
            </para>
            <para>
            Trailing slash is removed.
            </para>
            <para>
            Query string and anchor is removed.
            </para>
            </para>
            </remarks>
            <param name="urlPath">URL path.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PresentationUrlRetriever">
            <summary>
            Class to retrieve site presentation URL.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PresentationUrlRetriever.RetrieveForAdministration(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Retrieves site presentation URL for given culture (without trailing '/') in context of current request URL to
            prefer presentation URL from administration site domain alias for administration domain requests.
            </summary>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="cultureCode">Culture for which the presentation URL should be returned. If not provided site default culture is used.</param>
            <remarks>The administration site domain alias presentation URLs are preferred to support different presentation URLs for different stages or local development.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PresentationUrlRetriever.Retrieve(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Gets site presentation URL for given culture (without trailing '/').
            </summary>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="cultureCode">Culture for which the presentation URL should be returned.</param>
            <remarks> 
            When the content culture is specified by domain based on site settings the culture is used to get 
            respective presentation URL from site domain alias.
            If the <paramref name="cultureCode"/> is not provided site presentation URL is always used.
            </remarks>
        </member>
        <member name="T:CMS.DocumentEngine.Internal.PreviewLinkGenerator">
            <summary>
            Generates preview link for a page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PreviewLinkGenerator.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Internal.PreviewLinkGenerator"/> class.
            </summary>
            <param name="page">Page for which the preview link should be generated.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PreviewLinkGenerator.GeneratePreviewModeUrl(System.Guid,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Generates preview mode URL for the specified page and user.
            </summary>
            <param name="userGuid">User GUID to be stored in the preview link URL. If left empty, the user name is not stored in the generated URL.</param>
            <param name="readonlyMode">Indicates if read-only mode should be enabled to disallow modify actions and POST requests.</param>
            <param name="embededInAdministration">Indicates if page is embedded in administration inside an iframe.</param>
            <param name="queryString">Optional additional query string parameters.</param>
            <param name="cultureCode">Culture code for which the preview link should be generated.</param>
            <remarks>
            Preview mode is used for the page builder and the preview tab.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PreviewLinkGenerator.GeneratePreviewLinkUrl(System.Guid,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Generates preview link URL for specified page and user.
            </summary>
            <param name="userGuid">User GUID to be stored in the preview link URL. If left empty, the user name is not stored in the generated URL.</param>
            <param name="queryString">Optional additional query string parameters.</param>
            <param name="cultureCode">Culture code for which the preview link should be generated.</param>
            The <paramref name="cultureCode"/> can differ from the page culture in case of combine with default culture feature.
            <remarks>
            Preview link URL can be used by external users. This URL does not need additional authentization.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Internal.PreviewLinkGenerator.DecorateUrlWithQueryStringParameters(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Decorates <paramref name="url"/> with query strings.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAttachment">
            <summary>
            Represents a document attachment regardless whether it is a current version or not.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.WrappedInfo">
            <summary>
            Wrapped info object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.WrappedAttachment">
            <summary>
            Wrapped attachment
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentName">
            <summary>
            Gets the file name of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentExtension">
            <summary>
            Gets the file name extension of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentSize">
            <summary>
            Gets the size, in bytes, of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentMimeType">
            <summary>
            Gets the MIME type of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentBinary">
            <summary>
            Gets the binary content of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentImageWidth">
            <summary>
            Gets the width, in pixels, of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentImageHeight">
            <summary>
            Gets the height, in pixels, of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentGUID">
            <summary>
            Gets the globally unique identifier of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentLastModified">
            <summary>
            Gets the date and time when the attachment or attachment version was last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentHash">
            <summary>
            Gets the string representation of the attachment or attachment version hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentTitle">
            <summary>
            Gets the title of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentDescription">
            <summary>
            Gets the description of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentSiteID">
            <summary>
            Attachment site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentDocumentID">
            <summary>
            Related document Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentVariantDefinitionIdentifier">
            <summary>
            Text identification of used variant definition.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentVariantParentID">
            <summary>
            Attachment variant parent ID.
            </summary>
            <remarks>
            If attachment is history version, points to attachment history (AttachmentHistoryInfo), otherwise points to publishes attachment (AttachmentInfo)
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentFormGUID">
            <summary>
            Indicates that the attachment is temporary and it is bound to the specific instance of form with this GUID.
            </summary>
            <remarks>
            Temporary attachments are not versioned, therefore this property always empty guid in case of attachment version.
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.ID">
            <summary>
            Attachment ID.
            </summary>
            <remarks>
            If attachment is history version, returns the history ID, if the attachment is published attachment, returns attachment ID
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentID">
            <summary>
            Gets the identifier of the published attachment.
            </summary>
            <remarks>
            The identifier of the attachment that is versioned is 0.
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentHistoryID">
            <summary>
            Gets the identifier of the attachment version.
            </summary>
            <remarks>
            The identifier of the attachment that is not versioned is 0.
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentVersionHistoryID">
            <summary>
            Attachment version history ID for latest version attachments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAttachment.AttachmentUrl">
            <summary>
            Attachment URL - for attachment information transfer purposes, not saved to the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentAttachment"/> class
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.#ctor(CMS.DocumentEngine.IAttachment)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentAttachment"/> class with the specified attachment or attachment version.
            </summary>
            <param name="attachment">The attachment or attachment version.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="attachment"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentAttachment"/> class with the specified attachment or attachment version data.
            </summary>
            <param name="dr">Data row</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.LoadWrappedData(CMS.Base.IDataContainer)">
            <summary>
            Loads wrapped info data from the given data source.
            </summary>
            <param name="data">Source data to load.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.NewObject(CMS.DataEngine.LoadDataSettings)">
            <summary>
            Creates a new object from the given DataRow
            </summary>
            <param name="settings">Data settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.GetAttachmentInfo">
            <summary>
            Gets the attachment info object with the attachment data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.EnsureSearchContent(CMS.Search.ExtractionContext,CMS.DataEngine.ISearchFields)">
            <summary>
            Returns the search content of the attachment (including names, title, description and extracted content of the attachment binary data) which should be included to the content field of the SearchDocument.
            Caches the extracted value to the AttachmentSearchContent field if called for the first time (calls AttachmentInfoProvider.SetAttachmentInfo(this, false) in this case to save to value to the DB).
            </summary>
            <param name="context">Extration context passed to the text extractors</param>
            <param name="searchFields">Search fields collection that can be extended by extractors (DOES NOT modify the content field, this is dealt with separately - as a return value of this method)</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.op_Explicit(CMS.DocumentEngine.AttachmentInfo)~CMS.DocumentEngine.DocumentAttachment">
            <summary>
            Implicit operator to convert AttachmentInfo to Attachment container
            </summary>
            <param name="attachment">Attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.op_Explicit(CMS.DocumentEngine.AttachmentHistoryInfo)~CMS.DocumentEngine.DocumentAttachment">
            <summary>
            Implicit operator to convert AttachmentHistoryInfo to Attachment container
            </summary>
            <param name="attachmentHistory">Attachment</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAttachmentExtensions">
            <summary>
            Extension methods for attachment.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentExtensions.GetVariant(CMS.DocumentEngine.DocumentAttachment,System.String)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.DocumentAttachment"/> that represents variant of the given attachment. The variant is specified by <paramref name="definitionIdentifier"/> parameter.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when either of the parameters are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="definitionIdentifier"/> is empty.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentExtensions.GenerateVariant(CMS.DocumentEngine.DocumentAttachment,CMS.ResponsiveImages.IVariantContext,System.String)">
            <summary>
            Generates single image variant for given attachment. The variant is specified by <paramref name="definitionIdentifier"/> parameter.
            </summary>
            <remarks>Deletes an existing variant if the given variant definition is no longer applicable on the attachment.</remarks>
            <param name="attachment">Document attachment.</param>
            <param name="context">Variant processing context.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when either of the parameters are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="definitionIdentifier"/> is empty.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentExtensions.GenerateAllVariants(CMS.DocumentEngine.DocumentAttachment,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates all image variants for given attachment overwriting existing variants.
            </summary>
            <remarks>Only applicable variants will be generated. Variant definitions which are no more applicable to the attachment will be deleted.</remarks>
            <param name="attachment">Document attachment.</param>
            <param name="context">Variant processing context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachment"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentExtensions.GenerateMissingVariants(CMS.DocumentEngine.DocumentAttachment,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates attachment image variants which were not yet generated.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="context">Variant processing context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachment"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentExtensions.Load(CMS.DocumentEngine.DocumentAttachment,CMS.DocumentEngine.AttachmentInfo)">
            <summary>
            Loads wrapped attachment from a given source.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="sourceAttachment">Attachment info to load.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentExtensions.Load(CMS.DocumentEngine.DocumentAttachment,CMS.DocumentEngine.AttachmentHistoryInfo,System.Int32)">
            <summary>
            Loads wrapped attachment from a given source.
            </summary>
            <param name="attachment">Document attachment.</param>
            <param name="sourceAttachment">Attachment history info to load.</param>
            <param name="versionHistoryId">Version history ID in context of which the attachment history is loaded.</param>
        </member>
        <member name="T:CMS.DocumentEngine.IAttachment">
            <summary>
            Attachment interface to unify access to attachment objects.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentName">
            <summary>
            Gets the file name of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentExtension">
            <summary>
            Gets the file name extension of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentSize">
            <summary>
            Gets the size, in bytes, of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentMimeType">
            <summary>
            Gets the MIME type of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentBinary">
            <summary>
            Gets the binary content of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentImageWidth">
            <summary>
            Gets the width, in pixels, of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentImageHeight">
            <summary>
            Gets the height, in pixels, of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentGUID">
            <summary>
            Gets the globally unique identifier of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentLastModified">
            <summary>
            Gets the date and time when the attachment or attachment version was last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentHash">
            <summary>
            Gets the string representation of the attachment or attachment version hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentTitle">
            <summary>
            Gets the title of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentDescription">
            <summary>
            Gets the description of the attachment or attachment version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is an unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentDocumentID">
            <summary>
            Related document Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentSiteID">
            <summary>
            Attachment site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentVariantDefinitionIdentifier">
            <summary>
            Text identification of used variant definition.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IAttachment.AttachmentVariantParentID">
            <summary>
            Attachment variant parent ID.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IAttachmentInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TemporaryAttachmentsCleaner">
            <summary>
            Provides an ITask interface for the temporary attachments deletion.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TemporaryAttachmentsCleaner.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the purge action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryInfoVariantGenerator">
            <summary>
            Represents an attachment variant generator for <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoVariantGenerator.#ctor(CMS.DocumentEngine.IAttachmentHistoryInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfoVariantGenerator"/> class.
            </summary>
            <param name="attachmentHistoryInfoProvider">Provider for <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/> management.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachmentHistoryInfoProvider"/> is null.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentInfoVariantGenerator">
            <summary>
            Represents an attachment variant generator for <see cref="T:CMS.DocumentEngine.AttachmentInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoVariantGenerator.#ctor(CMS.DocumentEngine.IAttachmentInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.AttachmentInfoVariantGenerator"/> class.
            </summary>
            <param name="attachmentInfoProvider">Provider for <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> management.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachmentInfoProvider"/> is null.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentVariantGenerator`1">
            <summary>
            Represents a base generator implementation capable of generating variants for attachments.
            </summary>
            <typeparam name="TAttachment">Type for which the generator handles variants.</typeparam>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.GetAttachmentVariants(`0)">
            <summary>
            Returns all variants for attachment.
            </summary>
            <param name="attachment">Attachment object.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.GetVariant(`0,System.String)">
            <summary>
            Returns an attachment variant.
            </summary>
            <param name="attachment">Attachment for which the variant should be returned.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <returns>Returns an attachment variant or <c>null</c> if variant does not exist yet.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.GenerateVariant(`0,CMS.ResponsiveImages.IVariantContext,System.String)">
            <summary>
            Generates attachment variant.
            </summary>
            <param name="attachment">Attachment for which the variant should be generated.</param>
            <param name="context">Variant processing context.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <returns>Generated image variant for the attachment or <c>null</c> if variant did not generate.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.GenerateAllVariants(`0,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates all attachment variants.
            </summary>
            <param name="attachment">Attachment for which the variants should be generated.</param>
            <param name="context">Variant processing context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.GenerateMissingVariants(`0,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates all missing attachment variants.
            </summary>
            <param name="attachment">Attachment for which the missing  variants should be generated.</param>
            <param name="context">Variant processing context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.CreateVariantFromMainAttachment(`0,System.String)">
            <summary>
            Creates a new variant attachment from the main attachment into which the generated attachment variant binary data will be saved.
            </summary>
            <param name="attachment">Main attachment that contains the data from which the variant should generate.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.PrepareMissingVariants(`0,CMS.ResponsiveImages.IVariantContext,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a collection of missing attachment variants to be saved to database.
            </summary>
            <param name="mainAttachment">Main Attachment.</param>
            <param name="context">Variant processing context.</param>
            <param name="existingVariantDefinitionIdentifiers">Collection of existing variant definition identifiers.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.PrepareVariant(`0,CMS.ResponsiveImages.IVariantContext,System.String,`0)">
            <summary>
            Prepares variant to be saved to database.
            </summary>
            <param name="mainAttachment">Main Attachment.</param>
            <param name="context">Variant processing context.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <param name="existingVariant">Attachment on which the variant is created.</param>
            <exception cref="T:CMS.ResponsiveImages.ImageFilterException">Thrown when an error occurs during a filter application.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.PrepareAllVariants(`0,CMS.ResponsiveImages.IVariantContext,System.Collections.Generic.ICollection{`0})">
            <summary>
            Returns a collection of all attachment variants to be saved to database.
            </summary>
            <param name="mainAttachment">Main Attachment.</param>
            <param name="context">Variant processing context.</param>
            <param name="existingVariants">Collection of all existing variants.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.ResetVariantProperties(`0)">
            <summary>
            Reset properties of <paramref name="attachment"/> which are not relevant for Attachment variant.
            </summary>
            <param name="attachment"></param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.CreateImageContainer(`0,CMS.ResponsiveImages.ImageMetadata)">
            <summary>
            Creates <see cref="T:CMS.ResponsiveImages.ImageContainer"/> instance expanded with data from <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> object.
            </summary>
            <param name="attachment">Attachment object.</param>
            <param name="metadata">Attachment metadata.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.CreateImageMetadata(`0)">
            <summary>
            Creates <see cref="T:CMS.ResponsiveImages.ImageMetadata"/> instance expanded with data from <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> object.
            </summary>
            <param name="attachment">Attachment object.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantGenerator`1.CopyDataFromImageContainerToAttachment(CMS.ResponsiveImages.ImageContainer,`0)">
            <summary>
            Copies data from <see cref="T:CMS.ResponsiveImages.ImageContainer"/> object to <see cref="T:CMS.DocumentEngine.IAttachment"/> object specified by <paramref name="attachment"/> parameter.
            </summary>
            <param name="container">Image container object.</param>
            <param name="attachment">Attachment object whose data is copied.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentVariantContext">
            <summary>
            Image context for attachment image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentVariantContext.Node">
            <summary>
            Parent document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentVariantContext.AliasPath">
            <summary>
            Returns the document alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentVariantContext.SiteName">
            <summary>
            Returns the document site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentVariantContext.ClassName">
            <summary>
            Returns the document class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantContext.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a new instance of the <see cref="T:CMS.DocumentEngine.AttachmentVariantContext" /> class.
            </summary>
            <param name="node">Parent page.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentVariantContextScope">
            <summary>
            Simplifies checking attachment variant context.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantContextScope.CheckContext(CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Checks the given attachment variant context. Returns true if the context matches the defined filter.
            </summary>
            <param name="context">Variant processing context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantContextScope.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Defines the path limitation of the allowed scope to match.
            </summary>
            <param name="path">Node alias path.</param>
            <param name="type">Path type to define selection scope. Default value is <see cref="F:CMS.DocumentEngine.PathTypeEnum.Section"/>.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantContextScope.OnSite(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Defines the site of the allowed scope to match.
            </summary>
            <param name="siteIdentifier">Site identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentVariantContextScope.Type(System.String)">
            <summary>
            Defines the page type of allowed scope to match.
            </summary>
            <param name="type">Class name of the page type.</param>
        </member>
        <member name="T:CMS.DocumentEngine.IAttachmentVariantGenerator`1">
            <summary>
            Represents a generator capable of generating variants for attachments.
            </summary>
            <typeparam name="TAttachment">Type for which the generator handles variants.</typeparam>
        </member>
        <member name="M:CMS.DocumentEngine.IAttachmentVariantGenerator`1.GetVariant(`0,System.String)">
            <summary>
            Returns an attachment variant.
            </summary>
            <param name="attachment">Attachment for which the variant should be returned.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <returns>Returns an attachment variant or <c>null</c> if variant does not exist yet.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IAttachmentVariantGenerator`1.GenerateVariant(`0,CMS.ResponsiveImages.IVariantContext,System.String)">
            <summary>
            Generates attachment variant.
            </summary>
            <param name="attachment">Attachment for which the variant should be generated.</param>
            <param name="context">Variant processing context.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <returns>Generated image variant for the attachment or <c>null</c> if variant did not generate.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IAttachmentVariantGenerator`1.GenerateAllVariants(`0,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates all attachment variants.
            </summary>
            <param name="attachment">Attachment for which the variants should be generated.</param>
            <param name="context">Variant processing context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.IAttachmentVariantGenerator`1.GenerateMissingVariants(`0,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates all missing attachment variants.
            </summary>
            <param name="attachment">Attachment for which the missing  variants should be generated.</param>
            <param name="context">Variant processing context.</param>
        </member>
        <member name="T:CMS.DocumentEngine.CombinedTreeNodeCollection">
            <summary>
            Combined collection of documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CombinedTreeNodeCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollection`1">
            <summary>
            Generic strongly typed info object collection
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection`1.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection`1.GetEnumerator">
            <summary>
            Gets the strongly typed enumerator for the collection
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollection">
            <summary>
            Document collection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.SiteName">
            <summary>
            Site name of the documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.AliasPath">
            <summary>
            Alias path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.CultureCode">
            <summary>
            Culture of the documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.CombineWithDefaultCulture">
            <summary>
            Combine with default culture.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.ClassNames">
            <summary>
            Class names to select.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.MaxRelativeLevel">
            <summary>
            Maximum relative level.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.SelectOnlyPublished">
            <summary>
            Select only published documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.SelectAllData">
            <summary>
            If true, the coupled data are retrieved in case class names are specified
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.mWithAllData">
            <summary>
            Collection including coupled data
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.mWithPermissionsCheck">
            <summary>
            Collection with filtered documents based on permission check in context of current user
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.NameColumn">
            <summary>
            Name column name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.DefaultClassName">
            <summary>
            Default class name for the documents (if ClassName column is not available)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.IsDisconnected">
            <summary>
            Returns true if the collection is disconnected from the data source
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.User">
            <summary>
            User to be used for permissions check of the collection if required. If none provided, permissions are not checked.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.WithAllData">
            <summary>
            Collection including coupled data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.WithPermissionsCheck">
            <summary>
            Collection with filtered documents based on permission check in context of current user
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.#ctor(System.String,CMS.DocumentEngine.TreeNode,CMS.Base.ICMSStorage)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="parentDocument">Parent document node</param>
            <param name="parentStorage">Parent storage</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.CreateNewObject(System.Data.DataRow)">
            <summary>
            Creates new instance of the encapsulated object.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.GetObjectName(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets the unique object name from the given object.
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.GetObjectByNameInternal(System.String)">
            <summary>
            Gets the object by its name, internal representation that gets data from database
            </summary>
            <param name="name">Name of the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.GetData(CMS.DataEngine.IWhereCondition,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition.</param>
            <param name="offset">Starting offset for the data.</param>
            <param name="maxRecords">Maximum number of records to get.</param>
            <param name="totalRecords">Returning total number of records.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.CopyPropertiesTo(CMS.DataEngine.IInfoObjectCollection)">
            <summary>
            Copies the properties of this collection to the other collection
            </summary>
            <param name="targetCollection">Target collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.Clone">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.RegisterColumns">
            <summary>
            Registers the Columns of this object
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollectionSettings">
            <summary>
            Collection settings for Document collection
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.LowerName">
            <summary>
            Lower name of the collection for indexation
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.ObjectTypeInternal">
            <summary>
            Object type
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.AliasPath">
            <summary>
            Alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.CultureCode">
            <summary>
            Culture code
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.CombineWithDefaultCulture">
            <summary>
            Combine the documents with default culture
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.ClassNames">
            <summary>
            Class names of the documents to get
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.MaxRelativeLevel">
            <summary>
            Maximum relative level
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.SelectOnlyPublished">
            <summary>
            Select only published documents
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.SelectAllData">
            <summary>
            Indicates if coupled data should be included
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollectionSettings.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Collection name</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeRepository">
            <summary>
            Repository of the documents without workflow support.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeRepository.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeRepository.mSiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeRepository.mRootDocument">
            <summary>
            Root document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeRepository.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeRepository.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeRepository.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeRepository.RootDocument">
            <summary>
            Root document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeRepository.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeRepository.IsDisconnected">
            <summary>
            Returns true if the repository is disconnected from the data source
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentDocument">Parent document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.GetRootDocument">
            <summary>
            Gets the root document from the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.AddCollection(CMS.DocumentEngine.TreeNodeCollectionSettings)">
            <summary>
            Registers the given collection of objects within the repository.
            </summary>
            <param name="settings">Collection settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.LoadCollection(CMS.DocumentEngine.TreeNodeCollectionSettings)">
            <summary>
            Loads the given collection.
            </summary>
            <param name="settings">Collection settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.NewCollection(System.String)">
            <summary>
            Creates new collection for the data.
            </summary>
            <param name="type">Type of the collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeRepository.NewCombinedCollection">
            <summary>
            Creates new combined collection for the data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ContentPublisher">
            <summary>
            Provides an ITask interface for the content publishing.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentPublisher.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the publish action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.DocumentEngine.CMSContext">
            <summary>
            Web site context methods and variables.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSContext.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSContext.RegisterColumns">
            <summary>
            Registers the Columns of this object
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CMSDataContext">
            <summary>
            Data context.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.Current">
            <summary>
            Returns current data context.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.BrowserHelper">
            <summary>
            Browser information
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.AllSites">
            <summary>
            Gets the collection of all sites.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.GlobalObjects">
            <summary>
            Returns the list of all global objects (entry point to global objects).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.Queries">
            <summary>
            Collection of queries indexed by their full name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.AlternativeForms">
            <summary>
            Collection of alternative forms indexed by their full name
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.LoadObjects">
            <summary>
            Loads <see cref="P:CMS.DocumentEngine.CMSDataContext.GlobalObjects"/> and <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.SiteObjects"/>.
            The method's execution is synchronized by <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectsLock"/>.
            </summary>
            <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectsLock"/>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.LoadObjectType(CMS.DataEngine.GeneralizedInfo,System.Int32)">
            <summary>
            Loads the given object type. The method is called during <see cref="M:CMS.DocumentEngine.CMSDataContext.LoadObjects"/> execution
            and is inherently synchronized by <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectsLock"/>.
            </summary>
            <param name="infoObj">Info object for the given object type</param>
            <param name="siteId">Site ID</param>
            <remarks>
            The implementation is responsible for loading global objects only (i.e. <paramref name="infoObj"/> must represent
            a global object) and passing on the call to <see cref="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectType(CMS.DataEngine.GeneralizedInfo,System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.RegisterProperties">
            <summary>
            Registers the object properties.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CMSDataContextBase`1">
            <summary>
            Data context base
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.IsCachedObject">
            <summary>
            If true, the object is cached within the system for later use
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.IsDisconnected">
            <summary>
            Returns true if this object is disconnected from the database
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.SiteName">
            <summary>
            Context site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.RootDocument">
            <summary>
            Gets the root document of current site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.Documents">
            <summary>
            Gets the collection of all documents on the site
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.SettingsMacroContainer">
            <summary>
            Macro container for all settings.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.SiteObjects">
            <summary>
            Returns the list of all site objects (entry point to site objects).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectsLock">
            <summary>
            Gets lock object to synchronize <see cref="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjects"/> execution.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjects">
            <summary>
            Loads <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.SiteObjects"/> and possibly other objects in inherited classes.
            The method's execution is synchronized by <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectsLock"/>.
            </summary>
            <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectsLock"/>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectType(System.String,System.Int32)">
            <summary>
            Loads the given object type
            </summary>
            <param name="objectType">Object type</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectType(CMS.DataEngine.GeneralizedInfo,System.Int32)">
            <summary>
            Loads the given object type. The method is called during <see cref="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjects"/> execution
            and is inherently synchronized by <see cref="P:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectsLock"/>.
            </summary>
            <param name="infoObj">Info object for the given object type</param>
            <param name="siteId">Site ID</param>
            <remarks>
            The implementation is responsible for loading site objects only (i.e. <paramref name="infoObj"/> must represent
            a site specific object).
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.RegisterProperties">
            <summary>
            Registers the object properties.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CMSSiteDataContext">
            <summary>
            Data context for specific site, contains only site related items
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSSiteDataContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSSiteDataContext.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.#ctor(CMS.ContinuousIntegration.Internal.AbstractFileSystemJob)">
            <summary>
            Should be only used for registration in <see cref="T:CMS.ContinuousIntegration.Internal.CustomProcessorFactory"/>.
            </summary>
            <param name="job">Instance of a job that requested this processor.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.PreprocessDeserializedDocument(CMS.ContinuousIntegration.Internal.CustomProcessorResult,System.Xml.XmlDocument,CMS.ContinuousIntegration.Internal.StructuredLocation)">
            <summary>
            Loads ACL references stored within <paramref name="document"/>'s <see cref="F:CMS.DocumentEngine.ACLCustomProcessor.INHERITED_ACLS_COLUMN"/> element
            and tries to translate them into IDs. Successfully translated IDs are joined into comma-separated string that
            is placed into the element. References which translation failed are stored in <see cref="P:CMS.DataEngine.Serialization.DeserializationResultBase.FailedMappings"/>.
            </summary>
            <param name="processorResult">Result of operation.</param>
            <param name="document">XML file with serialized object.</param>
            <param name="structuredLocation">Location of object's main file and its additional parts in repository.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.PostprocessSerializedObject(CMS.DataEngine.BaseInfo,System.String,System.Xml.XmlElement)">
            <summary>
            Translates ACL stored within <paramref name="serializedObject"/>'s <see cref="F:CMS.DocumentEngine.ACLCustomProcessor.INHERITED_ACLS_COLUMN"/> element
            into references and replaces content of the element with these references (in XML format).
            </summary>
            <param name="infoObject">Object that was serialized into <paramref name="serializedObject"/>.</param>
            <param name="infoRelativePath">(Main) Path the <paramref name="serializedObject"/> will be stored in.</param>
            <param name="serializedObject">Serialization form of the <paramref name="infoObject"/>.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.GetValidElements(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement}@)">
            <summary>
            Returns <see langword="true"/> if and only if the <paramref name="inheritedElement"/> contains such <see cref="T:System.Xml.XmlNode"/>s
            that are of type <see cref="T:System.Xml.XmlElement"/> and have the name of <see cref="F:CMS.DocumentEngine.ACLCustomProcessor.SINGLE_REFERENCE_ELEMENT_NAME"/>.
            Elements fulfilling the condition above are returned in <paramref name="referenceElements"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.DeserializeReferences(System.Collections.Generic.IEnumerable{System.Xml.XmlElement},CMS.ContinuousIntegration.Internal.CustomProcessorResult)">
            <summary>
            Returns collection of successfully translated IDs belonging to objects which references are stored in <paramref name="elements"/>.
            <para>References that failed to translate (ACL were not processed and stored yet) are added into <paramref name="processorResult"/>
            (under <see cref="P:CMS.DataEngine.Serialization.DeserializationResultBase.FailedMappings"/>).
            </para>
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.SerializeIds(System.Xml.XmlElement)">
            <summary>
            Returns collection of <see cref="T:CMS.DataEngine.Serialization.TranslationReference"/>s extracted from comma-separated
            list of IDs stored in <paramref name="element"/>'s inner text (non-existing IDs are skipped.).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.RestoreIdsToXml(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Writes given <paramref name="ids"/> into provided <paramref name="element"/>
            (replacing all its existing content) in form of string list of comma-separated values.
            </summary>
            <remarks>
            If there are no <paramref name="ids"/> provided, <see cref="F:System.String.Empty"/>
            will be set into the <paramref name="element"/>.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.ACLCustomProcessor.StoreReferencesToXml(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{CMS.DataEngine.Serialization.TranslationReference})">
            <summary>
            Writes given <paramref name="references"/> into provided <paramref name="element"/> (replacing all its existing content).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentStagingTaskCollectionExtensions.AddTaskForChangeDocument(CMS.ContinuousIntegration.Internal.ContentStagingTaskCollection,CMS.DocumentEngine.TreeNode)">
            <summary>
            Adds <see cref="F:CMS.DataEngine.TaskTypeEnum.CreateDocument"/>, <see cref="F:CMS.DataEngine.TaskTypeEnum.UpdateDocument"/> or <see cref="F:CMS.DataEngine.TaskTypeEnum.MoveDocument"/> task 
            or both <see cref="F:CMS.DataEngine.TaskTypeEnum.UpdateDocument"/> and <see cref="F:CMS.DataEngine.TaskTypeEnum.MoveDocument"/> tasks
            for changed document represented by the <paramref name="node"/> into the collection.
            </summary>
            <param name="stagingTaskCollection">Staging task collection.</param>
            <param name="node">Tree node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentStagingTaskCollectionExtensions.AddTaskForDeleteDocument(CMS.ContinuousIntegration.Internal.ContentStagingTaskCollection,CMS.DocumentEngine.TreeNode)">
            <summary>
            Adds <see cref="F:CMS.DataEngine.TaskTypeEnum.DeleteDocument"/> task for document represented by the <paramref name="node"/> into the collection.
            </summary>
            <param name="stagingTaskCollection">Staging task collection.</param>
            <param name="node">Tree node.</param>
        </member>
        <member name="F:CMS.DocumentEngine.ContentStagingTaskLogger.nodeIds">
            <summary>
            Node IDs affected by related objects (like ACL)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.ContentStagingTaskLogger.documentIds">
            <summary>
            Document IDs affected by related objects (like ACL)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentStagingTaskLogger.LogDocumentChanges(System.Collections.Generic.IReadOnlyList{CMS.ContinuousIntegration.Internal.StagingTask})">
            <summary>
            Filters and logs given <paramref name="tasksToLog"/> for staging.
            </summary>
            <param name="tasksToLog">Staging tasks.</param>
        </member>
        <member name="T:CMS.DocumentEngine.ContinuousIntegrationComponentsDataLoader">
            <summary>
            Loads the data for <see cref="T:CMS.DocumentEngine.TreeNode"/> components.
            </summary>
            <remarks>
            Loads missing components of <see cref="T:CMS.DocumentEngine.TreeNode"/> from database based on current properties. 
            Especcialy for linked pages ensures <see cref="P:CMS.DocumentEngine.TreeNode.CultureData"/> and <see cref="P:CMS.DocumentEngine.TreeNode.CoupledData"/> components for Continuous Integration restoration.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.ContinuousIntegrationComponentsDataLoader.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.ContinuousIntegrationComponentsDataLoader"/> instance.
            </summary>
            <param name="document">Document instance.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContinuousIntegrationComponentsDataLoader.LoadCultureData">
            <summary>
            Loads the culture data of given document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContinuousIntegrationComponentsDataLoader.LoadCoupledData">
            <summary>
            Loads coupled data for given document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContinuousIntegrationHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentContinuousIntegrationHelper">
            <summary>
            Provides methods to simplify code for integration of documents with continuous integration
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContinuousIntegrationHelper.StartBulkUpdate(CMS.DataEngine.IWhereCondition)">
            <summary>
            Starts the bulk update action
            </summary>
            <param name="bulkWhere">Where condition which defines the scope of the bulk action. Where condition identifies the influenced objects before the bulk action occurs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContinuousIntegrationHelper.FinishBulkUpdate(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Finishes the bulk update of documents
            </summary>
            <param name="updatedIds">Updated document IDs returned from the StartBulkUpdate method</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCustomProcessor.PreprocessDeserializedDocument(CMS.ContinuousIntegration.Internal.CustomProcessorResult,System.Xml.XmlDocument,CMS.ContinuousIntegration.Internal.StructuredLocation)">
            <summary>
            Amends <paramref name="document"/> loaded from file system before it is processed by <see cref="T:CMS.DataEngine.Serialization.InfoDeserializer"/>.
            </summary>
            <param name="processorResult">Object carrying information of ongoing deserialization.</param>
            <param name="document">XML file loaded from the file system.</param>
            <param name="structuredLocation">Location of object's main file and its additional parts in repository.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCustomProcessor.PostprocessSerializedObject(CMS.DataEngine.BaseInfo,System.String,System.Xml.XmlElement)">
            <summary>
            Amends <paramref name="serializedObject"/> after it was processed by <see cref="T:CMS.DataEngine.Serialization.InfoSerializer"/>.
            </summary>
            <param name="infoObject">Object that was serialized into <paramref name="serializedObject"/>.</param>
            <param name="infoRelativePath">(Main) Path the <paramref name="serializedObject"/> will be stored in.</param>
            <param name="serializedObject">Serialization form of the <paramref name="infoObject"/>.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFileDeleteJob">
            <summary>
            Class designated for removal of serialized TreeNode objects from the file system.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFileDeleteJob.#ctor(CMS.ContinuousIntegration.Internal.FileSystemRepositoryConfiguration)">
            <summary>
            Creates a new document file delete job with given repository configuration.
            </summary>
            <param name="configuration">Repository configuration.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="configuration"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFileDeleteJob.SelectFilesToDelete(CMS.DataEngine.BaseInfo)">
            <summary>
            Selects files to be deleted in order to delete given <paramref name="baseInfo"/> from the repository.
            </summary>
            <param name="baseInfo">Base info which will be deleted.</param>
            <returns>Collection of file paths to deleted.</returns>
            <remarks>Passed <paramref name="baseInfo"/> is never null.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFileStoreJob.#ctor(CMS.ContinuousIntegration.Internal.FileSystemRepositoryConfiguration)">
            <summary>
            Creates a new file system store job with given repository configuration.
            </summary>
            <param name="configuration">Repository configuration.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="configuration"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFileStoreJob.RunInternal(CMS.DataEngine.BaseInfo)">
            <summary>
            Stores given <paramref name="baseInfo"/> to the repository by serializing it to proper repository location.
            </summary>
            <param name="baseInfo">Base info which will be stored.</param>
            <remarks>Passed <paramref name="baseInfo"/> is never null.</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentObjectDependenciesConditionProvider">
            <summary>
            Optimized <see cref="T:CMS.DataEngine.WhereCondition"/> provider for documents which uses CTE instead of dynamically generated queries.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemDeleteDocumentsByTypeJob.#ctor(CMS.ContinuousIntegration.Internal.FileSystemRepositoryConfiguration)">
            <summary>
            Creates a new instance of FileSystemRestoreDocumentsByTypeJob that restores all documents to the database.
            </summary>
            <param name="configuration">Repository configuration.</param>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemDeleteDocumentsByTypeJob.GetObjectFilePaths(CMS.DataEngine.BaseInfo)">
            <summary>
            Gets collection of all file locations that are used for serialization of given object.
            </summary>
            <param name="obj">File locations will be returned for given object.</param>
            <returns>Collection of all file locations that are used for serialization of given object.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemDeleteDocumentsByTypeJob.GetObjectsInDatabase(System.String)">
            <summary>
            Gets enumeration of all objects of given type. Only objects that are covered by continuous integration solution are returned.
            </summary>
            <param name="objectType">Returned objects' type.</param>
            <returns>Enumeration of all objects of given type.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemDeleteDocumentsByTypeJob.DeleteMissingObject(CMS.DataEngine.BaseInfo)">
            <summary>
            Deletes object that is missing in the repository from the database.
            </summary>
            <param name="obj">Object to delete.</param>
        </member>
        <member name="F:CMS.DocumentEngine.FileSystemUpsertDocumentsByTypeJob.mSkippedMappings">
            <summary>
            Set of skipped mappings for DocumentNodeID to ensure correct creation of nodes
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemUpsertDocumentsByTypeJob.#ctor(CMS.ContinuousIntegration.Internal.FileSystemRepositoryConfiguration)">
            <summary>
            Creates a new instance of FileSystemRestoreDocumentsByTypeJob that restores all documents to the database.
            </summary>
            <param name="configuration">Repository configuration.</param>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemUpsertDocumentsByTypeJob.GetMainObjects(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{CMS.DataEngine.Serialization.DeserializationResult}})">
            <summary>
            Composes multiple partial sub-objects into one or more main objects.
            </summary>
            <param name="deserializedObjects">Deserialized objects indexed by their location.</param>
            <returns>Compound object or objects.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemUpsertDocumentsByTypeJob.SetChangedObject(CMS.DataEngine.BaseInfo)">
            <summary>
            Sets changed object to the database.
            </summary>
            <param name="baseInfo">Changed object</param>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemUpsertDocumentsByTypeJob.ValidateFailedMappings(CMS.DataEngine.Serialization.DeserializationResult)">
            <summary>
            Validates failed mappings and ensure correction of the mappings
            </summary>
            <param name="result">Deserialized result</param>
        </member>
        <member name="M:CMS.DocumentEngine.FileSystemUpsertDocumentsByTypeJob.ComposeResult(CMS.DocumentEngine.Internal.DocumentNodeDataInfo,CMS.DocumentEngine.Internal.DocumentCultureDataInfo,CMS.DocumentEngine.Internal.DocumentFieldsInfo,CMS.DataEngine.Serialization.DeserializationResult)">
            <summary>
            Composes result from partial classes
            </summary>
            <param name="nodeData">Node data</param>
            <param name="cultureData">Culture data</param>
            <param name="coupledData">Coupled fields data</param>
            <param name="result">Deserialized result with tree node instance to compose</param>
        </member>
        <member name="T:CMS.DocumentEngine.GetDocumentsEnumerator">
            <summary>
            Provides enumerator for pages to be stored within continuous integration.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.GetDocumentsEnumerator.ObjectType">
            <summary>
            Object type to be enumerated
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.GetDocumentsEnumerator.WhereCondition">
            <summary>
            Where condition for the objects
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetDocumentsEnumerator.#ctor(System.String,CMS.DataEngine.IWhereCondition)">
            <summary>
            Constructor
            </summary>
            <param name="objectType">Object type</param>
            <param name="where">Where condition for the objects</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetDocumentsEnumerator.GetEnumerator">
            <summary>
            Gets the enumerator to enumerate all pages
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetDocumentsEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ComponentsDataLoader">
            <summary>
            Loads the data for <see cref="T:CMS.DocumentEngine.TreeNode"/> components.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.ComponentsDataLoader.Document">
            <summary>
            Document instance.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ComponentsDataLoader.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.ComponentsDataLoader"/> instance.
            </summary>
            <param name="document">Document instance.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ComponentsDataLoader.LoadCultureData">
            <summary>
            Loads the culture data of given document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ComponentsDataLoader.LoadCoupledData">
            <summary>
            Loads coupled data for given document.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentClassNameRetriever">
            <summary>
            Retrieves page type class name from given <see cref="T:CMS.Base.IDataContainer"/> data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentClassNameRetriever.#ctor(CMS.Base.IDataContainer,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.DocumentClassNameRetriever"/> class.
            </summary>
            <param name="container">Container with document data to retrieve the class name from.</param>
            <param name="requireClassName">Indicates if the class name is required when retrieved from the container.</param>
            <remarks>If the class name is required and the value is not retrieved from the data container <see cref="T:CMS.DocumentEngine.DocumentTypeNotExistsException"/> exception is thrown.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentClassNameRetriever.Retrieve">
            <summary>
            Gets the class name from the given data container.
            </summary>
            <remarks>
            Retrieves class name by probing these source columns in the container with priority given by the list order: ClassName, NodeClassID, <see cref="F:CMS.DataEngine.SystemColumns.SOURCE_TYPE"/>.
            </remarks>
            <exception cref="T:CMS.DocumentEngine.DocumentTypeNotExistsException">Thrown when class name is required and not found in any source column of the container data.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFieldDataType">
            <summary>
            Field data types for document engine - string constants.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentFieldDataType.DocAttachments">
            <summary>
            Document attachments.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentFieldDataType.DocRelationships">
            <summary>
            Document relationships
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldDataType.RegisterDataTypes">
            <summary>
            Register the document engine data types
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.EditableItems">
            <summary>
            Editable items container.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EditableItems.EditableRegions">
            <summary>
            Editable regions contained within the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EditableItems.EditableWebParts">
            <summary>
            Editable WebParts contained within the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EditableItems.Item(System.String)">
            <summary>
            Returns the editable value.
            </summary>
            <param name="controlId">Control ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.GetFirstKey(System.String)">
            <summary>
            Gets the first key from the key list defined as string with ';' as separator.
            </summary>
            <param name="key">Key</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.LoadFromXmlElement(System.Xml.XmlElement)">
            <summary>
            Loads the data from the given XML element
            </summary>
            <param name="element">XML element</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.GetXmlElement(System.Xml.XmlDocument)">
            <summary>
            Gets the XML element for the data
            </summary>
            <param name="doc">Parent XML document</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.LoadContentXml(System.String)">
            <summary>
            Loads the content XML to the content table.
            </summary>
            <param name="contentXml">Content XML to load</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.LoadEditableItems(CMS.Base.MultiKeyDictionary{System.String},System.Xml.XmlElement,System.String)">
            <summary>
            Fills editable items dictionary from xml document for specific element
            </summary>
            <param name="items">Items collection</param>
            <param name="xmlElement">Source Xml element</param>
            <param name="elementName">Element name</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.GetContentXml">
            <summary>
            Returns the xml code of the document contents (Editable regions, web parts).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.SetItemsXml(CMS.Base.MultiKeyDictionary{System.String},System.Xml.XmlDocument,System.String)">
            <summary>
            Sets the items to the xml document under the specific node defined by element name
            </summary>
            <param name="items">Editable items list</param>
            <param name="xml">XML document</param>
            <param name="elementName">Xml element name</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.Clone">
            <summary>
            Returns the cloned object.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EditableItems.CMS#Base#ISimpleDataContainer#Item(System.String)">
            <summary>
            Gets or sets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.GetValue(System.String)">
            <summary>
            Gets the value of specific field.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of specific field.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.DocumentEngine.EditableItems.ColumnNames">
            <summary>
            Returns the available column names.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries to get the value of specific column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns value</param>
        </member>
        <member name="M:CMS.DocumentEngine.EditableItems.ContainsColumn(System.String)">
            <summary>
            Returns true if the structure contains specific column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeProvider">
            <summary>
            Class providing documents management.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeProvider.IsValid">
            <summary>
            Indicates if the provider instance is up-to-date and can be used to manage object instances.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeProvider.TypeInfos">
            <summary>
            Document TypeInfo [className.ToLowerCSafe()] -> [TypeInfo].
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeProvider.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.TreeNodeProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.TreeNodeProvider"/> based on given class name.
            </summary>
            <param name="className">Class name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocument">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.SetDocument(CMS.DocumentEngine.TreeNode)">
            <summary>
            Sets specified document.
            </summary>
            <param name="document">Document to set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.DeleteDocument(CMS.DocumentEngine.TreeNode)">
            <summary>
            Deletes specified document.
            </summary>
            <param name="document">Document to delete.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocuments(System.String)">
            <summary>
            Gets the query for all documents.
            </summary>
            <param name="className">Class name representing document type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocuments``1">
            <summary>
            Gets the query for all documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocuments">
            <summary>
            Gets the query for all documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetObjectQueryInternal">
            <summary>
            Gets object query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetQueryInternal(System.String)">
            <summary>
            Gets document query for system purposes without any additional parametrization.
            </summary>
            <param name="className">Class name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocumentQuery">
            <summary>
            Gets the object query for the provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.SetDocumentInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Sets specified document.
            </summary>
            <param name="document">Document to set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.DeleteDocumentInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Deletes specified document.
            </summary>
            <param name="document">Document to delete.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetClassName(System.String)">
            <summary>
            Gets document class name from given object type.
            </summary>
            <param name="objectType">Object type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetObjectType(System.String)">
            <summary>
            Gets document object type from given class name.
            </summary>
            <param name="className">Class name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.IsDocumentObjectType(System.String)">
            <summary>
            Indicates if given object type represents document.
            </summary>
            <param name="objectType">Object type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetProviderObject(System.String)">
            <summary>
            Gets provider object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.LoadProviderInternal(System.String)">
            <summary>
            Loads document info provider for given object type.
            </summary>
            <param name="objectType">Document object type.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.InvalidateProvider(System.String)">
            <summary>
            Invalidates specific provider.
            </summary>
            <param name="objectType">Type of the object.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.CreateInfo(System.Data.DataRow,System.Boolean)">
            <summary>
            Creates new document info instance.
            </summary>
            <param name="dr">DataRow with the object data.</param>
            <param name="useGenerator">If true, the process allows using the generator to differentiate between particular info types based on data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetTypeInfo(System.String)">
            <summary>
            Returns the TypeInfo for specified class.
            </summary>
            <param name="className">Class name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.Clear(System.Boolean)">
            <summary>
            Clear the class info and properties lists of all object types.
            </summary>
            <param name="logTask">If true, web farm tasks are logged.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.InvalidateTypeInfo(System.String,System.Boolean)">
            <summary>
            Invalidates typeinfo specified by class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.ValidateClass(System.String)">
            <summary>
            Validates given class name if represents existing document type.
            </summary>
            <param name="className">Class name to validate.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.IsGeneralDocumentClass(System.String)">
            <summary>
            Returns true if the given class name represents a general document.
            </summary>
            <param name="className">Class name to check.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentActionContext">
            <summary>
            Document action context. Ensures context for the document actions block.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentDocumentNewOrder">
            <summary>
            Defines default order for new document creation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentAllowRootDeletion">
            <summary>
            Indicates whether a root document can be completely deleted. By default at least one culture is kept to ensure data structure integrity.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentSynchronizeFieldValues">
            <summary>
            Indicates whether field values should be synchronized on set for the document (SKU mappings etc.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentPreserveACLHierarchy">
            <summary>
            Indicates whether the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentUseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentHandleACLs">
            <summary>
            Indicates whether the ACL settings should be processed during the document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentResetChanges">
            <summary>
            Indicates whether the changes made to the document instance should be reseted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentResetIsWaitingForTranslationFlag">
            <summary>
            Indicates whether the 'Document is waiting for translation' flag should be cleared.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentForceDestroyHistory">
            <summary>
            Indicates whether document is always destroyed, or can be deleted into recycle bin. False by default.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.DocumentNewOrder">
            <summary>
            Defines default order for new document creation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.AllowRootDeletion">
            <summary>
            Indicates whether a root document can be completely deleted. By default at least one culture is kept to ensure data structure integrity.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.SynchronizeFieldValues">
            <summary>
            Indicates whether field values should be synchronized on set for the document (SKU mappings etc.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.PreserveACLHierarchy">
            <summary>
            Indicates whether the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.UseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.HandleACLs">
            <summary>
            Indicates whether the ACL settings should be processed during the document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.ResetChanges">
            <summary>
            Indicates whether the changes made to the document instance should be reseted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.ResetIsWaitingForTranslationFlag">
            <summary>
            Indicates whether the 'Document is waiting for translation' flag should be cleared.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.ForceDestroyHistory">
            <summary>
            Indicates whether document is always destroyed, or can be deleted into recycle bin. False by default.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentActionContext.RestoreOriginalValues">
            <summary>
            Restores the original values to the context
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHelper">
            <summary>
            Class providing document management methods.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentHelper.LOGCONTEXT_DOCUMENTS">
            <summary>
            Log context name for document actions
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentHelper.DOCUMENT_PREFIX">
            <summary>
            Document prefix for object type.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning is used, gets the current VersionHistory record, otherwise gets the record directly from the database. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name.</param>
            <param name="aliasPath">Node alias path.</param>
            <param name="cultureCode">Nodes culture code.</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product").</param>
            <param name="where">Where condition for the data selection.</param>
            <param name="orderBy">Order by clause for the data selection.</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes.</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="columns">Columns to be selected</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(CMS.DocumentEngine.NodeSelectionParameters,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning used, gets the current VersionHistory record, otherwise gets the record directly from the database.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning is used, gets the current VersionHistory record, otherwise gets the record directly from the database.
            </summary>
            <param name="documentId">Document ID to retrieve</param>
            <param name="tree">TreeProvider to use for the DB access</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.Int32,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning used, gets the current VersionHistory record, otherwise gets the record directly from the database.
            </summary>
            <param name="nodeId">Node ID to retrieve</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.Int32,System.String,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning used, gets the current VersionHistory record, if not, gets the record directly from the database.
            </summary>
            <param name="nodeId">Node ID to retrieve</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns the latest version of the document if versioning is used or the document itself otherwise.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="tree">Tree provider to use</param>
            <param name="columns">Columns to be selected. Must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture).</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to node with this GUID.</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Indicates whether the related node is located on the left side of the relationship.</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns to be selected.</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(CMS.DocumentEngine.NodeSelectionParameters,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to node with this GUID.</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Indicates whether the related node is located on the left side of the relationship.</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments">
            <summary>
            Gets the query for all documents (latest versions)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String)">
            <summary>
            Gets the query for all documents (latest versions) of specific type
            </summary>
            <param name="className">Class name representing document type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments``1">
            <summary>
            Gets the query for all documents (latest versions) of specific type
            </summary>
            <typeparam name="TDocument">Type of the instances returned by the query.</typeparam>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.UpdateDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.String)">
            <summary>
            Updates the current version of the document within the database. If versioning is used, updates the last version within the VersionHistory, otherwise updates directly the database document record.
            </summary>
            <param name="node">Document to update</param>
            <param name="tree">TreeProvider to use</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Inserts a new document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNode">Parent node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="allowCheckOut">If true, document check out is allowed on the insert action.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocumentInternal(CMS.DocumentEngine.DocumentHelperInsertParameters)">
            <summary>
            Inserts the page based on given parameters.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertNewCultureVersion(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.String,System.Boolean,System.Boolean)">
            <summary>
            Inserts a new document culture version.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="cultureCode">Culture code of new culture version (If not specified, node.DocumentCulture property is used.)</param>
            <param name="createVersion">Create a new version for document under workflow.</param>
            <param name="allowCheckOut">If true, document check out is allowed on the insert action.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertNewCultureVersion(CMS.DocumentEngine.NewCultureDocumentSettings)">
            <summary>
            Inserts a new document culture version.
            </summary>
            <param name="settings">New culture version settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocumentAsLink(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Inserts a new linked document.
            </summary>
            <param name="node">Document node</param>
            <param name="parent">Parent node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeChildNodes">Link also the node child nodes.</param>
            <param name="copyPermissions">Indicates if the document permissions should be copied.</param>
            <param name="newDocumentsOwner">ID of the new document owner</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocumentAsLinkInternal(CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters)">
            <summary>
            Inserts the page as link based on given parameters.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean,System.Boolean)">
            <summary>
            Deletes the given document.
            </summary>
            <param name="node">Document node to delete</param>
            <param name="tree">TreeProvider to use</param>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <returns>Returns true if last culture (Tree record) has been deleted.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocument(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Deletes document according to supplied settings.
            </summary>
            <param name="settings">Document deletion settings</param>
            <returns>Returns true if last culture (Tree record) has been deleted.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider)">
            <summary>
            If synchronization logging is enabled, disables log context and logs the document change.
            </summary>
            <param name="node">Node to log</param>
            <param name="taskTypeEnum">Task type to log</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ClearWorkflowInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the workflow information from the given document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ClearCheckoutInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the checkout information from the given document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Moves the specified document to the new location.
            </summary>
            <param name="node">Document node to move</param>
            <param name="target">Target node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="keepPermissions">Indicates if node permissions should be preserved.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveDocument(CMS.DocumentEngine.MoveDocumentSettings)">
            <summary>
            Moves the node according to the given settings.
            </summary>
            <param name="settings">Document copy settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.LogMoveSearchTasks(CMS.DocumentEngine.TreeNode,System.Int32,System.String)">
            <summary>
            Logs the search tasks for a move operation of the document
            </summary>
            <param name="node">Document node</param>
            <param name="originalSiteId">Original site ID</param>
            <param name="originalAliasPath">Original alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Document node to copy</param>
            <param name="target">Target node</param>
            <param name="includeChildNodes">Copy also the node child nodes.</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocument(CMS.DocumentEngine.CopyDocumentSettings)">
            <summary>
            Copies the node according to the given settings.
            </summary>
            <param name="settings">Document copy settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocumentCategories(System.Int32,System.Int32)">
            <summary>
            Copies categories from one document to another.
            </summary>
            <param name="originalDocumentId">Original document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ChangeDocumentToLink(CMS.DocumentEngine.TreeNode,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Changes the document so it is link to another document.
            </summary>
            <param name="node">Document node</param>
            <param name="linkedNodeId">Node ID to link</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsDocumentTypeAllowed(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns true if child class is allowed within given parent class and alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
            <param name="childClassId">Child class ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns the latest version of the specified attachment.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Guid,System.String,System.Boolean,CMS.DocumentEngine.TreeNode@)">
            <summary>
            Returns the latest version of the specified attachment.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
            <param name="node">Returning the latest version of the document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Guid,System.Int32,System.Boolean)">
            <summary>
            Returns given version of the specified attachment.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="versionHistoryId">Required version history ID</param>
            <param name="includeBinary">Indicates whether binary column should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachmentInternal(System.Guid,System.Int32,System.Boolean)">
            <summary>
            Returns given version of the specified attachment.
            Searches in main and variant attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns given version of the specified attachment.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">Attachment file name</param>
            <param name="versionHistoryId">Required version history ID</param>
            <param name="includeBinary">Indicates whether binary column should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns given version of the specified attachment.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="fileName">Attachment file name</param>
            <param name="versionHistoryId">Required version history ID</param>
            <param name="includeBinary">Indicates whether binary column should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Boolean)">
            <summary>
            Returns specified attachment for the given node.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(CMS.DocumentEngine.TreeNode,System.String,System.Boolean)">
            <summary>
            Returns attachment for the given node specified by file name.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="node">Document node</param>
            <param name="fileName">Attachment file name</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachments(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Gets attachments (<see cref="T:CMS.DocumentEngine.AttachmentInfo"/>) or attachments versions (<see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/>) for given document.
            Result contains objects of type <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/> if given document is under workflow. Otherwise result contains <see cref="T:CMS.DocumentEngine.AttachmentInfo"/>.
            Returns only main attachments, not attachment variants.
            </summary>
            <param name="node">Document which contains requested attachments.</param>
            <param name="getBinary">Indicates if binary data should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocumentAttachments(System.String,CMS.FormEngine.FormFieldInfo)">
            <summary>
            Deletes attachments bound to the specified field (file field or group attachments field)
            </summary>
            <param name="className">Document class name</param>
            <param name="field">Form field object which contains information to remove its attachments</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetPrimaryAttachmentsForDocuments(System.Collections.Generic.IList{System.Int32},System.Boolean,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Gets the primary attachments for the given document IDs. Used internally to display thumbnails in dialogs
            </summary>
            <param name="documentIds">Document IDs</param>
            <param name="getHistories">If true, the process is allowed to retrieve unpublished attachments from version history</param>
            <param name="versionHistoryIds">Version history IDs when getting version histories is allowed</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.FillFileDataDictionary(CMS.DataEngine.IDataQuery,CMS.Base.SafeDictionary{System.Int32,CMS.Base.IDataContainer},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Fills the dictionary of the document ID - file data mapping with data from the given query
            </summary>
            <param name="fileData">Query with the data</param>
            <param name="data">Data dictionary</param>
            <param name="remainingDocumentIds">Collection of document IDs for which the data wasn't provided yet. Document IDs for which the data is provided are removed from this collection.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteAttachment(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Deletes attachment from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <exception cref="T:System.InvalidOperationException">Deleting of attachment variants is not supported. Use AttachmentInfoProvider or AttachmentHistoryInfoProvider to handle attachment variants.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteAttachment(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Deletes attachment from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <exception cref="T:System.InvalidOperationException">Deleting of attachment variants is not supported. Use AttachmentInfoProvider or AttachmentHistoryInfoProvider to handle attachment variants.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteAttachment(CMS.DocumentEngine.TreeNode,System.String,System.Guid)">
            <summary>
            Deletes attachment specified by either GUID or GUID column name from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">Attachment GUID (optional)</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddAttachment(CMS.DocumentEngine.TreeNode,System.String,System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given attachment to the document. Does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddAttachment(CMS.DocumentEngine.TreeNode,System.String,CMS.Base.IUploadedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given attachment to the document. Does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddAttachment(CMS.DocumentEngine.TreeNode,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds specified attachment to the document. Does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddGroupedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Guid,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds specified group attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="groupGuid">GUID of the attachment group</param>
            <param name="file">Attachment file path</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddGroupedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Guid,System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given group attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="groupGuid">GUID of the attachment group</param>
            <param name="file">Attachment file path</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddGroupedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Guid,CMS.Base.IUploadedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given group attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="groupGuid">GUID of the attachment group</param>
            <param name="file">Attachment file path</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddUnsortedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds specified unsorted attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddUnsortedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given unsorted attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddUnsortedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,CMS.Base.IUploadedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given unsorted attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddAttachment(CMS.DocumentEngine.TreeNode,System.String,System.Guid,System.Guid,CMS.DocumentEngine.AttachmentSource,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds an attachment to the document. Does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="source">Attachment source (HttpPostedFile, AttachmentInfo or file path)</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.UpdateAttachment(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Updates the document attachment
            </summary>
            <param name="node">Document node</param>
            <param name="attachment">Attachment to update</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/> or <paramref name="attachment"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Updating of attachment variants is not supported. Use AttachmentInfoProvider or AttachmentHistoryInfoProvider to handle attachment variants data.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetUniqueAttachmentFileName(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentAttachment)">
            <summary>
            Returns unique attachment file name in the document scope.
            </summary>
            <param name="node">Document node</param>
            <param name="attachment">Attachment for which the name should be unified</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AttachmentHasUniqueName(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentAttachment)">
            <summary>
             Finds out whether given attachment name is unique.
            </summary>
             <param name="node">Document node</param>
             <param name="attachment">Attachment to check</param>
             <returns>True if attachment name is unique</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.SaveTemporaryAttachments(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Saves temporary attachments for specified form.
            </summary>
            <param name="node">Document node</param>
            <param name="formGuid">Form GUID</param>
            <param name="siteName">Site name</param>
            <returns>True if node was changed, false otherwise</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveAttachmentUp(System.Guid,CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves attachment up within node attachments. Supports unordered, grouped and temporary attachments.
            </summary>
            <param name="attachmentGuid">GUID of attachment or attachment history</param>
            <param name="node">TreeNode under which attachments will be sorted.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Moving attachment variants is not supported.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveAttachmentDown(System.Guid,CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves attachment down within node attachments. Supports unordered, grouped and temporary attachments.
            </summary>
            <param name="attachmentGuid">GUID of attachment or attachment history</param>
            <param name="node">TreeNode under which attachments will be sorted</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Moving attachment variants is not supported.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyAttachmentsAsTemporary(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Copies unsorted and grouped attachments of the given document as temporary attachments for specified form.
            </summary>
            <param name="node">Original document node</param>
            <param name="formGuid">Form GUID</param>
            <param name="siteName">Name of the site</param>
            <remarks>This method is intended to be used only during new culture version of the document creation.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyNodeData(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.CopyNodeDataSettings)">
            <summary>
            Copies the data from the source node to the destination node according to the settings.
            </summary>
            <param name="sourceNode">Source node</param>
            <param name="destNode">Destination node</param>
            <param name="settings">Copy node data settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ChangeDocumentCultureDataField(System.String,System.Object,CMS.DataEngine.WhereCondition)">
            <summary>
            Updates culture data field value for all documents given by where condition.
            </summary>
            <param name="fieldName">Field name</param>
            <param name="value">Value</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteSiteTree(System.String,CMS.DocumentEngine.TreeProvider,CMS.DocumentEngine.DocumentHelper.OnAfterDocumentDeletedEventHandler)">
            <summary>
            Deletes complete site tree including the version history.
            </summary>
            <param name="siteName">Site name</param>
            <param name="tree">Tree provider to use</param>
            <param name="deleteCallback">Callback function raised when document has been deleted</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHelper.OnAfterDocumentDeletedEventHandler">
            <summary>
            Occurs after document is deleted.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetPublished(CMS.Base.IDataContainer)">
            <summary>
            Gets the published state of the document from the given data container
            </summary>
            <param name="dc">Data container</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsDocumentObjectType(System.String)">
            <summary>
            Indicates if given object type represents document.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ColumnExistsInDocumentView(System.String)">
            <summary>
            Checks whether specified column exists in main document view.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetTreeNodeDataSet(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the new DataSet for the given node with specific class name.
            </summary>
            <param name="className">Class name</param>
            <param name="isCoupled">Is coupled class</param>
            <param name="hasSku">Has SKU information</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.SearchFieldChanged(CMS.DocumentEngine.TreeNode,System.Collections.Generic.List{System.String})">
            <summary>
            Returns true if any field included in the search changed (checks fields defined in Class Search Settings).
            </summary>
            <param name="node">Document node</param>
            <param name="changedColumns">List of changed columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsSearchTaskCreationAllowed(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns true if the search task for given node should be created.
            </summary>
            <param name="node">Node to check.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ApplyLatestVersion(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Applies latest version to given document
            </summary>
            <param name="node">Document</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocumentChildNodes(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Deletes the child nodes of all culture versions under the specified parent node.
            </summary>
            <param name="settings">Settings used when deleting child nodes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocumentLinks(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Deletes document linked documents
            </summary>
            <param name="settings">Delete settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveHistories(System.String,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Moves histories of document section to the target site
            </summary>
            <param name="nodeAliasPath">Node alias path of the moved document</param>
            <param name="targetSiteId">Target site ID</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ClearFieldAttachments(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears field attachments GUID values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CheckParameters(CMS.DocumentEngine.TreeNode)">
            <summary>
            Checks method prerequisites
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CheckParameters(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode)">
            <summary>
            Checks method prerequisites
            </summary>
            <param name="node">Document node</param>
            <param name="parent">Parent document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureTreeProvider(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Ensures tree provider instance
            </summary>
            <param name="node">Document node</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetExistingAttachment(System.Guid,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Returns existing attachment - if <paramref name="usesWorkflow"/> set,
            returns given <paramref name="versionHistoryId"/> of the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="usesWorkflow">Indicates if attachment under workflow should be returned.</param>
            <param name="versionHistoryId">Specifics history version</param>
            <param name="siteId">ID of the site attachment should belong to.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetSiteName(CMS.DocumentEngine.TreeNode)">
            <summary>
            Return name of site that is assigned to the node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.LogUpdateSearchTask(CMS.DocumentEngine.TreeNode)">
            <summary>
            Updates search index if search task for given node should be created.
            </summary>
            <param name="node">Node to create search task for</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.SaveAttachment(CMS.DocumentEngine.DocumentAttachment,CMS.DocumentEngine.TreeNode)">
            <summary>
            Saves attachment as <see cref="T:CMS.DocumentEngine.AttachmentInfo"/>.
            </summary>
            <remarks>Raises the <see cref="F:CMS.DocumentEngine.DocumentEvents.SaveAttachment"/> event for saving the attachment.</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.Compatibility.NodesDataProvider">
            <summary>
            Provides data in a compatible way with an old API using the new approach of <see cref="T:CMS.DocumentEngine.MultiDocumentQuery"/> internally.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Compatibility.NodesDataProvider.MergeResults">
            <summary>
            Indicates if tables from result DataSet are merged into a single table.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Compatibility.NodesDataProvider.SortMergedResults">
            <summary>
            Indicates if merged results should be sorted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Compatibility.NodesDataProvider.SelectQueryName">
            <summary>
            Base query name to use for the document selection (for the enhanced selection options only).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Compatibility.NodesDataProvider.SelectAllData">
            <summary>
            Indicates if all data including coupled data should be selected. Otherwise only base document data are selected.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Compatibility.NodesDataProvider.PreferredCultureCode">
            <summary>
            Custom preferred culture code.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Compatibility.NodesDataProvider.#ctor(CMS.DocumentEngine.NodeSelectionParameters)">
            <summary>
            Creates instance of the <see cref="T:CMS.DocumentEngine.Compatibility.NodesDataProvider"/>.
            </summary>
            <param name="parameters">Parameters to be used to get the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.Compatibility.NodesDataProvider.GetDataSet">
            <summary>
            Gets nodes based on instance parameters.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCopier">
            <summary>
            Copies published data of a tree node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCopier.AttachmentGUIDs">
            <summary>
            Collection of original attachment GUID as key and copied attachment GUID as value.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCopier.#ctor(CMS.DocumentEngine.CopyDocumentSettings)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.DocumentCopier"/>.
            </summary>
            <param name="settings">Copy document settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCopier.Copy">
            <summary>
            Copies document.
            </summary>
            <remarks>
            Priority of returned culture version of copied document is as follows:
            1. Default culture version of the target site if provided
            2. Default culture version of document site
            3. Document culture
            </remarks>
            <returns>Returns first copied culture version of the source document.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentWithVersionsCopier">
            <summary>
            Copies document data including version data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentWithVersionsCopier.#ctor(CMS.DocumentEngine.CopyDocumentSettings)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.DocumentWithVersionsCopier"/>.
            </summary>
            <param name="settings">Copy document settings.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentConnectedObjects">
            <summary>
            Provides the repository of the objects connected to a specific document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentConnectedObjects.mConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentConnectedObjects.mConnectedDocuments">
            <summary>
            Connected documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentConnectedObjects.mRelatedDocuments">
            <summary>
            Related documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentConnectedObjects.mAllAttachments">
            <summary>
            Collection of all attachments
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentConnectedObjects.mAttachments">
            <summary>
            Collection of unsorted attachments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.Node">
            <summary>
            Node data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.AllAttachments">
            <summary>
            Attachments of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.Attachments">
            <summary>
            Unsorted attachments of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.RelatedDocuments">
            <summary>
            Related documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.ConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.Tags">
            <summary>
            Collection of document tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.Categories">
            <summary>
            Collection of document categories.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.VersionHistory">
            <summary>
            Collection of the version history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.AttachmentHistory">
            <summary>
            Collection of the attachment history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.WorkflowHistory">
            <summary>
            Collection of the workflow history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.ConnectedDocuments">
            <summary>
            Connected documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.Children">
            <summary>
            Collection of child nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.AllChildren">
            <summary>
            Collection of all child nodes from all levels.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.Links">
            <summary>
            Collection of linked nodes, including the original.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.CultureVersions">
            <summary>
            Collection of all culture versions of this document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentConnectedObjects.DocumentsOnPath">
            <summary>
            Collection of documents on the path to the current document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Constructor
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.RegisterConnectedObjects(CMS.DataEngine.InfoObjectRepository)">
            <summary>
            Registers the connected objects for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.RegisterConnectedDocuments(CMS.DocumentEngine.TreeNodeRepository)">
            <summary>
            Registers the connected documents for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.GetDocumentRepository">
            <summary>
            Gets the new repository for the given document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.GetRelationshipNames">
            <summary>
            Returns relationship names used by the document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.RelatedDocuments_OnLoadCollection(CMS.DataEngine.IInfoObjectRepository{CMS.DocumentEngine.TreeNodeCollection},System.String)">
            <summary>
            Handler to provide the related document collection.
            </summary>
            <param name="repository">Parent repository</param>
            <param name="name">Collection name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.GetRelatedDocumentsCollection(CMS.DataEngine.IInfoObjectRepository{CMS.DocumentEngine.TreeNodeCollection},System.String,System.Boolean,System.Boolean)">
            <summary>
            Handler to provide the related document collection.
            </summary>
            <param name="repository">Parent repository</param>
            <param name="name">Collection name</param>
            <param name="documentIsOnLeftSide">If true, the document can be on left side of the relationship</param>
            <param name="documentIsOnRightSide">If true, the document can be on left side of the relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentConnectedObjects.GetRelationshipWhereCondition(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns where condition for the given relationship or null if the relationship was not found.
            </summary>
            <param name="name">Collection name</param>
            <param name="documentIsOnLeftSide">If true, the document can be on left side of the relationship</param>
            <param name="documentIsOnRightSide">If true, the document can be on right side of the relationship</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder">
            <summary>
            Provides the dependency cache keys for documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetNodeDependencyCacheKeys(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Returns the cache dependencies keys array for the node - cache item keys affected when the node is changed.
            </summary>
            <param name="node">Tree node.</param>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetNodeDependencyCacheKey(System.Int32)">
            <summary>
            Returns the cache dependency key for the node in all language versions.
            </summary>
            <param name="nodeId">Node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetPathDependencyCacheKeys(System.String,System.String,System.String)">
            <summary>
            Returns the cache keys based on page path.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="path">Page node alias path.</param>
            <param name="cultureCode">Page culture code.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetChangeOrderDependencyCacheKeys(System.Int32)">
            <summary>
            Returns the cache dependencies keys array for order change in a section.
            </summary>
            <param name="nodeParentId">Node parent ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetOrderDependencyCacheKey">
            <summary>
            Returns the cache dependency key for order change of a page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetPathDependencyCacheKeys(System.String,System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Returns the cache dependencies keys array for document path.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="path">Document path.</param>
            <param name="type">Type of the <paramref name="path"/>.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetParentPathsDependencyCacheKeys(System.String,System.String)">
            <summary>
            Returns cache dependencies keys for all parent documents on give path.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="path">Page node alias path.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetDependencyCacheKeys(System.String,System.String,System.String)">
            <summary>
            Returns cache dependencies keys for the documents set based on given parameters.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="classNames">List of class names separated by semicolon. Pass null or empty string to cover all classes.</param>
            <param name="path">Page node alias path.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetChildNodesDependencyCacheKey(System.String,System.String)">
            <summary>
            Returns the cache key for all children on given path.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="path">Page node alias path.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDependencyCacheKeysBuilder.GetAllNodesCacheKey(System.String,System.String)">
            <summary>
            Returns the cache key for all pages of given type on given site.
            </summary>
            <param name="siteName">Site name.</param>
            <param name="className">Class name.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEventLogger">
            <summary>
            Provides logging to event log for document actions
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEventLogger.#ctor(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="treeNode">Document context for the action to log</param>
            <param name="eventSource">Event source</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEventLogger.Log(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Logs document action to the event log.
            </summary>
            <param name="eventCode">Event code</param>
            <param name="eventDescription">Event description</param>
            <param name="logDocumentFieldChanges">Indicates if log should contain the changes to particular document document fields</param>
            <param name="eventType">Type of the event. Please use predefined constants from <see cref="T:CMS.EventLog.EventType"/> class.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters">
            <summary>
            Parameters for page insertion as link using <see cref="T:CMS.DocumentEngine.DocumentHelper"/>.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters.Page">
            <summary>
            Page to insert.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters.Provider">
            <summary>
            Tree provider.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters.Parent">
            <summary>
            Parent under which the page is inserted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters.SourceData">
            <summary>
            Source data in case the page is being created based on another data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters.NewDocumentsOwner">
            <summary>
            Owner of the new documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters.IncludeChildNodes">
            <summary>
            Indicates if child nodes should be linked as well.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertAsLinkParameters.CopyPermissions">
            <summary>
            Indicates if the document permissions should be copied.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHelperInsertParameters">
            <summary>
            Parameters for page insertion using <see cref="T:CMS.DocumentEngine.DocumentHelper"/>.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertParameters.Page">
            <summary>
            Page to insert.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertParameters.Provider">
            <summary>
            Tree provider.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertParameters.Parent">
            <summary>
            Parent under which the page is inserted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertParameters.SourceData">
            <summary>
            Source data in case the page is being created based on another data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHelperInsertParameters.AllowCheckout">
            <summary>
            Indicates if page check out is allowed.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHierarchyHelper">
            <summary>
            Object hierarchy manipulation methods.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHierarchyHelper.NodeClassXMLRegex">
            <summary>
            Regex to parse node class id from xml data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHierarchyHelper.NodeClassJSONRegex">
            <summary>
            Regex to parse node class id from JSON data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.#ctor(CMS.DataEngine.TraverseObjectSettings,CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates new instance which can be used to serialize given object.
            </summary>
            <param name="settings">Settings of the serialization</param>
            <param name="node">TreeNode to serialize</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.TraverseNodeStructure(CMS.DataEngine.TraverseObjectSettings,CMS.DocumentEngine.TreeNode)">
            <summary>
            Traverses hierarchical structure of tree node and processes ID callbacks.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="node">TreeNode to serialize</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.TraverseNodeStructure(CMS.DataEngine.TraverseObjectSettings,CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Traverses hierarchical structure of tree node and processes ID callbacks.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="node">TreeNode to serialize</param>
            <param name="currentLevel">Current level of the object tree structure</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.TraverseConnectedObject(CMS.DataEngine.TraverseObjectSettings,CMS.DocumentEngine.TreeNode,CMS.DataEngine.TraverseObjectSettings,System.String)">
            <summary>
            Traverses the internal connected object
            </summary>
            <param name="settings">Traverse settings</param>
            <param name="node">Document node</param>
            <param name="childObjectSettings">Child object settings</param>
            <param name="colName">Column name referring to the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.TraverseTreeCollection(CMS.DataEngine.TraverseObjectSettings,System.Collections.Generic.IEnumerable{CMS.DocumentEngine.TreeNode},System.String,System.Int32)">
            <summary>
            Exports given TreeNode collection.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="collection">Collection to export</param>
            <param name="name">Name of the collection</param>
            <param name="currentLevel">Current level of the object tree structure</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromXML(CMS.DocumentEngine.TreeNode,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="xml">XML data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateOnlySpecifiedColumns">If true, only column contained in the <paramref name="xml"/> data are loaded (columns which are not contained are not set to null)</param>
            <param name="prepareStructure">If true, in create mode the structure of data set is prepared in advanced (causes the whole process to be case sensitive)</param>
            <param name="cultureName">Name of the culture to use for parsing double and datetime values</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromJSON(CMS.DocumentEngine.TreeNode,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Loads objects data including collection from a given JSON representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="json">JSON data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateOnlySpecifiedColumns">If true, only column contained in the <paramref name="json"/> data are loaded (columns which are not contained are not set to null)</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
            <param name="cultureName">Culture name used for parsing values from JSON.</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet,System.Boolean,System.Int32,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Loads TreeNode data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectNode">If true, node collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="id">ID of the object to identify it within the DataSet</param>
            <param name="columnsToUpdate">List of columns which will be updated</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetNodeClassName(System.String,CMS.DataEngine.ExportFormatEnum)">
            <summary>
            Parses NodeClassName from node data.
            </summary>
            <param name="nodeData">Node data</param>
            <param name="format">Format of the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetNodeClassName(System.String,CMS.DataEngine.ExportFormatEnum,System.Boolean)">
            <summary>
            Parses NodeClassName from node data.
            </summary>
            <param name="nodeData">Node data</param>
            <param name="format">Format of the data</param>
            <param name="tryToGetByClassId">Tries to get the name by extracting class identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="columnsToUpdate">List of columns to update</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetSyndicationItem(System.ServiceModel.Syndication.SyndicationContent)">
            <summary>
            Gets the syndication item created from current object
            </summary>
            <param name="content">Content</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.ProcessObjectMethod(CMS.DataEngine.TraverseObjectSettings,CMS.Base.ICMSObject,System.Int32)">
            <summary>
            Handles export to required format.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="obj">Object (TreeNode / Info Object) to process</param>
            <param name="currentLevel">Current level within the object tree structure</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetMetadataSource">
            <summary>
            Gets the metadata source object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.ExportObjectData">
            <summary>
            Exports the object data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.DataAvailable">
            <summary>
            Returns true if the data can be exported
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.InsertSourceData">
            <summary>
            Source data for the <see cref="T:CMS.DocumentEngine.TreeNode"/> insertion.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.InsertSourceData.#ctor(System.Int32)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.InsertSourceData"/> class.
            </summary>
            <param name="nodeId">Node ID of source page.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InsertSourceData.#ctor(System.Collections.Generic.IEnumerable{CMS.DocumentEngine.Routing.Internal.CulturePageUrlSlug})">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.InsertSourceData"/> class.
            </summary>
            <param name="pageUrlPathSlugs">Source page URL path slugs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InsertSourceData.GetPageUrlPathSlugs">
            <summary>
            Gets the list of page URL path slugs to be used as source ones.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.NodeSelectionParameters">
            <summary>
            Structure to define the selection parameters for a document nodes selection
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodeSelectionParameters.mCombineWithDefaultCulture">
            <summary>
            Combine with default culture
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SiteName">
            <summary>
            Nodes site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.AliasPath">
            <summary>
            Node alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.CultureCode">
            <summary>
            Nodes culture code
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.CombineWithDefaultCulture">
            <summary>
            Specifies if return the default culture document when specified culture not found
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.ClassNames">
            <summary>
            List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.Where">
            <summary>
            Where condition to use for the data selection
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.OrderBy">
            <summary>
            Order by clause to use for the data selection
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.MaxRelativeLevel">
            <summary>
            Maximal child level of the selected nodes
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SelectOnlyPublished">
            <summary>
            Select only published nodes
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.TopN">
            <summary>
            Select top N rows only
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.Columns">
            <summary>
            Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SelectAllData">
            <summary>
            If true, the coupled data are retrieved in case class names are specified
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SelectSingleNode">
            <summary>
            If true, single node selection takes place (escapes query like patterns)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.CheckLicense">
            <summary>
            If true, the selection checks license conditions
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.RelationshipNodeGUID">
            <summary>
            Defines node GUID of the related document. Only document in relation with this document will be included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.RelationshipName">
            <summary>
            Defines name of the relationship. If not provided documents from all relationships will be retrieved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.RelationshipSide">
            <summary>
            Defines side of the related document within the relation. Both sides are used by default.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SelectLatestVersion">
            <summary>
            Indicates if latest edited version of the documents should be selected.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NodeSelectionParameters.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NodeSelectionParameters.GetResolvedClassNames">
            <summary>
            Gets list of resolved class names in context of parameters.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NodeSelectionParameters.GetNodeAliasPathForSelection">
            <summary>
            Gets node alias path for selection. If single document should be retrieved, path is escaped.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentPathsUpdater">
            <summary>
            Updates NodeAliasPath of the document and all the descending documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.DocumentPathsUpdater"/>.
            </summary>
            <param name="node">Document which changes need to be propagated to the descendants</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.UpdateOtherCultureVersionsAndDescendantsPathsForUpdate">
            <summary>
            Updates the paths for rest of the culture versions of given document and its descendants when document gets updated. 
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.UpdateDocumentPathsForInsert(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Updates paths for document when inserting a new document.
            </summary>
            <param name="parent">Parent document where the document is being inserted</param>
            <param name="ensureAlias">Indicates if node alias value should be ensured</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.UpdateDocumentNodeAlias">
            <summary>
            Updates node alias value based on document name changes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.UpdateDocumentNodeAliasPathBasedOnIDForInsert(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Updates node alias path for insert if path is based on ID column of a document.
            </summary>
            <returns>Returns <c>true</c> if node data should be updated.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.UpdateDocumentPathsForLink(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Updates paths for document when inserting a link.
            </summary>
            <param name="parentNodeData">Node data of the parent document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.UpdateDocumentPathsForNewCultureVersion(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Updates paths for document when inserting a new culture version of a document.
            </summary>
            <param name="parentNodeData">Node data of the parent document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPathsUpdater.UpdateDocumentPathsForUpdate(CMS.DocumentEngine.Internal.DocumentNodeDataInfo)">
            <summary>
            Updates paths for document when updating document properties.
            </summary>
            <param name="parentNodeData">Node data of the parent document</param>
        </member>
        <member name="T:CMS.DocumentEngine.SiteRootCreationSettings">
            <summary>
            Class containing settings to be used for site root creation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.SiteRootCreationSettings.SiteName">
            <summary>
            Site name of the site for which the root document is created
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.SiteRootCreationSettings.Culture">
            <summary>
            Code of a culture in which the root document is created
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.SiteRootCreationSettings.NodeGUID">
            <summary>
            Node GUID to be used for site root document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.SiteRootCreationSettings.DocumentGUID">
            <summary>
            Document GUID to be used for site root document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.SiteRootCreationSettings.ACLGUID">
            <summary>
            ACL GUID to be used for ACL of the site root document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SiteRootCreationSettings.#ctor(System.String)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.SiteRootCreationSettings"/> class.
            </summary>
            <param name="siteName">Site name of the site to create the root document for</param>
        </member>
        <member name="M:CMS.DocumentEngine.SiteRootCreationSettings.#ctor(System.String,System.Guid,System.Guid,System.String)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.SiteRootCreationSettings"/> class.
            </summary>
            <param name="siteName">Site name of the site to create the root document for</param>
            <param name="nodeGuid">Existing root node GUID</param>
            <param name="documentGuid">Existing root document GUID</param>
            <param name="culture">Culture code in which the root document is created; site's default culture is used if not specified</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNode">
            <summary>
            Represents a document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.TYPEINFO">
            <summary>
            Type information
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mClassName">
            <summary>
            Node class name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mDocumentContent">
            <summary>
            Document editable content.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mWorkflowStep">
            <summary>
            Document workflow step
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mWorkflowStepTimeout">
            <summary>
            Document workflow step timeout
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mParent">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mGroupedAttachments">
            <summary>
            Grouped attachments.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.isInDocumentHelper">
            <summary>
            If true, the document is currently in the document helper and should call normal methods.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.pageUrlPath">
            <summary>
            Holds corresponding <see cref="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathUrlPath"/> if the page was loaded by <see cref="T:CMS.DocumentEngine.DocumentQuery"/> or <see cref="T:CMS.DocumentEngine.MultiDocumentQuery"/>
            with <see cref="M:CMS.DocumentEngine.Routing.PageUrlPathsDocumentQueryExtensions.WithPageUrlPaths``2(CMS.DocumentEngine.IDocumentQuery{``0,``1},System.Boolean)"/> parametrization.
            The field is not intended for direct usage.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DataClassInfo">
            <summary>
            DataClass info
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DataLoader">
            <summary>
            Data loader to load the data for <see cref="T:CMS.DocumentEngine.TreeNode"/> components.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeData">
            <summary>
            Document tree node data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CultureData">
            <summary>
            Document culture specific data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CoupledData">
            <summary>
            Document coupled fields data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.HideTypeSpecificColumns">
            <summary>
            If true, the document specific columns are hidden from the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ObjectStatus">
            <summary>
            Gets current status of the object.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowManager">
            <summary>
            Workflow manager instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.VersionManager">
            <summary>
            Version manager instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ClassName">
            <summary>
            Class name in format application.class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeClassName">
            <summary>
            Node class name in format application.class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsCoupled">
            <summary>
            Indicates whether the document contains coupled data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.HasSKU">
            <summary>
            Indicates whether the document contains SKU data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsLink">
            <summary>
            Indicates whether the document is link to another document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.OriginalNodeID">
            <summary>
            Original node ID. Represents NodeID for standard document, LinkedNodeID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.OriginalNodeSiteID">
            <summary>
            Original node site ID. Returns NodeSiteID for standard document, LinkedNodeSiteID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentContent">
            <summary>
            Document content.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CoupledClassIDColumn">
            <summary>
            Name of the coupled class ID column.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.SearchType">
            <summary>
            Returns search type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.LogEvents">
            <summary>
            If true, Events tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.LogEventsInternal">
            <summary>
            Indicates if the record should be logged to Event log for document actions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsDefaultCulture">
            <summary>
            If true, the document is in the default culture for the given web site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.PrioritizedProperties">
            <summary>
            List of properties which should be prioritized in the macro controls (IntelliSense, MacroTree).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AbsoluteURL">
            <summary>
            Gets document absolute URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.RelativeURL">
            <summary>
            Gets document relative URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Owner">
            <summary>
            Document owner
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ObjectDisplayName">
            <summary>
            Object display name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ObjectParent">
            <summary>
            Object parent
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Parent">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ConnectedDocuments">
            <summary>
            Connected documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Children">
            <summary>
            Collection of child nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AllChildren">
            <summary>
            Collection of all child nodes from all levels.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Links">
            <summary>
            Collection of linked nodes, including the original.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CultureVersions">
            <summary>
            Collection of all culture versions of this document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentsOnPath">
            <summary>
            Collection of documents on the path to the current document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.GroupedAttachments">
            <summary>
            Document grouped attachments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Tags">
            <summary>
            Collection of document tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Categories">
            <summary>
            Collection of document categories.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AllAttachments">
            <summary>
            Collection of all document attachments (all field, grouped and unsorted).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Attachments">
            <summary>
            Collection of unsorted document attachments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.VersionHistory">
            <summary>
            Collection of the version history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AttachmentHistory">
            <summary>
            Collection of the attachment history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowHistory">
            <summary>
            Collection of the workflow history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.RelatedDocuments">
            <summary>
            Related documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsSecuredNode">
            <summary>
            Indicates if the security should be checked for this node. The 'null' value means that the value is inherited from the parent node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeName">
            <summary>
            Node name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeAlias">
            <summary>
            Node alias.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeAliasPath">
            <summary>
            Node alias path. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeGUID">
            <summary>
            Node GUID to identify document node within site tree.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeHasChildren">
            <summary>
            Indicates if node has children.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeHasLinks">
            <summary>
            Indicates if node has links.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeID">
            <summary>
            Node ID. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeParentID">
            <summary>
            Document parent node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeLevel">
            <summary>
            Document node level. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeSiteID">
            <summary>
            Node site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeSiteName">
            <summary>
            Node site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Site">
            <summary>
            Site of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeOrder">
            <summary>
            Node order in sibling sequence. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeOwner">
            <summary>
            Node owner, read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeSKUID">
            <summary>
            E-commerce SKU (product) ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeACLID">
            <summary>
            ID of a access controller list assigned to the node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeIsACLOwner">
            <summary>
            Indicates if node owns its ACL item
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeLinkedNodeID">
            <summary>
            ID of a document to which this linked document is related.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeLinkedNodeSiteID">
            <summary>
            Site ID of a document to which this linked document is related.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentName">
            <summary>
            Document name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCulture">
            <summary>
            Document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentForeignKeyValue">
            <summary>
            Document foreign key value
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStepName">
            <summary>
            Document workflow step name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStepType">
            <summary>
            Document workflow step type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStep">
            <summary>
            Document workflow step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStepTimeout">
            <summary>
            Document workflow step timeout date (for steps with timeout).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsPublished">
            <summary>
            Indicates whether the document is published.
            </summary>
            <remarks>
            Publish state is determined based on workflow state and publish from/to values.
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCanBePublished">
            <summary>
            Indicates whether document can be considered as published from perspective of workflow state. Publish from/to values are ignored.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsArchived">
            <summary>
            Indicates whether the document is archived.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsInPublishStep">
            <summary>
            Indicates whether the node is in published step disregarding publish from/to values.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsCheckedOut">
            <summary>
            Indicates whether the document is checked out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.PublishedVersionExists">
            <summary>
            Indicates whether there is a published version for current document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPublishFrom">
            <summary>
            Indicates from when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPublishTo">
            <summary>
            Indicates to when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentUnpublishedRedirectUrl">
            <summary>
            URL to which visitors should be redirected when current document is unpublished.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentTags">
            <summary>
            Document tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentTagGroupID">
            <summary>
            Document tag group ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPublishedVersionHistoryID">
            <summary>
            Document published version history ID (latest published document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCheckedOutVersionHistoryID">
            <summary>
            Document checked out version history ID (latest document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCheckedOutByUserID">
            <summary>
            ID of a user who has checked the document out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentWorkflowStepID">
            <summary>
            Document workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentIsArchived">
            <summary>
            Indicates whether document is archived.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentWorkflowActionStatus">
            <summary>
            Returns string representing workflow action status.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentSearchExcluded">
            <summary>
            Indicates whether the document will be excluded from search.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentGUID">
            <summary>
            GUID to identify the document within site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentWorkflowCycleGUID">
            <summary>
            Workflow cycle GUID to obtain preview link for document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentIsWaitingForTranslation">
            <summary>
            Indicates whether the document is in the process of translation (submitted to a translation service).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCreatedByUserID">
            <summary>
            ID of a user who has created the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCreatedWhen">
            <summary>
            Date and time when the document was created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCheckedOutWhen">
            <summary>
            Date and time when was the document checked out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentLastPublished">
            <summary>
            Date and time when was the document last published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentLastVersionName">
            <summary>
            Document last version name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentLastVersionNumber">
            <summary>
            Document last version number.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentModifiedByUserID">
            <summary>
            ID of a user who modified the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentModifiedWhen">
            <summary>
            Date and time when was the document modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPageDescription">
            <summary>
            Document page description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPageTitle">
            <summary>
            Document page title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPageKeyWords">
            <summary>
            Document page key words.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentNodeID">
            <summary>
            Document web parts.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Connected">
            <summary>
            Connected objects
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentShowInMenu">
            <summary>
            Indicates that the page is included if web site menu.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.NewObject(CMS.DataEngine.LoadDataSettings)">
            <summary>
            Creates a new object from the given DataRow
            </summary>
            <param name="settings">Data settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New">
            <summary>
            Creates new instance of an empty un-typed TreeNode.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New(System.Data.DataRow)">
            <summary>
            Creates new instance of given class which must inherit TreeNode and fill it with given data.
            </summary>
            <param name="dataRow">Data row containing both tree node and coupled data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New(System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit TreeNode.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New(System.String,System.Data.DataRow,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit TreeNode and fill it with given data.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="dataRow">Data row containing both tree node and coupled data</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New``1(System.String)">
            <summary>
            Creates new instance of given class which must inherit specified node type and fill it with given data.
            </summary>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New``1(System.Data.DataRow)">
            <summary>
            Creates new instance of given class which must inherit specified node type and fill it with given data.
            </summary>
            <param name="dataRow">Data row containing both tree node and coupled data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New``1(System.String,System.Data.DataRow,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit specified node type and fill it with given data.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="dataRow">Data row containing both tree node and coupled data</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New``1(System.String,CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit specified node type and fill it with given data.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="data">Data container containing both tree node and coupled data</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.NewInstance``1(System.String)">
            <summary>
            Creates a new instance of the given type
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.#ctor">
            <summary>
            Empty constructor, allowed only if Initialize is called immediately after it.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.#ctor(System.String)">
            <summary>
            Base constructor for inherited classes and internal purposes.
            </summary>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Initialize(System.String,System.Data.DataRow,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing node from data row.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="dr">Data row containing all tree node, document and coupled table</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Initialize(System.String,CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing node from data row.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="data">Data container containing all tree node, document and coupled table</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureDefaultValues">
            <summary>
            Sets the document default values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.LoadData(CMS.DataEngine.LoadDataSettings)">
            <summary>
            Loads the object data from given data container.
            </summary>
            <param name="settings">Data settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetPropertyType(System.String)">
            <summary>
            Returns the type of given property.
            </summary>
            <param name="propertyName">Property name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RegisterProperties">
            <summary>
            Registers properties of this object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.TryGetProperty(System.String,System.Object@)">
            <summary>
            Obtains value of specified property.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetReferencedObject(System.String,System.Object@)">
            <summary>
            Obtains the object to which the particular column refers.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Result object</param>
            <returns>Returns true if the operation was successful (the object was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.TryGetValue(System.String,System.Object@)">
            <summary>
            Obtains value of given column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Result value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified node column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
            <returns>Returns true if the operation was successful</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetIntegerValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the integer value of the Tree node.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
            <param name="allowZero">If false, only positive values are valid</param>
            <returns>Returns true if the value was changed</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specific column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ResetChanges">
            <summary>
            Resets the object changes and keeps the new values as unchanged.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DataChanged">
            <summary>
            Returns true if the object has changed.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InitializeClassName(System.String)">
            <summary>
            Initializes class name
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RefreshNodeDataClassId">
            <summary>
            Refreshes node data class ID value based on data class info
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureCoupledDataReference">
            <summary>
            Ensures reference for the coupled data if not set
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertCoupledData">
            <summary>
            Inserts the internal coupled data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateCoupledData">
            <summary>
            Updates the coupled data of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertTreeNodeData(CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts the CMS_Tree part of the document node.
            </summary>
            <param name="parent">Parent node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateTreeNodeData">
            <summary>
            Updates the CMS_Tree part of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertCultureData">
            <summary>
            Inserts the CMS_Document part of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateCultureData">
            <summary>
            Updates the CMS_Document part of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetTranslatedCultures">
            <summary>
            Gets list of culture codes to which is the document translated to.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.IsTranslated(System.String)">
            <summary>
            Indicates if document is translated to the given culture.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetTranslatedCultureData">
            <summary>
            Gets culture data for all document culture versions
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetDocumentNameSource(System.String)">
            <summary>
            Sets the document name source field to the given value.
            </summary>
            <param name="value">Document name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetDocumentNameSource(System.String,System.Boolean)">
            <summary>
            Sets the document name source field to the given value.
            </summary>
            <param name="value">Document name</param>
            <param name="onlyIfEmpty">Indicates if value should only be set if the current value is empty</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MapDocumentName">
            <summary>
            Maps the document name based on the document type settings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Insert">
            <summary>
            Hides the insert method without parameter. Do not use!
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Insert(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parent">Parent node</param>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertInternal(CMS.DocumentEngine.TreeNodeInsertParameters)">
            <summary>
            Inserts the page based on given parameters.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertNode(CMS.DocumentEngine.TreeNodeInsertParameters)">
            <summary>
            Inserts current node under specified parent node. The current node is inserted as root if parent node is null.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetAsRoot">
            <summary>
            Sets current node properties to be root node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsNewCultureVersion(System.String,System.Boolean)">
            <summary>
            Inserts current node as new culture version of the same document.
            </summary>
            <param name="cultureCode">Culture code of new culture version (If not specified, node.DocumentCulture property is used.)</param>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsNewCultureVersionInternal(System.String)">
            <summary>
            Inserts current node as a new culture version of the specified document.
            </summary>
            <param name="cultureCode">Culture code of new culture version (If not specified, node.DocumentCulture property is used.)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ResetTranslationFlag">
            <summary>
            Clears 'Document is waiting for translation' flag.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsLink(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="useDocumentHelper">If true, the document helper is used</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsLinkInternal(CMS.DocumentEngine.TreeNodeInsertAsLinkParameters)">
            <summary>
            Inserts the page as a link based on given parameters.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertNodeAsLink(CMS.DocumentEngine.TreeNodeInsertAsLinkParameters)">
            <summary>
            Inserts the page as a link based on given parameters.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Update">
            <summary>
            Updates node data in the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Update(System.Boolean)">
            <summary>
            Updates node data in the database.
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateInternal">
            <summary>
            Updates node data in the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SubmitChanges(System.Boolean)">
            <summary>
            Submits the changes in the object to the database.
            </summary>
            <param name="withCollections">If true, also submits the changes in the children of the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SubmitChanges(System.Boolean,CMS.DocumentEngine.TreeNode)">
            <summary>
            Submits the changes in the object to the database.
            </summary>
            <param name="withCollections">If true, also submits the changes in the children of the object</param>
            <param name="parentDocument">Parent document, needed for new documents</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteAllCultures">
            <summary>
            Deletes all the culture versions of the specified node including the child nodes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Destroy">
            <summary>
            Destroys the document with its version history. Destroys only this culture version of the document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Delete">
            <summary>
            Deletes the document to the recycle bin. Deletes only this culture version of the document to the recycle bin, including the bound product.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Delete(System.Boolean)">
            <summary>
            Deletes the document to the recycle bin. Deletes only this culture version of the document to the recycle bin, including the bound product.
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Delete(System.Boolean,System.Boolean)">
            <summary>
            Deletes the document.
            </summary>
            <param name="deleteAllCultures">Indicates if all culture versions of the specified document should be deleted</param>
            <param name="destroyHistory">Indicates if document history should be deleted as well</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteInternal(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Deletes single culture version of a node from the database. If node is last node culture version, deletes also the child nodes of all culture versions.
            </summary>
            <param name="settings">Delete document settings. Please note settings for version history and culture versions are not applied since this functionality is not supported in this context.</param>
            <remarks>If deleted node is the root node it will not be deleted. Only child nodes will be deleted and no exception will be thrown.</remarks>
            <returns>Returns true if last culture (Tree record) has been deleted</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RemoveDocumentDependencies(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Removes document dependencies.
            </summary>
            <param name="settings">Delete document settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ChangeToLink(System.Int32)">
            <summary>
            Changes the document node to the link to another document.
            </summary>
            <param name="linkedNodeId">Node to link</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ChangeNodeDocumentType(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Ensures changing the underlying database structure of a given document to its document type.
            Changes only the published data of the document type (CMS_Document and coupled data). Fills missing values with the data from given document node.
            </summary>
            <param name="node">Document node to change with new data</param>
            <param name="originalClassName">Original class name of the document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Clone``1">
            <summary>
            Returns a clone of the node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CopyDataTo(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.CopyNodeDataSettings)">
            <summary>
            Copies the node data to the destination node according to the settings.
            </summary>
            <param name="destNode">Destination node</param>
            <param name="settings">Copy settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.LoadInheritedValues(System.String[],System.Boolean)">
            <summary>
            Loads the inherited values to the node.
            </summary>
            <param name="columns">Columns to load</param>
            <param name="allCultures">Indicates if all culture versions of the parent documents will be taken in account</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetInheritedValue(System.String,System.Boolean)">
            <summary>
            Returns the inherited value for the document.
            </summary>
            <param name="column">Column name</param>
            <param name="allCultures">All cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetOriginalDataSet">
            <summary>
            Returns the DataSet of node data. For linked documents data of original document is included.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetDataSet">
            <summary>
            Returns the DataSet of the node data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetDataRowColumn(System.Data.DataRow,System.String,System.Object)">
            <summary>
            Sets the value for the column in the DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetObjectKey">
            <summary>
            Gets the unique string key for the object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetPreviewLink(System.Guid,System.String)">
            <summary>
            Returns the page preview link URL.
            </summary>
            <param name="userGuid">User GUID to be stored in the preview link URL.</param>
            <param name="cultureCode">Culture code for which the preview link should be generated.</param>
            <remarks>
            Preview link URL can be used by external users. This URL does not need additional authentization.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetDocumentName">
            <summary>
            Returns friendly document name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckIn(System.String,System.String)">
            <summary>
            Checks the document in.
            </summary>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckOut">
            <summary>
            Checks the document out.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UndoCheckOut">
            <summary>
            Rolls the checkout operation of the document back.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CreateNewVersion">
            <summary>
            Creates new document version. (Moves document to edit step.)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToPreviousStep(System.String)">
            <summary>
            Moves the document to a previous step in the workflow (rejects the document).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToNextStep(System.String)">
            <summary>
            Moves the document to a next step in the workflow (sends the document to approval, approves or publishes the document based on the current workflow status).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToFirstStep(System.String)">
            <summary>
            Moves the document to first step in the workflow (removes the workflow information if document is not under a workflow anymore).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToPublishedStep(System.String)">
            <summary>
            Moves the document directly to published workflow step (moves document directly to publish step, skips all following steps).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Archive(System.String)">
            <summary>
            Archives the document.
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Publish(System.String)">
            <summary>
            Publishes the document (moves document to publish step through all following steps). If there is not only one path to published step, document stays in the last step it reached.
            </summary>
            <param name="comment">Comment</param>
            <returns>TRUE if document is moved to publish step.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetWorkflow">
            <summary>
            Gets node current workflow (depends on document current workflow step or if document is under a workflow scope).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetWorkflowStep">
            <summary>
            Gets the document workflow step
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetUpperTree(System.String,System.Boolean)">
            <summary>
            Returns the upper tree data for given document.
            </summary>
            <param name="columns">Columns to get</param>
            <param name="allCultures">All cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureLinksSite">
            <summary>
            Ensures target site of the linked documents if site changes
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetNodeIDsQueryByPathAndSite">
            <summary>
            Gets query for node IDs based on site and alias path
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateDocumentContent">
            <summary>
            Updates the content of the document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteChildNodes">
            <summary>
            Deletes the child nodes of all culture versions under the specified parent node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RegisterGroupedAttachments(CMS.DocumentEngine.DocumentAttachmentRepository)">
            <summary>
            Registers the grouped attachments for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetDocumentInternal(System.Boolean)">
            <summary>
            Updates the document using appropriate provider.
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsNewCultureVersionWithMoveSupport(System.Boolean)">
            <summary>
            Inserts the document as new culture version.
            If parent node changed, also moves the document to a new location. This is done in two steps, insert new culture version and then move.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckPermissionsWithHandler(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="currentSiteName">Name of the current context site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetLocalColumnNames">
            <summary>
            Gets the list of local column names for particular object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetTypeSpecificColumnNames">
            <summary>
            Gets the column names that are specific to the type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetObjectName">
            <summary>
            Returns object name combining object type name and object display name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetFullObjectName(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the name of the object within its parent hierarchy.
            </summary>
            <param name="includeParent">If true, the parent object name is included to the object name</param>
            <param name="includeSite">If true, the site information is included if available</param>
            <param name="includeGroup">If true, the group information is included if available</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSiblingsWhereCondition">
            <summary>
            Creates where condition according to Parent, Group and Site settings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetOrderIdentityWhereCondition">
            <summary>
            Gets order identity where condition to identify the correct node data which are currently ordered
            </summary>
            <remarks>
            Includes only NodeID to correct identify the node data and doesn't matter which culture uses.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetObjectOrderID">
            <summary>
            Returns ID of the item being ordered (i.e. NodeID).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSiblingsQueryInternal(System.Action{CMS.DataEngine.DataQuerySettings})">
            <summary>
            Gets the parametrized query to get siblings of the document. Uses best matching culture and filters out all culture versions of the current document.
            </summary>
            <remarks>
            The culture is taken preferably from the current node instance or default culture of the site or any other existing culture version.
            </remarks>
            <param name="parameters">Parameters for the data retrieval</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetObjectOrderPostprocessing">
            <summary>
            Method which is called after the order of the object was changed. Generates staging tasks and webfarm tasks by default.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InitObjectsOrderPostprocessing">
            <summary>
            Method called after the InitObjectOrder method is called. Override this to do further actions after order initialization. Does nothing by default.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetOrderQueryParameters(System.String,System.String,System.Boolean)">
            <summary>
            Creates QueryDataParameters with special macros for object order management.
            </summary>
            <param name="orderColumn">Name of the order column. If null, OrderColumn from TypeInfo is taken</param>
            <param name="nameColumn">Name of the column by which the order should be initialized (if not set, displayname column is used)</param>
            <param name="asc">If true the order will be ascending (default is true)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ClearCache">
            <summary>
            Clears the document cache.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ClearCache(System.String)">
            <summary>
            Clears the document cache.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchID">
            <summary>
            Returns an unique id of current object for search index (documentid;nodeid).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchFields(CMS.DataEngine.ISearchIndexInfo,CMS.DataEngine.ISearchFields)">
            <summary>
            Returns search fields collection. When existing collection is passed as argument, fields will be added to that collection.
            When collection is not passed, new collection will be created and return.
            Collection will contain field values only when collection with StoreValues property set to true is passed to the method.
            When method creates new collection, it is created with StoreValues property set to false.
            </summary>
            <param name="index">Search index</param>
            <param name="searchFields">Search fields collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchDocument(CMS.DataEngine.ISearchIndexInfo)">
            <summary>
            Returns document with dependence on current object type and index.
            </summary>
            <param name="index">Search index info</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureConsistency">
            <summary>
            Ensures data consistency.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetFieldDocumentAttachment(System.String)">
            <summary>
            Retrieves the attachment associated with the specified field of type File.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The attachment associated with the specified field, if found; otherwise, null.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fieldName"/> is null.</exception>
            <remarks>
            This method returns null if the specified field does not exist or there is no associated attachment.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetFieldDocumentAttachments(System.String)">
            <summary>
            Retrieves an enumerable collection of attachments associated with the specified field of type Attachments.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>An enumerable collection of attachments associated with the specified field of type Attachments.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fieldName"/> is null.</exception>
            <remarks>
            This method returns an empty collection if the specified field does not exist or there are no associated attachments.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetRelatedDocuments(System.String)">
            <summary>
            Retrieves an enumerable collection of documents related to the current document with the relationship name given by specified field.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>An enumerable collection of documents related to the current document with the relationship name given by specified field.</returns>
            <remarks>
            This method returns an empty collection if the specified field does not exist or there are no associated related pages.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureDefaultDataForUpdate">
            <summary>
            Ensures default data for updating node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureDefaultDataForInsertNewCulture">
            <summary>
            Ensures the default data for inserting new culture version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureDefaultDataForInsert">
            <summary>
            Ensures the default data for the inserting new document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureDefaultData">
            <summary>
            Ensures default data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateTimeStamps(System.Boolean)">
            <summary>
            Updates Created and Modified timestamps
            </summary>
            <param name="updateCreatedWhen">Indicates if CreatedWhen should be updated</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateUserStamps(System.Boolean,System.Boolean)">
            <summary>
            Updates CreatedBy and ModifiedBy user stamps
            </summary>
            <param name="updateOwner">Indicates if NodeOwner should be updated</param>
            <param name="updateCreatedBy">Indicates if CreatedBy should be updated</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSiteName">
            <summary>
            Gets site name. Throws exception when site is not specified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureInitialOrder(System.String)">
            <summary>
            Ensures initial node order based on settings
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateNodeName">
            <summary>
            Updates node name value based on document name changes
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ClassNodeAliasSourceDefined">
            <summary>
            Indicates if node document type has node alias source field defined.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetParentNode">
            <summary>
            Gets document parent in best matching culture version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureRootProperties">
            <summary>
            Ensures consistent properties for root document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.LoadComponentsData(CMS.Base.IDataContainer)">
            <summary>
            Loads internal components from the given data source
            </summary>
            <param name="data">Source data to load</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetOriginalNodeIDForInsert">
            <summary>
            Returns <see cref="P:CMS.DocumentEngine.TreeNode.NodeID"/> for original document or <see cref="P:CMS.DocumentEngine.TreeNode.NodeLinkedNodeID"/> if the document represents a link.
            </summary>
            <remarks>This method is intended to be used in context of insertion of a document since the <see cref="P:CMS.DocumentEngine.TreeNode.OriginalNodeID"/> is not initialized yet.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetComponents">
            <summary>
            Gets the list of internal components
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetComponents(System.Collections.Generic.IEnumerable{CMS.DataEngine.IInfo})">
            <summary>
            Sets the list of internal components
            </summary>
            <param name="components">List of components</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeInsertAsLinkParameters">
            <summary>
            Parameters for <see cref="T:CMS.DocumentEngine.TreeNode"/> insertion as link.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeInsertAsLinkParameters.Parent">
            <summary>
            Parent under which the page is inserted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeInsertAsLinkParameters.SourceData">
            <summary>
            Source data in case the page is being created based on another data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeInsertAsLinkParameters.UseDocumentHelper">
            <summary>
            Indicates if <see cref="T:CMS.DocumentEngine.DocumentHelper"/> should be used for the action.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeInsertAsLinkParameters.NewDocumentsOwner">
            <summary>
            Owner of the new documents.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeInsertParameters">
            <summary>
            Parameters for <see cref="T:CMS.DocumentEngine.TreeNode"/> insertion.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeInsertParameters.Parent">
            <summary>
            Parent under which the page is inserted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeInsertParameters.SourceData">
            <summary>
            Source data in case the page is being created based on another data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeInsertParameters.UseDocumentHelper">
            <summary>
            Indicates if <see cref="T:CMS.DocumentEngine.DocumentHelper"/> should be used for the action.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeProvider">
            <summary>
            Provides methods for management of the tree structure.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.PROCESSING_BATCH">
            <summary>
            Size of the batch when processing multiple documents
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_CULTURES">
            <summary>
            Supplementary constant to specify all document cultures.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_SITES">
            <summary>
            Supplementary constant to specify all sites.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_CLASSNAMES">
            <summary>
            Supplementary constant to specify all class names.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_DOCUMENTS">
            <summary>
            Supplementary constant to specify all documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_LEVELS">
            <summary>
            All relative levels.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UserInfo">
            <summary>
            Current user info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.CombineWithDefaultCulture">
            <summary>
            Indicates if returned nodes should be combined with appropriate nodes of default culture in case they are not localized. It applies only if you're using multilingual support. The default value is false.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.PreferredCultureCode">
            <summary>
            Preferred culture code to use when none set.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SelectQueryName">
            <summary>
            Base query name to use for the document selection (for the enhanced selection options only).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.MergeResults">
            <summary>
            If true, tables from result DataSet are merged into a single table.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SortMergedResults">
            <summary>
            If true, merged results are sorted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SynchronizeFieldValues">
            <summary>
            Indicates whether field values should be synchronized on set for the document (SKU mappings etc.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.FilterOutDuplicates">
            <summary>
            If true, duplicate (linked) items are filtered.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UseCustomHandlers">
            <summary>
            If true, custom handlers are used with Document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.GenerateNewGuid">
            <summary>
            If true, new GUID is generated for the inserted nodes where required.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.CheckUniqueNames">
            <summary>
            If true, unique node names, document names and aliases are checked against the database. Turn off only when you perform the validation by yourself.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.CheckLinkConsistency">
            <summary>
            If true, the linked document checks if the reference to its original is preserved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.AutomaticallyUpdateDocumentAlias">
            <summary>
            If true, the document alias should be automatically updated upon document name change.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.EnsureSafeNodeAlias">
            <summary>
            If true, node alias will include only allowed characters (turn off only when you perform the validation by yourself or the source data are already valdiated).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.CheckUniqueAttachmentNames">
            <summary>
            If true, unique attachment names within one document are checked against the database. Turn off only when you perform the validation by yourself.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateTimeStamps">
            <summary>
            If true, time stamps of the document are updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateUser">
            <summary>
            If true, user IDs of the document (creator, modifier) are updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdatePaths">
            <summary>
            Indicates if document name and URL paths should be updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateSKUColumns">
            <summary>
            If true, SKU columns of the document are updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateDocumentContent">
            <summary>
            If true, document content is updated from internal objects.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogEvents">
            <summary>
            If true, events are log on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogIntegration">
            <summary>
            If true, integration tasks are logged on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SelectAllData">
            <summary>
            If true, all data are selected. Otherwise only base document data are selected.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.EnableNotifications">
            <summary>
            Indicates whether notifications are sent when content changes occur (document updated/inserted/deleted,...). By default it is set to TRUE.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.AllowAsyncActions">
            <summary>
            Indicates whether asynchronous actions should be allowed (log synchronization tasks). By default it is set to TRUE.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.HandleACLs">
            <summary>
            Indicates whether the ACL operations should be performed during the document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.KeepCheckedInOnInsert">
            <summary>
            If true, the document stays checked in on the insert operation
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.GenerateUrlPathsOnInsert">
            <summary>
            If true, page URL paths (<see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/>) are generated on the insert operation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateUrlPathsOnParentChange">
            <summary>
            If true, page URL paths (<see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/>) are updated on the parent change within update operation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.ProviderObject">
            <summary>
            Returns search provider object.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateNodeName">
            <summary>
            If true, node name is automatically updated from the document name when needed
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.#ctor(CMS.Base.IUserInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="userInfo">Current user info object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.FilterOutLocalizedVersions(System.Data.DataSet,System.String,System.String,System.String)">
            <summary>
            Removes nodes of default culture that are translated to required language.
            </summary>
            <param name="ds">Original DataSet object containing both default and required language versions</param>
            <param name="siteName">Documents site name</param>
            <param name="preferredCulture">Required culture code</param>
            <param name="contextCulture">Culture code that allows to override currently preferred culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.FilterOutLocalizedRows(System.Data.DataTable,System.String)">
            <summary>
            Removes nodes of any culture that are translated to required language.
            </summary>
            <param name="dt">DataTable to filter</param>
            <param name="preferredCulture">Required culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.FilterOutDuplicateDocuments(System.Data.DataSet)">
            <summary>
            Filters out duplicate documents (linked ones).
            </summary>
            <param name="ds">Dataset containing the documents</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Searches data and returns results.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">List of class names to be searched in format application.class separated by semicolon.</param>
            <param name="filterResultsByReadPermission">Indicates if search results should be filtered by read permission for the current user. The default value is false</param>
            <param name="searchOnlyPublished">Indicates if only published documents should be searched</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Searches specified node and returns results.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">List of class names to be searched in format application.class separated by semicolon.</param>
            <param name="filterResultsByReadPermission">Indicates if search results should be filtered by read permission for the current user. The default value is false</param>
            <param name="searchOnlyPublished">Indicates if only published documents should be searched</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="combineWithDefaultCulture">Indicates if results will be combined with default culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.AttachmentSearch(CMS.Search.SearchParameters,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.String}@)">
            <summary>
            Searches attachment binary data for search expression.
            </summary>
            <param name="parameters">Search parameters</param>
            <param name="siteIds">Site Ids</param>
            <param name="highlights">Contains a list of words to be highlighted when this method returns.</param>
            <returns>DataSet with result</returns>
            <remarks>This method allows constraining the search to given <see cref="P:CMS.Search.SearchParameters.ClassNames"/>.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.RemoveCMSExcludeDocumentsFromSearch(System.Data.DataSet@,System.String)">
            <summary>
            Filters results with AliasPath in CMSExcludeDocumentsFromSearch key.
            </summary>
            <param name="searchResultDS">Search results to filter</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Guid,System.String,System.String)">
            <summary>
            Returns single node specified by node GUID, culture and site name. Does not include the coupled data.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Returns single node specified by node GUID, culture and site name. Does not include the coupled data.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Int32,System.String)">
            <summary>
            Returns single node specified by node ID and culture.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by node ID and culture, optionally combined with default culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
            <param name="cultureCode">Document culture to select</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="coupledData">If true, coupled data are also returned</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Int32,System.String,System.String)">
            <summary>
            Returns single node specified by specified node ID, culture and class name. Most efficient way of getting the document. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="culture">Culture code</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleDocument(System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by document ID. If the result is a link to another document original document is returned instead.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="coupledData">If true, coupled data are also returned</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String)">
            <summary>
            Returns single node specified by alias path, culture and site name.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by alias path, culture and site name matching the provided parameters.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="className">Node class name (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="checkPermissions">Indicates whether permissions should be checked.</param>
            <param name="selectCoupledData">Indicates whether coupled data should be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by alias path, culture and site name matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Node site name.</param>
            <param name="aliasPath">Node alias path.</param>
            <param name="cultureCode">Node culture code.</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product").</param>
            <param name="where">Where condition to use for the data selection.</param>
            <param name="orderBy">Order by clause to use for the data selection.</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes.</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture).</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(CMS.DocumentEngine.NodeSelectionParameters)">
            <summary>
            Returns single node matching the provided parameters.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Returns single node specified by node GUID, culture and site name. Does not include the coupled data.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by node ID and culture.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="coupledData">Indicates whether coupled data should be contained in the result.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleDocument``1(System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by document ID. If the result is a link to another document original document is returned instead.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="coupledData">Indicates whether coupled data should be contained in the result.</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by alias path, culture and site name.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="className">Node class name (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="checkPermissions">Indicates whether permissions should be checked.</param>
            <param name="selectCoupledData">Indicates whether coupled data should be contained in the result.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by alias path, culture and site name matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Node site name.</param>
            <param name="aliasPath">Node alias path.</param>
            <param name="cultureCode">Culture code.</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product").</param>
            <param name="where">Where condition for the data selection.</param>
            <param name="orderBy">Order by clause for the data selection.</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes.</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(CMS.DocumentEngine.NodeSelectionParameters)">
            <summary>
            Returns single node matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes">
            <summary>
            Gets the query for all published documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.String)">
            <summary>
            Gets the query for all published documents of specific type
            </summary>
            <param name="className">Class name representing document type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes``1">
            <summary>
            Gets the query for all published documents of specific type
            </summary>
            <typeparam name="NodeType">Type of the instances returned by the query.</typeparam>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.Int32,System.String,System.String)">
            <summary>
            Returns nodes specified by node ID, culture and site name. Multiple nodes are returned if ALL_CULTURES passed in cultureCode parameter. Does not select coupled data.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="cultureCode">Document culture - if null or empty string passed, ALL_CULTURES constant is used instead.</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns nodes specified by node alias path, culture and site name, optionally combined with default culture. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Nodes alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns nodes without coupled data specified by node alias path, culture and site name, optionally combined with default culture.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Nodes alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to node with this GUID.</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Indicates whether the related node is located on the left side of the relationship</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(CMS.DocumentEngine.NodeSelectionParameters)">
            <summary>
            Returns nodes matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="parameters">Selection parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodesCount(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns nodes count matching the provided parameters.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Nodes alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be counted in if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data count</param>
            <param name="orderBy">Order by clause for the data counting</param>
            <param name="maxRelativeLevel">Maximum child level of the counted nodes</param>
            <param name="selectOnlyPublished">Count only published nodes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.AllClasses(System.String)">
            <summary>
            Returns true if the given classNames value represents all classes
            </summary>
            <param name="classNames">Class names</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.AllSites(System.String)">
            <summary>
            Returns true if the given site name value represents all sites
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCultureWhereCondition(System.String,System.String,System.Boolean)">
            <summary>
            Returns where condition for given culture.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCompleteWhereCondition(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns the complete where condition based on the given parameters.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Node alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="where">Where condition for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetPublishedWhereCondition">
            <summary>
            Gets the where condition for published documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetClassNamesWhereCondition(System.String)">
            <summary>
            Returns where condition for given class names.
            </summary>
            <param name="classNames">List of class names separated by semicolon.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.InitNodeOrders(System.Int32,System.Int32)">
            <summary>
            Initializes the node order under specified parent node.
            </summary>
            <param name="parentId">Parent node ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeUp(CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves specified node up in the order sequence (up = smaller NodeOrder = closer to beginning in the navigation).
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeUp(System.Int32)">
            <summary>
            Moves specified node up in the order sequence (up = smaller NodeOrder = closer to beginning in the navigation).
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeDown(CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves specified node down in the order sequence (down = larger NodeOrder = further in the navigation).
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeDown(System.Int32)">
            <summary>
            Moves specified node down in the order sequence (down = larger NodeOrder = further in the navigation).
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="node">Node</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(System.Int32,System.Int32)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="node">Node</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(System.Int32,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SortNodesAlphabetically(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sort child nodes alphabetically by document name.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="siteId">Node site ID</param>
            <param name="ascending">Indicates whether the alphabetical order should be ascending or descending.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SortNodesByDate(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sort child nodes by the date of last modification.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="siteId">Node site ID</param>
            <param name="ascending">Indicates whether the sort should be from older to newer or vice versa.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.DeleteSiteTree(System.String)">
            <summary>
            Deletes site tree root. For purposes of site deletion.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CreateSiteRoot(System.String)">
            <summary>
            Creates site tree root. For purposes of site creation.
            </summary>
            <param name="siteName">Site name</param>
            <returns>Root node</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CreateSiteRoot(CMS.DocumentEngine.SiteRootCreationSettings)">
            <summary>
            Creates site tree root. For purposes of site creation.
            </summary>
            <param name="settings">Settings to be used for site root creation</param>
            <returns>Root node</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeSiteDefaultCulture(System.String,System.String)">
            <summary>
            Changes default culture of the site.
            </summary>
            <param name="siteName">Site name</param>
            <param name="newCultureCode">New default culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeSiteDefaultCulture(System.String,System.String,System.String)">
            <summary>
            Changes default culture of the site. Removes old culture from the site and adds the new one. Changes culture of the documents in the old culture to the new one.
            Doesn't handle collisions of existing documents in new culture.
            </summary>
            <param name="siteName">Site name</param>
            <param name="newCultureCode">New default culture code</param>
            <param name="oldCultureCode">Old default culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeCulture(System.String,System.String,System.String)">
            <summary>
            Changes culture of the documents in old culture to the new one.
            If there is an existing document in new culture, the old culture version is not changed to the new one.
            </summary>
            <param name="siteName">Site name</param>
            <param name="currentCulture">Current culture</param>
            <param name="newCulture">New culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.DeleteLinks(CMS.DocumentEngine.TreeNode)">
            <summary>
            Deletes all links including child documents to the specified node.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetOriginalNode(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Returns the original node for given link node in specified culture.
            </summary>
            <param name="node">Tree node</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDocument(CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates document from given data.
            </summary>
            <param name="data">Node data</param>
            <param name="tree">Tree provider for the new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDocument``1(CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates document from given data.
            </summary>
            <param name="data">Node data</param>
            <param name="tree">Tree provider for the new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ClearWorkflowInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the workflow information from the given tree node.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ClearCheckoutInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the checkout information from the given tree node.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCombineWithDefaultCulture(System.String)">
            <summary>
            Returns whether nodes should be combined with appropriate nodes of default culture if not localized. This applies only when using multilingual support. The default value is false.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CheckDocumentUIPermissions(System.String)">
            <summary>
            Returns whether document permissions should be checked in the content management UI.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnsureRequiredColumns(System.String)">
            <summary>
            Ensures columns required for selection in given column list. Returns the adjusted list
            </summary>
            <param name="columns">List of columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetQueryCultures(CMS.DocumentEngine.MultiDocumentQuery,System.String,System.Boolean)">
            <summary>
            Sets the query cultures to include proper combination of cultures for backward compatibility.
            Use only in case when your code uses string culture parameter, which may have TreeProvider.ALL_CULTURES value
            </summary>
            <param name="query">Query</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Combine with default culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeRelatedObjectsSite(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Handles related object of a document and its descendants when moving a document to a different site
            </summary>
            <param name="node">Moved document</param>
            <param name="targetSiteId">Target site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeDocumentRelatedObjectsSite(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Handles related objects of a single document when moved to different site.
            </summary>
            <param name="node">Document</param>
            <param name="targetSiteId">Target site ID</param>
            <param name="shouldMoveAlternativeUrls">Indicates if related alternative URLs should be moved too</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveAlternativeUrls(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Moves alternative URLs across the sites.
            If there is any conflict, the alternative URL is deleted to prevent any inconsistency.
            </summary>
            <param name="node">Document</param>
            <param name="targetSiteId">Target site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.RemoveCategories(System.Int32,System.Int32)">
            <summary>
            Removes document invalid categories from the target site
            </summary>
            <param name="documentId">Document ID</param>
            <param name="targetSiteId">Target site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveAttachments(System.Int32,System.Int32)">
            <summary>
            Moves attachments across the sites
            </summary>
            <param name="documentId">Document ID</param>
            <param name="targetSiteId">Target site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnsureDocumentTags(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Ensures the move action target site contains all of the tag groups and tags related to the document.
            </summary>
            <param name="node">Node to move</param>
            <param name="targetSiteId">Target site ID</param>
            <param name="handleTags">Indicates if tags should be handled (count updated etc.)</param>
            <param name="update">Indicates if the document should be updated if necessary</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnumerateChildren(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Enumerates child documents of given document in best matching culture version based on these priorities:
            1. Default culture version of the target site if provided
            2. Default culture version of document site
            3. document culture
            </summary>
            <param name="node">Document</param>
            <param name="targetSiteName">Target site name</param>
            <returns>Best matching culture version of each child document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetClassNames(CMS.DocumentEngine.MultiDocumentQuery)">
            <summary>
            Gets list of document types in the result set of the query.
            </summary>
            <param name="query">Multi-document query</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnumerateDescendants(CMS.DocumentEngine.TreeNode,CMS.DataEngine.WhereCondition)">
            <summary>
            Enumerates descendants of given document in the same culture version
            </summary>
            <param name="node">Document</param>
            <param name="where">Where condition to limit the set of descendants</param>
            <returns>Culture versions of each descendant matching the culture of the given node</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnumerateCultureVersions(CMS.DocumentEngine.TreeNode,System.String,System.Boolean)">
            <summary>
            Enumerates culture versions of given document in this specific order:
            1. Default culture version of the target site if provided
            2. Default culture version of document site
            3. Document culture
            </summary>
            <param name="node">Document</param>
            <param name="targetSiteName">Target site name</param>
            <param name="reverse">Reverse the priorities</param>
            <returns>Culture versions of given document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCultureVersionsWhereCondition(System.Int32)">
            <summary>
            Gets where condition for all culture versions of a node.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnumerateLinks(CMS.DocumentEngine.TreeNode)">
            <summary>
            Enumerates links of given document
            </summary>
            <param name="node">Document</param>
            <returns>Links of given document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCulturePriorities(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Gets list of cultures prioritized by following priorities:
            1. Default culture version of the target site if provided
            2. Default culture version of document site
            3. Document culture
            </summary>
            <param name="node">Document</param>
            <param name="targetSiteName">Target site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CopyNodePermissions(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode)">
            <summary>
            Copy node permissions
            </summary>
            <param name="sourceNode">Source node</param>
            <param name="targetNode">Target node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.HandleMoveNodePermissions(CMS.DocumentEngine.TreeNode)">
            <summary>
            Handles document permission within move action
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetInheritedACL(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Ensures given ACL is inherited by the given node
            </summary>
            <param name="node">Document node</param>
            <param name="aclId">ACL ID to be inherited by the node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnumerateCategories(System.Int32,System.Int32)">
            <summary>
            Enumerates document categories
            </summary>
            <param name="documentId">Document ID</param>
            <param name="targetSiteId">Target site ID</param>
            <returns>Tuple where the first item is category ID and the second item indicates if the category is valid on target site.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.AllowedChildClassInfo">
            <summary>
            AllowedChildClass data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AllowedChildClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AllowedChildClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AllowedChildClassInfo.ChildClassID">
            <summary>
            Child class ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AllowedChildClassInfo.ParentClassID">
            <summary>
            Parent class ID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.TouchParent">
            <summary>
            Updates the parent object by saving it (to update the timestamp).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty AllowedChildClass object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AllowedChildClass object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AllowedChildClassInfoProvider">
            <summary>
            Class providing AllowedChildClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClasses">
            <summary>
            Returns all allowed child classes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClasses(System.Int32,System.Int32)">
            <summary>
            Returns allowed child classes for given parent class ID and site ID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding structure.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding structure.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns the AllowedChildClassInfo structure for the specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.Set(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Inserts or updates the <paramref name="info"/> object in the underlying data store.
            </summary>
            <param name="info">Info object to be inserted or updated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="info"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.SetAllowedChildClassInfo(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Sets (updates or inserts) specified allowedChildClass.
            </summary>
            <param name="allowedChildClass">AllowedChildClass to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.DeleteAllowedChildClassInfo(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="infoObj">AllowedChildClass object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.RemoveAllowedChildClass(System.Int32,System.Int32)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.AddAllowedChildClass(System.Int32,System.Int32)">
            <summary>
            Inserts new record to CMS_AllowedChildClasses table if no one exists.
            </summary>
            <param name="parentClassId">Parent ClassID</param>
            <param name="childClassId">Child ClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.IsChildClassAllowed(System.Int32,System.Int32)">
            <summary>
            Returns true if child class is allowed within given parent class.
            </summary>
            <param name="parentClassId">Parent class ID</param>
            <param name="childClassId">Child class ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the AllowedChildClassInfo structure for the specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.SetAllowedChildClassInfoInternal(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Sets (updates or inserts) specified allowedChildClass.
            </summary>
            <param name="allowedChildClass">AllowedChildClass to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.DeleteInfo(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="T:CMS.DocumentEngine.IAllowedChildClassInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IAllowedChildClassInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding structure.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IAllowedChildClassInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding structure.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IAllowedChildClassInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.IAllowedChildClassInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.AllowedChildClassInfo"/> binding.
            </summary>
            <param name="parentClassId">Parent page type ID.</param>
            <param name="childClassId">Child page type ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFormFieldInfoExtensions">
            <summary>
            Extension methods for document related form field.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFormFieldInfoExtensions.IsNodeNameSourceCandidate(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Checks if form field can be used as source for document node name.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.MenuItemsDocumentQueryFilter">
            <summary>
            Represents the filter for pages displayed in menu.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MenuItemsDocumentQueryFilter.#ctor">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.MenuItemsDocumentQueryFilter"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MenuItemsDocumentQueryFilter.GetWhereCondition(CMS.DocumentEngine.DocumentQueryProperties)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.IWhereCondition"/> object for menu items.
            </summary>
            <param name="properties">Query properties representing the query inner state.</param>
            <returns>Where Condition.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.PageTypeFeaturesDocumentQueryExtensions">
            <summary>
            Encapsulates extension method for <see cref="T:CMS.DocumentEngine.IDocumentQuery" />.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTypeFeaturesDocumentQueryExtensions.MenuItems``2(CMS.DocumentEngine.IDocumentQuery{``0,``1})">
            <summary>
            Retrieves pages that have the flag <see cref="P:CMS.DocumentEngine.TreeNode.DocumentShowInMenu"/> set to <c>true</c> and their page type 
            has the feature "Navigation item" enabled.
            </summary>
            <remarks>
            <para>
            Note:
            This method is a data filter and can be used directly only to modify the DocumentQuery (e.g. <c>DocumentHelper.GetDocuments().MenuItem()</c>).
            It cannot be used as a part of where condition (e.g. <c>DocumentHelper.GetDocuments().WhereContains("DocumentName", "Article").Or().MenuItem()</c>).
            </para>
            </remarks>
            <typeparam name="TQuery">Actual type of query being extended.</typeparam>
            <typeparam name="TObject">Actual type of TreeNode instance.</typeparam>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeHelper">
            <summary>
            Helper methods for document types
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeHelper.mClassNames">
            <summary>
            Table of resolved class names [classNames -> resolved]
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeHelper.ClassNames">
            <summary>
            Table of resolved class names [classNames -> resolved]
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.ClearClassNames(System.Boolean)">
            <summary>
            Clears the class names resolving cache.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.SynchronizeSiteBindingsWithResource(CMS.DocumentEngine.DocumentTypeInfo)">
            <summary>
            Synchronizes site bindings with the given class.
            </summary>
            <param name="info">Document type</param>>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.GetClassNames(System.String,System.String)">
            <summary>
            Resolves the document type classes, if the input value is constant TreeProvider.ALL_CLASSES, returns all class names used on any site, otherwise resolves * as a wildcard in class name to get all matching. Supports the list of classes separated by semicolon.
            </summary>
            <param name="classNames">Class names value</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.GetClassNames(CMS.DataEngine.IWhereCondition)">
            <summary>
            Gets the class names of documents based on the given where condition
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.GetDocumentTypeClasses">
            <summary>
            Returns the document type classes DataSet.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.RemoveColumnsFromPageType(CMS.DataEngine.DataClassInfo,System.String[])">
            <summary>
            Removes fields from page type.
            </summary>
            <param name="classInfo">Page type to update</param>
            <param name="fieldNames">Field names to remove</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.GetCacheKey(System.String,System.String)">
            <summary>
            Returns key to access cached data for given class names and site name.
            </summary>
            <param name="classNames">Class names</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeInfo">
            <summary>
            Specialized class for the document type info.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeInfo.OBJECT_TYPE_DOCUMENTTYPE">
            <summary>
            Object type for document type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeInfo.TYPEINFODOCUMENTTYPE">
            <summary>
            Type information for document type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeInfo.RegisteredProperties">
            <summary>
            Local registered properties
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFactory`1">
            <summary>
            Factory that provides document objects
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentFactory`1.Type">
            <summary>
            Document type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFactory`1.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="type">Type of the document class</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFactory`1.CreateNewObject">
            <summary>
            Creates new document type object
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentGenerator">
            <summary>
            Generator of the specific document types
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentGenerator.mGenerator">
            <summary>
            Object generator
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.NewInstance``1(System.String)">
            <summary>
            Creates new instance of the given type
            </summary>
            <typeparam name="NodeType">Node type</typeparam>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.RegisterDocumentType(System.String,CMS.DocumentEngine.IDocumentFactory)">
            <summary>
            Registers the given document type class
            </summary>
            <param name="className">Class name to register</param>
            <param name="factory">Document factory</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.RegisterDocumentType``1(System.String)">
            <summary>
            Registers the given document type class
            </summary>
            <param name="className">Class name to register</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.RegisterDefaultFactory(CMS.DocumentEngine.IDocumentFactory)">
            <summary>
            Registers the default factory for the documents, which overlaps the default one
            </summary>
            <param name="factory">Factory to register</param>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentFactory">
            <summary>
            Interface for the document factory
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo">
            <summary>
            DocumentTypeScopeClass data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeClassInfo.ScopeID">
            <summary>
            Document type scope identifier.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeClassInfo.ClassID">
            <summary>
            Document type identifier.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentTypeScopeClass object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentTypeScopeClass object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="scopeId">Document type scope identifier</param>
            <param name="classId">Document type class identifier</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider">
            <summary>
            Class providing DocumentTypeScopeClass management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.SetScopeClassInfo(CMS.DocumentEngine.DocumentTypeScopeClassInfo)">
            <summary>
            Sets (updates or inserts) specified document type scope class.
            </summary>
            <param name="classObj">Document type scope class to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.DeleteScopeClassInfo(CMS.DocumentEngine.DocumentTypeScopeClassInfo)">
            <summary>
            Deletes specified document type scope class.
            </summary>
            <param name="classObj">Document type scope class to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClasses">
            <summary>
            Gets the query for all scope class bindings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClasses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all document type scope classes matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding structure.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding structure.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTypeScopeClassInfo structure for the specified scope and class.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.RemoveClassFromScope(System.Int32,System.Int32)">
            <summary>
            Removes document type from scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.AddClassToScope(System.Int32,System.Int32)">
            <summary>
            Adds document type to scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTypeScopeClassInfo structure for the specified scope and class.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.RemoveClassFromScopeInternal(System.Int32,System.Int32)">
            <summary>
            Removes document type from scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.AddClassToScopeInternal(System.Int32,System.Int32)">
            <summary>
            Adds document type to scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeInfo">
            <summary>
            DocumentTypeScopeInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeGUID">
            <summary>
            Document type scope GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeLastModified">
            <summary>
            Document type scope last modified date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeID">
            <summary>
            Document type scope identifier.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeSiteID">
            <summary>
            Document type scope site identifier.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopePath">
            <summary>
            Document type scope starting path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeIncludeChildren">
            <summary>
            Indicates if scope is applied to children documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeAllowAllTypes">
            <summary>
            Indicates if scope allows all document types.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeAllowLinks">
            <summary>
            Indicates if scope allows creating linked documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeMacroCondition">
            <summary>
            Document type scope macro condition.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentTypeScopeInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentTypeScopeInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeInfoProvider">
            <summary>
            Class providing ScopeInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeInfo(System.Int32)">
            <summary>
            Returns document type scope with specified ID.
            </summary>
            <param name="scopeId">Document type scope ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.SetScopeInfo(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Sets (updates or inserts) specified document type scope.
            </summary>
            <param name="scopeObj">Document type scope to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.DeleteScopeInfo(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Deletes specified document type scope.
            </summary>
            <param name="scopeObj">Document type scope to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.DeleteScopeInfo(System.Int32)">
            <summary>
            Deletes document type scope with specified ID.
            </summary>
            <param name="scopeId">Document type scope ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopes">
            <summary>
            Gets the query for all scopes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopes(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all document type scopes matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopesForDocumentType(System.Int32,System.Int32)">
            <summary>
            Returns dataset of all document type scopes for specified document type matching the specified parameters.
            </summary>       
            <param name="documentTypeId">Document type identifier</param>
            <param name="siteId">Site ID.</param>        		
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the best fitting document type scope for specified node alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeClassWhereCondition(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the where condition to filter document types allowed in scope.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeClassWhereCondition(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Returns the where condition to filter document types allowed in scope.
            </summary>
            <param name="scope">Document type scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.IsDocumentTypeAllowed(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns true if document type is allowed in given alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
            <param name="classId">Created document type identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeInfoInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the best fitting document type scope for specified node alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeClassWhereConditionInternal(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Returns the where condition to filter document types allowed in the best fitting scope for given node alias path.
            </summary>
            <param name="scope">Document type scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.IsDocumentTypeAllowedInternal(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns true if document type is allowed in given alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
            <param name="classId">Created document type identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeResolver(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes macro resolver.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeResolvers.DocumentTypeScopeResolver">
            <summary>
            Returns document type scope macro resolver with document and current user fields.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentTypeScopeClassInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTypeScopeClassInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding structure.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTypeScopeClassInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding structure.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTypeScopeClassInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTypeScopeClassInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo"/> binding.
            </summary>
            <param name="scopeId">Page type scope ID.</param>
            <param name="classId">Page type ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentTypeScopeInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.DocumentTypeScopeInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SystemDocumentTypes">
            <summary>
            System document types
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.SystemDocumentTypes.Root">
            <summary>
            Class name of the Root document type.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TransformationFullNameWhereConditionBuilder">
            <summary>
            Builds where condition to get transformation based on its full name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationFullNameWhereConditionBuilder.#ctor(System.String)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.TransformationFullNameWhereConditionBuilder"/> class.
            </summary>
            <param name="fullName">Full name to use for building the where condition.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationFullNameWhereConditionBuilder.Build">
            <summary>
            Builds the full name where condition for the given full name of the transformation.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TransformationInfo">
            <summary>
            Class to use for storing the transformation data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TransformationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TransformationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TransformationInfo.EXTERNAL_COLUMN_CODE">
            <summary>
             External column name for Transformation Code
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationID">
            <summary>
            Transformation ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationName">
            <summary>
            Transformation Name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationFullName">
            <summary>
            Transformation Full Name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.ObjectFullName">
            <summary>
            Object full name if defined
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationCode">
            <summary>
            Transformation Code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationType">
            <summary>
            Transformation type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationClassID">
            <summary>
            ID of the class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationVersionGUID">
            <summary>
            Transformation version GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationLastModified">
            <summary>
            Transformation last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfo.TransformationGUID">
            <summary>
            Transformation GUID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.GetVirtualFileRelativePath(System.String,System.String)">
            <summary>
            Returns virtual relative path for specific column
            </summary>
            <param name="externalColumnName">External column name</param>
            <param name="versionGuid">Version GUID. If not defined physical path is generated</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.RegisterExternalColumns">
            <summary>
            Returns path to externally stored transformation codes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.#ctor">
            <summary>
            Constructor, creates an empty TransformationInfo structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the TransformationInfo object from the given DataRow data.
            </summary>
            <param name="dr">Data row with the TransformationInfo info data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.LoadDefaultData">
            <summary>
            Loads the object default data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="T:CMS.DocumentEngine.TransformationInfoProvider">
            <summary>
            Enables access to Transformations.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.#ctor">
            <summary>
            Initializes a TransformationInfoProvider.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TransformationInfoProvider.mDefaultNamespaces">
            <summary>
            List of default transformation namespaces
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TransformationInfoProvider.mTransformationDirectives">
            <summary>
            Public transformation directives.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.TransformationBaseClass">
            <summary>
            Gets or sets the transformation base class
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.StoreTransformationsInExternalStorage">
            <summary>
            Gets or sets the value that indicates whether transformations should be stored externally
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.EditButtonsDirectiveRegex">
            <summary>
            Gets the regular expression for edit buttons directive
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.EditButtonsRegex">
            <summary>
            Gets the Regex object for edit/delete buttons macro
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.DefaultDirectives">
            <summary>
            Default transformation directives made into an array.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.TransformationDirectives">
            <summary>
            Transformation directives.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.InternalTransformationDirectives">
            <summary>
            Internal transformation directives.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.TransformationsDirectory">
            <summary>
            TransformationsDirectory - Read only
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationInfoProvider.DefaultNamespaces">
            <summary>
            List of default transformation namespaces
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetVirtualObject(System.String)">
            <summary>
            Returns web part layout info for specified path
            </summary>
            <param name="path">Path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.RemoveDirectives(System.String)">
            <summary>
            Removes the transformation directives.
            </summary>
            <param name="code">Input code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetTransformation(System.Int32)">
            <summary>
            Gets the transformation by ID.
            </summary>
            <param name="transformationId">Transformation ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetTransformation(System.String)">
            <summary>
            Gets the transformation by full name.
            </summary>
            <param name="transformationFullName">Transformation full name in format application.class.transformation</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetLocalizedTransformation(System.String,System.String)">
            <summary>
            Gets the localized transformation by full name. Returns the default transformation if the localized version is not found.
            </summary>
            <param name="transformationFullName">Transformation full name in format application.class.transformation</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetTransformations">
            <summary>
            Returns all transformations.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetTransformations(System.Int32)">
            <summary>
            Gets the transformations of the specified class.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetTransformationFullName(System.Int32)">
            <summary>
            Returns full transformation name by provided transformation ID.
            </summary>
            <param name="transformationId">Transformation ID</param>
            <returns>Transformation full name in format application.class.transformation or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.SetTransformation(CMS.DocumentEngine.TransformationInfo)">
            <summary>
            Saves the specified transformation to the database.
            </summary>
            <param name="transformation">Transformation</param>
            <remarks>If the transformation of the specified name already exists, it's updated, otherwise a new one is created in the database.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.DeleteTransformation(System.Int32)">
            <summary>
            Deletes the transformation.
            </summary>
            <param name="transformationId">Transformation ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.DeleteTransformation(CMS.DocumentEngine.TransformationInfo)">
            <summary>
            Deletes the transformation.
            </summary>
            <param name="transformation">Transformation</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.DeleteTransformations(System.Int32)">
            <summary>
            Deletes all the transformations of the specified class.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GenerateTransformationCode(System.String)">
            <summary>
            Generates the default transformation code for given class.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.RemoveFirstPart(System.String,System.String)">
            <summary>
            Returns the string with first selector removed.
            </summary>
            <param name="expression">Expression</param>
            <param name="delimiter">Selector delimiter</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetTransformationInfoInternal(System.String)">
            <summary>
            Gets the transformation by full name.
            </summary>
            <param name="transformationFullName">Transformation full name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.SetInfo(CMS.DocumentEngine.TransformationInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetFullNameDictionary">
            <summary>
            Creates a new dictionary for caching the transformations by the full name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the transformation based on the given full name.
            </summary>
            <param name="fullName">Transformation full name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetControlDirective">
            <summary>
            Gets the control directive for the transformation.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetNamespaceRegistration(System.String,System.String,System.String)">
            <summary>
            Gets the registration tag for the given namespace and assembly.
            </summary>
            <param name="tagPrefix">Tag prefix</param>
            <param name="ns">Namespace name</param>
            <param name="assembly">Assembly name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationInfoProvider.GetTextTransformation(System.String)">
            <summary>
            Returns default text transformation based on the given form.
            </summary>
            <param name="formSchema">Form schema</param>
            <returns>Text transformation</returns>
        </member>
        <member name="T:CMS.DocumentEngine.TransformationMacroMethods">
            <summary>
            Content methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationMacroMethods.ApplyTransformation(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Applies transformation to list of items.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Collection of items as the first parameter, item transformation name as the second. Optionally, Content-before and content-after transformations may be supplied as 3. and 4. parameters.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationMacroMethods.Transform(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Applies ad-hoc text transformation to list of items.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Collection of items as the first parameter, transformation text as the second</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationMacroMethods.GetTransformationCode(System.String)">
            <summary>
            Returns code of the specified transformation. If such transformation is not found, input string is returned without any change.
            </summary>
            <param name="transformation">Transformation name or transformation code</param>
        </member>
        <member name="T:CMS.DocumentEngine.TransformationTypeEnum">
            <summary>
            Transformation type enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TransformationTypeEnum.Text">
            <summary>
            General text transformation (with resolved macros).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TransformationTypeEnum.Html">
            <summary>
            Html transformation (with resolved macros and WYSIWYG editing).
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TransformationVirtualFileObject">
            <summary>
            Transformation virtual file object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationVirtualFileObject.Content">
            <summary>
            Gets virtual file content for current object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationVirtualFileObject.IsStoredExternally">
            <summary>
            Indicates whether file content is stored externally (e.g. file system)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationVirtualFileObject.ObjectHash">
            <summary>
            Gets object hash string used for identification of compiled version in .NET cache
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationVirtualFileObject.PhysicalFilePath">
            <summary>
            Gets the physical file path if exists
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationVirtualFileObject.VirtualPath">
            <summary>
            Current object virtual path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TransformationVirtualFileObject.CurrentObject">
            <summary>
            Current object instance
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationVirtualFileObject.#ctor(System.String,CMS.DocumentEngine.TransformationInfo)">
            <summary>
            Constructor
            </summary>
            <param name="virtualPath">Virtual path</param>
            <param name="currentObject">Object instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.TransformationVirtualFileObject.GetVirtualFileObject(System.String)">
            <summary>
            Creates IVirtualFileObject for specified virtual path (GetVirtualFileObjectHandler callback method) 
            </summary>
            <param name="virtualPath">Virtual path</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeTypeExtensions">
            <summary>
            Extension methods to identify page features based on page type.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeExtensions.IsRoot(CMS.Base.ITreeNode)">
            <summary>
            Indicates if the given page is a root node.
            </summary>
            <param name="node">Document node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeExtensions.UsesPageBuilder(CMS.Base.ITreeNode)">
            <summary>
            Indicates if the page builder feature is turned on for given page.
            </summary>
            <param name="node">Document node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeExtensions.IsProductSection(CMS.Base.ITreeNode)">
            <summary>
            Returns true if the page stands for the product section.
            </summary>
            <param name="node">Document node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeExtensions.IsProduct(CMS.Base.ITreeNode)">
            <summary>
            Returns true if the page represents a product.
            </summary>
            <param name="node">Document node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeExtensions.IsNavigationItem(CMS.Base.ITreeNode)">
            <summary>
            Indicates if the navigation item feature is turned on for given page.
            </summary>
            <param name="node">Document node.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeExtensions.HasUrl(CMS.Base.ITreeNode)">
            <summary>
            Indicates if the URL feature is turned on for given page.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeExtensions.HasMetadata(CMS.Base.ITreeNode)">
            <summary>
            Indicates if the metadata feature is turned on for given page.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentOrderEnum">
            <summary>
            Document order enumeration (for new document).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.Unknown">
            <summary>
            Unknown order.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.Alphabetical">
            <summary>
            Alphabetical order.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.First">
            <summary>
            First document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.Last">
            <summary>
            Last document.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortEnum">
            <summary>
            Documents sort type enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSortEnum.Unknown">
            <summary>
            Unknown type of sort.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSortEnum.Alphabetically">
            <summary>
            Sorting by alphabet.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSortEnum.ByDate">
            <summary>
            Sorting by date.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IconType">
            <summary>
            Document con type enumeration
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Linked">
            <summary>
            Linked document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.NotTranslated">
            <summary>
            Not translated document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Archived">
            <summary>
            Archived document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Published">
            <summary>
            Published document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.NotPublished">
            <summary>
            Not published document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.CheckedOut">
            <summary>
            Checked out document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.VersionNotPublished">
            <summary>
            Document version not published
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.NodePermissionsEnum">
            <summary>
            Node permissions enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Read">
            <summary>
            Read permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Modify">
            <summary>
            Modify permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Create">
            <summary>
            Creates permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Delete">
            <summary>
            Delete permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Destroy">
            <summary>
            Destroy permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.ExploreTree">
            <summary>
            Explore tree permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.ModifyPermissions">
            <summary>
            Permission to change document permissions.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PathTypeEnum">
            <summary>
            Path type enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Explicit">
            <summary>
            Path used as it is (no additional modification).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Single">
            <summary>
            Path representing single document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Children">
            <summary>
            Path representing all child documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Section">
            <summary>
            Path representing document and its child documents.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.RelationshipSideEnum">
            <summary>
            Relationship side enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipSideEnum.Both">
            <summary>
            Document participates on both sides.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipSideEnum.Left">
            <summary>
            Document participates on left side only.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipSideEnum.Right">
            <summary>
            Document participates on right side only.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TranslationStatusEnum">
            <summary>
            Translation status enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.Translated">
            <summary>
            Translation of document is up to date.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.Outdated">
            <summary>
            Translation is out of date.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.NotAvailable">
            <summary>
            Translation is not avialable.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.WaitingForTranslation">
            <summary>
            Waiting for translation - submitted to translation service
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCultureNotAllowedException">
            <summary>
            Thrown when a document has a culture which is not allowed on the site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureNotAllowedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentCultureNotAllowedException"/> class with default values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureNotAllowedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentCultureNotAllowedException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureNotAllowedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentCultureNotAllowedException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureNotAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentCultureNotAllowedException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeNotExistsException">
            <summary>
            Thrown when a non-existing document type is requested.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeNotExistsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeNotExistsException"/> class with default values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeNotExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeNotExistsException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeNotExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeNotExistsException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeNotExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentTypeNotExistsException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:CMS.DocumentEngine.InvalidAlternativeUrlException">
            <summary>
            Exception that is thrown when <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> is in conflict with another URL or constraint.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.InvalidAlternativeUrlException.AlternativeUrl">
            <summary>
            Alternative URL that is invalid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.InvalidAlternativeUrlException.ExcludedUrl">
            <summary>
            Excluded URL that is in conflict with <see cref="P:CMS.DocumentEngine.InvalidAlternativeUrlException.AlternativeUrl"/>. 
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.InvalidAlternativeUrlException.ConflictingAlternativeUrl">
            <summary>
            <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> that is in conflict with <see cref="P:CMS.DocumentEngine.InvalidAlternativeUrlException.AlternativeUrl"/>.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.InvalidAlternativeUrlException.CollisionData">
            <summary>
            Contains data with details for colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.InvalidAlternativeUrlException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class.
            </summary>
            <param name="invalidAlternativeUrl">Alternative URL that does not match pattern constraint.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(CMS.DocumentEngine.AlternativeUrlInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class.
            </summary>
            <param name="invalidAlternativeUrl">Alternative URL that does not match pattern constraint.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(CMS.DocumentEngine.AlternativeUrlInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class.
            </summary>
            <param name="invalidAlternativeUrl">Alternative URL that is excluded URL.</param>
            <param name="excludedUrl">Excluded URL that is in conflict with <paramref name="invalidAlternativeUrl"/>.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(CMS.DocumentEngine.AlternativeUrlInfo,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class with a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="invalidAlternativeUrl">Alternative URL that does not satisfy settings constraint.</param>
            <param name="excludedUrl">Excluded URL that is in conflict with <paramref name="invalidAlternativeUrl"/>.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(CMS.DocumentEngine.AlternativeUrlInfo,CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class.
            </summary>
            <param name="invalidAlternativeUrl">Alternative URL that is in conflict with another <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/>.</param>
            <param name="conflictingAlternativeUrl">Existing <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> with the same <see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> as <paramref name="invalidAlternativeUrl"/>.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(CMS.DocumentEngine.AlternativeUrlInfo,CMS.DocumentEngine.AlternativeUrlInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class.
            </summary>
            <param name="invalidAlternativeUrl">Alternative URL that is in conflict with another <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/>.</param>
            <param name="conflictingAlternativeUrl">Existing <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> with the same <see cref="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl"/> as <paramref name="invalidAlternativeUrl"/>.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(CMS.DocumentEngine.AlternativeUrlInfo,CMS.DocumentEngine.AlternativeUrlCollisionData)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class.
            </summary>
            <param name="invalidAlternativeUrl">Alternative URL that is in conflict with another <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/>.</param>
            <param name="collisionData">Collision data for page with the same URL as <paramref name="invalidAlternativeUrl"/>.</param>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidAlternativeUrlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAuthorizationEventArgs">
            <summary>
            Document authorization event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.User">
            <summary>
            User to check
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.Data">
            <summary>
            Data to authorize
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.Document">
            <summary>
            Document to authorize
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.PermissionName">
            <summary>
            Permission name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.AuthorizationResult">
            <summary>
            Document authorization result
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAuthorizationHandler">
            <summary>
            Document authorization handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAuthorizationHandler.StartEvent(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,System.String,CMS.DataEngine.AuthorizationResultEnum@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="node">Document node</param>
            <param name="permissionName">Permission name</param>
            <param name="authorized">Authorization result</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAuthorizationHandler.StartEvent(CMS.Membership.UserInfo,System.Data.DataSet@,System.String)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="ds">DataSet with the data</param>
            <param name="permissionName">Permission name</param>
        </member>
        <member name="T:CMS.DocumentEngine.BaseLogDocumentChangeSettings">
            <summary>
            Base class for log document change.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.Tree">
            <summary>
            Tree provider.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.TaskParameters">
            <summary>
            Additional task parameters.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.EnsurePublishTask">
            <summary>
            If true, also the PublishDocument task is logged for Published documents under workflow along with an PublishDocument task.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.BaseLogDocumentChangeSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogDocumentChangeEventArgs">
            <summary>
            Log document change event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogDocumentChangeEventArgs.Settings">
            <summary>
            Log document change settings
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogDocumentChangeHandler">
            <summary>
            Document handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LogDocumentChangeHandler.StartEvent(CMS.DocumentEngine.LogDocumentChangeSettings)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Log document change settings</param>
        </member>
        <member name="T:CMS.DocumentEngine.LogDocumentChangeSettings">
            <summary>
            Class for log single document change.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogDocumentChangeSettings.Node">
            <summary>
            Tree node.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogMultipleDocumentChangeSettings">
            <summary>
            Class for log multiple document change.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.NodeAliasPath">
            <summary>
            Node alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.CultureCode">
            <summary>
            Culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.WhereCondition">
            <summary>
            Where condition.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.KeepTaskData">
            <summary>
            Indicates if task data should be kept in the objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentDataEventArgs">
            <summary>
            Document data event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataEventArgs.Data">
            <summary>
            Data set returned by document query or custom data set
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataEventArgs.Query">
            <summary>
            Document query.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataEventArgs.TotalRecords">
            <summary>
            Number of total records when paging is used. If value is less than 0, value is calculated as number of rows in Data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentDataEventHandler">
            <summary>
            Document data handler enables manipulation with document data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDataEventHandler.StartEvent(System.Data.DataSet,CMS.DocumentEngine.IDocumentQuery,System.Int32)">
            <summary>
            Initiates the event handling.
            </summary>
            <param name="result">Data set with document data.</param>
            <param name="query">Default document query used to select data in case data set is not returned by event.</param>
            <param name="totalRecords">Number of records which should by used for paging. If not set, number of rows in dataset is calculated.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEventArgs">
            <summary>
            Document event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.TreeProvider">
            <summary>
            Tree provider
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.Node">
            <summary>
            Document node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.Attachment">
            <summary>
            Attachment, where is makes sense: SaveAttachment, DeleteAttachment
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.TargetParentNodeID">
            <summary>
            Target parent node ID, initialized for operations where it makes sense: Copy, Move, Insert
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.TargetParentNode">
            <summary>
            Target parent node, initialized for operations where it makes sense: Copy, Move, Insert
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.IncludeChildren">
            <summary>
            If true the children are included within the operation where it makes sense: Copy
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEvents">
            <summary>
            Document events.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Update">
            <summary>
            Fires when document is updated.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.UpdateInner">
            <summary>
            Fires when the document is updated in the database. 
            This is a read-only event, it is forbidden to change the document passed as event argument. If you need to modify the document, use <see cref="F:CMS.DocumentEngine.DocumentEvents.Update"/> events.
            </summary>
            <remarks>
            <see cref="F:CMS.DocumentEngine.DocumentEvents.Update"/>.Before event is fired before this event and <see cref="F:CMS.DocumentEngine.DocumentEvents.Update"/>.After event is fired after this event.
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Insert">
            <summary>
            Fires when new document is created.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.GetData">
            <summary>
            Fires when document data are being retrieved.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.InsertNewCulture">
            <summary>
            Fires when new culture version of document is created.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.InsertLink">
            <summary>
            Fires when new document link is created.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Delete">
            <summary>
            Fires when document is deleted.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Move">
            <summary>
            Fires when document is moved.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Copy">
            <summary>
            Fires when document is copied.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.GetContent">
            <summary>
            Fires when the content of the document for searching is requested.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.CreateSearchFields">
            <summary>
            Fires when the local index search fields are gathered from all searchable page types. In this phase only field definitions are created and no value needs to be provided.
            It is required to create custom field definition without value for the whole index using <see cref="F:CMS.DocumentEngine.DocumentEvents.CreateSearchFields"/> 
            before creating the same field definition with value using <see cref="F:CMS.DocumentEngine.DocumentEvents.CreateSearchFieldsForPage"/> when indexing specific page.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.CreateSearchFieldsForPage">
            <summary>
            Fires when the local index search fields for specific page that is being indexed are created. In this phase field definition with value has to be provided.
            It is required to create custom field definition without value for the whole index using <see cref="F:CMS.DocumentEngine.DocumentEvents.CreateSearchFields"/> 
            before creating the same field definition with value using <see cref="F:CMS.DocumentEngine.DocumentEvents.CreateSearchFieldsForPage"/> when indexing specific page.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.LogChange">
            <summary>
            Fires when document tasks are logged. You can disable tasks logging for staging, integration etc.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.CheckPermissions">
            <summary>
            Fires when permissions are checked on the document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.ChangeOrder">
            <summary>
            Fires when change order is requested on the document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Sort">
            <summary>
            Fires when sorting of a document sub-section is requested.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.ChangeToLink">
            <summary>
            Fires when document is changed to a link using <see cref="M:CMS.DocumentEngine.TreeNode.ChangeToLink(System.Int32)"/>.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.ChangeDocumentType">
            <summary>
            Fires when document type of a document is changed using <see cref="M:CMS.DocumentEngine.TreeNode.ChangeNodeDocumentType(CMS.DocumentEngine.TreeNode,System.String)"/>.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.SaveAttachment">
            <summary>
            Fires when document attachment is saved.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.DeleteAttachment">
            <summary>
            Fires when document attachment is deleted.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.AuthorizeDocument">
            <summary>
            Fires when the permission for particular document is evaluated.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.FilterDataSetByPermissions">
            <summary>
            Fires when the given DataSet should be filtered according to the user permissions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.GetDocumentMark">
            <summary>
            Fires at the end of getting document marks for content tree.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHandler">
            <summary>
            Document handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentAttachment,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="attachment">Attachment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="target">Target parent node, initialized for operations where it makes sense: Copy, Move, Insert</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="target">Target parent node, initialized for operations where it makes sense: Copy, Move, Insert</param>
            <param name="includeChildNodes">If true the children are included within the operation where it makes sense: Copy</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.GetRecursionKey(CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Gets the recursion key of the document to identify recursion
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentMarkEventArgs">
            <summary>
            Document mark event arguments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.MarkContent">
            <summary>
            Content of the mark to be modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.PreferredCultureCode">
            <summary>
            Preferred culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.StepType">
            <summary>
            Current workflow step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.Container">
            <summary>
            Container with Document and Node data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentMarkHandler">
            <summary>
            Document mark handler.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentChangeOrderEventArgs">
            <summary>
            Document change order event arguments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs.#ctor(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="newOrder">Specific new document order index to be set</param>
            <param name="relativeOrder">Indicates if the NewOrder index is relative to current document position.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="orderType">Defines the order type (First, Last, Alphabetical) if the NewOrder is not specified</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1">
            <summary>
            Document change order event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.Node">
            <summary>
            Document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.NewOrder">
            <summary>
            Specific new document order index to be set. If not defined, the OrderType is used instead.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.RelativeOrder">
            <summary>
            Indicates if the NewOrder index is relative to current document position.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.OrderType">
            <summary>
            Defines the order type (First, Last, Alphabetical) if the NewOrder is not specified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.#ctor(`0,System.Int32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="newOrder">Specific new document order index to be set</param>
            <param name="relativeOrder">Indicates if the NewOrder index is relative to current document position.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.#ctor(`0,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="orderType">Defines the order type (First, Last, Alphabetical) if the NewOrder is not specified</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentChangeOrderHandler">
            <summary>
            Document change order handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderHandler.#ctor(CMS.DocumentEngine.DocumentChangeOrderHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderHandler.StartEvent(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Handled document</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortEventArgs">
            <summary>
            Documents sorting event arguments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs.#ctor(System.Int32,System.Boolean,CMS.DocumentEngine.DocumentSortEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="parentNodeId">Node ID of a document which sub-section should be sorted</param>
            <param name="ascending">Indicates if the sort should be ascending</param>
            <param name="sortType">Defines the sort type (by alphabet or date)</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortEventArgs`1">
            <summary>
            Document change order event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSortEventArgs`1.ParentNodeId">
            <summary>
            Node ID of a document which sub-section should be sorted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSortEventArgs`1.Ascending">
            <summary>
            Indicates if the sort should be ascending.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSortEventArgs`1.SortType">
            <summary>
            Defines the sort type (by alphabet or date).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs`1.#ctor(System.Int32,System.Boolean,CMS.DocumentEngine.DocumentSortEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="parentNodeId">Node ID of a document which sub-section should be sorted</param>
            <param name="ascending">Indicates if the sort should be ascending</param>
            <param name="sortType">Defines the sort type (by alphabet or date)</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortHandler">
            <summary>
            Document change order handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortHandler.#ctor(CMS.DocumentEngine.DocumentSortHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="T:CMS.DocumentEngine.CreateSearchFieldsEventArgs">
            <summary>
            Create search fields without values for whole local index event arguments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsEventArgs.IndexInfo">
            <summary>
            Search index info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsEventArgs.Fields">
            <summary>
            Search index fields.
            </summary>
            <remarks>Add your custom field into this collection.</remarks>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsEventArgs.SearchFields">
            <summary>
            List of search fields being processed to local search.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsEventArgs.IndexDataSource">
            <summary>
            Indicates type of the data source for indexed page.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CreateSearchFieldsForPageEventArgs">
            <summary>
            Create search fields with values for specific page event arguments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsForPageEventArgs.IndexInfo">
            <summary>
            Search index info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsForPageEventArgs.Fields">
            <summary>
            Search index fields.
            </summary>
            <remarks>Add your custom field into this collection.</remarks>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsForPageEventArgs.SearchFields">
            <summary>
            List of search fields being processed to local search.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsForPageEventArgs.IndexDataSource">
            <summary>
            Indicates type of the data source for indexed page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CreateSearchFieldsForPageEventArgs.Page">
            <summary>
            Page for which the search field values are populated.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CreateSearchFieldsForPageHandler">
            <summary>
            Create search fields with values for specific page handler.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CreateSearchFieldsForPageHandler.#ctor">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.CreateSearchFieldsForPageHandler"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CreateSearchFieldsForPageHandler.#ctor(CMS.DocumentEngine.CreateSearchFieldsForPageHandler)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.CreateSearchFieldsForPageHandler"/>.
            </summary>
            <param name="parentHandler">Parent handler.</param>
        </member>
        <member name="T:CMS.DocumentEngine.CreateSearchFieldsHandler">
            <summary>
            Create search fields without values for whole local index handler.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CreateSearchFieldsHandler.#ctor">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.CreateSearchFieldsHandler"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CreateSearchFieldsHandler.#ctor(CMS.DocumentEngine.CreateSearchFieldsHandler)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.CreateSearchFieldsHandler"/>.
            </summary>
            <param name="parentHandler">Parent handler.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchEventArgs">
            <summary>
            Document search event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.Node">
            <summary>
            Document node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.Content">
            <summary>
            Document content, used only when it makes sense: GetContent
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.Settings">
            <summary>
            Search settings for this document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.IndexInfo">
            <summary>
            Search index info
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.SearchDocument">
            <summary>
            Search document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.IsCrawler">
            <summary>
            If true, the content is indexed for a crawler
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.IndexDataSource">
            <summary>
            Indicates type of the data source for indexed page.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchHandler">
            <summary>
            Document search handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchHandler.#ctor(CMS.DocumentEngine.DocumentSearchHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityEventArgs">
            <summary>
            Document security event arguments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityEventArgs`1">
            <summary>
            Document security event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSecurityEventArgs`1.Node">
            <summary>
            Document to check
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityHandler">
            <summary>
            Document security handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHandler.#ctor(CMS.DocumentEngine.DocumentSecurityHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHandler.StartEvent(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Handled document</param>
        </member>
        <member name="T:CMS.DocumentEngine.PresentationUrlRedirect">
            <summary>
            Ensures redirection to the live URL of page based on culture name (for example en-us) and node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PresentationUrlRedirect.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the System.Web.IHttpHandler instance.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PresentationUrlRedirect.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Ensures redirection to the live URL of node based on provided culture and node ID.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CMS.DocumentEngine.PresentationUrlRedirect.RemoveHandlerQueryParameters(System.String)">
            <summary>
            Removes query string parameters used by handler.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentImportExportEvents">
            <summary>
            Document import export events
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentImportExportEvents.ImportDocument">
            <summary>
            Fires when the import process runs for a single document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentImportExportEvents.ImportDocuments">
            <summary>
            Fires when the documents are being imported
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentImportExportEvents.ExportDocuments">
            <summary>
            Fires when the export process runs for exporting the document DataSet
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentImportHandler">
            <summary>
            Import export handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImportHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImportHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper,CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
            <param name="document">Imported document</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsExportEventArgs">
            <summary>
            Document export event arguments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsExportHandler">
            <summary>
            Document export handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentsExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper,System.String,System.Boolean)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
            <param name="objectType">Exported object type</param>
            <param name="siteObjects">Flag whether site or global objects are exported</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentsExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentsExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper,System.Data.DataSet)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
            <param name="data">Exported data</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsImportEventArgs">
            <summary>
            Documents import event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentsImportEventArgs.ImportedDocumentIDs">
            <summary>
            List of imported document original IDs
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentsImportEventArgs.ImportedNodeIDs">
            <summary>
            List of imported node IDs
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsImportHandler">
            <summary>
            Documents import handler
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SimpleDocumentImportHandler">
            <summary>
            Simple document import handler
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SimpleWorkflowHandler">
            <summary>
            Simple Workflow handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SimpleWorkflowHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SimpleWorkflowHandler.#ctor(CMS.DocumentEngine.SimpleWorkflowHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.DocumentEngine.SimpleWorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowActionHandler">
            <summary>
            Workflow action handler
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowEventArgs">
            <summary>
            Workflow event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.TreeProvider">
            <summary>
            Tree provider
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.Document">
            <summary>
            Edited version of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.PublishedDocument">
            <summary>
            Published version of the document, available only for Published handler in after event
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.Attachment">
            <summary>
            Document attachment, used where it makes sense: Save attachment version
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.PreviousStep">
            <summary>
            Previous workflow step, used where it makes sense: After approve, After reject, After archive
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.VersionHistory">
            <summary>
            Version history info record, used where it makes sense: Save version
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.VersionNumber">
            <summary>
            Version number, used where it makes sense: Save version
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.VersionComment">
            <summary>
            Version comment, used where it makes sense: Save version
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowEvents">
            <summary>
            Workflow events
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.CheckOut">
            <summary>
            Fires when the document is checked out
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.CheckIn">
            <summary>
            Fires when the document is checked in
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.UndoCheckOut">
            <summary>
            Fires when the undo checkout is performed
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Approve">
            <summary>
            Fires when the document is approved (moved to next step)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Reject">
            <summary>
            Fires when the document is rejected (moved to previous step)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Publish">
            <summary>
            Fires when a version of the document is published
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Archive">
            <summary>
            Fires when a version of the document is archived
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.SaveVersion">
            <summary>
            Fires when a version of the document is saved (during DocumentHelper.UpdateDocument under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.SaveAttachmentVersion">
            <summary>
            Fires when a new attachment is added to the document or and attachment is updated (during DocumentHelper.AddAtachment under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.RemoveAttachmentVersion">
            <summary>
            Fires when an attachment is removed from he document (during DocumentHelper.DeleteAtachment under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Action">
            <summary>
            Fires when a workflow action is executed
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowHandler">
            <summary>
            Workflow handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentAttachment,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="attachment">Attachment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode,System.String@,System.String@,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="T:CMS.DocumentEngine.UserDocumentsListInfo">
            <summary>
            Defines the listing info for user documents
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.UserDocumentsListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.UserDocumentsListInfo.TYPEINFO">
            <summary>
            Type information (Not complete - some information is missing).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UserDocumentsListInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserDocumentsListInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UserDocumentsListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserDocumentsListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserDocumentsListInfo.GetColumnNames">
            <summary>
            Gets the default list of column names for this class
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UserDocumentsListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CacheMethods">
            <summary>
            Wrapper class to provide basic caching methods in the MacroEngine.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CacheMethods.CMSCachedContext(System.Object[])">
            <summary>
            Returns the cached data context
            </summary>
            <param name="parameters">Macro functions parameters ([0] - cache minutes [1] - cache key</param>
        </member>
        <member name="T:CMS.DocumentEngine.Macros.ContentMembershipMethods">
            <summary>
            Content membership methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Macros.ContentMembershipMethods.IsAuthorizedPerContent(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if user has access to Pages application.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.ContentMethods">
            <summary>
            Content methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.As(CMS.MacroEngine.MacroSettings,System.Object[])">
            <summary>
            Casts node to specified page type node with available fields.
            </summary>
            <param name="settings">Evaluation context with child resolver</param>
            <param name="parameters">Page to cast as the first parameter, page type class name as the second</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.IsInCategories(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page is in one/all of the selected categories.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.IsTranslatedTo(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page is translated to one/all of the selected cultures.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.HasTags(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page has any/all of the specified tags.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.IsInRelationship(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page is in specified relationship with selected document.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.ContentTransformationFunctions">
            <summary>
            Functions for content macro methods.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.IsInCategories(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document is in one/all of selected categories.
            </summary>
            <param name="document">Document to check</param>
            <param name="categories">Category names separated with a semicolon</param>
            <param name="allCategories">If true, document must be in all of the selected categories.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.IsTranslatedTo(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document is translated into one of selected cultures.
            </summary>
            <param name="document">Document to check</param>
            <param name="cultures">Culture codes separated with a semicolon</param>
            <param name="publishedOnly">If true culture version must be published</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.HasTags(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document has any/all of the specified tags.
            </summary>
            <param name="document">Document</param>
            <param name="tags">Semicolon separated tags</param>
            <param name="allTags">Indicates whether all tags must be present or only one of them</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.IsInRelationship(System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Returns true if document is in specified relationship with with selected document.
            </summary>
            <param name="document">Document to be checked</param>
            <param name="side">Relationship side</param>
            <param name="relationship">Relationship name</param>
            <param name="relatedDocumentPath">Alias path to selected document</param>
            <param name="relatedDocumentSite">Selected document site name</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentMacros">
            <summary>
            Document macros implementation
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentMacros.Init">
            <summary>
            Initializes the macro engine with DocumentEngine parts
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentMacros.MacroSecurityProcessor_OnCheckObjectPermissions(System.Object,CMS.MacroEngine.MacroSecurityEventArgs)">
            <summary>
            Adds permission check for TreeNode collections.
            </summary>
            <param name="sender">MacroResolver which resolves the macro</param>
            <param name="e">Permission check event args</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentMacros.GetObjectValue(System.Object,System.String,System.Object@)">
            <summary>
            Gets the object value.
            </summary>
            <param name="obj">Object</param>
            <param name="columnName">Column name</param>
            <param name="result">Returning the result in case of match</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageResolvers">
            <summary>
            Macro resolvers for pages.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageResolvers.ContentResolver">
            <summary>
            Returns new instance of macro resolver for resolving macros inside the content of current page.
            </summary>
            <remarks>Culture for resolving is based on the current culture.</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.PageRoutingEnums">
            <summary>
            Wrapper class to provide page routing enumerations.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageRoutingEnums.RegisterFields">
            <summary>
            Registers the page routing enumerations.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollectionMethods">
            <summary>
            TreeNodeCollection methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollectionMethods.ClassNames(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Class names on collection.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.UrlMethods">
            <summary>
            Class containing url related macro methods.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UrlMethods.MakeAbsolute(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns absolute URL from relative path.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.UrlMethods.GetAttachmentRelativePath(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns relative path of the attachment with given attachment GUID.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.UrlMethods.GetDocumentRelativePath(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns relative path of specified document.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEngineUsageDataSource">
            <summary>
            Module usage data for document engine.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEngineUsageDataSource.Name">
            <summary>
            Document engine usage data source name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineUsageDataSource.GetData">
            <summary>
            Get document engine usage data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AdhocRelationshipNameHandlers">
            <summary>
            Provides handlers for managing ad-hoc relationship names of documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AdhocRelationshipNameHandlers.Init">
            <summary>
            Initializes the handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEngineModule">
            <summary>
            Represents the Document Engine module.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.OnPreInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.InitExport">
            <summary>
            Initializes the Import/Export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.RegisterIndexers">
            <summary>
            Registers the search indexers and searchables retrievers for documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.GetObject(System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEngineModuleMetadata">
            <summary>
            Represents the Document Engine module metadata.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHandlers">
            <summary>
            Provides handlers for documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.Init">
            <summary>
            Initializes the document handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeHandlers">
            <summary>
            Provides handlers for document types.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHandlers.Init">
            <summary>
            Initializes the document handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentExport">
            <summary>
            Handles special actions during the Attachment export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryExport">
            <summary>
            Handles special actions during the Attachment history export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryImport">
            <summary>
            Handles special actions during the Attachment history import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentImport">
            <summary>
            Handles special actions during the Attachment import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentImport.ConvertSettingsForFilesLocationType(CMS.DataEngine.SettingsKeyInfo)">
            <summary>
            Converts old keys CMSStoreFilesInDatabase and CMSStoreFilesInFileSystem into new key CMSFilesLocationType
            </summary>
            <param name="settingKey">Currently imported setting key</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentExport">
            <summary>
            Handles special actions during the Documents export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.ExportDocumentsData(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Exports the documents.
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation table</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.ExportRelatedDocumentsData(CMS.CMSImportExport.SiteExportSettings,System.String,CMS.DataEngine.TranslationHelper,System.Boolean,CMS.DataEngine.WhereCondition)">
            <summary>
            Exports related document data for given object type.
            </summary>
            <param name="settings">Export settings</param>
            <param name="objectType">Type of the object</param>
            <param name="th">Translation helper</param>
            <param name="siteObjects">Indicates if the object type is site dependent</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.RegisterTranslationRecords(System.Data.DataSet,System.String,CMS.DataEngine.TranslationHelper,System.String,System.String[])">
            <summary>
            Ensure translation records registration.
            </summary>
            <param name="ds">Source dataset</param>
            <param name="objectType">Type of the object</param>
            <param name="th">Translation helper</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.GetDocuments(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Gets the documents data.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentImport">
            <summary>
            Handles special actions during the Documents import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.ImportDocumentsData(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Import documents data with all dependent objects.
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.InitTreeProvider(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Initialize tree provider.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.ImportDocuments(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper,System.Collections.Generic.List{System.Int32}@,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Sets documents.
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
            <param name="importedDocumentIDs">List of imported document IDs</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.TranslateDocumentColumns(CMS.CMSImportExport.SiteImportSettings,CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper)">
            <summary>
            Sets additional document ID columns.
            </summary>
            <param name="settings">Import settings</param>
            <param name="node">Tree node</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.GetInheritedACLs(CMS.CMSImportExport.SiteImportSettings,System.String,CMS.DataEngine.TranslationHelper)">
            <summary>
            Translate inherited ACL list.
            </summary>
            <param name="settings">Import settings</param>
            <param name="oldAclList">Old ACL list</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeExport">
            <summary>
            Handles special actions during the Document type export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeImport">
            <summary>
            Handles special actions during the Document type import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ExportSpecialActions">
            <summary>
            Handles special actions during the export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ExportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ImportSpecialActions.IsDocumentObjectType(System.String)">
            <summary>
            Returns true if object type is from documents data.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCategorySearchIndexer">
            <summary>
            Indexer for document category
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchIndexer.IsTaskProcessingAllowed(CMS.Search.SearchTaskInfo)">
            <summary>
            Indicates if task processing is allowed for given task.
            </summary>
            <param name="sti">Search task to process.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchIndexer.ExecuteProcessTask(CMS.Search.SearchTaskInfo)">
            <summary>
            Indexes the document category
            </summary>
            <param name="sti">Search task</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchIndexer">
            <summary>
            Indexer for documents
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSearchIndexer.FIELD_DOCUMENTCATEGORYIDS">
            <summary>
            Document category IDs field name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchIndexer.DocumentSearchablesRetriever">
            <summary>
            Helps with retrieving <see cref="T:CMS.DataEngine.ISearchable"/> objects and <see cref="T:CMS.Search.SearchIndexInfo"/>s
            related to document search tasks.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.#ctor(CMS.DocumentEngine.Internal.DocumentSearchablesRetriever)">
            <summary>
            Document search indexer.
            </summary>
            <param name="documentSearchablesRetriever">Responsible for retrieving objects related to document indexing.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.#ctor">
            <summary>
            Document search indexer.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.Rebuild(CMS.Search.SearchIndexInfo)">
            <summary>
            Rebuilds the document index
            </summary>
            <param name="indexInfo">Search index</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.Rebuild(CMS.Search.SearchIndexInfo,System.Collections.Generic.IEnumerable{CMS.DataEngine.ISearchable},System.Boolean)">
            <summary>
            Ensures full or partial index rebuild.
            </summary>
            <remarks>This method needs to be run in a thread safe way such as smart search task queue.</remarks>
            <param name="indexInfo">Search index</param>
            <param name="searchableObjects">Collection of searchable objects to be indexed</param>
            <param name="fullRebuild">Indicates whether current rebuild is full or partial</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.PartialRebuild(CMS.Search.SearchTaskInfo)">
            <summary>
            Rebuilds part of the index
            </summary>
            <param name="taskInfo">Search task</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.ExecuteUpdateTask(CMS.Search.SearchTaskInfo)">
            <summary>
            Executes the search index update task
            </summary>
            <param name="sti">Search task</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.IsTaskProcessingAllowed(CMS.Search.SearchTaskInfo)">
            <summary>
            Indicates if task processing is allowed for given task.
            </summary>
            <param name="sti">Search task to process.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.SelectSearchDocument(System.Int32)">
            <summary>
            Selects the search document based on the given ID
            </summary>
            <param name="documentId">Document ID</param>
            <returns>Enumeration of searchable objects or empty enumeration.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.DeleteItem(CMS.Search.SearchTaskInfo,CMS.Search.SearchIndexInfo)">
            <summary>
            Deletes specific item from the index
            </summary>
            <param name="taskInfo">Search task</param>
            <param name="indexInfo">Search index</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.CheckResultPermissions(CMS.Search.SearchResults,CMS.Search.ILuceneSearchDocument,System.Int32)">
            <summary>
            Checks the permissions for the given result document
            </summary>
            <param name="settings">Check permission settings</param>
            <param name="currentDoc">Current result document</param>
            <param name="index">Current document index</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.LoadResults(System.Collections.Generic.IEnumerable{CMS.Search.ILuceneSearchDocument},CMS.Base.SafeDictionary{System.String,System.Data.DataRow})">
            <summary>
            Loads the results to the given result collection
            </summary>
            <param name="results">Collection of results to load</param>
            <param name="result">Dictionary of the loaded results indexed by their key</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetDataClassInfo(CMS.Search.ILuceneSearchDocument)">
            <summary>
            Returns the data class info for the given search document
            </summary>
            <param name="obj">Document object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.FillSearchResult(CMS.Search.SearchResultItem,System.Data.DataRow,CMS.Search.ILuceneSearchDocument)">
            <summary>
            Fills the data to the search result data row
            </summary>
            <param name="resultItem">Result item</param>
            <param name="resultDr">Result data row</param>
            <param name="doc">Found search document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.IsClassNameRelevantToIndex(System.String,CMS.DataEngine.SearchIndexSettings)">
            <summary>
            Checks if given <paramref name="className"/> is related to search index settings from <paramref name="indexSettings"/>.
            </summary>
            <param name="className">Class name</param>
            <param name="indexSettings">Search index settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetSearchImageUrl(CMS.Search.SearchResultItem)">
            <summary>
            Returns URL to given search result item.
            </summary>
            <param name="resultItem">Search result item for which to return an URL.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="resultItem"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetSearchFields(CMS.Search.SearchIndexInfo,CMS.DataEngine.ISearchFields)">
            <summary>
            Gets the collection of search fields. When no SearchFields colection is provided, new is created.
            </summary>
            <param name="index">Search index</param>
            <param name="searchFields">Search fields collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.IsAbsoluteUrlOrVirtualPath(System.String)">
            <summary>
            Determines whether the given string is an absolute URL or virtual path.
            </summary>
            <param name="value">Text to evaluate</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchIndexer.DocumentSearchData">
            <summary>
            Container for document search data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SiteDeletion">
            <summary>
            Site deletion actions
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SiteDeletion.Init">
            <summary>
            Initializes the actions for deletion
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersioningHandlers.DeleteOlderVersions(System.String,System.Int32)">
            <summary>
            Deletes excessive old page versions from site specified by given <paramref name="siteId"/>
            or global and all sites that inherit the global setting if the <paramref name="siteId"/> is 0 or less.
            </summary>
            <param name="settingsKeyName">Settings key that may be overridden on sites.</param>
            <param name="siteId">Settings key site ID</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSynchronization">
            <summary>
            Web farm synchronization for Documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSynchronization.SynchronizeAttachments">
            <summary>
            Gets or sets value that indicates whether file synchronization for document attachments is enabled.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.Init">
            <summary>
            Initializes the tasks for media files synchronization.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ClearDocumentFieldsTypeInfosWebFarmTask">
            <summary>
            Web farm task used to clear document field type infos.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="M:CMS.DocumentEngine.ClearDocumentFieldsTypeInfosWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.Clear(System.Boolean)"/> method.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ClearDocumentTypeInfosWebFarmTask">
            <summary>
            Web farm task used to clear document type infos.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="M:CMS.DocumentEngine.ClearDocumentTypeInfosWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.DocumentEngine.TreeNodeProvider.Clear(System.Boolean)"/> method.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ClearResolvedClassNamesWebFarmTask">
            <summary>
            Web farm task used to clear resolved class names.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="M:CMS.DocumentEngine.ClearResolvedClassNamesWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.DocumentEngine.DocumentTypeHelper.ClearClassNames(System.Boolean)"/> method.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DeleteAttachmentWebFarmTask">
            <summary>
            Web farm task used to delete attachments.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteAttachmentWebFarmTask.SiteName">
            <summary>
            Gets or sets name of the site which is file assigned to.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteAttachmentWebFarmTask.FileGuid">
            <summary>
            Gets or sets identifier of the file to be deleted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteAttachmentWebFarmTask.DeleteDirectory">
            <summary>
            Gets or sets a value that indicates whether directory will be deleted.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteAttachmentWebFarmTask.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:CMS.DocumentEngine.DeleteAttachmentWebFarmTask"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteAttachmentWebFarmTask.ConditionMethod">
            <summary>
            Returns true if the synchronization of the deletion of the attachments is allowed
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteAttachmentWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.DocumentEngine.AttachmentBinaryHelper.DeleteFile(System.Guid,System.String,System.Boolean,System.Boolean)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.InvalidateDocumentFieldsTypeInfoWebFarmTask">
            <summary>
            Web farm task used to invalidate document fields.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.DocumentEngine.InvalidateDocumentFieldsTypeInfoWebFarmTask.ClassName">
            <summary>
            Gets or sets name of the class file which data fields will be invalidated.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidateDocumentFieldsTypeInfoWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.DocumentEngine.Internal.DocumentFieldsInfoProvider.InvalidateTypeInfo(System.String,System.Boolean)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.InvalidateDocumentTypeInfoWebFarmTask">
            <summary>
            Web farm task used to invalidate document type infos.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.DocumentEngine.InvalidateDocumentTypeInfoWebFarmTask.ClassName">
            <summary>
            Gets or sets name of the class file to be invalidated.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.InvalidateDocumentTypeInfoWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.DocumentEngine.TreeNodeProvider.InvalidateTypeInfo(System.String,System.Boolean)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.UpdateAttachmentWebFarmTask">
            <summary>
            Web farm task used to update attachment of documents.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.SiteName">
            <summary>
            Gets or sets name of the site which is file assigned to.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.FileGuid">
            <summary>
            Gets or sets identifier of the file to be updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.FileName">
            <summary>
            Gets or sets name of the file to be updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.FileExtension">
            <summary>
            Gets or sets extension of the file to be updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.DeleteOldFiles">
            <summary>
            Gets or sets a value that indicates if files in destination folder with mask '[guid]*.*' should be deleted.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:CMS.DocumentEngine.UpdateAttachmentWebFarmTask"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.ConditionMethod">
            <summary>
            Returns true if the synchronization of the attachments is allowed.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UpdateAttachmentWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.DocumentEngine.AttachmentBinaryHelper.SaveFileToDisk(System.String,System.String,System.String,System.String,CMS.Core.BinaryData,System.Boolean,System.Boolean)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.Internal.IPageBuilderConfigurationSourceLoader">
            <summary>
            Loads Page builder configuration source.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.Internal.IPageBuilderConfigurationSourceLoader.Load(CMS.DocumentEngine.TreeNode)">
            <summary>
            Loads Page builder configuration source for a page.
            </summary>
            <param name="page">Page from which the configuration will be loaded.</param>
            <returns>Returns the configuration source.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.Internal.PageBuilderConfigurationSource">
            <summary>
            Represents source for Page builder configuration.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageBuilder.Internal.PageBuilderConfigurationSource.WidgetsConfiguration">
            <summary>
            Source of widgets configuration in JSON format.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageBuilder.Internal.PageBuilderConfigurationSource.PageTemplateConfiguration">
            <summary>
            Source of page template configuration in JSON format.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.Internal.PageBuilderConfigurationSourceNativeLoader">
            <summary>
            Loads Page builder configuration from page data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.Internal.PageBuilderConfigurationSourceNativeLoader.WIDGETS_CONFIGURATION_FIELD_NAME">
            <summary>
            Name of the field column in documents' table storing the Page builder widgets configuration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.Internal.PageBuilderConfigurationSourceNativeLoader.TEMPLATE_CONFIGURATION_FIELD_NAME">
            <summary>
            Name of the field column in documents' table storing the Page builder template configuration.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.Internal.PageBuilderConfigurationSourceNativeLoader.Load(CMS.DocumentEngine.TreeNode)">
            <summary>
            Loads Page builder configuration for a page.
            </summary>
            <param name="page">Page from which the configuration will be loaded.</param>
            <returns>Returns the configuration source.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.ITempPageBuilderWidgetsInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.ITempPageBuilderWidgetsPropagator">
            <summary>
            Propagates widgets and template configuration from temporary data to page data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.ITempPageBuilderWidgetsPropagator.Propagate(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Propagates widgets and template configuration from temporary data to page data.
            </summary>
            <param name="page">Page to propagate data into.</param>
            <param name="instanceGuid">Instance GUID of editing.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.ITempPageBuilderWidgetsPropagator.Delete(System.Guid)">
            <summary>
            Deletes widgets configuration from temporary data.
            </summary>
            <param name="instanceGuid">Instance GUID of editing.</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.PageBuilderHelper">
            <summary>
            Provides helper methods for a Page builder feature.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.EDITING_INSTANCE_QUERY_NAME">
            <summary>
            Query string key for editing instance identifier.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.EDIT_MODE_QUERY_NAME">
            <summary>
            Query string key for edit mode detection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.UI_CULTURE_QUERY_NAME">
            <summary>
            Query string key for UI culture code.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.CLEAR_PAGE_CACHE_QUERY_NAME">
            <summary>
            Query string key for clear cache request.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.AddEditModeParameter(System.String)">
            <summary>
            Adds query string parameter to URL to identify the edit mode of Page builder feature.
            </summary>
            <param name="url">URL to modify.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.AddUICultureParameter(System.String)">
            <summary>
            Adds query string parameter to URL to keep the UI culture code.
            </summary>
            <param name="url">URL to modify.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.AddClearPageCacheParameter(System.String)">
            <summary>
            Adds query string parameter to URL to identify the clear page cache request.
            </summary>
            <param name="url">URL to modify.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.PageBuilderHelper.GetPreviewModeUrl(CMS.DocumentEngine.TreeNode,System.Guid,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Generates preview link for specified page and user.
            </summary>
            <param name="page">Page for which the preview link should be generated.</param>
            <param name="userGuid">User GUID to be stored in the preview link URL.</param>
            <param name="queryString">Optional additional query string parameters.</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.TemporaryAttachmentsPropagator">
            <summary>
            Propagates temporary attachments to unsorted attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TemporaryAttachmentsPropagator.#ctor(System.String)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.PageBuilder.TemporaryAttachmentsPropagator"/>.
            </summary>
            <param name="siteName">The site name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TemporaryAttachmentsPropagator.Propagate(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Propagates temporary attachments to unsorted attachments.
            </summary>
            <param name="page">Page to propagate data into.</param>
            <param name="instanceGuid">Instance GUID of editing.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsCleaner">
            <summary>
            Provides an scheduled task for the temporary PageBuilder widgets configuration deletion.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsCleaner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsCleaner"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsCleaner.#ctor(CMS.Core.Internal.IDateTimeNowService,CMS.Core.IAppSettingsService,CMS.Core.IEventLogService)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsCleaner"/> class.
            </summary>
            <param name="dateTimeNowService">The date time now service.</param>
            <param name="appSettingsService">The application settings service.</param>
            <param name="eventLogService">The event log service.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsCleaner.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the purge action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo">
            <summary>
            Data container class for <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.PageBuilderWidgetsID">
            <summary>
            Page builder widgets ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.PageBuilderWidgetsConfiguration">
            <summary>
            Page builder widgets configuration.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.PageBuilderTemplateConfiguration">
            <summary>
            Page builder page template configuration.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.PageBuilderWidgetsGuid">
            <summary>
            Page builder widgets guid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.PageBuilderWidgetsLastModified">
            <summary>
            Page builder widgets last modified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instances of the <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.GetPageBuilderWidgets">
            <summary>
            Returns a query for all the <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.GetPageBuilderWidgetsInfo(System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.SetPageBuilderWidgetsInfo(CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo)">
            <summary>
            Sets (updates or inserts) specified <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.DeletePageBuilderWidgetsInfo(CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.DeletePageBuilderWidgetsInfo(System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.BulkDeleteData(CMS.DataEngine.WhereCondition)">
            <summary>
            Bulk deletes temporary configurations based on the given condition.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfoProvider.BulkDeleteDataInternal(CMS.DataEngine.WhereCondition)">
            <summary>
            Bulk deletes temporary configurations based on the given condition.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsPropagator">
            <summary>
            Propagates widgets and template configuration from temporary data to page data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsPropagator.#ctor(CMS.DocumentEngine.PageBuilder.ITempPageBuilderWidgetsInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsPropagator"/> class.
            </summary>
            <param name="tempPageBuilderWidgetsInfoProvider">Provider for <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> management.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsPropagator.Propagate(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Propagates widgets and template configuration from temporary data to page data.
            </summary>
            <param name="page">Page to propagate data into.</param>
            <param name="instanceGuid">Instance GUID of editing.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsPropagator.Delete(System.Guid)">
            <summary>
            Deletes widgets configuration from temporary data.
            </summary>
            <param name="instanceGuid">Instance GUID of editing.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsPropagator.GetTempDataQuery(System.Guid)">
            <summary>
            Gets object query for retrieving <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> by its GUID.
            </summary>
            <param name="instanceGuid">GUID of the <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/> to retrieve.</param>
            <returns>Returns query for retrieving <see cref="T:CMS.DocumentEngine.PageBuilder.TempPageBuilderWidgetsInfo"/>.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="instanceGuid"/> is <see cref="F:System.Guid.Empty"/>.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentColumnLists">
            <summary>
            Provides the lists of document columns (versioned, system, etc.)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.SELECTNODES_REQUIRED_COLUMNS">
            <summary>
            Columns required for the select nodes operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.SELECTTREE_REQUIRED_COLUMNS">
            <summary>
            Columns required for the select tree operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.SECURITYCHECK_REQUIRED_COLUMNS">
            <summary>
            Columns required for the security check operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.GETDOCUMENTS_REQUIRED_COLUMNS">
            <summary>
            Columns required for the get documents operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.GETPUBLISHED_REQUIRED_COLUMNS">
            <summary>
            Columns required for getting the published information
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.CANBEPUBLISHED_REQUIRED_COLUMNS">
            <summary>
            List of columns which must be present in order to evaluate if the document can be published
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.mNonVersionedCoupledColumns">
            <summary>
            Non-versioned coupled columns list.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.mNonVersionedDocumentColumns">
            <summary>
            Set of the non-versioned document (CMS_Document) columns
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.mSystemNodeColumns">
            <summary>
            Set of the system node (CMS_Tree) columns
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentColumnLists.mSystemDocumentColumns">
            <summary>
            Set of the system document (CMS_Document) columns
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentColumnLists.NonVersionedCoupledColumns">
            <summary>
            List of the non-versioned coupled document columns.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentColumnLists.SystemNodeColumns">
            <summary>
            Set of the system node (CMS_Tree) columns
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentColumnLists.SystemDocumentColumns">
            <summary>
            Set of the system document (CMS_Document) columns
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentColumnLists.NonVersionedDocumentColumns">
            <summary>
            Set of the non-versioned document (CMS_Document) columns
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryColumnBuilder.GetCulturePriorityColumn(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Gets culture priority column with cultures prioritized by the order in the provided set
            </summary>
            <param name="cultureColumnName">Name of column with the culture codes</param>
            <param name="cultures">Set of culture codes</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryColumnBuilder.GetCulturePriorityColumn(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets culture priority column with cultures prioritized as follows: current culture code (<paramref name="currentCultureCode"/>), 
            default culture code (<paramref name="defaultCultureCode"/>) if parameter (<paramref name="combineWithDefaultCulture"/>) is true.
            Otherwise uses only current culture code.
            </summary>
            <param name="cultureColumnName">Name of column with the culture codes</param>
            <param name="currentCultureCode">Code of current culture.</param>
            <param name="defaultCultureCode">Code of default culture.</param>
            <param name="combineWithDefaultCulture">Indicates if result should contain default culture.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSystemColumns">
            <summary>
            System column names for document API
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSystemColumns.CULTURE_PRIORITY">
            <summary>
            Culture
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSystemColumns.NODE_ID">
            <summary>
            Node ID
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSystemColumns.DOCUMENT_CULTURE">
            <summary>
            Document culture
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQuery`1">
            <summary>
            Queries particular database data or defines parameters for data selection
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery`1.op_Explicit(CMS.DocumentEngine.DocumentQuery{`0})~CMS.DataEngine.InfoDataSet{`0}">
            <summary>
            Implicit operator for conversion from typed DocumentQuery class to typed InfoDataSet
            </summary>
            <param name="query">Query object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery`1.op_Implicit(CMS.DocumentEngine.DocumentQuery{`0})~`0">
            <summary>
            Implicit operator for conversion from typed DocumentQuery class to typed InfoDataSet
            </summary>
            <param name="query">Query object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery`1.InitFromType">
            <summary>
            Initializes the query from the given type
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQuery">
            <summary>
            Predefined query returning given object type.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQueryAliases">
            <summary>
            Constants for document query alias names.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryAliases.BASE_VIEW">
            <summary>
            Alias for the base document view.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryAliases.SKU_VIEW">
            <summary>
            Alias for the SKU data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryAliases.COUPLED_VIEW">
            <summary>
            Alias for the coupled data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryAliases.PAGEURLS_VIEW">
            <summary>
            Alias for the page URL path data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQueryBase`2">
            <summary>
            Predefined query returning given document type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryBase`2.mProperties">
            <summary>
            Document query properties
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryBase`2.FullQueryName">
            <summary>
            Represents a full query name of the query
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryBase`2.Document">
            <summary>
            Document instance of the specified type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryBase`2.Properties">
            <summary>
            Document query properties.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryBase`2.TotalRecords">
            <summary>
            Gets the number of total records when paging is used. Gets updated once the query executes.
            For queries based on <see cref="T:System.Data.IDataReader"/>, the value is updated after materializing the enumeration of individual records.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.TypeUpdated">
            <summary>
            Updates the query class name based on the current status
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.AllowTopNDistribution">
            <summary>
            Returns true if distribution of TOP N to inner queries is allowed
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CreateProperties">
            <summary>
            Creates the query properties
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetDefaultSource">
            <summary>
            Gets the default source for this query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.InitTypedResult(CMS.DataEngine.InfoDataSet{`1})">
            <summary>
            Initializes the typed result
            </summary>
            <param name="typedResult">Result</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetAvailableColumns">
            <summary>
            Gets the list of all available columns for this query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetCompleteSettings(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets the complete parameters for the query execution. The parameters are always a new instance of DataQuerySettings which can be further modified without any impact to the query itself.
            </summary>
            <param name="executingQuery">Executing query for which the parameters are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CopyPropertiesTo(CMS.DataEngine.IQueryObject)">
            <summary>
            Copies the properties to the target query.
            </summary>
            <param name="target">Target query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetDataFromDB">
            <summary>
            Executes the query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetDataFromDataSource">
            <summary>
            Executes the current over data source and returns it's results as a DataSet
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetExecutingQuery(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Gets the query to execute against database
            </summary>
            <param name="settings">Parameters for the query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetEnumerableResult(System.Data.CommandBehavior,System.Boolean)">
            <summary>
            Gets an enumeration of data records representing the result of this query. If <see cref="P:CMS.DocumentEngine.DocumentQueryBase`2.Properties"/> has <see cref="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions"/> set to true,
            the resulting data records are filtered based on permissions.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <returns>Returns the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the query does not support reader.</exception>
            <remarks>
            <para>
            The returned data records can contain additional system columns (<see cref="F:CMS.DataEngine.SystemColumns.ROW_NUMBER"/> and <see cref="F:CMS.DataEngine.SystemColumns.TOTAL_RECORDS"/>)
            when a paged query is being executed. The columns support the framework infrastructure and should not be relied on in custom code.
            </para>
            <para>
            The data records do not reflect version data. The version data are applied as part of the <see cref="M:CMS.DocumentEngine.DocumentQueryBase`2.GetEnumerableTypedResult(System.Data.CommandBehavior,System.Boolean)"/> method.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetEnumerableResultAsync(System.Data.CommandBehavior,System.Boolean,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an enumeration of data records representing the result of this query. If <see cref="P:CMS.DocumentEngine.DocumentQueryBase`2.Properties"/> has <see cref="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions"/> set to true,
            the resulting data records are filtered based on permissions.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown always by this implementation.</exception>
            <remarks>
            <para>
            The returned data records can contain additional system columns (<see cref="F:CMS.DataEngine.SystemColumns.ROW_NUMBER"/> and <see cref="F:CMS.DataEngine.SystemColumns.TOTAL_RECORDS"/>)
            when a paged query is being executed. The columns support the framework infrastructure and should not be relied on in custom code.
            </para>
            <para>
            The data records do not reflect version data. The version data are applied as part of the <see cref="M:CMS.DocumentEngine.DocumentQueryBase`2.GetEnumerableTypedResultAsync(System.Data.CommandBehavior,System.Boolean,System.Nullable{System.Threading.CancellationToken})"/> method
            </para>
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetEnumerableTypedResult(System.Data.CommandBehavior,System.Boolean)">
            <summary>
            Gets enumerable collection of <typeparamref name="TObject"/> representing the result of this query.
            Version data are applied to the resulting objects.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <returns>Returns the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the query does not support reader.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetEnumerableTypedResultAsync(System.Data.CommandBehavior,System.Boolean,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets enumerable collection of <typeparamref name="TObject"/> representing the result of this query.
            Version data are applied to the resulting objects.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the query does not support reader.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetData">
            <summary>
            Gets data set returned by document query or custom data set. Data set can be modified by calling DocumentEvents.GetData event.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Default">
            <summary>
            Ensures default restrictions for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.LatestVersion(System.Boolean)">
            <summary>
            Ensures that only latest versions of the documents are retrieved (the retrieved version itself can also be the published version).
            </summary>
            <param name="latest">If set to false, the method has the same behavior as the <see cref="M:CMS.DocumentEngine.DocumentQueryBase`2.PublishedVersion(System.Boolean)"/> method.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.PublishedVersion(System.Boolean)">
            <summary>
            Ensures that only published versions of documents are retrieved.
            </summary>
            <param name="published">If set to false, the method has the same behavior as the <see cref="M:CMS.DocumentEngine.DocumentQueryBase`2.LatestVersion(System.Boolean)"/> method.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Published(System.Boolean)">
            <summary>
            Ensures that only documents which have at least one published version are retrieved (the retrieved versions of documents themselves don't have to be published).
            </summary>
            <param name="published">If set to false, the method retrieves only documents which don't have any published version.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CheckPermissions(System.Boolean)">
            <summary>
            Ensures that the result will be filtered based on user Read permission.
            </summary>
            <param name="check">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.FilterDuplicates(System.Boolean)">
            <summary>
            Ensures that duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
            <param name="filter">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.InRelationWith(System.Guid,System.String,CMS.DocumentEngine.RelationshipSideEnum)">
            <summary>
            Ensures that only documents in relationship with a specified document are retrieved.
            </summary>
            <param name="nodeGuid">Node GUID of the related document</param>
            <param name="relationshipName">Name of the relationship. If not provided documents from all relationships will be retrieved.</param>
            <param name="side">Side of the related document within the relation</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.NestingLevel(System.Int32)">
            <summary>
            Ensures that only documents within specified nesting level are retrieved.
            </summary>
            <param name="level">Nesting level</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.OnSite(CMS.DataEngine.SiteInfoIdentifier,System.Boolean)">
            <summary>
            Filters the data to include only records on the given site. If site binding is defined, filters the global objects by the site ID
            </summary>
            <param name="siteIdentifier">Site identifier</param>
            <param name="includeGlobal">If true, includes the global objects in case the object type covers both site and global objects</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.OnCurrentSite">
            <summary>
            Filters the data to include only records on the current site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CombineWithDefaultCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in site default culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions.
            </summary>
            <param name="combine">If true, documents will be combined with default culture, otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CombineWithAnyCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in any culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions followed by any other language version.
            If no culture specified, the highest priority has site preferred culture, second the default culture followed by the rest of site cultures.
            </summary>
            <param name="combine">If true, documents will be combined with any other culture(s), otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.AllCultures(System.Boolean)">
            <summary>
            Ensures that all culture versions of the documents are retrieved.
            </summary>
            <param name="all">If true, all culture versions are retrieved, otherwise documents of specified culture(s) are retrieved</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQueryProperties">
            <summary>
            Document specific properties for document queries
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryProperties.mOptimizePrioritizedQueries">
            <summary>
            Setting indicating if prioritized queries should be automatically optimized for higher scalability. Defaults to true or value of web.config key CMSOptimizePrioritizedQueries
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryProperties.mOptimizeNonPrioritizedQueries">
            <summary>
            Setting indicating if non-prioritized queries should be automatically optimized for higher scalability. Defaults to false or value of web.config key CMSOptimizeNonPrioritizedQueries
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryProperties.mDocument">
            <summary>
            Document instance of specified type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.SourceSettings">
            <summary>
            Source settings
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.OptimizeForScalability">
            <summary>
            Gets or sets if complex queries should be optimized for higher scalability.
            Defaults to false, or value in web.config key CMSOptimizeQueriesForScalability
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.Document">
            <summary>
            Document instance of the specified type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.ClassName">
            <summary>
            Class name representing page type
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.FilterDuplicates">
            <summary>
            Indicates if duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.RelationshipNodeGUID">
            <summary>
            Defines node GUID of the related document. Only document in relation with this document will be included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.RelationshipName">
            <summary>
            Defines name of the relationship. If not provided documents from all relationships will be retrieved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.RelationshipSide">
            <summary>
            Defines side of the related document within the relation. Both sides are used by default.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.NestingLevel">
            <summary>
            Limits documents to a specified nesting level. (Applies only when one node alias path for multiple documents is provided.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.SelectOnlyPublished">
            <summary>
            If true, only published documents are retrieved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.EnsureExtraColumns">
            <summary>
            If true, automatic extra columns are ensured for the query (column for version data application, security check required columns etc.).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.IsLastVersion">
            <summary>
            If true, the last version of the documents is retrieved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions">
            <summary>
            Indicates if the documents should be filtered based on current user permissions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CombineWithDefaultCulture">
            <summary>
            Indicates if the documents should be combined with the default language version if the specific one doesn't exist.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CombineWithAnyCulture">
            <summary>
            Indicates if the documents should be combined with any language version if the specific one doesn't exist.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.AllCultures">
            <summary>
            Indicates if all culture versions of the documents should be returned in the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.WithPageUrlPaths">
            <summary>
            Indicates if URL paths should be joined to the returned result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.IsMultiQuery">
            <summary>
            Indicates if properties are used for a multi-query.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.Cultures">
            <summary>
            Prioritized list of document cultures which should be included in the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.Paths">
            <summary>
            List of document paths which should be included in the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.SiteIDs">
            <summary>
            List of site IDs on which should be the documents searched.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.SiteName">
            <summary>
            Provides site name for the current query (If there is only single site specified.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.DefaultCultureCode">
            <summary>
            Provides default culture code for the current query
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.PreferredCultureCode">
            <summary>
            Preferred culture code to use when none set.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.ExcludedPaths">
            <summary>
            List of document paths which should be excluded from the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.TreeProvider">
            <summary>
            Instance of tree provider to use to parametrize documents retrieving.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.IncludeCoupledColumns">
            <summary>
            If true, the query gets coupled data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.ParentQuery">
            <summary>
            Parent document query
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.ApplyDefaultSettings">
            <summary>
            Indicates if default values of the query parameterization should be initialized from settings
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.ExcludedVersionedColumns">
            <summary>
            List of versioned columns which should not be applied
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.ExternalFilters">
            <summary>
            Collection of external filters represented by objects which return <see cref="T:CMS.DataEngine.IWhereCondition"/> from its inner state.
            Each type of the filter can be used only once.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CultureList">
            <summary>
            Ordered and filtered list of cultures to use in query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="isMultiQuery">If true, the properties are created within the multi-query instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetAllowedPathWhereCondition">
            <summary>
            Gets where condition based on allowed paths
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetExcludedPathWhereCondition">
            <summary>
            Gets where condition based on excluded paths
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCultureWhereCondition">
            <summary>
            Gets where condition based on list of requested cultures
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetExternalFiltersWhereCondition">
            <summary>
            Returns a where condition which combines where conditions of all the external filters using AND operand.
            </summary>
            <exception cref="T:System.InvalidOperationException">Each type of an external filter can be used only once.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.AddCulturePriorityColumn(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Adds culture priority column to data query settings to get the most relevant document culture version
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCulturePriorityColumn(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Gets the culture priority column for the query. Prioritizes cultures by the given list.
            Rest of the cultures are prioritized alphabetically by culture name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.AddDuplicatesPriorityColumn(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Adds duplicates priority column to data query settings to get only original documents
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.OnSite(System.Int32[])">
            <summary>
            Filters the data to include documents only on the given site(s).
            </summary>
            <param name="siteIds">Site ID(s)</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetContainerTypeWhereCondition">
            <summary>
            Gets where condition for page type representing container
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetNodeDataWhereCondition">
            <summary>
            Gets where condition for all restrictions based on tree node data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetNestingLevelWhereCondition">
            <summary>
            Gets where condition to retrieve only documents in specified nesting level (The first specified path is taken as the referring one.)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetPublishedWhereCondition">
            <summary>
            Gets where condition to retrieve only published documents based on settings
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetRelationshipWhereCondition">
            <summary>
            Gets where condition to retrieve only documents in relationship defined by the properties.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetClassesWhereCondition(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets where condition based on multi-query settings and list of document types
            </summary>
            <param name="types">List of document types</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.CheckParentQuery">
            <summary>
            Checks if the parent query is set. If not, throws an exception
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Default">
            <summary>
            Ensures default state of settings for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyToSettings(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Applies these properties to the given data query settings
            </summary>
            <param name="settings">Query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.EnsureWhereCondition(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Ensures where condition based on query properties
            </summary>
            <param name="settings">Query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetDataInternal(CMS.DocumentEngine.IDocumentQuery,System.Func{System.Data.DataSet},System.Action{System.Int32})">
            <summary>
            Retrieves the data and filters results by permissions if check permissions is allowed.
            </summary>
            <param name="query">Query to execute</param>
            <param name="baseGetDataMethod">Method which is used for retrieving data without check permissions</param>
            <param name="setTotalRecords">Action to set total records after results are filtred by permissions</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetEnumerableResultInternal(CMS.DocumentEngine.IDocumentQuery,System.Data.CommandBehavior,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{System.Data.IDataRecord}},System.Int32@)">
            <summary>
            Gets an enumeration of data records representing the result of this query. If <see cref="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions"/> is set to true,
            the resulting data records are filtered based on permissions.
            </summary>
            <param name="query">Query to execute.</param>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="baseGetEnumerableResultMethod">Method which is used for retrieving data without checking permissions</param>
            <param name="totalRecords">If filtering based on permissions is enabled and the <paramref name="query"/> is a paged query, contains the total number of results. Otherwise contains -1.</param>
            <returns>Returns the enumeration resulting from query execution.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetEnumerableResultInternalAsync(CMS.DocumentEngine.IDocumentQuery,System.Data.CommandBehavior,System.Boolean,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Data.IDataRecord}}},CMS.DocumentEngine.OutParameter{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets an enumeration of data records representing the result of this query. If <see cref="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions"/> is set to true,
            the resulting data records are filtered based on permissions.
            </summary>
            <param name="query">Query to execute.</param>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="baseGetEnumerableResultMethod">Asynchronous method accepting a <see cref="T:System.Threading.CancellationToken"/> which is used for retrieving data without checking permissions</param>
            <param name="totalRecords">If filtering based on permissions is enabled and the <paramref name="query"/> is a paged query, contains the total number of results. Otherwise contains -1.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the enumeration resulting from query execution.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.FilterResultsByPermissions(CMS.DocumentEngine.IDocumentQuery,System.Int32@)">
            <summary>
            Filters query results by permissions based on settings
            </summary>
            <param name="query">Query to execute</param>
            <returns>Returns DataSet with results</returns>
            <param name="totalRecords">Returns the total records number</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.FilterEnumerableResultsByPermissions(CMS.DocumentEngine.IDocumentQuery,System.Data.CommandBehavior,System.Boolean,System.Int32@)">
            <summary>
            Filters query results by permissions based on settings.
            </summary>
            <param name="query">Query to execute.</param>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="totalRecords">If filtering based on permissions is enabled and the <paramref name="query"/> is a paged query, contains the total number of results. Otherwise contains -1.</param>
            <returns>Returns enumeration of data records with results.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.FilterEnumerableResultsByPermissionsAsync(CMS.DocumentEngine.IDocumentQuery,System.Data.CommandBehavior,System.Boolean,CMS.DocumentEngine.OutParameter{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Asynchronously filters query results by permissions based on settings.
            </summary>
            <param name="query">Query to execute.</param>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="totalRecords">If filtering based on permissions is enabled and the <paramref name="query"/> is a paged query, contains the total number of results. Otherwise contains -1.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning enumeration of data records with results.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyVersionData(System.Data.DataSet)">
            <summary>
            Applies versioned data
            </summary>
            <param name="data">source data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.CloneForPermissionFiltering(CMS.DocumentEngine.IDocumentQuery)">
            <summary>
            Gets clone of the original query for results
            </summary>
            <param name="query">Original query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.EnsurePriorityColumns(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Ensures required columns based on query properties
            </summary>
            <param name="settings">Data query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.EnsureRequiredColumns(CMS.DataEngine.IDataQuerySettings)">
            <summary>
            Adds required columns to the columns list based on query properties
            </summary>
            <param name="settings">Data query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetSingleQuery(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets modified single query to execute
            </summary>
            <param name="q">Original query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyPrioritization(CMS.DataEngine.IDataQuery,CMS.DataEngine.DataQuerySettings)">
            <summary>
            Applies the prioritization to the given query
            </summary>
            <param name="q">Query</param>
            <param name="prioritizationSettings">Prioritization settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyOptimization(CMS.DataEngine.IDataQuery,CMS.DataEngine.DataQuerySettings,CMS.DocumentEngine.IDocumentQuery)">
            <summary>
            Applies the optimization to the executing query
            </summary>
            <param name="q">Query</param>
            <param name="optimizationSettings">Optimization settings</param>
            <param name="docQuery">Original document query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetOptimizationSettings(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets the query optimization settings
            </summary>
            <param name="q">Query which should be optimized</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.OptimizeQuery(CMS.DocumentEngine.IDocumentQuery)">
            <summary>
            Returns true if the given query should be optimized
            </summary>
            <param name="docQuery">Document query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ShouldOptimize(CMS.DocumentEngine.IDocumentQuery)">
            <summary>
            Returns true if the query has good selectivity of data, and therefore can benefit from optimization
            </summary>
            <param name="query">Query to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.AllowsOptimization(CMS.DataEngine.IDataQuery)">
            <summary>
            Returns true if the query can be executed using data optimization based on its settings
            </summary>
            <param name="query">Query to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.JoinWithFullData(CMS.DataEngine.IDataQuery)">
            <summary>
            Joins the result of the given query with the full data
            </summary>
            <param name="q">Query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetDefaultSource(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets the default source for this query
            </summary>
            <param name="document">Document object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.JoinExtraData(CMS.DataEngine.QuerySource,CMS.DocumentEngine.TreeNode)">
            <summary>
            Joins the extra data to the original data
            </summary>
            <param name="source">Original source</param>
            <param name="document">Document object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetPrioritizationSettings">
            <summary>
            Gets outer settings for data query based on properties
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.CultureIsPrioritized">
            <summary>
            Indicates that multiple specified culture versions will be combined in the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyProperties(CMS.DocumentEngine.DocumentQueryProperties)">
            <summary>
            Applies properties to the given target instance.
            Does not apply properties which are already explicitly set in the target instance, and which values cannot be combined from both instances.
            </summary>
            <param name="p">Properties to copy the settings to</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Clone">
            <summary>
            Clones object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.IsTypeSpecific">
            <summary>
            Indicates if query is type-specific
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCombineWithDefaultCultureInternal">
            <summary>
            Gets default value for combine with default culture
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetPreferredCultureInternal">
            <summary>
            Gets default value for preferred culture
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetDefaultCultureCodeInternal">
            <summary>
            Gets default value for default culture
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.EnsurePreferredCulture(System.Collections.Generic.List{System.String})">
            <summary>
            Ensures preferred culture if none specified
            </summary>
            <param name="cultures">Current list of cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.PropagateSettings(CMS.DataEngine.IDataQuerySettings,CMS.DataEngine.DataQuerySettings)">
            <summary>
            Propagates settings from the inner settings to the outer settings
            </summary>
            <param name="inner">Inner settings</param>
            <param name="outer">Outer settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.PropagateDistinct(CMS.DataEngine.IDataQuerySettings,CMS.DataEngine.IDataQuerySettings)">
            <summary>
            Propagates the distinct of the inner settings to the outer settings
            </summary>
            <param name="inner">Inner settings</param>
            <param name="outer">Outer settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.PropagateColumns(CMS.DataEngine.IDataQuerySettings,CMS.DataEngine.IDataQuerySettings,System.Boolean)">
            <summary>
            Propagates the columns of the inner settings to the outer settings
            </summary>
            <param name="inner">Inner settings</param>
            <param name="outer">Outer settings</param>
            <param name="asAliases">If true, the columns are propagated as original query column aliases to make the data available. If false, full column list is propagated to outer query expecting that all necessary data is available in the outer query.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.PropagateOrderBy(CMS.DataEngine.IDataQuerySettings,CMS.DataEngine.IDataQuerySettings,System.Boolean,System.Boolean)">
            <summary>
            Propagates the order by of the inner settings to the outer settings
            </summary>
            <param name="inner">Inner settings</param>
            <param name="outer">Outer settings</param>
            <param name="useRowNumber">If true, extra row number columns is used for order by propagation to cover cases where columns may not be externally available</param>
            <param name="includeRowNumberToColumns">If true, row number is included to the result columns, otherwise it is added only to filter columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.PropagateGroupBy(CMS.DataEngine.IDataQuerySettings,CMS.DataEngine.IDataQuerySettings)">
            <summary>
            Propagates the group by and having of the inner settings to the outer settings
            </summary>
            <param name="inner">Inner settings</param>
            <param name="outer">Outer settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.PropagateRowRestrictions(CMS.DataEngine.IDataQuerySettings,CMS.DataEngine.IDataQuerySettings)">
            <summary>
            Propagates the row restrictions of the inner settings to the outer settings
            </summary>
            <param name="inner">Inner settings</param>
            <param name="outer">Outer settings</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQuerySourceHelper">
            <summary>
            Provides source for the document query helper.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetBaseSourceTable(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets the base data source table
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetBaseSource(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets base source for the query.
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinCoupledData(CMS.DataEngine.QuerySource,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Joins coupled data to the query source
            </summary>
            <param name="source">Query source</param>
            <param name="document">Empty document instance for query type reference</param>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinSKUData(CMS.DataEngine.QuerySource,CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Joins SKU data to the query source
            </summary>
            <param name="source">Query source</param>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinPageUrlPaths(CMS.DataEngine.QuerySource,CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Joins PageUrlPath data to the query source.
            </summary>
            <param name="source">Query source.</param>
            <param name="settings">Settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetBaseSourceTableInternal(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets the base data source table
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetBaseSourceInternal(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets base source for the query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinCoupledDataInternal(CMS.DataEngine.QuerySource,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Joins coupled data to the query source
            </summary>
            <param name="source">Query source</param>
            <param name="document">Empty document instance for query type reference</param>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinSKUDataInternal(CMS.DataEngine.QuerySource,CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Joins SKU data to the query source
            </summary>
            <param name="source">Query source</param>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinUrlPathsInternal(CMS.DataEngine.QuerySource,CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Joins PageUrlPath data to the query source.
            </summary>
            <param name="source">Query source.</param>
            <param name="settings">Settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetBaseDataSourceHints(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets query hints for base source.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetSKUDataSourceHints(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets query hints for SKU source.
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetCoupledDataSourceHints(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets query hints for coupled data source.
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetPageUrlPathsSourceHints(CMS.DocumentEngine.DocumentQuerySourceSettings)">
            <summary>
            Gets query hints for PageUrlPath data source.
            </summary>
            <param name="settings">Settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetSKUSourceTable(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets source table for SKU data
            </summary>
            <param name="hints">List of hint to be used for the SKU source</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetCoupledDataSourceTable(System.Collections.Generic.IEnumerable{System.String},CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets source table for coupled data
            </summary>
            <param name="hints">List of hint to be used for the coupled data source</param>
            <param name="document">Empty document instance for query type reference</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinSKUDataSource(CMS.DataEngine.QuerySource,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Joins SKU data to the query data source.
            </summary>
            <param name="source">Original data source</param>
            <param name="hints">Query hints to be applied to the data join</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.JoinCoupledDataSource(CMS.DataEngine.QuerySource,CMS.DocumentEngine.TreeNode,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Joins coupled data to the query data source.
            </summary>
            <param name="source">Original data source</param>
            <param name="document">Empty document instance for query type reference</param>
            <param name="hints">Query hints to be applied to the data join</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceHelper.GetClassWhereCondition(System.String)">
            <summary>
            Returns where condition for a specific class
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQuerySourceSettings">
            <summary>
            Configuration settings for document query source
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQuerySourceSettings.UseNoLock">
            <summary>
            If true, NOLOCK hint is used in the query sources to execute the query in uncommitted read isolation level.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQuerySourceSettings.UseNoExpand">
            <summary>
            If true, NOEXPAND hint is used in the query sources forcing usage of view indexes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceSettings.UseNoExpandHint">
            <summary>
            Returns true if the NOEXPAND hint should be used for the query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceSettings.UseNoLockHint">
            <summary>
            Returns true if the NOLOCK hint should be used for the query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuerySourceSettings.Clone">
            <summary>
            Returns the clone of the object
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentQuery`2">
            <summary>
            Document query parameters interface for a specific query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Default">
            <summary>
            Ensures default restrictions for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.LatestVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="latest">If true, the latest (edited) version is retrieved, otherwise published version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.PublishedVersion(System.Boolean)">
            <summary>
            Ensures that published version of the documents is retrieved.
            </summary>
            <param name="published">If true, published version is retrieved, otherwise latest (edited) version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Published(System.Boolean)">
            <summary>
            Ensures that only documents published on a live site are retrieved.
            </summary>
            <param name="published">If true, only published documents are retrieved, otherwise all documents are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.CheckPermissions(System.Boolean)">
            <summary>
            Ensures that the result will be filtered based on user Read permission.
            </summary>
            <param name="check">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.FilterDuplicates(System.Boolean)">
            <summary>
            Ensures that duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
            <param name="filter">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.InRelationWith(System.Guid,System.String,CMS.DocumentEngine.RelationshipSideEnum)">
            <summary>
            Ensures that only documents in relationship with a specified document are retrieved.
            </summary>
            <param name="nodeGuid">Node GUID of the related document</param>
            <param name="relationshipName">Name of the relationship. If not provided documents from all relationships will be retrieved.</param>
            <param name="side">Side of the related document within the relation</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.NestingLevel(System.Int32)">
            <summary>
            Ensures that only documents within specified nesting level are retrieved.
            </summary>
            <param name="level">Nesting level</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.OnCurrentSite">
            <summary>
            Filters the data to include only records on the current site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.CombineWithDefaultCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in site default culture if not translated to the requested one. This behavior can be used only when a single culture of documents is requested.
            </summary>
            <param name="combine">If true, documents will be combined with default culture, otherwise only documents translated to requested culture are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.AllCultures(System.Boolean)">
            <summary>
            Ensures that all culture versions of the documents are retrieved.
            </summary>
            <param name="all">If true, all culture versions are retrieved, otherwise documents of specified culture(s) are retrieved</param>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentQuery">
            <summary>
            Document query parameters interface
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IDocumentQuery.Properties">
            <summary>
            Document query parameters.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentQueryFilter">
            <summary>
            Defines an interface indicating that an object instance returns <see cref="T:CMS.DataEngine.IWhereCondition"/> from its inner state.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQueryFilter.GetWhereCondition(CMS.DocumentEngine.DocumentQueryProperties)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.IWhereCondition"/> object based on current instance's inner state.
            </summary>
            <param name="properties">Query properties representing the query inner state.</param>
        </member>
        <member name="T:CMS.DocumentEngine.OutParameter`1">
            <summary>
            Class wrapping a value to be returned from a method which does not support <c>out</c> parameters (such as asynchronous methods or iterators).
            </summary>
            <typeparam name="T">Type of the value to be wrapper.</typeparam>
        </member>
        <member name="P:CMS.DocumentEngine.OutParameter`1.Value">
            <summary>
            Gets or sets the out parameter value.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.OutParameter`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.OutParameter`1"/> class.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IncludeCoupledDataEnum">
            <summary>
            Indicates how coupled data columns are included in the multiple documents query.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IncludeCoupledDataEnum.Complete">
            <summary>
            Coupled data columns are included in the result as well as in the inner queries to be able to use them as part of the where conditions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IncludeCoupledDataEnum.InnerQueryOnly">
            <summary>
            Coupled data columns are included only in the inner queries to be able to use them as part of the where conditions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IncludeCoupledDataEnum.None">
            <summary>
            Coupled data columns are not included in the query at all.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IMultiDocumentQuery`3">
            <summary>
            Multi document query interface for a specific query
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IMultiDocumentQuery">
            <summary>
            Multi document query interface
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.MultiDocumentQuery">
            <summary>
            Multiple documents query
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.MultiDocumentQueryBase`3">
            <summary>
            Base class for multiple documents query.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.MultiDocumentQueryBase`3.mProperties">
            <summary>
            Document query properties
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MultiDocumentQueryBase`3.Properties">
            <summary>
            Document query properties.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MultiDocumentQueryBase`3.TotalRecords">
            <summary>
            Gets the number of total records when paging is used. Gets updated once the query executes.
            For queries based on <see cref="T:System.Data.IDataReader"/>, the value is updated after materializing the enumeration of individual records.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.AllowTopNDistribution">
            <summary>
            Returns true if distribution of TOP N to inner queries is allowed
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CreateProperties">
            <summary>
            Creates the query properties
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.InitTypedResult(CMS.DataEngine.InfoDataSet{`2})">
            <summary>
            Initializes the typed result
            </summary>
            <param name="typedResult">Result</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ResolveType(System.String)">
            <summary>
            Resolves the given type into corresponding types
            </summary>
            <param name="type">Source type</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetExecutingQuery(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Gets the query to execute against database
            </summary>
            <param name="settings">Parameters for the query</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetEnumerableResult(System.Data.CommandBehavior,System.Boolean)">
            <summary>
            Gets an enumeration of data records representing the result of this query. If <see cref="P:CMS.DocumentEngine.MultiDocumentQueryBase`3.Properties"/> has <see cref="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions"/> set to true,
            the resulting data records are filtered based on permissions.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <returns>Returns the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the query does not support reader.</exception>
            <remarks>
            <para>
            The returned data records can contain additional system columns (<see cref="F:CMS.DataEngine.SystemColumns.ROW_NUMBER"/> and <see cref="F:CMS.DataEngine.SystemColumns.TOTAL_RECORDS"/>)
            when a paged query is being executed. The columns support the framework infrastructure and should not be relied on in custom code.
            </para>
            <para>
            The data records do not reflect version data. To apply version data to the resulting enumeration, the <see cref="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetEnumerableTypedResult(System.Data.CommandBehavior,System.Boolean)"/> method must be used.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetEnumerableResultAsync(System.Data.CommandBehavior,System.Boolean,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an enumeration of data records representing the result of this query. If <see cref="P:CMS.DocumentEngine.MultiDocumentQueryBase`3.Properties"/> has <see cref="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions"/> set to true,
            the resulting data records are filtered based on permissions.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the query does not support reader.</exception>
            <para>
            The returned data records can contain additional system columns (<see cref="F:CMS.DataEngine.SystemColumns.ROW_NUMBER"/> and <see cref="F:CMS.DataEngine.SystemColumns.TOTAL_RECORDS"/>)
            when a paged query is being executed. The columns support the framework infrastructure and should not be relied on in custom code.
            </para>
            <para>
            The data records do not reflect version data. To apply version data to the resulting enumeration, the <see cref="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetEnumerableTypedResult(System.Data.CommandBehavior,System.Boolean)"/> method must be used.
            </para>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetEnumerableTypedResult(System.Data.CommandBehavior,System.Boolean)">
            <summary>
            Gets enumerable collection of <typeparamref name="TObject"/> representing the result of this query.
            Version data are applied to the resulting objects.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <returns>Returns the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the query does not support reader.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetEnumerableTypedResultAsync(System.Data.CommandBehavior,System.Boolean,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets enumerable collection of <typeparamref name="TObject"/> representing the result of this query.
            Version data are applied to the resulting objects.
            </summary>
            <param name="commandBehavior">Command behavior for the underlying reader.</param>
            <param name="newConnection">If true, the underlying reader will be executed using its own dedicated connection.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the enumeration resulting from query execution.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the query does not support reader.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetClassNames">
            <summary>
            Gets all types available for the current query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.EnsureQuery(System.String)">
            <summary>
            Ensures the query with the given type
            </summary>
            <param name="type">Query type</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ApplyProperties(CMS.DataEngine.IDataQuery,System.Boolean)">
            <summary>
            Applies main query properties to the given query to ensure synchronized state before execution
            </summary>
            <param name="query">Query to prepare</param>
            <param name="multiQuery">If true, the query is an inner query within multi-query</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetTypesWhereCondition(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the where condition which filters the default query data for specific types
            </summary>
            <param name="types">List of types for which create the where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CreateQuery(System.String)">
            <summary>
            Creates query for the given type
            </summary>
            <param name="type">Query type</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetDataFromDB">
            <summary>
            Executes the query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetDataFromDataSource">
            <summary>
            Executes the current over data source and returns it's results as a DataSet
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetSingleQuery(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Attempts to get a single query for the whole result based on the current state of the query object
            </summary>
            <param name="settings">Parameters for the query</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetAvailableColumns">
            <summary>
            Gets the list of all available columns for this query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetIDColumn">
            <summary>
            Gets the ID column for this query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.SetClassName(System.String)">
            <summary>
            Sets class name for current query
            </summary>
            <param name="value">New class name value</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CopyPropertiesTo(CMS.DataEngine.IQueryObject)">
            <summary>
            Copies the properties to the target query.
            </summary>
            <param name="target">Target query</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetDefaultOrderBy">
            <summary>
            Gets the default order by columns
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Default">
            <summary>
            Ensures default restrictions for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.LatestVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="latest">If true, the latest (edited) version is retrieved, otherwise published version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.PublishedVersion(System.Boolean)">
            <summary>
            Ensures that published version of the documents is retrieved.
            </summary>
            <param name="published">If true, published version is retrieved, otherwise latest (edited) version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Published(System.Boolean)">
            <summary>
            Ensures that only documents published on a live site are retrieved.
            </summary>
            <param name="published">If true, only published documents are retrieved, otherwise all documents are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CheckPermissions(System.Boolean)">
            <summary>
            Ensures that the result will be filtered based on user Read permission.
            </summary>
            <param name="check">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.FilterDuplicates(System.Boolean)">
            <summary>
            Ensures that duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
            <param name="filter">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.WithCoupledColumns(System.Boolean)">
            <summary>
            Ensures that coupled columns will be included in the results.
            </summary>
            <param name="include">Indicates if coupled columns should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.WithCoupledColumns(CMS.DocumentEngine.IncludeCoupledDataEnum)">
            <summary>
            Defines how coupled columns will be included in the results.
            </summary>
            <param name="type">Type of the inclusion</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.OnlyCoupledColumns">
            <summary>
            Ensures that only coupled columns will be included in the results.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.InRelationWith(System.Guid,System.String,CMS.DocumentEngine.RelationshipSideEnum)">
            <summary>
            Ensures that only documents in relationship with a specified document are retrieved.
            </summary>
            <param name="nodeGuid">Node GUID of the related document</param>
            <param name="relationshipName">Name of the relationship. If not provided documents from all relationships will be retrieved.</param>
            <param name="side">Side of the related document within the relation</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.NestingLevel(System.Int32)">
            <summary>
            Ensures that only documents within specified nesting level are retrieved.
            </summary>
            <param name="level">Nesting level</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CombineWithDefaultCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in site default culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions.
            </summary>
            <param name="combine">If true, documents will be combined with default culture, otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CombineWithAnyCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in any culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions followed by any other language version.
            If no culture specified, the highest priority has site preferred culture, second the default culture followed by the rest of site cultures.
            </summary>
            <param name="combine">If true, documents will be combined with any other culture(s), otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.AllCultures(System.Boolean)">
            <summary>
            Ensures that all culture versions of the documents are retrieved.
            </summary>
            <param name="all">If true, all culture versions are retrieved, otherwise documents of specified culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.OnSite(CMS.DataEngine.SiteInfoIdentifier,System.Boolean)">
            <summary>
            Filters the documents to include only records on the given site.
            </summary>
            <param name="siteIdentifier">Site identifier</param>
            <param name="includeGlobal">If true, includes the global objects in case the object type covers both site and global objects</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.OnCurrentSite">
            <summary>
            Filters the data to include only records on the current site.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Query.QueryExtensions">
            <summary>
            Extensions for data queries.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Query.QueryExtensions.ExpandToFullSourceSet(CMS.DataEngine.IDataQuery)">
            <summary>
            Expands the query to its full source set by reseting properties that transform the original set of data to a limited set.
            This includes mainly aggregations and restrictions of result count.
            </summary>
            <param name="query">Query.</param>
        </member>
        <member name="T:CMS.DocumentEngine.IRelationshipInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IRelationshipInfoProvider.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding structure.
            </summary>
            <param name="leftNodeId">ID of left node.</param>
            <param name="rightNodeId">ID of right node.</param>
            <param name="relationshipNameId">ID of relationship name.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IRelationshipInfoProvider.GetAsync(System.Int32,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding structure.
            </summary>
            <param name="leftNodeId">ID of left node.</param>
            <param name="rightNodeId">ID of right node.</param>
            <param name="relationshipNameId">ID of relationship name.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IRelationshipInfoProvider.Remove(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding.
            </summary>
            <param name="leftNodeId">ID of left node.</param>
            <param name="rightNodeId">ID of right node.</param>
            <param name="relationshipNameId">ID of relationship name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.IRelationshipInfoProvider.Add(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding.
            </summary>
            <param name="leftNodeId">ID of left node.</param>
            <param name="rightNodeId">ID of right node.</param>
            <param name="relationshipNameId">ID of relationship name.</param>
        </member>
        <member name="T:CMS.DocumentEngine.RelationshipInfo">
            <summary>
            RelationshipInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.OBJECT_TYPE_ADHOC">
            <summary>
            Object type for ordered relationships with ad-hoc relationship name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.TYPEINFO_ADHOC">
            <summary>
            Type information for ordered (ad hoc) relationship.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.mRelationshipCustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipOrder">
            <summary>
            Relationship order. Returns 0 for standard relationships which cannot be sorted. Only ah-hoc relationships can be sorted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipIsAdHoc">
            <summary>
            Returns true if relationship is ad-hoc (available since v 9.0), false for standard relationships.
            Ad-hoc relationship is a left side relationship created between node and selected related node.
            Multiple ad-hoc relationships can be sorted in the group which has common left node and ad-hoc relationship name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipID">
            <summary>
            Relationship ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RightNodeId">
            <summary>
            Right node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipNameId">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.LeftNodeId">
            <summary>
            Left node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipCustomData">
            <summary>
            Relationship custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.TypeInfo">
            <summary>
            Type info.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.GetSiblingsWhereCondition">
            <summary>
            Creates subset for ordering functionality. The group is defined by ad-hoc relationship name ID and the left node ID, under which is relationship created.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.SetObjectOrderPostprocessing">
            <summary>
            Ensures synchronization of left side node if order of ad-hoc relationships was changed.
            This method is called only for ad-hoc relationships with OrderColumn defined in the type info.
            This method can be removed in case node as a parent of relationship will be defined in the type info and import/export and staging will work properly.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.#ctor">
            <summary>
            Constructor - Creates an empty RelationshipInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RelationshipInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks whether the specified user has permissions for this object. This method is called automatically after CheckPermissions event was fired.
            </summary>
            <param name="permission">Permission to perform this operation will be checked</param>
            <param name="siteName">Permissions on this site will be checked</param>
            <param name="userInfo">Permissions of this user will be checked</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
            <returns>True if user is allowed to perform specified operation on the this object; otherwise false</returns>
        </member>
        <member name="T:CMS.DocumentEngine.RelationshipInfoProvider">
            <summary>
            Class providing RelationshipInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:CMS.DocumentEngine.RelationshipInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationships">
            <summary>
            Returns a query for all the RelationshipInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding structure.
            </summary>
            <param name="leftNodeId">ID of left node.</param>
            <param name="rightNodeId">ID of right node.</param>
            <param name="relationshipNameId">ID of relationship name.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetAsync(System.Int32,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding structure.
            </summary>
            <param name="leftNodeId">ID of left node.</param>
            <param name="rightNodeId">ID of right node.</param>
            <param name="relationshipNameId">ID of relationship name.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets relationship info object.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipInfo(System.Int32)">
            <summary>
            Gets relationship info object.
            </summary>
            <param name="relationshipId">ID of relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.SetRelationshipInfo(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Sets relationship info object.
            </summary>
            <param name="relationship">Relationship info</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationshipInfo(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="relationshipInfo">Relationship object</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationshipInfo(System.Int32)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="relationshipId">Relationship identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.ClearCache(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Clears the document relationship cache for the given relationship.
            </summary>
            <param name="relationship">Relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.Add(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding.
            </summary>
            <param name="leftNodeId">ID of left node.</param>
            <param name="rightNodeId">ID of right node.</param>
            <param name="relationshipNameId">ID of relationship name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.AddRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the relationship for two nodes.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.Remove(System.Int32,System.Int32,System.Int32)">
             <summary>
             Deletes <see cref="T:CMS.DocumentEngine.RelationshipInfo"/> binding.
             </summary>
            <param name="leftNodeId">ID of left node.</param>
             <param name="rightNodeId">ID of right node.</param>
             <param name="relationshipNameId">ID of relationship name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RemoveRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RemoveRelationship(System.Int32)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="relationshipId">ID of relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RemoveRelationship(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Removes given relationship. Initializes objects order in case of ad-hoc relationship.
            </summary>
            <param name="relationship">Relationship to be removed</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RelationshipExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check whether relationship between two nodes already exists.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
            <returns>Returns true if the relationship between two nodes already exists</returns>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationships(System.Int32,System.Boolean,System.Boolean,System.String,System.Int32,System.String)">
            <summary>
            Returns the relationships DataSet for specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, returns the relationships where node is located on the left side</param>
            <param name="nodeRight">If true, returns the relationships where node is located on the right side</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationships(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Deletes the node relationships.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, relationships with node on the left side are deleted</param>
            <param name="nodeRight">If true, relationships with node on the right side are deleted</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.ApplyRelationshipOrderData(CMS.DocumentEngine.MultiDocumentQuery,System.Int32,System.Int32)">
            <summary>
            Apply relationship order data on multidocument query.
            </summary>
            <param name="query">Multi document query where relationship order data will be added.</param>
            <param name="leftNodeId">ID of node which is on the left side of the relationship.</param>
            <param name="relationshipNameId">ID of ad-hoc relationship name. Only relationships from ad-hoc relationship name can be ordered.</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipInfoInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets relationship info object.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.SetInfo(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteInfo(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.ClearCacheInternal(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Clears the document relationship cache for the given relationship.
            </summary>
            <param name="relationship">Relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RelationshipExistsInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check whether relationship between two nodes already exists.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
            <returns>Returns true if the relationship between two nodes already exists</returns>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipsInternal(System.Int32,System.Boolean,System.Boolean,System.String,System.Int32,System.String)">
            <summary>
            Returns the relationships DataSet for specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, returns the relationships where node is located on the left side</param>
            <param name="nodeRight">If true, returns the relationships where node is located on the right side</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationshipsInternal(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Deletes the node relationships.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, relationships with node on the left side are deleted</param>
            <param name="nodeRight">If true, relationships with node on the right side are deleted</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.ApplyRelationshipOrderDataInternal(CMS.DocumentEngine.MultiDocumentQuery,System.Int32,System.Int32)">
            <summary>
            Apply relationship order data on multidocument query.
            </summary>
            <param name="query">Multi document query where relationship order data will be added.</param>
            <param name="leftNodeId">ID of node which is on the left side of the relationship.</param>
            <param name="relationshipNameId">ID of ad-hoc relationship name. Only relationships from ad-hoc relationship name can be ordered.</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipsWhereCondition(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates where condition for obtaining relationships containing the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, relationships with node on the left side are obtained</param>
            <param name="nodeRight">If true, relationships with node on the right side are obtained</param>
            <returns>Returns where condition for the specified node</returns>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipCount(System.Int32,System.Int32)">
            <summary>
            Returns count of relationship with the same relationship name created under one node.
            </summary>
            <param name="relationshipNameID">ID of relationship name.</param>
            <param name="leftNodeID">ID of node which is on the left side of relationship.</param>
        </member>
        <member name="T:CMS.DocumentEngine.GetAttachmentService">
            <summary>
            HTTP handler to get document attachments
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.GetAttachmentService.useClientCache">
            <summary>
            Sets to false to disable the client caching.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.GetAttachmentService.largeFilesCacheMinutes">
            <summary>
            Sets to 0 if you do not wish to cache large files.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.#ctor(CMS.Base.ISiteService,CMS.Base.Internal.IWebPathMapper)">
            <summary>
            Initializes new instance of <see cref="T:CMS.DocumentEngine.GetAttachmentService"/> class.
            </summary>
            <param name="siteService">The <see cref="T:CMS.Base.ISiteService"/> implementation.</param>
            <param name="webPathMapper">The <see cref="T:CMS.Base.Internal.IWebPathMapper"/> implementation.</param>
        </member>
        <member name="P:CMS.DocumentEngine.GetAttachmentService.CultureCode">
            <summary>
            Gets the language for current file.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.GetAttachmentService.TreeProvider">
            <summary>
            Tree provider.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.GetAttachmentService.VersionHistoryID">
            <summary>
            Document version history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.GetAttachmentService.LatestVersion">
            <summary>
            Indicates if the file is latest version or comes from version history.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.GetAttachmentService.AllowCache">
            <summary>
            Returns true if the process allows cache.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.GetAttachmentService.CacheMinutes">
            <summary>
            Cache minutes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.GetFileServiceResult">
            <summary>
            Handles attachment caching and returns the request process result as a <see cref="T:CMS.Base.Routing.CMSActionResult"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.ProcessAttachmentCached">
            <summary>
            Processes the attachment cached.
            </summary>
            <returns>
            Returns <c>null</c> or action result for redirection if the attachment is not found.
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.GetSendFileAction(CMS.DocumentEngine.CMSOutputAttachment)">
            <summary>
            Sends the given file within response.
            </summary>
            <param name="attachment">File to send</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.CheckPermissions(CMS.DocumentEngine.CMSOutputAttachment)">
            <summary>
            Checks if <see cref="P:CMS.Membership.MembershipContext.AuthenticatedUser"/> has access to the <paramref name="attachment"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.EnsureOutputData(CMS.DocumentEngine.CMSOutputAttachment,System.Boolean)">
            <summary>
            Ensures the file data if physical file not present.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.GetFileETag(CMS.DocumentEngine.CMSOutputAttachment)">
            <summary>
            Gets the file ETag
            </summary>
            <param name="attachment">File</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.ProcessAttachment">
            <summary>
            Processes the attachment.
            </summary>
            <returns>
            Returns <c>null</c> or action result for redirection if the attachment is not found.
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.LoadAliasPathAndFileName">
            <summary>
            Loads the alias path and file name from the request parameters
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.ProcessFile(System.Guid)">
            <summary>
            Processes the specified file and returns the data to the output stream.
            </summary>
            <param name="attachmentGuid">Attachment guid</param>
            <returns>
            Returns <c>null</c> or action result for redirection if the attachment is not found.
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.CheckRequiredMimeType(CMS.DocumentEngine.IAttachment)">
            <summary>
            Checks if attachment mime type is allowed.
            </summary>
            <param name="attachment">AttachmentInfo</param>
            <returns>True if file is allowed, false if not</returns>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.ProcessNode(System.String,System.String)">
            <summary>
            Processes the specified document node.
            </summary>
            <param name="currentAliasPath">Alias path</param>
            <param name="currentFileName">File name</param>
            <returns>
            Returns <c>null</c> or action result for redirection if the attachment is not found.
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.ProcessNodeByFileName(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Processes the specified document node.
            </summary>
            <param name="treeNode">Document node to process</param>
            <param name="fileName">File name</param>
            <returns>
            Returns <c>null</c> or action result for redirection if the attachment is not found.
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.ProcessFile(System.Guid,System.Int32)">
            <summary>
            Processes the specified version of the file and returns the data to the output stream.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="versionHistoryId">Document version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.GetFile(System.Guid,System.Int32)">
            <summary>
            Gets the file from version history.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.GetOutputDataDependency(CMS.DocumentEngine.IAttachment)">
            <summary>
            Returns the output data dependency based on the given attachment record.
            </summary>
            <param name="ai">Attachment object</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.GetNodeDependency(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the cache dependency for the given document node.
            </summary>
            <param name="document">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.EnsureSecuritySettings(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures the security settings in the given document node.
            </summary>
            <param name="document">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.CacheNode(CMS.Helpers.CachedSection{CMS.DocumentEngine.TreeNode},CMS.DocumentEngine.TreeNode)">
            <summary>
            Handles the document caching actions.
            </summary>
            <param name="cs">Cached section</param>
            <param name="document">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.EnsurePhysicalFile(CMS.DocumentEngine.CMSOutputAttachment)">
            <summary>
            Ensures the physical file.
            </summary>
            <param name="attachment">Output file</param>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.CheckAllowLatestVersion">
            <summary>
            Returns true if latest version of the document is allowed.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.CreateEmptyOutput">
            <summary>
            Gets the new output file object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.GetAttachmentService.CreateOutputFromAttachment(CMS.DocumentEngine.DocumentAttachment,System.Byte[])">
            <summary>
            Gets the new output file object.
            </summary>
            <param name="ai">AttachmentInfo</param>
            <param name="data">Output file data</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsGenerator">
            <summary>
            Interface for a generator of page URL paths for either a whole site or a page and given cultures.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsGenerator.Generate(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Generates page URL paths for given cultures.
            </summary>
            <param name="cultureCodes">Culture codes for which URL paths should be generated.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsRemover">
            <summary>
            Interface for a remover of page URL paths for either a whole site or a page and given cultures.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsRemover.Remove(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes page URL paths in given cultures.
            </summary>
            <param name="cultureCodes">Culture codes for which URL paths should be removed.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator">
            <summary>
            Generates page URL paths for either a whole site or a page and given cultures.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator.#ctor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator"/> class.
            </summary>
            <param name="site">Site for which URL paths should be generated.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator"/> class.
            </summary>
            <param name="page">Page for which URL paths should be generated including the descending pages.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator.#ctor(CMS.DataEngine.SiteInfoIdentifier,CMS.DocumentEngine.Routing.Internal.IPageUrlPathCultureAliasesTableBuilder)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator"/> class.
            </summary>
            <param name="site">Site for which URL paths should be generated.</param>
            <param name="culturesTableBuilder">PageUrlPathCulturesTable builder.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.Routing.Internal.IPageUrlPathCultureAliasesTableBuilder)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator"/> class.
            </summary>
            <param name="page">Page for which URL paths should be generated including the descending pages.</param>
            <param name="culturesTableBuilder">PageUrlPathCulturesTable builder.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsGenerator.Generate(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Generates page URL paths for given cultures.
            </summary>
            <param name="cultureCodes">Culture codes for which URL paths should be generated.</param>
            <remarks>Generates page URL paths no matter what routing mode is configured in the settings.</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsRemover">
            <summary>
            Removes page URL paths for either a whole site or a page and given cultures.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsRemover.#ctor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsRemover"/> class.
            </summary>
            <param name="site">Site for which URL paths should be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsRemover.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsRemover"/> class.
            </summary>
            <param name="page">Page for which URL paths should be deleted including the descending pages.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsRemover.Remove(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes page URL paths in given cultures.
            </summary>
            <param name="cultureCodes">Culture codes for which URL paths should be removed.</param>
            <remarks>Removes page URL paths no matter what routing mode is configured in the settings.</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsUpdater">
            <summary>
            Updates page URL paths for given page in given cultures.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsUpdater.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsUpdater"/> class.
            </summary>
            <param name="page">The page for which the page URL paths should be updated.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="page"/> is not handled by routing feature.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsUpdater.Update(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32)">
            <summary>
            Updates page URL paths in all cultures for the given page.
            </summary>
            <param name="cultureCodes">Culture codes for which URL paths should be updated.</param>
            <param name="originalSiteId">The original site ID for page moved across sites.</param>
            <param name="newSiteId">The new site ID for page moved across sites.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsUtils">
            <summary>
            Utility methods for URL paths management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsUtils.GetWhereCondition(CMS.DocumentEngine.TreeNode,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets where condition for handled page URL paths.
            </summary>
            <param name="page">Page.</param>
            <param name="siteId">Site ID.</param>
            <param name="cultureCodes">Culture codes for which URL paths should be handled.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathCulturePathsUtils.TouchCacheKeys(CMS.DocumentEngine.TreeNode)">
            <summary>
            Touch page cache keys.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathPagesWithUrlSearcher">
            <summary>
            Searches the nearest descendant pages with URLs under the given page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathPagesWithUrlSearcher.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathPagesWithUrlSearcher"/> class.
            </summary>
            <param name="page">The page in which subtree are pages with URL searched.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathPagesWithUrlSearcher.Search">
            <summary>
            Searches pages under the given page that have URL paths. The only first pages in child paths are returned.
            </summary>
            <returns>Returns collection of <see cref="T:CMS.DocumentEngine.TreeNode"/> containing pages having URL paths.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.CollisionData">
            <summary>
            Encapsulates data of colliding path for a router path.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.CollisionData.#ctor(CMS.Base.ISimpleDataContainer)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Routing.Internal.CollisionData"/> class.
            </summary>
            <param name="data">Data with source values.</param>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.NodeID">
            <summary>
            Node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.PageName">
            <summary>
            Name of the page with colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.CultureCode">
            <summary>
            Culture code of the page with colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.Path">
            <summary>
            Colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.IsAlternative">
            <summary>
            Indicates if the path is router path or alternative path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.CultureVersionExists">
            <summary>
            Indicates if the path belongs to an existing culture version of a page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.SourcePageName">
            <summary>
            Name of the source page with colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.SourceCultureCode">
            <summary>
            Culture code of the source page with colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.SourceNodeID">
            <summary>
            Source node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.SourceIsSelf">
            <summary>
            Indicates if the collision is for source path itself.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CollisionData.SourceCultureVersionExists">
            <summary>
            Indicates if the source path belongs to an existing culture version of a page.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.CulturePageUrlPathsManager">
            <summary>
            Manages page URL paths for given site and culture.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.CulturePageUrlPathsManager.#ctor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.CulturePageUrlPathsManager"/> class.
            </summary>
            <param name="site">Site to manage routing paths for.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.CulturePageUrlPathsManager.#ctor(CMS.DataEngine.SiteInfoIdentifier,CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsGenerator,CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsRemover,CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.CulturePageUrlPathsManager"/> class.
            </summary>
            <param name="site">Site.</param>
            <param name="culturePathsGenerator">Culture paths generator.</param>
            <param name="culturePathsRemover">Culture paths remover.</param>
            <param name="synchronizationLogger">Synchronization tasks logger.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.CulturePageUrlPathsManager.Generate(System.Int32)">
            <summary>
            Generates the page URL paths for the site and given culture.
            </summary>
            <param name="cultureId">Culture ID for which page URL paths should be generated.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.CulturePageUrlPathsManager.Delete(System.Int32)">
            <summary>
            Deletes the page URL paths for the site and given culture.
            </summary>
            <param name="cultureId">Culture ID for which page URL paths should be deleted.</param>        
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.CulturePageUrlSlug">
            <summary>
            Encapsulates page URL slug for a culture version of a page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CulturePageUrlSlug.CultureCode">
            <summary>
            Culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.CulturePageUrlSlug.Slug">
            <summary>
            Page URL slug.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.IRootRequestDetector">
            <summary>
            Detects if the requested path is root path.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.IRootRequestDetector.IsRootRequest(CMS.DocumentEngine.Internal.NormalizedUrlPath,System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if the <paramref name="requestedPath"/> represents a request for root page.
            </summary>
            <param name="requestedPath">Requested path.</param>
            <param name="cultureCode">Culture code of the requested path culture.</param>
            <param name="siteIdentifier">Site identifier.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.RootRequestDetector">
            <summary>
            Detects if the requested path is root path.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.RootRequestDetector.IsRootRequest(CMS.DocumentEngine.Internal.NormalizedUrlPath,System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if the <paramref name="requestedPath"/> represents a request for root page.
            </summary>
            <param name="requestedPath">Requested path.</param>
            <param name="cultureCode">Culture code of the requested path culture.</param>
            <param name="siteIdentifier">Site identifier.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.IPageUrlDataContextExtractor">
            <summary>
            Interface for extracting the page URL data context from data for the router module.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.IPageUrlDataContextExtractor.TryExtract(System.Uri,CMS.DocumentEngine.Internal.NormalizedUrlPath,System.Boolean,CMS.DocumentEngine.Internal.PageUrlDataContext@)">
            <summary>
            Tries to extract the page URL data context from given data.
            </summary>
            <param name="url">URL to extract the data context from.</param>
            <param name="normalizedPath">Normalized page URL path to extract the data context from.</param>
            <param name="isPreview">Indicates if the data context is extracted for preview of the page.</param>
            <param name="dataContext">If successful, contains page URL data context extracted from given data.</param>
            <returns>Returns <c>true</c> if the page URL data context is determined from the data.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.IPageUrlPathCultureAliasesTableBuilder">
            <summary>
            Interface for translation table from culture code to culture alias builder.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.IPageUrlPathCultureAliasesTableBuilder.Build">
            <summary>
            Build translation table from culture code to culture alias.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageRoutingUrlCultureFormatChangeModeEnum">
            <summary>
            Enumeration representing culture format change mode.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.Internal.PageRoutingUrlCultureFormatChangeModeEnum.Remove">
            <summary>
            Remove language prefix from page URL paths.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.Internal.PageRoutingUrlCultureFormatChangeModeEnum.Add">
            <summary>
            Add language prefix to page URL paths.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.Internal.PageRoutingUrlCultureFormatChangeModeEnum.Modify">
            <summary>
            Modify language prefix in page URL paths.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureAliasesTableBuilder">
            <summary>
            Translation table from culture code to culture alias builder for given site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureAliasesTableBuilder.#ctor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureAliasesTableBuilder"/> class.
            </summary>
            <param name="site">Site for which translation table should be built.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureAliasesTableBuilder.Build">
            <summary>
            Build translation table from culture code to culture alias.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureFormatChanger">
            <summary>
            Changes URL culture format of page URL paths on given site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureFormatChanger.#ctor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureFormatChanger"/> class.
            </summary>
            <param name="site">Site for which URL paths culture format should be changed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureFormatChanger.#ctor(CMS.DataEngine.SiteInfoIdentifier,CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger,CMS.DocumentEngine.Routing.Internal.IPageUrlPathCultureAliasesTableBuilder)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureFormatChanger"/> class.
            </summary>
            <param name="site">Site for which URL paths culture format should be changed.</param>
            <param name="synchronizationLogger">Synchronization tasks logger.</param>
            <param name="culturesTableBuilder">PageUrlPathCulturesTable builder.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureFormatChanger.Change(CMS.DocumentEngine.Routing.PageRoutingUrlCultureFormatEnum)">
            <summary>
            Changes URL culture format of page URL paths.
            </summary>
            <param name="newFormat">New URL culture format.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathCultureFormatChanger.ChangeForCulture(System.String,CMS.DocumentEngine.Routing.PageRoutingUrlCultureFormatEnum)">
            <summary>
            Changes URL culture format of page URL paths for given culture.
            </summary>
            <param name="cultureCode">Culture code.</param>
            <param name="newFormat">New URL culture format.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeHelper">
            <summary>
            Helper class encapsulating common methods for the page URL format change action.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeHelper.GetWhereCondition(System.Int32,System.String)">
            <summary>
            Generates <see cref="T:CMS.DataEngine.WhereCondition"/> to restrict Page URL path by site ID and by culture code.
            </summary>
            <param name="siteId">Site ID.</param>
            <param name="cultureCode">Culture code.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeHelper.GetChangeCulturePrefixesQueryName">
            <summary>
            Returns name of the update query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeHelper.GetQueryParameters(CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters)">
            <summary>
            Provides SQL parameters for update.
            </summary>
            <param name="parameters">Parameters in object representation.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters">
            <summary>
            Object representation of the SQL procedure parameters.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters.Site">
            <summary>
            Site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters.CultureCode">
            <summary>
            Culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters.CultureFormatChangeMode">
            <summary>
            Culture format change mode.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters.DefaultCultureCode">
            <summary>
            Default culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters.HidePrefixForDefaultCulture">
            <summary>
            Hide language prefix for default culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters.UseCultureAliasAsCulturePrefix">
            <summary>
            Use culture alias as language prefix.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPathFormatChangeParameters.CultureAliasesTable">
            <summary>
            Table with culture aliases.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathLanguagePrefixFormatChanger">
            <summary>
            Changes URL language prefix format of page URL paths on given site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathLanguagePrefixFormatChanger.#ctor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathLanguagePrefixFormatChanger"/> class.
            </summary>
            <param name="site">Site for which URL paths culture format should be changed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathLanguagePrefixFormatChanger.#ctor(CMS.DataEngine.SiteInfoIdentifier,CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger,CMS.DocumentEngine.Routing.Internal.IPageUrlPathCultureAliasesTableBuilder)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathLanguagePrefixFormatChanger"/> class.
            </summary>
            <param name="site">Site for which URL paths culture format should be changed.</param>
            <param name="synchronizationLogger">Synchronization tasks logger.</param>
            <param name="culturesTableBuilder">PageUrlPathCulturesTable builder.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathLanguagePrefixFormatChanger.Change(CMS.DocumentEngine.Routing.PageRoutingUrlLanguagePrefixFormatEnum)">
            <summary>
            Change URL language prefix format of page URL paths.
            </summary>
            <param name="newFormat">New URL language prefix format.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathLanguagePrefixFormatChanger.ChangeForCulture(CMS.DocumentEngine.Routing.PageRoutingUrlLanguagePrefixFormatEnum,System.String)">
            <summary>
            Change URL language prefix format of page URL paths for given culture.
            </summary>
            <param name="newFormat">New URL language prefix format.</param>
            <param name="cultureCode">Culture code.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathSlugUpdater">
            <summary>
            Updates page URL path slug for given page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathSlugUpdater.#ctor(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Initializes an instance of <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathSlugUpdater"/> class.
            </summary>
            <param name="page">Page to update the page URL slug for.</param>
            <param name="cultureCode">Culture code for which the slug should be updated. If not provided culture from <paramref name="page"/> is used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathSlugUpdater.#ctor(CMS.DocumentEngine.TreeNode,System.String,CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger)">
            <summary>
            Initializes an instance of <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPathSlugUpdater"/> class.
            </summary>
            <param name="page">Page to update the page URL slug for.</param>
            <param name="cultureCode">Culture code for which the slug should be updated. If not provided culture from <paramref name="page"/> is used.</param>
            <param name="synchronizationLogger">Synchronization tasks logger.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPathSlugUpdater.TryUpdate(System.String,System.Collections.Generic.IEnumerable{CMS.DocumentEngine.Routing.Internal.CollisionData}@)">
            <summary>
            Tries to update the slug.
            </summary>
            <param name="newUrlSlug">New slug value.</param>
            <param name="collidingPaths">List of colliding paths, if the update is not successful.</param>
            <returns><c>true</c> if the update is successful and there is no collision detected.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.PageUrlPath">
            <summary>
            Encapsulated page URL path to expose parts of the path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.Internal.PageUrlPath.SLUG_LENGTH">
            <summary>
            Maximal length of the page URL slug.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPath.FullPath">
            <summary>
            Full page URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPath.ParentPath">
            <summary>
            Parent page URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.Internal.PageUrlPath.Slug">
            <summary>
            Slug of the page URL path
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.PageUrlPath.#ctor(System.String)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPath"/> based on given path.
            </summary>
            <param name="pageUrlPath">Page to build routing paths for.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.SitePageUrlPathsManager">
            <summary>
            Manages page URL paths for given site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.SitePageUrlPathsManager.#ctor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.SitePageUrlPathsManager"/> class.
            </summary>
            <param name="site">Site to manage routing paths for.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.SitePageUrlPathsManager.#ctor(CMS.DataEngine.SiteInfoIdentifier,CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsGenerator,CMS.DocumentEngine.Routing.IPageUrlPathCulturePathsRemover,CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.Routing.Internal.SitePageUrlPathsManager"/> class.
            </summary>
            <param name="site">Site.</param>
            <param name="culturePathsGenerator">Culture paths generator.</param>
            <param name="culturePathsRemover">Culture paths remover.</param>
            <param name="synchronizationLogger">Synchronization tasks logger.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.SitePageUrlPathsManager.Generate">
            <summary>
            Generates the page URL paths for the site.
            </summary>
            <remarks>Method always generates the page URL paths and doesn't check the site routing mode.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.SitePageUrlPathsManager.Delete">
            <summary>
            Deletes the page URL paths for the site.
            </summary>
            <remarks>Method always deleted the page URL paths and doesn't check the site routing mode.</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.Internal.VersionHistoryInfoRoutingExtensions">
            <summary>
            Provides methods for page version to retrieve routing data from a version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.Internal.VersionHistoryInfoRoutingExtensions.GetPageUrlPathSlugs(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Retrieves the page URL path slugs from a page recycle bin version.
            </summary>
            <param name="version">Page version for a recycle bin.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.CulturePageUrlPath">
            <summary>
            Encapsulates page URL path for a culture version of a page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.CulturePageUrlPath.CultureCode">
            <summary>
            Culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.CulturePageUrlPath.UrlPath">
            <summary>
            Page URL path.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.IPageUrlPathBuilder">
            <summary>
            Interface for routing path builder.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathBuilder.Build">
            <summary>
            Builds routing paths for given page for all cultures assigned to page site.
            </summary>
            <returns>Returns routing paths based on settings configuration for all site cultures.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger">
            <summary>
            Interface for synchronization tasks of page URL paths logger.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger.LogChangeCultureFormatTask(CMS.DocumentEngine.Routing.PageRoutingUrlCultureFormatEnum,CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Logs task for page URL paths culture format change.
            </summary>
            <param name="newFormat">New format.</param>
            <param name="site">Site.</param>
            <param name="cultureCode">Culture code for which the paths should be changed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger.LogChangeLanguagePrefixFormatTask(CMS.DocumentEngine.Routing.PageRoutingUrlLanguagePrefixFormatEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Logs task for page URL paths language prefix format change.
            </summary>
            <param name="newFormat">New language prefix format.</param>
            <param name="site">Site.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger.LogChangeSlugTask(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Logs task for page URL path slug change.
            </summary>
            <param name="page">Page.</param>
            <param name="newSlug">New slug value.</param>
            <param name="cultureCode">Culture code for which the slug was changed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger.LogDeletePathsTask(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Logs task for deleting the page URL paths.
            </summary>
            <param name="site">Site.</param>
            <param name="cultureCode">Culture code for which the paths should be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.IPageUrlPathsSynchronizationLogger.LogGeneratePathsTask(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Logs task for generating the page URL paths.
            </summary>
            <param name="site">Site.</param>
            <param name="cultureCode">Culture code for which the paths should be generated.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathPathsManagerForMove">
            <summary>
            Manages page URL paths for a given page within the move action.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathPathsManagerForMove.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathPathsManagerForMove"/> class.
            </summary>
            <param name="page">The page which is moved.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathPathsManagerForMove.Manage">
            <summary>
            Manages the page URL paths for the move action.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathsUpdateHelper">
            <summary>
            Helper class encapsulating common methods for the update action and move action.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsUpdateHelper.GetUpdateWhereCondition(System.String,System.String,System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.WhereCondition"/> covering <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> items by given parameters
            </summary>
            <param name="urlPath">URL path.</param>
            <param name="cultureCode">Culture code.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsUpdateHelper.GetUpdateQueryName">
            <summary>
            Returns name of the update query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsUpdateHelper.GetUpdateQueryParameters(CMS.DocumentEngine.Routing.PageUrlPathUpdateParameters,System.Boolean,System.Boolean)">
            <summary>
            Provides SQL parameters for update.
            </summary>
            <param name="updateParameters">Parameters in object representation.</param>
            <param name="resolveConficts">Indicates if collisions should be automatically resoled.</param>
            <param name="storeFormerUrls">Indicates if former URLs should be preserved.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathUpdateParameters">
            <summary>
            Object representation of SQL the update procedure query parameters.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.PageUrlPathUpdateParameters.OriginalUrlPath">
            <summary>
            Original PageUrlPath.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.PageUrlPathUpdateParameters.NewUrlPath">
            <summary>
            New pageUrlPath.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.PageUrlPathUpdateParameters.OriginalSiteId">
            <summary>
            Original Site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.PageUrlPathUpdateParameters.NewSiteId">
            <summary>
            New site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.Routing.PageUrlPathUpdateParameters.CultureCode">
            <summary>
            Culture code.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageRoutingDataManager">
            <summary>
            Manages page routing data for the router.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingDataManager.#ctor(System.Data.DataSet)">
            <summary>
            Create an instance of <see cref="T:CMS.DocumentEngine.Routing.PageRoutingDataManager"/> class.
            </summary>
            <param name="data">Data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingDataManager.AddPageUrlPathSlugsTable(System.Collections.Generic.IEnumerable{CMS.DocumentEngine.Routing.Internal.CulturePageUrlSlug})">
            <summary>
            Adds page URL path slugs to the data.
            </summary>
            <param name="slugs">List of page URL path slugs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingDataManager.GetPageUrlPathSlugs">
            <summary>
            Gets the list of page URL path slugs from the data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageRoutingHelper">
            <summary>
            Provides helper methods for page routing.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.ROUTING_MODE_KEY">
            <summary>
            Settings key name for routing mode.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.URL_CULTURE_FORMAT_KEY">
            <summary>
            Settings key name for URL culture format.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.LOWERCASE_PATH_MODE_KEY">
            <summary>
            Settings key name for lowercase paths mode.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.TRAILING_SLASH_MODE_KEY">
            <summary>
            Settings key name for trailing slash mode.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.HOME_PAGE_PATH_KEY">
            <summary>
            Settings key name for home page path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.HOME_PAGE_BEHAVIOR_KEY">
            <summary>
            Settings key name for home page behavior.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.STORE_FORMER_URLS_KEY">
            <summary>
            Settings key name for generating former URLs.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.HIDE_PREFIX_FOR_DEFAULT_CULTURE_URL_KEY">
            <summary>
            Settings key name for hiding the language prefix for default culture version.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingHelper.USE_CULTURE_ALIAS_AS_LANGUAGE_PREFIX_IN_URL">
            <summary>
            Settings key name for using culture alias as language prefix in URLs.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.GetStoreFormerUrls(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if the former URLs should be stored.
            </summary>
            <param name="site">Site identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.GetHomePagePath(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets node alias path which represents the home page.
            </summary>
            <param name="site">Site.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.GetHomePageUrlBehavior(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the home page URL behavior.
            </summary>
            <param name="site">Site.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.GetRoutingMode(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves the routing mode from the settings.
            </summary>
            <param name="site">Site identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.GetUrlCultureFormat(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves the URL culture format for routing from the settings.
            </summary>
            <param name="site">Site identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.UseLowerCasePaths(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if the page URL paths should be in lowercase format based on the settings.
            </summary>
            <param name="site">Site identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.UseURLsWithTrailingSlash(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the settings for the URL trailing slash rules.
            </summary>
            <param name="site">Site identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.EnsurePathFormat(System.String,CMS.DataEngine.SiteInfoIdentifier,System.String@)">
            <summary>
            Ensures correct page URL path format based on settings configuration for the content tree based router.
            </summary>
            <param name="path">Page URL path.</param>
            <param name="site">Site.</param>
            <param name="formattedPath">When the return value is <c>true</c> formatted path is returned otherwise the original path is returned.</param>
            <returns><c>True</c> if the given path was formatted.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.EnsureAbsoluteUrlFormat(System.String,CMS.DataEngine.SiteInfoIdentifier,System.String@)">
            <summary>
            Ensures correct page absolute URL format based on settings configuration for the content tree based router.
            </summary>
            <param name="absoluteUrl">Page absolute URL.</param>
            <param name="siteIdentifier">Site.</param>
            <param name="formattedAbsoluteUrl">When the return value is <c>true</c> formatted URL is returned otherwise the original URL is returned.</param>
            <returns><c>True</c> if the given path URL formatted.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.HideLanguagePrefixForDefaultCultureUrl(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if language prefix should be hidden for URLs of pages in default site culture.
            </summary>
            <param name="site">Site.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.UseCultureAliasAsLanguagePrefixInUrl(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if culture alias is used as language prefix in URLs
            </summary>
            <param name="site">Site.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.GetPageUrlPath(CMS.Base.IDataContainer,System.String)">
            <summary>
            Gets the <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPath"/> from given data container.
            </summary>
            <param name="container">Data container with partial page data.</param>
            <param name="cultureCode">If specified, the path for a culture version defined by the culture code is returned instead the one in the data container.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageRoutingHelper.GetPageUrlPathQueryInternal(System.Int32,System.String,System.String)">
            <summary>
            Gets the parametrized query for page URL path retrieval.
            </summary>
            <param name="nodeId">Page node ID.</param>
            <param name="cultureCode">Culture code of the page.</param>
            <param name="customCultureCode">Custom culture code.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageRoutingModeEnum">
            <summary>
            Enumeration representing the page routing mode.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingModeEnum.Custom">
            <summary>
            Routing based on custom routes of standard MVC support.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingModeEnum.BasedOnContentTree">
            <summary>
            Routing based on system routes driven by content tree structure.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageRoutingUrlCultureFormatEnum">
            <summary>
            Enumeration representing the page URL culture format for content tree-based routing.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingUrlCultureFormatEnum.LanguagePrefix">
            <summary>
            Format using language prefix for culture detection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingUrlCultureFormatEnum.DomainDriven">
            <summary>
            Format using domain for culture detection.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageRoutingUrlLanguagePrefixFormatEnum">
            <summary>
            Enumeration representing the page URL language prefix format for content tree-based routing.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingUrlLanguagePrefixFormatEnum.CultureCode">
            <summary>
            Format using culture code as language prefix.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageRoutingUrlLanguagePrefixFormatEnum.CultureAlias">
            <summary>
            Format using culture alias as language prefix.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlDataContextExtractor">
            <summary>
            Extracts the page URL data context from data for the router module and ensures the caching layer for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlDataContextExtractor.#ctor(CMS.DocumentEngine.Internal.IDefaultPreferredCultureEvaluator,CMS.Base.ISiteService,CMS.SiteProvider.ISiteInfoProvider,CMS.DocumentEngine.IBrowserPreferredCultureRetriever)">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.Routing.PageUrlDataContextExtractor"/> class.
            </summary>
            <param name="cultureEvaluator">Evaluator of preferred culture.</param>
            <param name="siteService">Service to retrieve the site context.</param>
            <param name="siteInfoProvider">Provider for <see cref="T:CMS.SiteProvider.SiteInfo"/> management.</param>
            <param name="browserPreferredCultureRetriever">Provider for the browser preferred culture.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlDataContextExtractor.TryExtract(System.Uri,CMS.DocumentEngine.Internal.NormalizedUrlPath,System.Boolean,CMS.DocumentEngine.Internal.PageUrlDataContext@)">
            <summary>
            Tries to extract the page URL data context from given data.
            </summary>
            <param name="url">URL to extract the data context from.</param>
            <param name="normalizedPath">Normalized page URL path to extract the data context from.</param>
            <param name="isPreview">Indicates if the data context is extracted for preview of the page.</param>
            <param name="dataContext">If successful, contains page URL data context extracted from given data.</param>
            <returns>Returns <c>true</c> if the page URL data context is determined from the data.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathBuilder">
            <summary>
            Builds routing paths for given page for all cultures assigned to a page site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathBuilder.#ctor(CMS.DocumentEngine.TreeNode,System.Collections.Generic.IEnumerable{CMS.DocumentEngine.Routing.Internal.CulturePageUrlSlug})">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathBuilder"/>.
            </summary>
            <param name="page">Page to build routing paths for.</param>
            <param name="slugs">Existing slugs to be used for paths.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathBuilder.Build">
            <summary>
            Builds routing paths for given page for all cultures assigned to page site.
            </summary>
            <returns>Returns routing paths based on settings configuration for all site cultures.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathFromDataContainerRetriever">
            <summary>
            Retrieves page URL path from given <see cref="T:CMS.Base.IDataContainer"/> data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathFromDataContainerRetriever.#ctor(CMS.Base.IDataContainer)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathFromDataContainerRetriever" /> class.
            </summary>
            <param name="container">Container with data to retrieve the page URL path from.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathFromDataContainerRetriever.Retrieve">
            <summary>
            Gets the page URL path from the given data container. 
            If URL path is not contained in the container, the method returns <c>null</c>.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathsDocumentQueryExtensions">
            <summary>
            Encapsulates extension method for <see cref="T:CMS.DocumentEngine.IDocumentQuery" /> objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsDocumentQueryExtensions.WithPageUrlPaths``2(CMS.DocumentEngine.IDocumentQuery{``0,``1},System.Boolean)">
            <summary>
            Ensures that corresponding <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> data is joined to the result.
            </summary>
            <typeparam name="TQuery">Actual type of query being extended.</typeparam>
            <typeparam name="TObject">Actual type of TreeNode instance.</typeparam>
            <param name="query">Document query which is being extended.</param>
            <param name="withPageUrlPaths">If set to <c>false</c> the result is without URL paths.</param>
            <remarks>
            <para>The method joins <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> data, if the routing mode is set to <see cref="F:CMS.DocumentEngine.Routing.PageRoutingModeEnum.BasedOnContentTree"/>.
            In case of <see cref="F:CMS.DocumentEngine.Routing.PageRoutingModeEnum.Custom"/> routing mode, no data are joined to the result.</para>
            <para>Has to be called before <see cref="M:CMS.DataEngine.DataQueryBase`1.Source(System.Action{CMS.DataEngine.QuerySource})"/> method if used together in one query.</para>
            </remarks>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathsGenerator">
            <summary>
            Generates routing paths for given page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsGenerator.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathsGenerator"/>.
            </summary>
            <param name="page">Page to generate routing paths for.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsGenerator.Generate(System.Collections.Generic.IEnumerable{CMS.DocumentEngine.Routing.Internal.CulturePageUrlSlug})">
            <summary>
            Creates routing paths for new page creation.
            </summary>
            <param name="slugs">Slugs to use for generated paths.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsGenerator.GenerateInternal(CMS.DocumentEngine.Routing.IPageUrlPathBuilder)">
            <summary>
            Creates routing paths for new page creation.
            </summary>
            <param name="pathBuilder">Builder for the router path.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathSlugNormalizer">
            <summary>
            Normalizes the page URL slug.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathSlugNormalizer.#ctor(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.Routing.PageUrlPathSlugNormalizer"/>.
            </summary>
            <param name="pageUrlSlug">Page URL slug.</param>
            <param name="site">Site.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathSlugNormalizer.Normalize">
            <summary>
            Normalizes the page URL slug.
            </summary>
            <returns>Returns normalized page URL slug with correct length, without invalid URL characters.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathSlugRetriever">
            <summary>
            Retrieves the URL path slugs for given node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathSlugRetriever.Retrieve(System.Int32)">
            <summary>
            Retrieves the page URL path slugs.
            </summary>
            <param name="nodeId">Node ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger">
            <summary>
            Logger for synchronization tasks of page URL paths.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.UPDATE_TASK_CULTURE_FORMAT">
            <summary>
            Update page URL culture format task type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.UPDATE_TASK_PREFIX_FORMAT">
            <summary>
            Update page URL language prefix format task type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.TYPE_PARAM_NAME">
            <summary>
            Type parameter name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.FORMAT_PARAM_NAME">
            <summary>
            Format parameter name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.CULTURE_PARAM_NAME">
            <summary>
            Culture parameter name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.SLUG_PARAM_NAME">
            <summary>
            New slug parameter key.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.LogChangeCultureFormatTask(CMS.DocumentEngine.Routing.PageRoutingUrlCultureFormatEnum,CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Logs task for page URL paths culture format change.
            </summary>
            <param name="newFormat">New format.</param>
            <param name="site">Site.</param>
            <param name="cultureCode">Culture code for which the paths should be changed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.LogChangeLanguagePrefixFormatTask(CMS.DocumentEngine.Routing.PageRoutingUrlLanguagePrefixFormatEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Logs task for page URL paths language prefix format change.
            </summary>
            <param name="newFormat">New language prefix format.</param>
            <param name="site">Site.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.LogGeneratePathsTask(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Logs task for generating the page URL paths.
            </summary>
            <param name="site">Site.</param>
            <param name="cultureCode">Culture code for which the paths should be generated.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.LogDeletePathsTask(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Logs task for deleting the page URL paths.
            </summary>
            <param name="site">Site.</param>
            <param name="cultureCode">Culture code for which the paths should be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationLogger.LogChangeSlugTask(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Logs task for page URL path slug change.
            </summary>
            <param name="page">Page.</param>
            <param name="newSlug">New slug value.</param>
            <param name="cultureCode">Culture code for which the slug was changed.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationProcessor">
            <summary>
            Processor for tasks of page URL paths.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationProcessor.Init">
            <summary>
            Initializes the tasks for page URL paths synchronization
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.PageUrlPathsSynchronizationProcessor.ProcessChangeSlug(CMS.DocumentEngine.TreeNode,CMS.Synchronization.TaskParameters,System.Boolean)">
            <summary>
            Process change page URL path slug task.
            </summary>
            <param name="page">Page.</param>
            <param name="parameters">Task parameters.</param>
            <param name="logSynchronization">Indicates whether staging task should be logged.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Routing.TreeNodeRoutingExtensions">
            <summary>
            Extension methods to retrieve routing configuration for a page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.TreeNodeRoutingExtensions.GetPageUrlPath(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Gets the <see cref="T:CMS.DocumentEngine.Routing.Internal.PageUrlPath"/> of given page.
            </summary>
            <param name="page">Page.</param>
            <param name="cultureCode">If specified, the path for a culture version defined by the culture code is returned.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Routing.TreeNodeRoutingExtensions.IsHandledByRouting(CMS.Base.ITreeNode)">
            <summary>
            Indicates if the page is handled by the content tree based router.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="T:CMS.DocumentEngine.Search.CrawlerSearchContentProvider">
            <summary>
            Encapsulates functionality that is responsible for downloading a content of the particular 
            page for the purpose of searching.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Search.CrawlerSearchContentProvider.#ctor(CMS.DocumentEngine.TreeNode,CMS.Search.ISearchCrawler,CMS.Search.ISearchCrawlerContentProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.Search.CrawlerSearchContentProvider"/> class.
            </summary>
            <param name="treeNode">Tree node.</param>
            <param name="crawler">Crawler used for downloading of the page content.</param>
            <param name="contentProcessor">Processor of the HTML content to be indexed.</param>
            <exception cref="T:System.ArgumentNullException">Is thrown when parameters <paramref name="treeNode"/> or <paramref name="crawler"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.Search.CrawlerSearchContentProvider.GetContent(CMS.DataEngine.ISearchIndexInfo)">
            <summary>
            Download and process HTML content and returns parsed content.
            </summary>
            <param name="index">Search index info.</param>     
        </member>
        <member name="T:CMS.DocumentEngine.Search.SearchEditableContentProvider">
            <summary>
            Provides filtered content from document content field.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Search.SearchEditableContentProvider.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.Search.SearchEditableContentProvider"/> class.
            </summary>
            <param name="content">XML with editable webparts.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Search.SearchEditableContentProvider.GetSearchContent">
            <summary>
            Returns filtered content from DocumentContent field. This method filters EditableImage 
            webparts from content. If processed content does not contain XML with editable webparts, 
            the method returns Content without modifications.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAttachmentSearchFieldsProvider">
            <summary>
            Encapsulates functionality that provides attachment search fields.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentSearchFieldsProvider.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentAttachmentSearchFieldsProvider"/> class.
            </summary>
            <param name="treeNode">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachmentSearchFieldsProvider.AddAttachments(CMS.DataEngine.ISearchFields,System.Boolean)">
            <summary>
            Adds attachment metadata and content into search fields collection.
            </summary>
            <param name="searchFields">Search fields collection.</param>
            <param name="includeAttachments">Indicates if attachments should be inserted to search content field.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider">
            <summary>
            Encapsulates functionality that provides category search fields of <see cref="T:CMS.DocumentEngine.TreeNode"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider"/> class.
            </summary>
            <param name="treeNode">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider.AddCategories(CMS.DataEngine.ISearchFields,System.Boolean)">
            <summary>
            Adds category related search fields into search fields collection.
            </summary>
            <param name="searchFields">Search fields collection</param>
            <param name="includeCategories">Indicates if categories should be inserted to search content field</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider.MapAzureSearchDocumentCategories(System.Object,CMS.Search.Azure.CreateFieldEventArgs)">
            <summary>
            Azure Search does not support <c>IEnumerable&lt;int&gt;</c> fields, maps to <c>IEnumerable&lt;string&gt;</c> instead.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider.ConvertAzureSearchDocumentCategories(System.Object,CMS.Search.Azure.AddDocumentValueEventArgs)">
            <summary>
            Azure Search does not support <c>IEnumerable&lt;int&gt;</c> document values, converts to <c>IEnumerable&lt;string&gt;</c> instead.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider.GetCategoriesNames(System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Returns document categories names required to create category related search fields.
            </summary>
            <param name="ids">Set of category IDs</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchFieldsProvider.GetCategoriesIds(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns document category IDs required to create category related search fields.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchFieldsProvider">
            <summary>
            Encapsulates functionality that provides search fields of <see cref="T:CMS.DocumentEngine.TreeNode"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.#ctor(CMS.DocumentEngine.TreeNode,CMS.DataEngine.ISearchIndexInfo,CMS.DataEngine.ISearchFields)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.DocumentSearchFieldsProvider"/> class.
            </summary>
            <param name="treeNode">Tree node</param>
            <param name="index">Search index</param>
            <param name="searchFields">Search fields collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.Get">
            <summary>
            Returns search fields collection. 
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.AddFieldsRequiredForExcludedDocument(CMS.DataEngine.ISearchFields)">
            <summary>
            The excluded document needs have some of the columns included in search fields because of the processing 
            in <see cref="M:CMS.Search.SearchIndexer.DocumentUpdate(System.Int32,CMS.Search.SearchTaskInfo)"/> (performed when update single document) where on the grounds of 
            value of <see cref="P:CMS.DocumentEngine.TreeNode.DocumentSearchExcluded"/> is document updated/removed in/from Lucene index.
            </summary>
            <param name="searchFields">Search fields.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.AddRequiredFields(CMS.DataEngine.SearchSettings,CMS.DataEngine.ISearchFields,CMS.DataEngine.DataClassInfo)">
            <summary>
            Adds search fields defined in <see cref="F:CMS.DocumentEngine.DocumentSearchFieldsProvider.mRequiredFields"/> collection to <paramref name="searchFields"/> by turning their searchable flag to true
            even though user might have turned it off.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.MergeFieldFlags(CMS.DataEngine.ISearchField,CMS.DataEngine.ISearchField)">
            <summary>
            Merges all flags from <paramref name="secondary"/> search field to <paramref name="primary"/> search field.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.GetCrawlerContent(CMS.DataEngine.ISearchIndexInfo)">
            <summary>
            Download and process HTML content and returns parsed content.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.AddNodeAliasPathPrefixesField(System.Object,CMS.Search.Azure.CreateFieldsEventArgs)">
            <summary>
            Adds NodeAliasPathPrefixes field for Azure index.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
            <remarks>
            Azure does not support filtering by range (e.g. filter documents located in subtree of a path).
            To enable such filtering, all path prefixes are stored in collection, so it is possible to get all documents having a path in the collection
            i.e. documents located in subtree of the path.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.DivideNodeAliasPathIntoNodeAliasPathPrefixes(System.Object,CMS.Search.Azure.CreateDocumentEventArgs)">
            <summary>
            Divides NodeAliasPath into NodeAliasPathPrefixes and adds the value into field for Azure index.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
            <remarks>
            Azure does not support filtering by range (e.g. filter documents located in subtree of a path).
            To enable such filtering, all path prefixes are stored in collection, so it is possible to get all documents having a path in the collection
            i.e. documents located in subtree of the path.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchFieldsProvider.GetNodeAliasPathPrefixes(System.String)">
            <summary>
            Gets all path prefixes of given <paramref name="nodeAliasPath"/> (incl. own prefix).
            </summary>
            <param name="nodeAliasPath">Node alias path.</param>
            <returns>Enumeration of path prefixes.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchHelper.GetIncludedSettings(CMS.DocumentEngine.TreeNode,CMS.DataEngine.SearchIndexSettings)">
            <summary>
            Aggregates all allowed index settings into one instance of <see cref="T:CMS.DataEngine.SearchIndexSettingsInfo"/>.
            </summary>
            <param name="node">Tree node</param>
            <param name="settings">Search index settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchHelper.GetSearchContent``1(System.Collections.Generic.ISet{``0})">
            <summary>
            Joins collection of values to single string. Values are separated by a space.
            </summary>
            <param name="values">Values to join.</param>
        </member>
        <member name="T:CMS.DocumentEngine.SearchDocumentCreator">
            <summary>
            Encapsulates functionality that creates <see cref="T:CMS.DataEngine.SearchDocument"/> from given <see cref="T:CMS.DocumentEngine.TreeNode">document</see> and <see cref="T:CMS.DataEngine.ISearchIndexInfo">index</see>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SearchDocumentCreator.#ctor(CMS.DocumentEngine.TreeNode,CMS.DataEngine.ISearchIndexInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.SearchDocumentCreator"/> class.
            </summary>
            <param name="treeNode">Tree node</param>
            <param name="index">Search index info</param>        
        </member>
        <member name="M:CMS.DocumentEngine.SearchDocumentCreator.Create">
            <summary>
            Creates search document.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SearchExtensions">
            <summary>
            Extension methods for the pages smart search
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SearchExtensions.TriggerFieldChanged(CMS.DataEngine.DataClassInfo,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Returns true if any field included in the search changed (checks fields defined in Class Search Settings).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SearchExtensions.SearchTriggerFieldChanged(CMS.DocumentEngine.TreeNode,System.Collections.Generic.List{System.String})">
            <summary>
            Returns true if any field that should trigger index update is changed (checks fields defined in Class Search Settings).
            </summary>
            <param name="page">Page.</param>
            <param name="changedColumns">List of changed columns.</param>
        </member>
        <member name="M:CMS.DocumentEngine.SearchExtensions.GetCreationDate(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns date of creation for given page.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AclInfo">
            <summary>
            AclInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLInheritedACLs">
            <summary>
            ACL inherited ACLs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLID">
            <summary>
            ACL ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLSiteID">
            <summary>
            ACL site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLGUID">
            <summary>
            ACL GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLLastModified">
            <summary>
            ACL last modified date.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.#ctor">
            <summary>
            Constructor - Creates an empty AclInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AclInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.LoadDefaultData">
            <summary>
            Loads the default data to the object.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AclInfoProvider">
            <summary>
            ACL management provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetAcls">
            <summary>
            Returns a query for all the AclInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetAclInfo(System.Int32)">
            <summary>
            Returns AclInfo with specified ID.
            </summary>
            <param name="id">AclInfo ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.SetAclInfo(CMS.DocumentEngine.AclInfo)">
            <summary>
            Sets (updates or inserts) specified AclInfo.
            </summary>
            <param name="infoObj">AclInfo to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DeleteAclInfo(CMS.DocumentEngine.AclInfo)">
            <summary>
            Deletes specified AclInfo.
            </summary>
            <param name="infoObj">AclInfo to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DeleteAclInfo(System.Int32)">
            <summary>
            Deletes AclInfo with specified ID.
            </summary>
            <param name="id">AclInfo ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RestoreInheritance(CMS.DocumentEngine.TreeNode)">
            <summary>
            Restores inheritance from the parent node and combines parent permissions with original native permissions.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.BreakInheritance(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Removes permission inheritance of the selected node.
            </summary>
            <param name="node">Document node</param>
            <param name="copyParentPermissions">Indicates if parent permissions should be copied to the node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.EnsureOwnAcl(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns ACLID of the given node. If the node doesn't have its own ACL, it creates a new one.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RemoveAclIds(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Removes specified ACLID values from the ACLs of the specified node's child nodes.
            </summary>
            <param name="node">Parent document node</param>
            <param name="removeIDs">List of ACLID values to be removed separated with comma (,)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.ChangeAclId(System.Int32,System.String,System.Int32)">
            <summary>
            Changes the ACLID within the section defined by path and removes old ACLs and ACL items which are no longer valid.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="path">Section path where the ACL IDs will be changed</param>
            <param name="newAclId">New ACLID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RemoveACLsFromNodes(CMS.DataEngine.WhereCondition)">
            <summary>
            Changes ACL ID to the set of nodes identified by the given where condition.
            Condition must cover a set of nodes which don't have ACLs referenced from outside, e.g. a subsection of tree or a single leaf node.
            This method does not handle updating of the inherited ACLs in other ACLs
            </summary>
            <param name="nodesWhere">Where condition for <see cref="T:CMS.DocumentEngine.Internal.DocumentNodeDataInfo" /></param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetNodeAndAcl(System.Int32,System.String)">
            <summary>
            Returns a data row containing node data and ACL data.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DoesNodeInheritPermissions(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns true if specified node inherits permissions.
            </summary>
            <param name="node">Node instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.CopyAcl(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Copies document permissions including the parent document permissions to the target document.
            </summary>
            <param name="sourceNode">Source document</param>
            <param name="targetNode">Target document</param>
            <param name="preserveAclHierarchy">Indicates if target ACL should be same as source</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.MergeACLs(System.String,System.Int32)">
            <summary>
            Merges ACL items if given ACL is not already contained.
            </summary>
            <param name="inheritedACLs">ACLs separated with comma (,)</param>
            <param name="aclId">ACL</param>
            <returns>String with merged ACLs separated with comma (,)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RestoreInheritanceInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Restores inheritance from the parent node and combines parent permissions with original native permissions.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.BreakInheritanceInternal(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Removes permission inheritance of the selected node.
            </summary>
            <param name="node">Document node</param>
            <param name="copyParentPermissions">Indicates if parent permissions should be copied to the node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.EnsureOwnAclInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns ACLID of the given node. If the node doesn't have its own ACL, it creates a new one.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.CreateNewAcl(System.Int32)">
            <summary>
            Prepares a new ACL object for the given node ID and site ID. Does not save the ACL object to the database
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.SplitAclIdsList(System.String)">
            <summary>
            Splits given string list by <see cref="F:CMS.DocumentEngine.AclInfoProvider.STRING_ID_LIST_SEPARATOR"/> and space character (removing empty entities).
            </summary>
            <param name="aclIdsList">Comma-separated list of ACL IDs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.JoinAclIdsToList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Joins provided collection of IDs (expectedly <see cref="T:System.String"/>s or <see cref="T:System.Int32"/>s) to a single comma-separated string list.
            </summary>
            <typeparam name="T">Type of IDs (expectedly <see cref="T:System.String"/>s or <see cref="T:System.Int32"/>s)</typeparam>
            <param name="ids">Collection of IDs to be joined into single string.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RemoveAclIdsInternal(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Removes specified ACLID values from the ACLs of the specified node's child nodes.
            </summary>
            <param name="node">Parent document node</param>
            <param name="removeIDs">List of ACLID values to be removed separated with comma (,)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.ChangeAclIdInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Changes the ACLID within the section defined by path and removes old ACLs and ACL items which are no longer valid.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="path">Section path where the ACL IDs will be changed</param>
            <param name="newAclId">New ACLID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.ChangeAclIdInternal(CMS.DataEngine.WhereCondition,System.Int32)">
            <summary>
            Changes ACL ID to the set of nodes identified by the given where condition
            </summary>
            <param name="nodesWhere">Where condition for <see cref="T:CMS.DocumentEngine.Internal.DocumentNodeDataInfo" /></param>
            <param name="newAclId">New ACL ID. If 0, sets the NodeACLID to NULL</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetNodeAndAclInternal(System.Int32,System.String)">
            <summary>
            Returns a data row containing node data and ACL data.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DoesNodeInheritPermissionsInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns true if specified node inherits permissions.
            </summary>
            <param name="node">Node to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.CopyAclInternal(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Copies document permissions including the parent document permissions to the target document.
            </summary>
            <param name="sourceNode">Source document</param>
            <param name="targetNode">Target document</param>
            <param name="preserveAclHierarchy">Indicates if target ACL should be same as source</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DeleteAcls(CMS.DataEngine.WhereCondition)">
            <summary>
            Bulk deletes ACLs and their items based on the given where condition
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetAclInfoByNodeId(System.Int32)">
            <summary>
            Get ACL object for given node.
            </summary>
            <param name="nodeId">Node identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.UpdateAclId(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Updates ACLID for given node
            </summary>
            <param name="newAclId">New ACL ID</param>
            <param name="nodeId">Node ID</param>
            <param name="markAsOwner">Indicates if node should be marked as ACL owner</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.PropagateAclId(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,System.String)">
            <summary>
            Propagates given ACLID to all underlying nodes that inherit from the specified node.
            </summary>
            <param name="node">Parent document node</param>
            <param name="oldAclId">Original ACLID that will be replaced with new ACLID</param>
            <param name="aclId">New ACLID to be propagated</param>
            <param name="extraAclIds">Additional ACLID values that should be optionally added to the InheritedACLs property of the child ACLs</param>
        </member>
        <member name="T:CMS.DocumentEngine.AclItemInfo">
            <summary>
            AclItemInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.ACLItemID">
            <summary>
            ACL item ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.ACLItemGUID">
            <summary>
            ACL item GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.ACLID">
            <summary>
            ACL ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.LastModified">
            <summary>
            Acl item last modified date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.LastModifiedByUserID">
            <summary>
            Last modified by user ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.Denied">
            <summary>
            Denied value representing denied permissions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.Allowed">
            <summary>
            Allowed value representing allowed permissions.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty AclItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AclItemInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AclItemInfoProvider">
            <summary>
            Class providing AclItemInfo management.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfoProvider.PERMISSIONS_UNDEFINED">
            <summary>
            Indicates that permission won't be changed.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfoProvider.ACL_ITEMS_STORAGE_KEY">
            <summary>
            Storage key used for grouping stored ACL items.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems">
            <summary>
            Returns a query for all the AclItemInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemInfo(System.Int32)">
            <summary>
            Returns AclItemInfo with specified ID.
            </summary>
            <param name="id">ACL item identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetAclItemInfo(CMS.DocumentEngine.AclItemInfo)">
            <summary>
            Sets (updates or inserts) specified AclItemInfo.
            </summary>
            <param name="infoObj">AclItemInfo to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItemInfo(CMS.DocumentEngine.AclItemInfo)">
            <summary>
            Deletes specified AclItemInfo.
            </summary>
            <param name="infoObj">AclItemInfo to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItemInfo(System.Int32)">
            <summary>
            Deletes AclItemInfo with specified ID.
            </summary>
            <param name="id">AclItemInfo ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetACLItemsAndOperators(System.Int32,System.Boolean)">
            <summary>
            Returns DataSet containing all ACL items related to the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="includeInherited">If true, includes the inherited ACLs to the list</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems(System.Int32,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing all ACL items related to the specified ACL and user.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="siteId">Site ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing ACL items related to the specified node and relevant for given user account (and its roles).
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedRoles(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of roles with allowed particular node permission.
            </summary>
            <param name="aclId">ACLID</param>
            <param name="permission">Permission to check</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedUsers(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of roles with allowed particular node permission.
            </summary>
            <param name="aclId">ACLID</param>
            <param name="permission">Permission to check</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetUserPermissions(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Sets specified Allowed and Denied permissions to the specified user for given node.
            </summary>
            <param name="node">Document node</param>
            <param name="allowed">Allowed permissions</param>
            <param name="denied">Denied permissions</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetRolePermissions(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,CMS.Membership.RoleInfo)">
             <summary>
             Sets specified Allowed and Denied permissions to the specified role for given node.
             </summary>
             <param name="node">Document node</param>
             <param name="allowed">Allowed permissions</param>
             <param name="denied">Denied permissions</param>
            <param name="roleInfo">RoleInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.ClearRequestCache(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Invalidates security settings for given document and user.
            </summary>
            <param name="node">Tree node</param>
            <param name="userId">User identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.RemoveUser(System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Removes specified user from the ACL of the given node if the user has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.RemoveRole(System.Int32,CMS.Membership.RoleInfo)">
            <summary>
            Removes specified role from the ACL of the given node if the role has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="roleInfo">RoleInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItems(System.Int32)">
            <summary>
            Clears ACL items.
            </summary>
            <param name="aclId">ACL ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItems(CMS.DataEngine.IWhereCondition)">
            <summary>
            Deletes the data in the database based on the given where condition.
            </summary>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetACLItemsAndOperatorsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns DataSet containing all ACL items related to the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="includeInherited">If true, includes the inherited ACLs to the list</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemsInternal(System.Int32,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing all ACL items related to the specified ACL and user.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="siteId">Site ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedItemsInternal(System.String,System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of specified objects with allowed particular node permission.
            </summary>
            <param name="objectType">Object type</param>
            <param name="aclId">ACL ID</param>
            <param name="permission">Node permission</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetOperatorPermissionsInternal(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,CMS.Membership.UserInfo,CMS.Membership.RoleInfo)">
            <summary>
            Sets specified Allowed and Denied permissions to the specified user or role for given node.
            </summary>
            <param name="node">Document node</param>
            <param name="allowed">Allowed permissions</param>
            <param name="denied">Denied permissions</param>
            <param name="userInfo">UserInfo instance. If you specify roleInfo, this value must be null</param>
            <param name="roleInfo">RoleInfo instance. If you specify userInfo, this value must be null</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.ClearRequestCacheInternal(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Invalidates security settings for given document and user.
            </summary>
            <param name="node">Document node</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.RemoveOperatorInternal(System.Int32,CMS.Membership.UserInfo,CMS.Membership.RoleInfo)">
            <summary>
            Removes specified user or role (operator) from the ACL of the given node if the operator has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance. If roleInfo is specified, this value must be null</param>
            <param name="roleInfo">RoleInfo instance. If userInfo is specified, this value must be null</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItemsInternal(System.Int32)">
            <summary>
            Clears ACL items.
            </summary>
            <param name="aclId">ACL ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems(System.String,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing ACL items related to the specified ACLs.
            </summary>
            <param name="aclIDs">List of ACL IDs separated by ','</param>
            <param name="siteId">Site ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetACLItemsKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns key for retrieving ACL items from request.
            </summary>
            <param name="userId">User identifier</param>
            <param name="aclId">ACL identifier</param>
            <param name="siteId">Site ID</param>
            <returns>Key to retrieve ACL items from request</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetOperatorNativeAclItems(System.Int32,CMS.Membership.UserInfo,CMS.Membership.RoleInfo,System.String)">
            <summary>
            Returns DataSet containing ACL Items owned by given node. If node is not ACL owner returns null.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance. If roleInfo is specified, this value must be null</param>
            <param name="roleInfo">RoleInfo instance. If userInfo is specified, this value must be null</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemsWhereCondition(System.Int32,System.String,System.Boolean)">
            <summary>
            Builds where condition for obtaining ACL items.
            </summary>
            <param name="aclId">ACL ID</param>
            <param name="inheritedAcls">Inherited ACLs</param>
            <param name="includeInherited">If true, includes the inherited ACLs to the list</param>
            <returns>Returns where condition</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedItemsWhereCondition(System.String,System.Int32,System.Int32)">
            <summary>
            Returns where condition for allowed items
            </summary>
            <param name="objectType">Object type</param>
            <param name="aclId">ACL ID</param>
            <param name="permValue">Permission integer representation</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetUserPermissions(System.Int32,System.Int32,System.String)">
            <summary>
            Returns ObjectQuery to retrieve user's permissions for given ACL
            </summary>
            <param name="ACLID">ACL ID</param>
            <param name="userID">User ID</param>
            <param name="columns">Columns to select</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetRolePermissions(System.Int32,System.Int32,System.String)">
            <summary>
            Returns ObjectQuery to retrieve role's permissions for given ACL
            </summary>
            <param name="ACLID">ACL ID</param>
            <param name="roleID">Role ID</param>
            <param name="columns">Columns to select</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetACLItemsByACLID(System.Int32,System.String)">
            <summary>
            Returns ObjectQuery to retrieve permissions for given ACL
            </summary>
            <param name="ACLID">ACL ID</param>
            <param name="columns">Columns to select</param>
        </member>
        <member name="T:CMS.DocumentEngine.IAclInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.AclInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IAclItemInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.AclItemInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityHelper">
            <summary>
            Helper class to check the document security
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSecurityHelper.IS_AUTHORIZED_PER_NODE_STORAGE_KEY">
            <summary>
            Storage key used for grouping user's authorization per node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsUserAuthorizedPerContent(System.String,CMS.Membership.UserInfo)">
            <summary>
            Determines whether current user is authorized to access Content module.
            </summary>
            <param name="siteName">Site name to check</param>
            <param name="user">User info</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.GetNodePermissionEnum(CMS.DataEngine.PermissionsEnum)">
            <summary>
            Converts the given permission to the node permission
            </summary>
            <param name="permission">Permission to convert</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Culture of the document to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerTreeNode(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean,System.String,CMS.Membership.UserInfo,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Checks all CONTENT, Document type and ACL permissions). Can handle also empty instance of TreeNode.
            For empty instance are not evaluated ACL permissions and document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
            <param name="siteName">Site name to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Checks all CONTENT, Document type and ACL permissions).
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(System.Int32,System.String,CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Checks all CONTENT, Document type and ACL permissions).
            </summary>
            <param name="nodeId">ID of node</param>
            <param name="className">Class name of the document</param>
            <param name="permission">Permission</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.Boolean,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Checks all CONTENT, Document type and ACL permissions).
            </summary>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedToCreateNewDocument(CMS.DocumentEngine.TreeNode,System.String,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNode">Parent node</param>
            <param name="documentClassName">Document class name</param>
            <param name="culture">Culture</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedToCreateNewDocument(System.Int32,System.String,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNodeId">Parent node id</param>
            <param name="documentClassName">Document class name</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.GetNodePermissionFlags(CMS.DocumentEngine.NodePermissionsEnum[])">
            <summary>
            Aggregates the given permissions into the value which represents permission flags within <see cref="P:CMS.DocumentEngine.AclItemInfo.Denied"/> or <see cref="P:CMS.DocumentEngine.AclItemInfo.Allowed"/>
            </summary>
            <param name="permissions">Permissions to include to flags</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.GetFlagFromPermission(CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Gets the specific flag value from the given permission
            </summary>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.GetNodePermissionsFromFlags(System.Int32)">
            <summary>
            Parses the given permission flags as stored in <see cref="P:CMS.DocumentEngine.AclItemInfo.Denied"/> or <see cref="P:CMS.DocumentEngine.AclItemInfo.Allowed"/> to a list of permissions.
            </summary>
            <param name="flags">Permissions to include to flags</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DataEngine.PermissionsEnum,CMS.Base.IUserInfo,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Checks all CONTENT, Document type and ACL permissions). Can handle also empty instance of TreeNode.
            For empty instance are not evaluated ACL permissions and document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="userInfo">User to check</param>
            <param name="siteName">Site name to check</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageLocationEnum">
            <summary>
            Page location enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageLocationEnum.None">
            <summary>
            None location.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageLocationEnum.All">
            <summary>
            All (any location).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageLocationEnum.SecuredAreas">
            <summary>
            Only secured areas.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageSecurityHelper">
            <summary>
            Page security methods
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageSecurityHelper.CHECK_PAGE_PERMISSIONS_KEY">
            <summary>
            Settings key name for page permissions mode.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckPagePermissions(System.String)">
            <summary>
            Gets the location where permissions of the page should be checked.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecuredAreasExcludeSystemPages(System.String,System.Boolean)">
            <summary>
            Redirect to logon page if the user is not authenticated. Always excludes system pages from evaluation.
            </summary>
            <param name="siteName">Site name</param>
            <param name="isLiveSite">Is request comes from live site?</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecured(System.String,System.Boolean)">
            <summary>
            Redirects to the logon page if user is not authenticated.
            </summary>
            <param name="siteName">Site name</param>
            <param name="isLiveSite">Is request comes from live site?</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.HandlePreviewLink">
            <summary>
            Handles the preview link for document engine
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckPreviewLink(System.Guid,System.Boolean)">
            <summary>
            Check preview link context
            </summary>
            <param name="cycleGuid">GUID which identifies the workflow cycle</param>
            <param name="documentUrl">Indicates if document URL should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecuredInternal">
            <summary>
            Redirects to the logon page if user is not authenticated.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CurrentUserIsNotAuthenticatedOnSite(System.String@,System.Boolean)">
            <summary>
            Checks if current uset is authenticated on the live site.
            </summary>
            <param name="siteName">Name of the site.</param>
            <param name="isLiveSite">Sets whether we are cheking the live site.</param>
            <returns>True if the user is authenticated on the live site specified by site name.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.TreeSecurityProvider">
            <summary>
            Tree provider with an additional security functionality to filter the selection results by the user permissions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeSecurityProvider.IS_AUTHORIZED_PER_NODE_STORAGE_KEY">
            <summary>
            Storage key used for grouping user's authorization per node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerNodeData(System.Object,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.String)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="nodeData">Node data row</param>
            <param name="permission">Permission to check</param>
            <param name="userInfo">UserInfo instance</param> 
            <param name="culture">Document culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.InvalidateTreeNodeAuthorizationResults(CMS.Membership.UserInfo,System.Int32,System.String)">
            <summary>
            Invalidates permission authorization results per node for given user.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="nodeId">Node identifier</param>
            <param name="cultureCode">Document culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Boolean,System.String)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission name</param>
            <param name="userInfo">UserInfo instance</param> 
            <param name="culture">Document culture to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerACL(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Int32)">
            <summary>
            Returns true if specified user is granted with given permission for the ACL specified by the ACLID value.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="siteId">Site ID</param>
            <remarks>If specified ACLID does not exist, true is returned.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerACL(System.Int32,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Int32,System.Int32)">
            <summary>
            Returns true if specified user is granted with given permissions for the ACL specified by the ACLID value.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="permissions">Required list of permissions</param>
            <param name="userInfo">Current user info object</param>
            <param name="siteId">Site ID</param>
            <param name="parentNodeId">Parent node ID for 'ExploreTree' permission check</param>
            <remarks>If specified ACLID does not exist, true is returned.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByClassPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Boolean)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">UserInfo instance</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, records with flag columns to identify if user was granted with required permission are returned</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataRecordsByPermissions(System.Collections.Generic.IEnumerable{System.Data.IDataRecord},CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Boolean,System.Int32)">
            <summary>
            Filters an enumeration of data records are returns only those records for which the user was granted required permission.
            </summary>
            <param name="sourceDataRecords">Enumeration of data records to filter.</param>
            <param name="permission">Required permission.</param>
            <param name="userInfo">User for which to evaluate the permissions.</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission.</param>
            <param name="topN">Expected maximum of records to return.</param>
            <returns>Returns the filtered enumeration.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, records with flag columns to identify if user was granted with required permissions are returned</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Boolean,System.String,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns records with flag columns to identify if user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="cultureCodes">Culture codes separated by ';' to perform permissions check separately for each culture</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.CheckPermission(System.Data.DataRow,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets result of the given permission and culture from DataRow.
            </summary>
            <param name="dr">DataRow with data</param>
            <param name="permission">Permission to check</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetPermissionName(CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Returns name of the permission specified by the enumeration value.
            </summary>
            <param name="permission">Enumeration value of the permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsCultureSpecificPermission(CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Indicates if given document permission is culture specific.
            </summary>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetPermissionColumnName(CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets name of the column for given permission.
            </summary>
            <param name="permission">Permission</param>
            <param name="cultureCode">Culture code of the permisson</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterSearchResults(CMS.Search.SearchResults,CMS.Search.ILuceneSearchDocument,System.Int32)">
            <summary>
            Returns 1 if current iDocument should be added to the filtered results, returns 2 if current document should be added but
            position should be decreased
            </summary>
            <param name="settings">Check permission settings</param>
            <param name="doc">Current result document</param>
            <param name="position">Current document index</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, the filtered records are marked with a flag</param>
            <param name="cultureCodes">Culture codes separated by ';' to perform permissions check separately for each culture</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataRecordsByPermissions(System.Collections.Generic.IEnumerable{System.Data.IDataRecord},CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Boolean,System.Int32)">
            <summary>
            Filters an enumeration of data records are returns only those records for which the user was granted required permission.
            </summary>
            <param name="sourceDataRecords">Enumeration of data records to filter.</param>
            <param name="permissions">Required permission.</param>
            <param name="userInfo">User for which to evaluate the permissions.</param>
            <param name="allowOwner">f true, documents the owner of which is the given user are not filtered out even if the user has not the permission.</param>
            <param name="topN">Expected maximum of records to return.</param>
            <returns>Returns the filtered enumeration.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetACLKeyName(System.Int32,CMS.DocumentEngine.NodePermissionsEnum[],System.Int32)">
            <summary>
            Gets key name to access ACL permissions in hashtable.
            </summary>
            <param name="ACLID">ACL ID</param>
            <param name="permissions">Permissions array</param>
            <param name="parentNodeId">Parent node ID</param>
            <returns>If permissions contains 'ExploreTree' then returns key in format 'ACLID|parentNodeId' else 'ACLID'</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.HasUserCultureAllowed(CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user has allowed specified culture.
            </summary>
            <param name="permission">Permission</param>
            <param name="cultureCode">Culture code</param>
            <param name="user">User info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsDocumentAllowed(CMS.Membership.UserInfo,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.String,System.Boolean,CMS.DataEngine.AuthorizationResultEnum,System.Boolean)">
            <summary>
            Checks whether document is allowed.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="permission">Permission to check</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="isAuthorizedByClassName">Indicates if authorized by class permissions</param>
            <param name="isAuthorizedByACL">Indicates ACL permissions authorization result</param>
            <param name="globalPermissions">If user has global permissions</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetAuthorizationResultKey(CMS.Membership.UserInfo,System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets the authorization result key for request.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="nodeId">Node identifier</param>
            <param name="permission">Permission type</param>
            <param name="cultureCode">Culture code of document</param>
            <returns>Key for retrieving authorization result</returns>
        </member>
        <member name="T:CMS.DocumentEngine.UserSecurityExtensions">
            <summary>
            Security extensions for users
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,System.Int32,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="user">User to check</param>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="user">User to check</param>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Culture of the document to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedToCreateNewDocument(CMS.Membership.UserInfo,System.Int32,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="user">User to check</param>
            <param name="parentNodeId">Parent node id</param>
            <param name="documentClassName">Document class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedToCreateNewDocument(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="user">User to check</param>
            <param name="parentNode">Parent node</param>
            <param name="documentClassName">Document class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerDocument(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerDocument(CMS.Membership.UserInfo,System.Int32,System.String,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="user">User to check</param>
            <param name="nodeId">ID of node</param>
            <param name="className">Class name of the document</param>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerDocument(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.Boolean,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="targetCultureCode">Culture code of the document which should be checked. If null or empty user preferred culture is used instead.</param>
        </member>
        <member name="T:CMS.DocumentEngine.BaseDocumentSettings">
            <summary>
            Container for shared settings used by operations with documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentSettings.Node">
            <summary>
            Document node to process.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentSettings.Tree">
            <summary>
            TreeProvider to use.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.BaseDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Parametric constructor.
            </summary>
            <param name="node">Document node to process.</param>
            <param name="tree"><see cref="T:CMS.DocumentEngine.TreeProvider"/> to use.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="node"/> is null.</exception>
        </member>
        <member name="T:CMS.DocumentEngine.CopyDocumentSettings">
            <summary>
            Container for settings used when copying document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.TargetNode">
            <summary>
            Target node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.CopyAttachments">
            <summary>
            Indicates whether attachments should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.IncludeChildNodes">
            <summary>
            Indicates whether child nodes should be copied as well.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.ProcessingChildNodes">
            <summary>
            Indicates that child nodes are being copied recursively.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.NewDocumentsOwner">
            <summary>
            Owner of the new documents
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.CopyPermissions">
            <summary>
            Indicates if the document permissions should be copied
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.NewDocumentName">
            <summary>
            New document name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.CheckSiteCulture">
            <summary>
            If set to true document will be copied only if target site has assigned the culture document has.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.CloneSKU">
            <summary>
            If set to true SKU bound to copied document will be cloned.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentSettings.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Parametric constructor
            </summary>
            <param name="node">Document node to copy</param>
            <param name="target">Target node</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentSettings.#ctor(CMS.DocumentEngine.CopyDocumentSettings,System.Boolean)">
            <summary>
            Copy constructor
            </summary>
            <param name="settings">Settings object</param>
            <param name="processingChildNodes">Indicates that the instance is created when child nodes are being copied recursively</param>
        </member>
        <member name="T:CMS.DocumentEngine.CopyNodeDataSettings">
            <summary>
            Represents the settings for the node data copying.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyTreeData">
            <summary>
            Gets or sets a value that indicates if the CMS_Tree data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyDocumentData">
            <summary>
            Gets or sets a value that indicates if the CMS_Document data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyCoupledData">
            <summary>
            Gets or sets a value that indicates if the coupled data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyVersionedData">
            <summary>
            Gets or sets a value that indicates if the versioned data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyNonVersionedData">
            <summary>
            Gets or sets a value that indicates if the non-versioned data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopySystemTreeData">
            <summary>
            Gets or sets a value that indicates if the system tree data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopySystemDocumentData">
            <summary>
            Gets or sets a value that indicates if the system document data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopySKUData">
            <summary>
            Gets or sets a value that indicates if the SKU data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.ExcludeColumns">
            <summary>
            Gets or sets the columns to be excluded from the copying.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.ResetChanges">
            <summary>
            Indicates if the changes made to the node instance should be reset.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyNodeDataSettings.#ctor">
            <summary>
            Creates a default settings object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyNodeDataSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a settings object with the properties initialized to the specified values.
            </summary>
            <param name="copyTreeData">Indicates if the CMS_Tree data should be copied</param>
            <param name="copyDocumentData">Indicates if the CMS_Document data should be copied</param>
            <param name="copyCoupledData">Indicates if the coupled data should be copied</param>
            <param name="copyVersionedData">Indicates if the versioned data should be copied</param>
            <param name="copyNonVersionedData">Indicates if the non-versioned data should be copied</param>
            <param name="copySystemTreeData">Indicates if the system tree data should be copied</param>
            <param name="copySystemDocumentData">Indicates if the system document data should be copied</param>
            <param name="copySkuData">Indicates if the SKU data should be copied</param>
            <param name="excludeColumns">Columns to be excluded from the copying</param>
        </member>
        <member name="M:CMS.DocumentEngine.CopyNodeDataSettings.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a settings object with the properties initialized to the specified values.
            </summary>
            <param name="copyFlagsValue">Common copy flags value</param>
            <param name="excludeColumns">Columns to be excluded from the copying</param>
        </member>
        <member name="T:CMS.DocumentEngine.DeleteDocumentSettings">
            <summary>
            Container for settings used when deleting document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DeleteAllCultures">
            <summary>
            Indicates whether all culture version of the specified document are to be deleted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DestroyHistory">
            <summary>
            Indicates whether the history of the specified document is to be deleted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DeletedNodeIDs">
            <summary>
            List of the deleted node IDs for cycles checking.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.AllowRootDeletion">
            <summary>
            Indicates if root document can be deleted as well. By default at least one culture version of the root document is kept to ensure data integrity.
            </summary>
            <remarks>
            This property can be overriden by <see cref="P:CMS.DocumentEngine.DocumentActionContext.CurrentAllowRootDeletion"/>.
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DeleteChildNodes">
            <summary>
            Indicates if child nodes of the document are deleted when the document is deleted. Used to disable children deletion within TreeNode implementation to handle it within DocumentHelper.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DeleteDocumentSettings.DeleteCallback">
            <summary>
            Callback function raised when document has been deleted.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates and initializes DeleteDocumentSettings object.
            </summary>
            <param name="node">Document node to delete.</param>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="tree"><see cref="T:CMS.DocumentEngine.TreeProvider"/> to use.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentSettings.#ctor(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Copying constructor.
            </summary>
            <param name="settings">DeleteDocumentSetting object used as a pattern.</param>
        </member>
        <member name="T:CMS.DocumentEngine.MoveDocumentSettings">
            <summary>
            Container for settings used when moving document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentSettings.TargetNode">
            <summary>
            Target node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentSettings.KeepPermissions">
            <summary>
            Indicates if the document permissions should be kept
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MoveDocumentSettings.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MoveDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Parametric constructor
            </summary>
            <param name="node">Document node to move</param>
            <param name="target">Target node</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="T:CMS.DocumentEngine.NewCultureDocumentSettings">
            <summary>
            Container for settings used when creating new document language version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CreateVersion">
            <summary>
            Indicates if new version should be created when document is under a workflow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.AllowCheckOut">
            <summary>
            Indicates if document should be checked out when new version is created and document is under a workflow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CopyAttachments">
            <summary>
            Indicates if document attachments should be copied from source culture version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.ClearAttachmentFields">
            <summary>
            Indicates if field attachments should be cleared. Used in Translation module to ensure correct attachments from external translation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CopyCategories">
            <summary>
            Indicates if document categories should be copied from source culture version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CultureCode">
            <summary>
            Culture code of new language version. If not specified DocumentCulture from node instance is used.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NewCultureDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Parametric constructor
            </summary>
            <param name="node">Document node to create new culture version</param>
            <param name="cultureCode">New culture code</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.NewCultureDocumentSettings.#ctor(CMS.DocumentEngine.NewCultureDocumentSettings)">
            <summary>
            Copying constructor
            </summary>
            <param name="settings">NewCultureDocumentSettings object used as a pattern.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSynchronizationHelper">
            <summary>
            Class containing document synchronization logic.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogContentChanges(System.String)">
            <summary>
            Indicates if logging staging tasks for content is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.CheckIntegrationLogging">
            <summary>
            Indicates if the integration task should be logged.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.CheckStagingLogging(System.String,System.Int32,System.Int32)">
            <summary>
            Indicates if the staging task should be logged.
            </summary>
            <param name="siteName">Name of site to check</param>
            <param name="siteId">Identifier of site to check</param>
            <param name="serverId">Identifier of server to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.GetTaskTitle(CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets document staging task title.
            </summary>
            <param name="taskType">Task type</param>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.GetDocumentXML(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper,CMS.DocumentEngine.TreeProvider,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.Synchronization.TaskParameters,System.String)">
            <summary>
            Gets XML of a given node.
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translations (if null TranslationHelper will be created and filled)</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteName">Site name corresponding to document</param>
            <returns>XML representing document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.GetDocumentDataSet(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.Synchronization.TaskParameters,System.String)">
            <summary>
            Gets a dataset with data of a node and corresponding translation helper.
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translations (if null TranslationHelper will be created and filled)</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteName">Documents site name</param>
            <returns>DataSet representing document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.EnsureAttachmentsHistoryData(System.Data.DataTable)">
            <summary>
            Ensures binary data in case that binary data are stored only on the filesystem. 
            Due to the fact that ObjectQuery doesn't support loading binary data, we have to ensure that manually.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.RegisterUserTranslation(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper,System.String)">
            <summary>
            Registers the user translation based on the given column
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translation helper</param>
            <param name="columnName">Column to register</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters,System.Boolean)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>List of synchronization tasks</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters,System.Boolean)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>Returns new synchronization task</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(System.String,System.String,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,System.Boolean)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the save level as the document).
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID</param>
            <param name="keepTaskData">Indicates if task data should be kept in the objects</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>Returns list of the ISynchronizationTasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.DataEngine.TaskTypeEnum,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,System.Boolean,CMS.Synchronization.TaskParameters,System.Boolean,System.String)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="keepTaskData">Indicates if task data should be kept in the objects</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <param name="where">Where condition</param>
            <returns>Returns collection of the tasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(System.String,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the same level as the document).
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates the synchronization task for the specified document node, creates the tasks for all the enabled servers when task logging is on.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <returns>Returns list of the ISynchronizationTasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(CMS.DocumentEngine.LogMultipleDocumentChangeSettings)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the save level as the document).
            </summary>
            <param name="settings">Log document change settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.LogMultipleDocumentChangeSettings)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="settings">Log multiple document change settings</param>
            <returns>Returns collection of the tasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.LogDocumentChangeSettings)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="settings">Log document change settings</param>
            <returns>List of synchronization tasks</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogSynchronization(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <returns>Returns new synchronization task</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.ProcessSyncTasks(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,System.Int32,System.Collections.Generic.Dictionary{System.String,CMS.Synchronization.TaskProcessTypeEnum})">
            <summary>
            Processes synchronous task subscriptions.
            </summary>
            <param name="node">Document to match</param>
            <param name="siteId">Site identifier</param>
            <param name="taskType">Type of task to match</param>
            <param name="connectors">Connectors to process</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogIntegration(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,CMS.Synchronization.TaskParameters,System.Int32)">
            <summary>
            Logs integration task.
            </summary>
            <param name="node">Document to log</param>
            <param name="taskType">Type of task to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteId">Site identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogInternalIntegration(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskParameters,CMS.Synchronization.TaskProcessTypeEnum,System.Collections.Generic.List{System.String})">
            <summary>
            Logs the integration task for the given object.
            </summary>
            <param name="node">Document to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="taskProcessType">Processing type</param>
            <param name="connectorNames">Integration connector names for which to log the synchronization (nothing is logged when no connector is specified)</param>
            <returns>Returns new integration task</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogExternalIntegration(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.Synchronization.IntegrationProcessTypeEnum,System.String,CMS.DataEngine.TranslationHelper,System.String)">
            <summary>
            Logs the integration task for the given object.
            </summary>
            <param name="node">Document to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="result">What to do when processing fails</param>
            <param name="connectorName">Integration connector names for which to log the synchronization (nothing is logged when no connector is specified)</param>
            <param name="th">Translation helper</param>
            <param name="siteName">Site name of the target site (for site objects)</param>
            <returns>Returns new integration task</returns>
        </member>
        <member name="T:CMS.DocumentEngine.CategoriesDocumentQueryFilter">
            <summary>
            Represents the state of categories filter data and provides methods to apply filter on <see cref="T:CMS.DocumentEngine.IDocumentQuery" /> objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CategoriesDocumentQueryFilter.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="categoryNames">Collection of category names.</param>
            <param name="onlyEnabled">Indicates if only documents belonging to enabled (sub)categories are to be filtered out.</param>
        </member>
        <member name="M:CMS.DocumentEngine.CategoriesDocumentQueryFilter.GetWhereCondition(CMS.DocumentEngine.DocumentQueryProperties)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.IWhereCondition"/> object based on current Tags filter inner state.
            </summary>
            <param name="properties">Query properties representing the query inner state.</param>
            <returns>Where Condition.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCategoryInfo">
            <summary>
            DocumentCategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCategoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCategoryInfo.CategoryID">
            <summary>
            Category ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCategoryInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentCategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentCategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCategoryInfoProvider">
            <summary>
            Class providing DocumentCategoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentCategoryInfo structure for the specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategories">
            <summary>
            Returns a query for all the DocumentCategoryInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategories(System.Int32)">
            <summary>
            Returns all categories the document is a member of.
            </summary>
            <param name="documentId">ID of the document categories are related to.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.SetDocumentCategoryInfo(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified documentCategory.
            </summary>
            <param name="documentCategory">DocumentCategory to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.DeleteDocumentCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.DeleteDocumentCategoryInfo(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Deletes specified documentCategory.
            </summary>
            <param name="infoObj">DocumentCategory object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.AddDocumentToCategory(System.Int32,System.Int32)">
            <summary>
            Adds document (post) to the specified category.
            </summary>
            <param name="documentId">ID of document</param>
            <param name="categoryId">ID of category</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes document from category.
            </summary>
            <param name="documentId">ID of document</param>
            <param name="categoryId">ID of category</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategories(System.Int32,System.Boolean)">
            <summary>
            Removes all categories from given document.
            </summary>
            <param name="documentId">ID of document</param>        
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategoryInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentCategoryInfo structure for the specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.SetInfo(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.DeleteInfo(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategoriesInternal(System.Int32,System.Boolean)">
            <summary>
            Removes all categories from given document.
            </summary>
            <param name="documentId">ID of document</param>        
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.SetCategoryCount(System.Int32)">
            <summary>
            Sets the number of documents associated to given category.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="T:CMS.DocumentEngine.Taxonomy.DocumentTagCreator">
            <summary>
            Class providing functionality creating document tags.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Taxonomy.DocumentTagCreator.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.Taxonomy.DocumentTagCreator"/> class.
            </summary>
            <param name="document">Document for tag creation.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Taxonomy.DocumentTagCreator.CreateTags">
            <summary>
            Create document tags. Tags are taken from <see cref="P:CMS.DocumentEngine.TreeNode.DocumentTags"/> field and from specified or inherited tag group <see cref="P:CMS.DocumentEngine.TreeNode.DocumentTagGroupID"/>
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Taxonomy.DocumentTagHandlers">
            <summary>
            Attaches handlers for tags processing.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Taxonomy.DocumentTagHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.Taxonomy.DocumentTagUpdater">
            <summary>
            The class provides methods for updating of tags in the specified page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Taxonomy.DocumentTagUpdater.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.Taxonomy.OriginalStateOfTagsInDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.Taxonomy.DocumentTagUpdater"/> class.
            </summary>
            <param name="document">Document which contains processed tags.</param>
            <param name="originalState">Original state of settings tags in given page.</param>
        </member>
        <member name="M:CMS.DocumentEngine.Taxonomy.DocumentTagUpdater.UpdateTags(System.Boolean)">
            <summary>
            Update document tag according to tag group only if necessary.
            </summary>
            <param name="forceUpdate">Force update of the tags</param>
        </member>
        <member name="T:CMS.DocumentEngine.Taxonomy.OriginalStateOfTagsInDocument">
            <summary>
            Encapsulates original state of tags settings in a page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Taxonomy.OriginalStateOfTagsInDocument.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.Taxonomy.OriginalStateOfTagsInDocument"/> class.
            </summary>
            <param name="document">Document which contains original settings of tags.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTagInfo">
            <summary>
            DocumentTagInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTagInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTagInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTagInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTagInfo.TagID">
            <summary>
            Tag ID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentTagInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentTagInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTagInfoProvider">
            <summary>
            Class providing document tag management.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTagInfoProvider.TagsRegex">
            <summary>
            Regular expression for tags.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTagInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTagInfo structure for the specified documentTag.
            </summary>
            <param name="documentId">DocumentID</param>
            <param name="tagId">TagID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTags">
            <summary>
            Returns a query for all the RelationshipInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.SetDocumentTagInfo(CMS.DocumentEngine.DocumentTagInfo)">
            <summary>
            Sets (updates or inserts) specified documentTag.
            </summary>
            <param name="documentTag">DocumentTag to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.DeleteDocumentTagInfo(CMS.DocumentEngine.DocumentTagInfo)">
            <summary>
            Deletes specified documentTag.
            </summary>
            <param name="documentTag">DocumentTag object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTags(System.Int32,System.Boolean)">
            <summary>
            Removes all the tags from the specified document.
            </summary>
            <param name="documentId">ID of the document tags are removed from</param>
            <param name="deleteNotUsedTags">True (default) - All tags which are not assigned to any other document are deleted, False -  Tags always stay in the system even they are not assigned to any other document. </param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTags(System.Int32,System.Int32,System.String)">
            <summary>
            Removes a specified tags from specified group and specified document.
            </summary>
            <param name="groupId">ID of the group holding tags to remove</param>
            <param name="documentId">ID of the document tags are removed from</param>
            <param name="tags">Set of tags (separated by commas) to remove</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.AddTags(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a specified tags of the specified group to the specified document.
            </summary>
            <param name="groupId">ID of the group inserted tags belongs to</param>
            <param name="documentId">ID of the document tags are inserted to</param>
            <param name="tags">Set of tags (separated by commas) to insert</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.AddTagToDocument(System.Int32,System.Int32)">
            <summary>
            Adds the specific tag to the specified document.
            </summary>
            <param name="tagId">ID of the tag to add</param>
            <param name="documentId">ID of the document the tag is added for</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTagFromDocument(System.Int32,System.Int32)">
            <summary>
            Removes tag from the specified document.
            </summary>
            <param name="tagId">ID of the removed tag</param>
            <param name="documentId">ID of the document tag is removed from</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTagInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTagInfo structure for the specified documentID and tagID.
            </summary>
            <param name="documentId">DocumentID</param>
            <param name="tagId">TagID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.SetInfo(CMS.DocumentEngine.DocumentTagInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTagWhereCondition(System.String,System.String)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.IWhereCondition"/> object that represents a condition which restricts page selection by single Tag.
            </summary>
            <param name="tagName">Tag name.</param>
            <param name="tagGroupName">Tag Group name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTagsInternal(System.Int32,System.Boolean)">
            <summary>
            Removes all the tags from the specified document.
            </summary>
            <param name="documentId">ID of the document tags are removed from</param>
            <param name="deleteNotUsedTags">True (default) - All tags which are not assigned to any other document are deleted, False -  Tags always stay in the system even they are not assigned to any other document. </param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTagsInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Removes a specified tags from specified group and specified document.
            </summary>
            <param name="groupId">ID of the group holding tags to remove</param>
            <param name="documentId">ID of the document tags are removed from</param>
            <param name="tags">Set of tags (separated by commas) to remove</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.AddTagsInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a specified tags of the specified group to the specified document.
            </summary>
            <param name="groupId">ID of the group inserted tags belongs to</param>
            <param name="documentId">ID of the document tags are inserted to</param>
            <param name="tags">Set of tags (separated by commas) to insert</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDistinctTags(System.String)">
            <summary>
            Gets list of tags filtering the multiple occurrence of particular tags.
            </summary>
            <param name="tags">Tags (separated by commas)</param>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentCategoryInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentCategoryInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentCategoryInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentCategoryInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentCategoryInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.DocumentCategoryInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="categoryId">Content category ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentTagInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTagInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTagInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding structure.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTagInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentTagInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.DocumentTagInfo"/> binding.
            </summary>
            <param name="documentId">Page ID.</param>
            <param name="tagId">Tag ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.TagsDocumentQueryFilter">
            <summary>
            Represents the state of external filter data and provides methods to apply filter on <see cref="T:CMS.DocumentEngine.IDocumentQuery" /> objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TagsDocumentQueryFilter.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="tagName">Name of tag which filtered pages have to be assigned to.</param>
            <param name="tagGroupName">Restricts the scope of a tag provided by <see cref="F:CMS.DocumentEngine.TagsDocumentQueryFilter.mTagName"/> argument.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TagsDocumentQueryFilter.GetWhereCondition(CMS.DocumentEngine.DocumentQueryProperties)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.IWhereCondition"/> object based on current Tags filter inner state.
            </summary>
            <param name="properties">Query properties representing the query inner state.</param>
        </member>
        <member name="T:CMS.DocumentEngine.TaxonomyDocumentQueryExtensions">
            <summary>
            Encapsulates extension method for <see cref="T:CMS.DocumentEngine.IDocumentQuery" /> objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TaxonomyDocumentQueryExtensions.WithTag``2(CMS.DocumentEngine.IDocumentQuery{``0,``1},System.String,System.String)">
            <summary>
            Retrieves only pages which are assigned to the given <paramref name="tagName"/>. Omitting <paramref name="tagGroupName"/> parameter causes the selection of the tag across all tag groups.
            </summary>
            <remarks>
            <para>
            Multiple tags can have the same name when assigned to a different tag group. Omitting <paramref name="tagGroupName"/> parameter causes the selection of the tag across all tag groups.
            </para>
            <para>
            Note:
            This method is a data filter and can be used directly only to modify the DocumentQuery (e.g. <c>DocumentHelper.GetDocuments().WithTag("Tag_A")</c>).
            It cannot be used as a part of where condition (e.g. <c>DocumentHelper.GetDocuments().WhereContains("DocumentName", "Article").Or().WithTag("Tag_A")</c>).
            </para>
            </remarks>
            <typeparam name="TQuery">Actual type of query being extended.</typeparam>
            <typeparam name="TObject">Actual type of TreeNode instance.</typeparam>
            <param name="query">Document Query which is being extended.</param>
            <param name="tagName">Tag name.</param>
            <param name="tagGroupName">Tag group name.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TaxonomyDocumentQueryExtensions.InCategories``2(CMS.DocumentEngine.IDocumentQuery{``0,``1},System.String[])">
            <summary>
            Retrieves all pages which belong to any of the specified categories.
            </summary>
            <remarks>
            <para>
            If the query is parameterized with <see cref="M:CMS.DataEngine.ObjectQueryBase`2.OnSite(CMS.DataEngine.SiteInfoIdentifier,System.Boolean)" /> method 
            the <see cref="T:CMS.DocumentEngine.DocumentQuery"/> searches site categories first. When no site categories are found it falls back on global categories search.
            </para>
            <para>
            Note:
            This method is a data filter and can be used directly only to modify the DocumentQuery (e.g. <c>DocumentHelper.GetDocuments().InCategories("Category_A")</c>).
            It cannot be used as a part of where condition (e.g. <c>DocumentHelper.GetDocuments().WhereContains("DocumentName", "Article").Or().InCategories("Category_A")</c>).
            </para>
            </remarks>
            <typeparam name="TQuery">Actual type of query being extended.</typeparam>
            <typeparam name="TObject">Actual type of TreeNode instance.</typeparam>
            <param name="query">Document Query which is being extended.</param>
            <param name="categoryNames">Category names</param>
        </member>
        <member name="M:CMS.DocumentEngine.TaxonomyDocumentQueryExtensions.InEnabledCategories``2(CMS.DocumentEngine.IDocumentQuery{``0,``1},System.String[])">
            <summary>
            Retrieves all pages which belong to any of the specified enabled categories.
            </summary>
            <remarks>
            <para>
            If the query is parameterized with <see cref="M:CMS.DataEngine.ObjectQueryBase`2.OnSite(CMS.DataEngine.SiteInfoIdentifier,System.Boolean)" /> method 
            the <see cref="T:CMS.DocumentEngine.DocumentQuery"/> searches enabled site categories first. When no site categories are found it falls back on global categories search.
            </para>
            <para>
            Note:
            This method is a data filter and can be used directly only to modify the DocumentQuery (e.g. <c>DocumentHelper.GetDocuments().InEnabledCategories("Category_A")</c>).
            It cannot be used as a part of where condition (e.g. <c>DocumentHelper.GetDocuments().WhereContains("DocumentName", "Article").Or().InEnabledCategories("Category_A")</c>).
            </para>
            </remarks>
            <typeparam name="TQuery">Actual type of query being extended.</typeparam>
            <typeparam name="TObject">Actual type of TreeNode instance.</typeparam>
            <param name="query">Document Query which is being extended.</param>
            <param name="categoryNames">Category names</param>
        </member>
        <member name="M:CMS.DocumentEngine.TaxonomyDocumentQueryExtensions.InCategories``2(CMS.DocumentEngine.IDocumentQuery{``0,``1},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Retrieves all pages which are in any of the specified categories.
            </summary>
            <typeparam name="TQuery">Actual type of query being extended.</typeparam>
            <typeparam name="TObject">Actual type of TreeNode instance.</typeparam>
            <param name="query">Document Query which is being extended.</param>
            <param name="categoryNames">Category names</param>
            <param name="onlyEnabled">Indicates if only documents belonging to enabled (sub)categories are to be filtered out.</param>
        </member>
        <member name="T:CMS.DocumentEngine.IPageTemplateConfigurationInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageTemplateConfigurationInfo">
            <summary>
            Data container class for <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/>.
            Represents custom page template configuration for MVC sites.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageTemplateConfigurationInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageTemplateConfigurationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationID">
            <summary>
            Page template configuration ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationGUID">
            <summary>
            Page template configuration GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationSiteID">
            <summary>
            Page template configuration site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationLastModified">
            <summary>
            Page template configuration last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationName">
            <summary>
            Page template configuration name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationDescription">
            <summary>
            Page template configuration description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationThumbnailGUID">
            <summary>
            Page template configuration thumbnail GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationTemplate">
            <summary>
            Page template configuration template configuration.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageTemplateConfigurationInfo.PageTemplateConfigurationWidgets">
            <summary>
            Page template configuration widgets configuration.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instances of the <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks whether the specified user has permissions for this object. This method is called automatically after CheckPermissions event was fired.
            </summary>
            <param name="permission">Permission to perform this operation will be checked</param>
            <param name="siteName">Permissions on this site will be checked</param>
            <param name="userInfo">Permissions of this user will be checked</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
            <returns>True if user is allowed to perform specified operation on the this object; otherwise false</returns>
        </member>
        <member name="T:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider.GetPageTemplateConfigurations">
            <summary>
            Returns a query for all the <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider.GetPageTemplateConfigurationInfo(System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider.GetPageTemplateConfigurationInfoByGUID(System.Guid,System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> with specified GUID.
            </summary>
            <param name="guid"><see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> GUID.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider.SetPageTemplateConfigurationInfo(CMS.DocumentEngine.PageTemplateConfigurationInfo)">
            <summary>
            Sets (updates or inserts) specified <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider.DeletePageTemplateConfigurationInfo(CMS.DocumentEngine.PageTemplateConfigurationInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageTemplateConfigurationInfoProvider.DeletePageTemplateConfigurationInfo(System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DocumentEngine.PageTemplateConfigurationInfo"/> ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFieldsTypeInfo">
            <summary>
            Type info for the document fields
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsTypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsTypeInfo.GetNiceObjectTypeName">
            <summary>
            Gets the nice object type name for this type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsTypeInfo.CopyDocumentFieldsTypeInfoEventsTo(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Copies the event's hooks from current ObjectTypeInfo to specified one.
            </summary>
            <param name="info">Target.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DynamicTreeNodeTypeInfo">
            <summary>
            Type info for the tree node of specific type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.baseInfo">
            <summary>
            Base tree node type info
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.ClassStructureInfo">
            <summary>
            Class structure information combining all participating main classes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.ChildObjectTypes">
            <summary>
            Gets list of child object types.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.BindingObjectTypes">
            <summary>
            Gets list of binding object types.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.OtherBindingObjectTypes">
            <summary>
            Gets list of other binding types - binding types where this object participate but is not parent object of those binding types.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.ConsistsOf">
            <summary>
            Defines the list of object types that are part of this wrapper object. If the object is not a wrapper, this property is not initialized.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type of the dynamic type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.GetNiceObjectTypeName">
            <summary>
            Gets the nice object type name for this type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DynamicTreeNodeTypeInfo.CopyTreeNodeTypeInfoEventsTo(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Copies the event's hooks from current ObjectTypeInfo to specified one.
            </summary>
            <param name="info">Target.</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeTypeInfo">
            <summary>
            Type info for the tree node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeTypeInfo.ClassStructureInfo">
            <summary>
            Class structure information combining all participating classes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.GetNiceObjectTypeName">
            <summary>
            Gets the nice object type name for this type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.CopyTreeNodeTypeInfoEventsTo(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Copies the event's hooks from current ObjectTypeInfo to specified one.
            </summary>
            <param name="info">Target.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.GetClassStructureInfo">
            <summary>
            Get combined structure definition
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.Initialize(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Initializes node type info with additional settings
            </summary>
            <param name="typeInfo">TypeInfo to initialize</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.CreateDynamicTypeInfo(System.String)">
            <summary>
            Creates new typeinfo.
            </summary>        
        </member>
        <member name="T:CMS.DocumentEngine.AlternativeUrlCollisionData">
            <summary>
            Encapsulates data of colliding path for an alternative URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlCollisionData.NodeID">
            <summary>
            Node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlCollisionData.PageName">
            <summary>
            Name of the page with colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlCollisionData.CultureCode">
            <summary>
            Culture code of the page with colliding path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlCollisionData.CultureVersionExists">
            <summary>
            Indicates if the path belongs to an existing culture version of a page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlCollisionData.ExistingCultureCode">
            <summary>
            Indicates in which culture page exists in case of collision.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AlternativeUrlConflictChecker">
            <summary>
            Checker for conflicts between page URLs and alternative URLs.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlConflictChecker.#ctor(System.Collections.Generic.IEnumerable{CMS.DocumentEngine.TreeNode},System.Int32,System.Text.StringBuilder)">
            <summary>
            Checks for conflicts between page URLs and alternative URLs.
            </summary>
            <paramref name="nodes">Documents to check conflicts for.</paramref>
            <paramref name="siteId">Conflicts are checked against Alternative URLs on this site.</paramref>
            <paramref name="stringBuilder">String builder where the discovered conflict warnings should be appended.</paramref>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlConflictChecker.CheckConflicts">
            <summary>
            Checks for conflicts between page URLs and alternative URLs and appends them to the <see cref="F:CMS.DocumentEngine.AlternativeUrlConflictChecker.stringBuilder"/>.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AlternativeUrlInfo">
            <summary>
            Data container class for <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AlternativeUrlInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AlternativeUrlInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlID">
            <summary>
            Alternative url ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlGUID">
            <summary>
            Alternative url GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlDocumentID">
            <summary>
            Alternative url document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlSiteID">
            <summary>
            Alternative url site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlUrl">
            <summary>
            Alternative url url.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AlternativeUrlInfo.AlternativeUrlLastModified">
            <summary>
            Alternative url last modified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instances of the <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AlternativeUrlInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.AlternativeUrlInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.GetAlternativeUrls">
            <summary>
            Returns a query for all the <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.GetAlternativeUrlInfo(System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.SetAlternativeUrlInfo(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Sets (updates or inserts) specified <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/>.
            </summary>
            <param name="alternativeUrl"><see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.DeleteAlternativeUrlInfo(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/>.
            </summary>
            <param name="alternativeUrl"><see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.DeleteAlternativeUrlInfo(System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.GetAlternativeUrl(CMS.DocumentEngine.NormalizedAlternativeUrl,System.Int32)">
            <summary>
            Returns instance of <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> with defined given <paramref name="url"/> on given <paramref name="siteId" />.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.GetAlternativeUrlInternal(CMS.DocumentEngine.NormalizedAlternativeUrl,System.Int32)">
            <summary>
            Returns instance of <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> with defined given <paramref name="url"/> on given <paramref name="siteId" />.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.SetInfoCheckForConflictingPage(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Inserts or Updates the object to the database.
            If <paramref name="info"/> is in conflict with page's URL then <see cref="T:CMS.DocumentEngine.InvalidAlternativeUrlException"/> is thrown.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlInfoProvider.SetInfo(CMS.DocumentEngine.AlternativeUrlInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="T:CMS.DocumentEngine.AlternativeUrlsCopier">
            <summary>
            Provides methods to copy alternative URLs between 2 documents.
            </summary>
            <remarks>
            Copier does copy alternative URLs only when both documents belong to different content only site.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlsCopier.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode)">
            <summary>
            Initialize a new instance of <see cref="T:CMS.DocumentEngine.AlternativeUrlsCopier"/>.
            </summary>
            <param name="sourceDocument">Source document.</param>
            <param name="targetDocument">Target document.</param>
            <exception cref="T:System.ArgumentNullException">When any of given document is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlsCopier.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.Core.IEventLogService)">
            <summary>
            Initialize a new instance of <see cref="T:CMS.DocumentEngine.AlternativeUrlsCopier"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlsCopier.Copy">
            <summary>
            Method attempts to copy all alternative URLs belonging to source document to target document.
            </summary>
            <remarks>
            In case that copied alternative URL doesn't pass the validation, event is logged and processing continues by next alternative URL.
            No other exceptions are handled.
            </remarks>
        </member>
        <member name="T:CMS.DocumentEngine.AlternativeUrlValidatorTask">
            <summary>
            Provides a scheduled task that validates alternative URLs against site settings (Excluded alternative URLs), checks conflicts between page URLs and alternative URLs and logs detected issues to event log.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AlternativeUrlValidatorTask.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the task given in a task info.
            </summary>
            <param name="task">Container with task information</param>
            <returns>Textual description of task run's failure if any.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.BrowserPreferredCultureRetriever">
            <summary>
            Retrieves the user preferred culture for the current request.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.BrowserPreferredCultureRetriever.#ctor(CMS.Base.Internal.IHttpContextRetriever)">
            <summary>
            Initializes an instance of <see cref="T:CMS.DocumentEngine.DefaultPreferredCultureEvaluator"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.BrowserPreferredCultureRetriever.Get(CMS.SiteProvider.SiteInfo)">
            <summary>
            Returns the best matching preferred user culture code. Culture is obtained with the following priorities:
                - Browser culture
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DefaultPreferredCultureEvaluator">
            <summary>
            Evaluates the default preferred culture for current request.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DefaultPreferredCultureEvaluator.#ctor(CMS.DocumentEngine.IBrowserPreferredCultureRetriever)">
            <summary>
            Initializes an instance of <see cref="T:CMS.DocumentEngine.DefaultPreferredCultureEvaluator"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DefaultPreferredCultureEvaluator.Evaluate">
            <summary>
            Evaluates the best matching preferred culture code. Culture is obtained with following priorities:
                - Site domain alias visitor culture
                - Site default visitor culture
                - Browser culture
                - Default culture (from application settings)
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentURLProvider">
            <summary>
            URL provider for the documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetUrl(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets relative URL for the given page.
            </summary>
            <param name="page">Page to return the URL for.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetUrlForCulture(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Gets relative URL for the given page in the given culture.
            </summary>
            <param name="page">Page to return the URL for.</param>
            <param name="cultureCode">Culture code.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetPresentationUrl(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Returns presentation URL for the specified node. This is the absolute URL where live presentation of given node can be found.
            </summary>
            <param name="node">Tree node to return presentation URL for.</param>
            <param name="preferredDomainName">A preferred domain name that should be used as the host part of the URL.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetPresentationUrlHandlerPath(System.String,System.Int32,System.String)">
            <summary>
            Gets relative URL path to PresentationUrlRedirect handler with parameters based on which the live page URL can be generated when needed.
            </summary>
            <param name="cultureName">Page culture code.</param>
            <param name="nodeID">Node ID as an unique identifier.</param>
            <param name="query">Additional query parameters (optional).</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetAbsoluteLiveSiteURL(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets absolute live site URL.
            </summary>
            <param name="node">Tree node to return absolute live site URL for.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetAbsoluteUrl(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets absolute URL of given page.
            </summary>
            <param name="page">Page to return the URL for.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetAbsoluteUrlForCulture(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Gets absolute URL of given page in the given culture.
            </summary>
            <param name="page">Page to return the URL for.</param>
            <param name="cultureCode">Culture code.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetAbsoluteUrl(System.String,CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Gets absolute URL for the given relative path in context of given site and culture.
            </summary>
            <param name="virtualPath">Virtual path (starting with '~/') to convert to absolute URL.</param>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="cultureCode">Culture for which the presentation URL should be returned.</param>
            <remarks> 
            When the content culture is specified by domain based on site settings the culture is used to get 
            respective presentation URL from site domain alias.
            If the <paramref name="cultureCode"/> is not provided site presentation URL is always used.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetAbsoluteUrlInternal(System.String,CMS.DataEngine.SiteInfoIdentifier,System.String,System.Boolean)">
            <summary>
            Gets absolute URL for the given relative path in context of given site and culture.
            </summary>
            <param name="virtualPath">Virtual path (starting with '~/') to convert to absolute URL.</param>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="cultureCode">Culture for which the presentation URL should be returned.</param>
            <param name="ensureUrlFormat">Indicates if URL format should be ensured based on settings.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetPresentationUrl(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Gets site presentation URL for given culture (without trailing '/').
            </summary>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="cultureCode">Culture for which the presentation URL should be returned.</param>
            <remarks> 
            When the content culture is specified by domain based on site settings the culture is used to get 
            respective presentation URL from site domain alias.
            If the <paramref name="cultureCode"/> is not provided site presentation URL is always used.
            </remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.TryUnresolveUrl(System.String,CMS.DataEngine.SiteInfoIdentifier,System.String@)">
            <summary>
            Tries to unresolve the URL to virtual path by searching for all possible presentation URLs for given site.
            </summary>
            <param name="url">Absolute URL.</param>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="virtualPath">Virtual path (starting with '~/') in case the URL was successfully unresolved.</param>
            <returns><c>True</c> in case the URL is successfully unresolved.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetUrlInternal(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Returns relative URL for the given page.
            </summary>
            <param name="page">Page to return the URL for.</param>
            <param name="cultureCode">If specified, the URL for a culture version defined by the culture code is returned.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetHomePageRelativePath(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Gets relative path for home page when domain-only request performed based on site settings.
            </summary>
            <param name="siteIdentifier">Site identifier.</param>
            <param name="cultureCode">Culture code.</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageFormerUrlPathContinuousIntegrationHelper">
            <summary>
            Provides helper methods for continuous integration bulk actions of <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathContinuousIntegrationHelper.StorePaths(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Stores former URL paths on given <paramref name="urlPath"/>.
            </summary>
            <param name="urlPath">URL path of items to store.</param>
            <param name="startId">Former URL path ID limiting scope of <paramref name="urlPath"/>.</param>
            <param name="cultureCode">Culture code of items to store.</param>
            <param name="siteId">Site ID of items to store.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathContinuousIntegrationHelper.GetLastFormerUrlPathId">
            <summary>
            Gets the ID of the last former URL path in the database.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.HomePageUrlBehaviorEnum">
            <summary>
            Home page URL behavior options.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.HomePageUrlBehaviorEnum.Keep">
            <summary>
            Keep the URL as it is. No special handling is performed.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.HomePageUrlBehaviorEnum.UseDomain">
            <summary>
            Use domain without the actual page URL path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.HomePageUrlBehaviorEnum.UsePath">
            <summary>
            Use page URL path.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IAlternativeUrlInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.AlternativeUrlInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IBrowserPreferredCultureRetriever">
            <summary>
            Interface for browser preferred culture for the current request.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IBrowserPreferredCultureRetriever.Get(CMS.SiteProvider.SiteInfo)">
            <summary>
            Returns the best matching preferred browser culture code.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IPageFormerUrlPathInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IPageUrlPathInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.NormalizedAlternativeUrl">
            <summary>
            Class represents url in normalized state used in alternative url feature.
            </summary>
            <remarks>
            Regular url can be normalized using <see cref="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.NormalizeAlternativeUrl(System.String)"/> method.
            </remarks>
            <seealso cref="M:CMS.DocumentEngine.Internal.AlternativeUrlHelper.NormalizeAlternativeUrl(System.String)"/>
        </member>
        <member name="P:CMS.DocumentEngine.NormalizedAlternativeUrl.NormalizedUrl">
            <summary>
            Gets normalized url.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NormalizedAlternativeUrl.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.DocumentEngine.NormalizedAlternativeUrl"/>.
            </summary>
            <param name="normalizedUrl">Url in normalized state.</param>
            <exception cref="T:System.InvalidOperationException">When null value is provided.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.NormalizedAlternativeUrl.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:CMS.DocumentEngine.PageFormerUrlPathInfo">
            <summary>
            Data container class for <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageFormerUrlPathInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageFormerUrlPathInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageFormerUrlPathInfo.PageFormerUrlPathID">
            <summary>
            Page former URL path ID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfo.InsertDataInternal">
            <summary>
            Inserts the object data to the database.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageFormerUrlPathInfo.PageFormerUrlPathUrlPath">
            <summary>
            Page former URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageFormerUrlPathInfo.PageFormerUrlPathUrlPathHash">
            <summary>
            Page former URL path hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageFormerUrlPathInfo.PageFormerUrlPathCulture">
            <summary>
            Page former URL path culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageFormerUrlPathInfo.PageFormerUrlPathNodeID">
            <summary>
            Page former URL path node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageFormerUrlPathInfo.PageFormerUrlPathSiteID">
            <summary>
            Page former URL path site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageFormerUrlPathInfo.PageFormerUrlPathLastModified">
            <summary>
            Page former URL path last modified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instances of the <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageFormerUrlPathInfoListingInfo">
            <summary>
            "Virtual" object for loading former page urls paths.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageFormerUrlPathInfoListingInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageFormerUrlPathInfoListingInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfoListingInfo.#ctor">
            <summary>
            Constructor - Creates an empty PageFormerUrlPathInfoListingInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfoListingInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PageFormerUrlPathInfoListingInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfoListingInfo.GetColumnNames">
            <summary>
            Gets the default list of column names for this class
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfoListingInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageFormerUrlPathInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfoProvider"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfoProvider.DeletePageFormerUrlPaths(System.Int32)">
            <summary>
            Deletes all <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/> for the given <paramref name="nodeId"/>.
            </summary>
            <param name="nodeId">Node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageFormerUrlPathInfoProvider.DeletePageFormerUrlPathsInternal(System.Int32)">
            <summary>
            Deletes all <see cref="T:CMS.DocumentEngine.PageFormerUrlPathInfo"/> for the given <paramref name="nodeId"/>.
            </summary>
            <param name="nodeId">Node ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageUrlHandlers">
            <summary>
            Event handlers for page URLs.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlHandlers.Init">
            <summary>
            Initializes the handlers.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageUrlPathContinuousIntegrationHelper">
            <summary>
            Provides methods to simplify code for integration of page URL paths with continuous integration
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathContinuousIntegrationHelper.StartBulkUpdate(CMS.DataEngine.IWhereCondition)">
            <summary>
            Starts the bulk update action.
            </summary>
            <param name="bulkWhere">Where condition which defines the scope of the bulk action. Where condition identifies the influenced objects before the bulk action occurs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathContinuousIntegrationHelper.FinishBulkUpdate(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Finishes the bulk update of page URL paths.
            </summary>
            <param name="updatedIds">Updated page URL path IDs returned from the StartBulkUpdate method</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathContinuousIntegrationHelper.BulkInsert(CMS.DataEngine.IWhereCondition)">
            <summary>
            Handles bulk insert of page URL paths.
            </summary>
            <param name="bulkWhere">Where condition which defines the scope of the bulk action. Where condition identifies the influenced objects before the bulk action occurs.</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageUrlPathInfo">
            <summary>
            Data container class for <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageUrlPathInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageUrlPathInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathID">
            <summary>
            Page URL ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathCulture">
            <summary>
            Page URL culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathGUID">
            <summary>
            Page URL path GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathNodeID">
            <summary>
            Page URL node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathUrlPath">
            <summary>
            Page URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathUrlPathHash">
            <summary>
            Page URL path hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathSiteID">
            <summary>
            Page URL site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageUrlPathInfo.PageUrlPathLastModified">
            <summary>
            Page URL last modified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instances of the <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfo.GetCacheDependenciesInternal">
            <summary>
            Gets collection of dependency keys to be touched when modifying the current object.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageUrlPathInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DocumentEngine.PageUrlPathInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfoProvider.GetPageUrlPathInfo(System.String,System.String,System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> with specified <paramref name="urlPath"/> and <paramref name="cultureCode"/>.
            </summary>
            <param name="urlPath">URL path.</param>
            <param name="cultureCode">Culture code.</param>
            <param name="siteID">Site ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfoProvider.DeletePageUrlPaths(System.Int32)">
            <summary>
            Deletes all <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> for the given <paramref name="nodeId"/>.
            </summary>
            <param name="nodeId">Node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfoProvider.GetPageUrlPathInfoInternal(System.String,System.String,System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> with specified <paramref name="urlPath"/> and <paramref name="cultureCode"/>.
            </summary>
            <param name="urlPath">URL path.</param>
            <param name="cultureCode">Culture code.</param>
            <param name="siteID">Site ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageUrlPathInfoProvider.DeletePageUrlPathsInternal(System.Int32)">
            <summary>
            Deletes all <see cref="T:CMS.DocumentEngine.PageUrlPathInfo"/> for the given <paramref name="nodeId"/>.
            </summary>
            <param name="nodeId">Node ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreePathUtils">
            <summary>
            Provides static helper methods for converting and validating paths, aliases and names.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.UNIQUE_SUFFIX_MAX_LENGTH">
            <summary>
            Maximal length reserved for the unique suffix.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.MAX_UNIQUE_INDEX">
            <summary>
            Maximal index to be used for unique name and alias.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.IsWildCardRegEx">
            <summary>
            Regex matching the wildcard within alias path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.RemoveWildCardRegEx">
            <summary>
            Regex for matching the escaped content within alias path.
            </summary>
            Groups:                                                       (esc.content)
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.MAX_NAME_LENGTH">
            <summary>
            Maximal length of the node document name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.MAX_ALIAS_LENGTH">
            <summary>
            Maximal length of the node alias.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreePathUtils.RemoveDiacriticForSafeURLPath">
            <summary>
            Indicates if diacritics should be removed from the URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreePathUtils.MaxAliasLength">
            <summary>
            Maximal length of the node alias name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreePathUtils.MaxNameLength">
            <summary>
            Maximal length of the node document name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSubTreeWhereCondition(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets a where condition for a sub-tree starting with the document
            </summary>
            <param name="siteId">Site ID</param>
            <param name="aliasPath">Alias path</param>
            <param name="includeCurrent">If true, current document is included</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetPathWhereCondition(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureSingleNodePath(System.String)">
            <summary>
            Ensures node alias path to be only for single document.
            </summary>
            <param name="path">Original node alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureSinglePath(System.String)">
            <summary>
            Ensures path to be only for a single page.
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureChildPath(System.String)">
            <summary>
            Ensures path to be for all child pages.
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSafeNodeAlias(System.String,System.String)">
            <summary>
            Returns node alias without forbidden characters.
            </summary>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUniqueNodeAlias(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the unique node alias for the given node, node alias and parent node.
            </summary>
            <param name="nodeAlias">Original node alias</param>
            <param name="siteName">Site name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.TrimEndReplacementCharacter(System.String,System.String)">
            <summary>
            Returns node alias without trailing forbidden character replacement.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetAliasPathCondition(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the where condition for node alias path expression.
            </summary>
            <param name="aliasPath">Node alias path</param>
            <param name="exclude">Indicates if the path should be excluded</param>
            <param name="combined">Indicates if return condition is combined with another</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetMaxNameLength(System.String)">
            <summary>
            Gets maximal length of the node document name. Reflects the class node name source field size.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureMaxNodeNameLength(System.String,System.String)">
            <summary>
            Ensures maximal length of the node document name. Reflects the class node name source field size.
            </summary>
            <param name="name">Name to trim</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureMaxFileNameLength(System.String,System.String)">
            <summary>
            Ensures maximal length of the file name. Reflects the class node name source field size.
            </summary>
            <param name="name">Name to trim</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureMaxNodeAliasLength(System.String)">
            <summary>
            Ensures maximal allowed node alias length.
            </summary>
            <param name="nodeAlias">Original node alias</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUniqueNodeName(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Returns the unique node name for the given node, node name and parent node.
            </summary>
            <param name="nodeName">Original node name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
            <param name="className">Node class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSafeDocumentName(System.String,System.String)">
            <summary>
            Replaces back slash in document name.
            </summary>
            <param name="documentName">Document name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetAliasPathByNodeId(System.Int32)">
            <summary>
            Returns the AliasPath equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeByAliasPath(System.String,System.String,System.String)">
            <summary>
            Gets the base node record (CMS_Tree) by the alias path and site name.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Alias path</param>
            <param name="columns">List of columns to retrieve</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetClassNameByDocumentID(System.Int32)">
            <summary>
            Returns the node class name corresponding to the given document ID.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeIdByAliasPath(System.String,System.String)">
            <summary>
            Returns the node ID corresponding to the given aliasPath.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeGUIDByNodeId(System.Int32)">
            <summary>
            Returns the Node GUID equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeIdByNodeGUID(System.Guid,System.String)">
            <summary>
            Returns the Node ID equivalent for the given node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="siteName">Node site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetDocumentIdByDocumentGUID(System.Guid,System.String)">
            <summary>
            Returns the Document ID equivalent for the given document GUID.
            </summary>
            <param name="documentGuid">Document GUID</param>
            <param name="siteName">Node site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetDocumentSite(System.Int32)">
            <summary>
            Returns the site info of the specified original document ID.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeSite(System.Int32)">
            <summary>
            Returns the site info of the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeParentId(System.Int32)">
            <summary>
            Returns the parent node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetPathSlashCount(System.String)">
            <summary>
            Gets number of slashes in path.
            </summary>
            <param name="path">Path to count the slashes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.AutomaticallyUpdateDocumentAlias(System.String)">
            <summary>
            Returns true if the document alias should be automatically updated upon document name change.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.AllowPermanentPreviewLink(System.String)">
            <summary>
            Returns true if document workflow cycle GUID shouldn't be changed when moving from publish/archive step to edit step.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetAlias(System.String)">
            <summary>
            Returns the alias from the given alias path.
            </summary>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetParentPath(System.String,System.Int32)">
            <summary>
            Returns the parent path for the specified path, with distance of parentLevel from the given path.
            </summary>
            <param name="path">Source path</param>
            <param name="parentLevel">Parent level (distance) from the given path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetParentPath(System.String)">
            <summary>
            Returns the parent path for the specified path (any kind of path with "/" as a separator)
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetPathLevel(System.String,System.Int32)">
            <summary>
            Returns the specified path level created from the given path.
            </summary>
            <param name="path">Source path</param>
            <param name="level">Level to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.IsMenuItemType(System.String)">
            <summary>
            Returns true, if the class name is considered to be menu item type document.
            </summary>
            <param name="className">Class name to analyze</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.NewDocumentOrder(System.String)">
            <summary>
            Returns the new document order settings for the given site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.ExistsLinkedPageInSubTree(System.String,System.Int32)">
            <summary>
            Return <c>true</c> if the specified subtree contains any linked page.
            </summary>
            <param name="parentAliasPath">Alias path of the subtree root.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeInheritedValue(System.Int32,System.String,System.String,System.String,CMS.DataEngine.WhereCondition)">
            <summary>
            Gets the inherited value for a single document column.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="column">Column to retrieve value for</param>
            <param name="culture">Document culture</param>
            <param name="valueCondition">Where condition indicating if inherited value is present</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeUpperTreeInternal(System.Int32,System.String,System.String,System.String)">
            <summary>
            Gets data with candidates for inherited value of specified document columns.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="columns">Columns to retrieve value for</param>
            <param name="culture">Document culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeInheritedValueInternal(System.Data.DataSet,System.String,System.String,System.Func{System.Object,System.Boolean},System.Func{System.Data.DataRow,System.Boolean})">
            <summary>
            Returns inherited value.
            </summary>
            <param name="upperTree">Tree to inherit from</param>
            <param name="column">Name of column to get the value from</param>
            <param name="culture">Document culture code</param>
            <param name="valueChecker">Method to check the inherited value if relevant</param>
            <param name="dataEvaluator">Method to additionally evaluate the inherited value in context of other data if relevant</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUpperTreeQueryInternal(System.Int32,System.String,System.String)">
            <summary>
            Gets query to retrieve data for upper tree of a document
            </summary>
            <param name="siteId">Document site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="culture">Document culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodesOnPathWhereCondition(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns where condition for all nodes on the path to the given alias path.
            </summary>
            <param name="aliasPath">Alias path</param>        
            <param name="includeRoot">Indicates whether root item should be included.</param>
            <param name="includeCurrent">Indicates whether item with the exact alias path should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeAliasPathsOnPath(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets list of node alias paths for all documents on given path.
            </summary>
            <param name="aliasPath">Node alias path</param>
            <param name="includeRoot">Indicates if root path should be included</param>
            <param name="includeCurrent">Indicates if path of current document should be included</param>
        </member>
        <member name="T:CMS.DocumentEngine.UrlOptionsEnum">
            <summary>
            Defines format of culture specific URLs. Enum is Flags enum.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.UrlOptionsEnum.Default">
            <summary>
            URLs for not translated documents should be generated an URLs are not culture specific.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.UrlOptionsEnum.ExcludeUntranslatedDocuments">
            <summary>
            URLs of not existing culture versions will not be generated.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.UrlOptionsEnum.UseCultureSpecificURLs">
            <summary>
            Returns URL for the document aliasPath and document URL path (preferable if document URL path is not wildcard URL).
            Without this option the culture code or alias is added to the URL as a query parameter.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistorySetterContext">
            <summary>
            Encapsulates context required for saving of particular attachment version of a document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistorySetterContext.#ctor(CMS.DocumentEngine.DocumentAttachment,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.AttachmentHistorySetterContext"/> class.
            </summary>
            <param name="sourceAttachment">Attachment to be saved into version.</param>
            <param name="versionHistoryId">Version history ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryBinarySettings">
            <summary>
            External column settings for the attachment history info
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryBinarySettings.ForceStoreInDatabase">
            <summary>
            If true, the attachment history is stored only in database, and does not reflect general settings for storing binary data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryBinarySettings.StoreInDatabase(System.String)">
            <summary>
            Returns true if the column should be stored in database
            </summary>
            <param name="objectSiteName">Object site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryBinarySettings.StoreInExternalStorage(System.String)">
            <summary>
            Returns true if the column should be stored in external storage
            </summary>
            <param name="objectSiteName">Object site name</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryCopier">
            <summary>
            Copies attachment histories between versions.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryCopier.#ctor(System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.Guid,System.Guid})">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.AttachmentHistoryCopier"/>.
            </summary>
            <param name="sourceVersionHistoryId">Source version history ID.</param>
            <param name="targetVersionHistoryId">Target version history ID.</param>
            <param name="guidTable">Attachment GUID conversion dictionary, pairs [OldGUID -> NewGUID].</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryCopier.Copy">
            <summary>
            Copies the version attachments to the given version, physically copies the attachment history records.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryCreator">
            <summary>
            Creates attachment histories for a new version from all document published attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryCreator.#ctor(System.Int32)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.AttachmentHistoryCreator"/>.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryCreator.Create">
            <summary>
            Creates attachments for given document version from all document published attachments.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryExtensions">
            <summary>
            Extension methods for <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.ConvertToAttachment(CMS.DocumentEngine.AttachmentHistoryInfo,System.Boolean)">
            <summary>
            Creates new instance of <see cref="T:CMS.DocumentEngine.AttachmentInfo"/> from instance of <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/>.
            </summary>
            <remarks>The AttachmentVariantParentID property of <paramref name="attachmentVersion"/> is not converted to corresponding ID of published attachment.</remarks>
            <param name="attachmentVersion">Attachment history version.</param>
            <param name="loadBinaryData">Indicates if binary data should be loaded from version attachment in case not already available.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.ApplyData(CMS.DocumentEngine.AttachmentHistoryInfo,CMS.DocumentEngine.DocumentAttachment,System.Boolean)">
            <summary>
            Applies data from <see cref="T:CMS.DocumentEngine.DocumentAttachment"/> to <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/> instance.
            </summary>
            <remarks>The AttachmentVariantParentID property of <paramref name="attachment"/> is not converted to corresponding ID of attachment version history.</remarks>
            <param name="attachmentVersion">Attachment history version.</param>
            <param name="attachment">Attachment.</param>
            <param name="loadBinaryData">Indicates if binary data should be loaded from attachment in case not already available.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.VariantsForAttachments(CMS.DataEngine.ObjectQuery{CMS.DocumentEngine.AttachmentHistoryInfo},System.Int32[])">
            <summary>
            Gets attachment history variants for given set of parent attachment histories.
            </summary>
            <param name="query">Query for retrieving attachment histories.</param>
            <param name="parentAttachmentIds">Collection of parent attachment history IDs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.InVersionExceptVariants(CMS.DataEngine.ObjectQuery{CMS.DocumentEngine.AttachmentHistoryInfo},System.Int32)">
            <summary>
            Filters attachment histories to get only those which do not represent variants for given version history ID.
            </summary>
            <param name="query">Query for retrieving attachment histories.</param>
            <param name="versionHistoryId">Version history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.InVersionsExceptVariants(CMS.DataEngine.ObjectQuery{CMS.DocumentEngine.AttachmentHistoryInfo},System.Int32[])">
            <summary>
            Filters attachment histories to get only those which do not represent variants for given version histories.
            </summary>
            <param name="query">Query for retrieving attachment histories.</param>
            <param name="versionHistoryIds">Version history IDs.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.AllInVersion(CMS.DataEngine.ObjectQuery{CMS.DocumentEngine.AttachmentHistoryInfo},System.Int32)">
            <summary>
            Filters all attachment histories for given version history ID.
            </summary>
            <param name="query">Query for retrieving attachment histories.</param>
            <param name="versionHistoryId">Version history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.ExceptVariants(CMS.DataEngine.ObjectQuery{CMS.DocumentEngine.AttachmentHistoryInfo})">
            <summary>
            Filters attachment histories to get only ones which do not represent variants.
            </summary>
            <param name="query">Query for retrieving attachment histories.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.GetVariant(CMS.DocumentEngine.AttachmentHistoryInfo,System.String)">
            <summary>
            Returns <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/> that represents variant of the given attachment. The variant is specified by <paramref name="definitionIdentifier"/> parameter.
            </summary>
            <param name="attachment">Attachment info object.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when either of the parameters are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="definitionIdentifier"/> is empty.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.GenerateVariant(CMS.DocumentEngine.AttachmentHistoryInfo,CMS.ResponsiveImages.IVariantContext,System.String)">
            <summary>
            Generates single image variant for given attachment. The variant is specified by <paramref name="definitionIdentifier"/> parameter.
            </summary>
            <remarks>Deletes an existing variant if the given variant definition is no longer applicable on the attachment.</remarks>
            <param name="attachment">Attachment info object.</param>
            <param name="context">Variant processing context.</param>
            <param name="definitionIdentifier">Definition identifier.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when either of the parameters are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="definitionIdentifier"/> is empty.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.GenerateAllVariants(CMS.DocumentEngine.AttachmentHistoryInfo,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates all image variants for given attachment overwriting existing variants.
            </summary>
            <remarks>Only applicable variants will be generated. Variant definitions which are no more applicable to the attachment will be deleted.</remarks>
            <param name="attachment">Attachment info object.</param>
            <param name="context">Variant processing context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachment"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.GenerateMissingVariants(CMS.DocumentEngine.AttachmentHistoryInfo,CMS.ResponsiveImages.IVariantContext)">
            <summary>
            Generates attachment image variants which were not yet generated.
            </summary>
            <param name="attachment">Attachment info object.</param>
            <param name="context">Variant processing context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="attachment"/> is null.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExtensions.SetAttachmentVariantGenerator(CMS.DocumentEngine.IAttachmentVariantGenerator{CMS.DocumentEngine.AttachmentHistoryInfo})">
            <summary>
            Sets the attachment variant generator.
            </summary>
            <param name="generator">Attachment variant generator instance.</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryInfo">
            <summary>
            AttachmentHistory data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.OBJECT_TYPE_VARIANT">
            <summary>
            Object type for attachment history variants.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.TYPEINFO_VARIANT">
            <summary>
            Type information for attachment history variant.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.mAttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.mAttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentVariantParentID">
            <summary>
            Attachment variant parent ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentVariantDefinitionIdentifier">
            <summary>
            Text identification of used variant definition.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentSize">
            <summary>
            Size of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentExtension">
            <summary>
            Extension of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentName">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentMimeType">
            <summary>
            MIME type of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentBinary">
            <summary>
            Binary data of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentDocumentID">
            <summary>
            Related document Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentImageWidth">
            <summary>
            Width of the attachment image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentImageHeight">
            <summary>
            Height of the attachment image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentGUID">
            <summary>
            GUID of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentHistoryGUID">
            <summary>
            GUID of the attachment history (unique across whole attachment history).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentHistoryID">
            <summary>
            History ID of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentHash">
            <summary>
            Attachment hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentTitle">
            <summary>
            Attachment title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentDescription">
            <summary>
            Attachment description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentLastModified">
            <summary>
            Attachment last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentSiteID">
            <summary>
            Attachment site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes object dependencies. First tries to execute removedependencies query, if not found, automatic process is executed.
            </summary>
            <param name="deleteAll">If false, only required dependencies are deleted, dependencies with default value are replaced with default value and nullable values are replaced with null</param>
            <param name="clearHashtables">If true, hashtables of all objecttypes which were potentially modified are cleared</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty AttachmentHistory structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the AttachmentHistory object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.Clone(System.Boolean)">
            <summary>
            Returns clone object of current <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/>
            </summary>
            <param name="clear">If <c>true</c>, the attachment is cleared to allow create new object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
            <exception cref="T:System.InvalidOperationException">Thrown when cloned instance of an attachment is variant.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks whether the specified user has permissions for this object. This method is called automatically after CheckPermissions event was fired.
            </summary>
            <param name="permission">Permission to perform this operation will be checked</param>
            <param name="siteName">Permissions on this site will be checked</param>
            <param name="userInfo">Permissions of this user will be checked</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
            <returns>True if user is allowed to perform specified operation on the this object; otherwise false</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.EnsureGUID">
            <summary>
            Ensures the attachment history GUID
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.RegisterExternalColumns">
            <summary>
            Returns path to externally stored binary data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.GetBinaryFilePath">
            <summary>
            Gets the binary file path for storing the data in file system
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.GetSiblingsWhereCondition">
            <summary>
            Creates where condition for sibling objects
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryInfoProvider">
            <summary>
            Class providing attachment history management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistory(System.Int32)">
            <summary>
            Returns the AttachmentHistory structure for the specified attachment history.
            </summary>
            <param name="attachmentHistoryId">ID of attachment history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.SetAttachmentHistory(CMS.DocumentEngine.AttachmentHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified attachment history.
            </summary>
            <param name="attachmentHistory">Attachment history to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.DeleteAttachmentHistory(CMS.DocumentEngine.AttachmentHistoryInfo)">
            <summary>
            Deletes specified attachment history.
            </summary>
            <param name="attachmentHistory">Attachment history object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.DeleteAttachmentHistory(System.Int32)">
            <summary>
            Deletes specified attachment history.
            </summary>
            <param name="attachmentHistoryId">ID of attachment history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistories">
            <summary>
            Gets all attachment histories.
            </summary>
            <remarks>The IncludeBinaryData property and the BinaryData method don't load binary data 
            for attachments stored on the filesystem. To load binary data for attachments stored on the 
            filesystem, use the AttachmentBinary property of every record.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveHistories(System.Int32,System.Int32)">
            <summary>
            Moves attachment histories of given document to new site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.ChangeDocument(System.Int32,System.Int32)">
            <summary>
            Changes attachment histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistoriesFolder(System.String)">
            <summary>
            Gets the attachment histories folder for storing them in file system
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.SetInfo(CMS.DocumentEngine.AttachmentHistoryInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveHistoriesInternal(System.Int32,System.Int32)">
            <summary>
            Moves attachment histories of given document to different site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.ChangeDocumentInternal(System.Int32,System.Int32)">
            <summary>
            Changes attachment histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.IsUniqueAttachmentName(CMS.DocumentEngine.TreeNode,System.String,System.String,System.Int32)">
            <summary>
            Indicates whether the given attachment name is unique.
            </summary>
            <param name="node">Node which the attachment belongs to</param>
            <param name="fileName">Name of file</param>
            <param name="extension">Extension of file</param>
            <param name="currentAttachmentHistoryId">Current attachment ID</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryPublisher">
            <summary>
            Publishes attachments of a document version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryPublisher.#ctor(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.AttachmentHistoryPublisher"/>.
            </summary>
            <param name="version">Version for which the attachments should be published.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryPublisher.Publish">
            <summary>
            Publishes the attachments of the given version.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryRemover">
            <summary>
            Removes attachment from a document version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryRemover.#ctor(CMS.DocumentEngine.AttachmentHistoryInfo,System.Int32)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.AttachmentHistoryRemover"/>.
            </summary>
            <param name="attachmentVersion">Attachment history version.</param>
            <param name="versionHistoryId">Version history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryRemover.#ctor(CMS.DocumentEngine.VersionManager,System.Int32,System.Guid)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.AttachmentHistoryRemover"/>.
            </summary>
            <param name="manager">Version manager.</param>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentGuid">GUID of the attachment version which should be removed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryRemover.Remove">
            <summary>
            Removes the attachment history from version.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistorySetter">
            <summary>
            Saves attachment in a document version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistorySetter.#ctor(CMS.DocumentEngine.AttachmentHistorySetterContext)">
            <summary>
            Creates an instance of the <see cref="T:CMS.DocumentEngine.AttachmentHistorySetter"/> class.
            </summary>
            <param name="context">The context required for the attachment history to be saved.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistorySetter.Set">
            <summary>
            Sets the attachment into specific version.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryVersionRemover">
            <summary>
            Removes all attachments from a document version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryVersionRemover.#ctor(System.Int32)">
            <summary>
            Creates instance of <see cref="T:CMS.DocumentEngine.AttachmentHistoryVersionRemover"/>.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryVersionRemover.Remove">
            <summary>
            Removes all the attachment histories from version.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IAttachmentHistoryInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.AttachmentHistoryInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IVersionAttachmentInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IVersionAttachmentInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding structure.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IVersionAttachmentInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding structure.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.IVersionAttachmentInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.IVersionAttachmentInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.IVersionHistoryInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DocumentEngine.VersionHistoryInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.VersionAttachmentInfo">
            <summary>
            Version attachment binding info.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionAttachmentInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionAttachmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionAttachmentInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionAttachmentInfo.AttachmentHistoryID">
            <summary>
            Attachment history ID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty CultureSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CultureSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.VersionAttachmentInfoProvider">
            <summary>
            Class providing VersionAttachmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding structure.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding structure.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachmentInfo(System.Int32,System.Int32)">
            <summary>
            Returns version attachment with specified ID.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.SetVersionAttachmentInfo(System.Int32,System.Int32)">
            <summary>
            Sets (updates or inserts) specified version attachment binding.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.SetVersionAttachmentInfo(CMS.DocumentEngine.VersionAttachmentInfo)">
            <summary>
            Sets (updates or inserts) specified version attachment binding.
            </summary>
            <param name="attachmentObj">Version attachment to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DocumentEngine.VersionAttachmentInfo"/> binding.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <param name="attachmentHistoryId">Attachment history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.DeleteVersionAttachmentInfo(System.Int32,System.Int32)">
            <summary>
            Deletes version attachment with specified ID.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.DeleteVersionAttachmentInfo(CMS.DocumentEngine.VersionAttachmentInfo)">
            <summary>
            Deletes specified version attachment.
            </summary>
            <param name="attachmentObj">Version attachment to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachments">
            <summary>
            Gets the query for all version attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachmentInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns version attachment binding.
            </summary>
            <param name="versionHistoryId">Identifier for document history</param>
            <param name="attachmentHistoryId">Identifier for attachment history</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.CopyVersionAttachments(System.Int32,System.Int32)">
            <summary>
            Copies bindings between attachment history and version from source to target version.
            </summary>
            <param name="sourceVersionHistoryId">Source version ID.</param>
            <param name="targetVersionHistoryId">Target version ID.</param>
        </member>
        <member name="T:CMS.DocumentEngine.VersionHistoryInfo">
            <summary>
            VersionHistoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionHistoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.RawData">
            <summary>
            Raw data of the version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.Data">
            <summary>
            Version data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.NodeXML">
            <summary>
            Node XML.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.PublishFrom">
            <summary>
            Publish from date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.ToBePublished">
            <summary>
            To be published date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.ModifiedByUserID">
            <summary>
            Modified by user ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.DeletedByUserID">
            <summary>
            Deleted by user ID (for recycle bin).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.WasPublishedTo">
            <summary>
            Was published to date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.NodeSiteID">
            <summary>
            Site ID of the node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.ModifiedWhen">
            <summary>
            Modified when date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.DeletedWhen">
            <summary>
            Deleted when date (for recycle bin).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.PublishTo">
            <summary>
            Publish to date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionNumber">
            <summary>
            Version number.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionComment">
            <summary>
            Version comment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.WasPublishedFrom">
            <summary>
            Was published from date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionDocumentName">
            <summary>
            Version document name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionClassID">
            <summary>
            Version class ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionWorkflowID">
            <summary>
            Version workflow ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionWorkflowStepID">
            <summary>
            Version workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionNodeAliasPath">
            <summary>
            Version node aliaspath.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.GetObjectName">
            <summary>
            Returns object name combining object type name and object display name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.GetFullObjectName(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the name of the object within its parent hierarchy.
            </summary>
            <param name="includeParent">If true, the parent object name is included to the object name</param>
            <param name="includeSite">If true, the site information is included if available</param>
            <param name="includeGroup">If true, the group information is included if available</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty VersionHistoryInfo structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the VersionHistoryInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.SetData(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Sets the version data.
            </summary>
            <param name="node">Document instance with data to set.</param>
            <param name="loadMissingDataFromDb">Indicates if missing data should be loaded from the database for the node instance.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.SetDataInternal(System.Data.DataSet)">
            <summary>
            Sets the version data.
            </summary>
            <param name="data">Data to set</param>
        </member>
        <member name="T:CMS.DocumentEngine.VersionHistoryInfoProvider">
            <summary>
            Class providing VersionHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistoryInfo(System.Int32)">
            <summary>
            Returns the VersionHistoryInfo structure for the specified versionHistory.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.SetVersionHistoryInfo(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified versionHistory.
            </summary>
            <param name="versionHistory">VersionHistory to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.DeleteVersionHistoryInfo(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Deletes specified versionHistory.
            </summary>
            <param name="versionHistory">VersionHistory object</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.DeleteVersionHistoryInfo(System.Int32)">
            <summary>
            Deletes specified versionHistory.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistories">
            <summary>
            Returns the query for all version histories.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetRecycleBin(System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets recycle bin for specified user.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="userId">ID of user</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <param name="modifiedFrom">Lower time bound</param>
            <param name="modifiedTo">Upper time bound</param>
            <returns>Recycle bin for specified user and site</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.MoveHistories(System.Int32,System.Int32)">
            <summary>
            Moves histories of given document to new site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.ChangeDocument(System.Int32,System.Int32)">
            <summary>
            Changes version histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistories(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns all version histories based on list of IDs. Uses cached versions from memory and pulls rest of the versions from the database.
            </summary>
            <param name="ids">List of version history IDs</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.UpdateData(System.String,System.String,CMS.DataEngine.QueryDataParameters)">
            <summary>
            Updates data for all records given by where condition
            </summary>
            <param name="updateExpression">Update expression, e.g. "Value = Value * 2"</param>
            <param name="where">Where condition</param>
            <param name="parameters">Parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetRecycleBinInternal(System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            Gets recycle bin for specified user.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="userId">ID of user</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <param name="modifiedFrom">Lower time bound</param>
            <param name="modifiedTo">Upper time bound</param>
            <returns>Recycle bin for specified user and site</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.MoveHistoriesInternal(System.Int32,System.Int32)">
            <summary>
            Moves histories of given document to different site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.ChangeDocumentInternal(System.Int32,System.Int32)">
            <summary>
            Changes version histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="T:CMS.DocumentEngine.VersioningDataExtensions">
            <summary>
            Extension methods for processing query results.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersioningDataExtensions.As``1(System.Collections.Generic.IEnumerable{System.Data.IDataRecord},System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Converts an enumeration of data records to strongly typed <see cref="T:CMS.DocumentEngine.TreeNode"/>s.
            </summary>
            <typeparam name="TObject">Info object type to convert each data record to.</typeparam>
            <param name="dataRecords">Enumeration of data records to be converted.</param>
            <param name="isLastVersion">Value indicating whether to mark the individual tree nodes with the latest version flag.</param>
            <param name="treeProvider">Tree node provider.</param>
            <returns>Returns an enumeration of strongly typed <see cref="T:CMS.DocumentEngine.TreeNode"/> objects.</returns>
        </member>
        <member name="T:CMS.DocumentEngine.VersionManager">
            <summary>
            Class to provide node versioning management.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionManager.TreeProvider">
            <summary>
            TreeProvider instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionManager.WorkflowManager">
            <summary>
            Gets workflow manager instance.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.#ctor">
            <summary>
            Constructor - Creates version manager.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.#ctor(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Constructor - Creates version manager.
            </summary>
            <param name="tree">TreeProvider instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ChangeManagerTypeTo(System.Type)">
            <summary>
            Changes the manager type to the given type
            </summary>
            <param name="newType">New manager type</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetInstance(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Gets the instance of the manager.
            </summary>
            <param name="tree">TreeProvider instance to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersion(System.Int32,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns specified history version.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
            <param name="sourceNode">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersion(CMS.DocumentEngine.VersionHistoryInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns node with applied version data.
            </summary>
            <param name="version">Document version history</param>
            <param name="sourceNode">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersion(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.VersionHistoryInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Applies version data to the node.
            </summary>
            <param name="node">Document node</param>
            <param name="version">Document version</param>
            <param name="excludedColumns">Set of columns which should not be applied</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetColumnsSet(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the set of columns from the given list of columns
            </summary>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyLatestVersion(CMS.DocumentEngine.TreeNode)">
            <summary>
            Applies latest version data to the node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveVersion(CMS.DocumentEngine.TreeNode,System.String,System.String,System.String,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOut(CMS.DocumentEngine.TreeNode)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOut(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOut(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="handleSpecialSteps">Indicates if special steps should be handled</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckIn(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Checks provided node in and stores it in the versioning history.
            </summary>
            <param name="node">Document node</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CreateNewVersion(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates new document version. (Moves document to edit step.)
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetDocumentHistory(System.Int32)">
            <summary>
            Returns the version history table for the specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestDocumentVersion(System.Int32)">
            <summary>
            Gets latest document version
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentHistory(System.Int32)">
            <summary>
            Deletes complete history of specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ClearDocumentHistory(System.Int32)">
            <summary>
            Clears complete history of specified document (keeps latest version).
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentVersion(System.Int32)">
            <summary>
            Deletes specified record in the node version history.
            </summary>
            <param name="versionHistoryId">Version history ID to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DeleteOlderVersions(System.Int32,System.String)">
            <summary>
            Deletes older document versions to keep specified version history length.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteName">Site name</param>
            <returns>Returns the version number of the last deleted version</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishVersion(System.Int32,System.Boolean)">
            <summary>
            Puts the specified node history version to the front DB tables.
            </summary>
            <param name="versionHistoryId">ID of the version history record</param>
            <param name="checkPublish">If true, the ToBePublished item is checked to find out whether to publish or not</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UndoCheckOut(CMS.DocumentEngine.TreeNode)">
            <summary>
            Undo all operations made during last checkout.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RollbackVersion(System.Int32)">
            <summary>
            Adds specified earlier version to the top of the version history.
            </summary>
            <param name="versionHistoryId">Version history ID</param>
            <returns>Returns new version history ID</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAllScheduled(System.String)">
            <summary>
            Publishes all documents scheduled for the current time.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RestoreDocument(System.Int32)">
            <summary>
            Restores deleted node and returns the restored node.
            </summary>
            <param name="versionHistoryId">ID of the version to be restored</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetNewVersion(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns new version number representation.
            </summary>
            <param name="oldVersionNumber">Old version number</param>
            <param name="isMajorVersion">If true, the version number is considered major</param>
            <param name="siteName">Site name</param>
            <param name="useCheckInCheckOut">Indicates if use check-in/check-out</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureVersion(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Ensures that the document version history is present for the given document, returns the document version.
            </summary>
            <param name="node">Document node</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="nodeDeletion">Indicates if the version should be ensured for the recycle bin</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
            <remarks>The document is updated to the database, there is no need to update it after</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseCheckInCheckOut(System.String)">
            <summary>
            Specifies whether the environment is configured to use check-in and check-out actions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseAutomaticVersionNumbering(System.String)">
            <summary>
            Specifies whether the environment is configured to use automatic version numbering.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetHistoryLength(System.String)">
            <summary>
            Gets version history length
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsExcludedColumn(System.String,System.Collections.Generic.ISet{System.String})">
            <summary>
            Returns true if the given column is present within the given set of excluded columns
            </summary>
            <param name="columnName">Column name</param>
            <param name="excludedColumns">Excluded columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedCoupledColumn(System.String,System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="className">Class name</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedDocumentColumn(System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemNodeColumn(System.String)">
            <summary>
            Returns true if the given column name is a system data column name of the node.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemDocumentColumn(System.String)">
            <summary>
            Returns true if the given column name is a system data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveAttachmentVersion(System.Int32,System.Guid)">
            <summary>
            Removes the AttachmentHistory binding to the document version history and deletes the AttachmentHistory object if there is no more bindings to that version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveAttachmentVersion(CMS.DocumentEngine.DocumentAttachment,System.Int32)">
            <summary>
            Saves the attachment version to the database.
            </summary>
            <param name="attachment">Attachment info object</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveAttachmentVersion(CMS.DocumentEngine.AttachmentHistorySetterContext)">
            <summary>
            Saves the attachment to the database.
            </summary>
            <param name="context">Context required for the attachment history to be saved.</param>
            <returns>Saved instance of attachment version.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAttachments(System.Int32)">
            <summary>
            Publishes the attachments for the given document.
            </summary>
            <param name="versionHistoryId">Version history for which the attachments should be published.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersion(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersion(System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestAttachmentVersion(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns latest attachment version found in the AttachmentHistoryTable.
            Returns only an attachment which is not a variant. For an attachment variant returns <c>null</c>.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionAttachments(System.Int32)">
            <summary>
            Returns attachment histories for the given version.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <remarks>The IncludeBinaryData property and the BinaryData method don't load binary data
            for attachments stored on the filesystem. To load binary data for attachments stored on the
            filesystem, use the AttachmentBinary property of every record.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveWorkflow(CMS.DocumentEngine.TreeNode)">
            <summary>
            Removes all the workflow information from the document and initializes the document as non-workflow.
            </summary>
            <param name="node">Document node (current version)</param>
            <remarks>Intended for use after finishing current workflow cycle to remove workflow scope from the document</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionData(System.Data.DataSet,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Applies the version data to the document DataSet.
            </summary>
            <param name="data">Dataset with the data</param>
            <param name="coupled">Indicates if versioned data should be applied to the coupled data</param>
            <param name="excludedColumns">Set of columns which should not be applied</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionData``1(System.Collections.Generic.IList{``0},System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Applies the version data to the list of <see cref="T:CMS.DocumentEngine.TreeNode"/>s.
            </summary>
            <param name="treeNodes">Enumeration of data records to apply version data to.</param>
            <param name="coupled">Indicates if version data should be applied to the coupled data.</param>
            <param name="excludedColumns">Set of columns where version data should not be applied.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DeleteRecycleBinAndAllRelatedOlderVersions(System.Int32)">
            <summary>
            Deletes all versions from recycle bin for given site.
            Together with deleted recycle bin version are removed all related older versions.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionInternal(CMS.DocumentEngine.VersionHistoryInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns node with applied version data.
            </summary>
            <param name="version">Document version history</param>
            <param name="sourceNode">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyLatestVersionInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Applies latest version data to the node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveVersionInternal(CMS.DocumentEngine.TreeNode,System.String,System.String,System.String,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOutInternal(CMS.DocumentEngine.TreeNode,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="handleSpecialSteps">Indicates if special steps should be handled</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckInInternal(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Checks provided node in and stores it in the versioning history.
            </summary>
            <param name="node">Document node</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CreateNewVersionInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates new document version. (Moves document to edit step.)
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetDocumentHistoryInternal(System.Int32)">
            <summary>
            Returns the version history table for the specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestDocumentVersionInternal(System.Int32)">
            <summary>
            Gets latest document version
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentHistoryInternal(System.Int32)">
            <summary>
            Deletes complete history of specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ClearDocumentHistoryInternal(System.Int32)">
            <summary>
            Clears complete history of specified document (keeps the latest version).
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentVersionInternal(System.Int32)">
            <summary>
            Deletes specified record in the node version history.
            </summary>
            <param name="versionHistoryId">Version history ID to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DeleteOlderVersionsInternal(System.Int32,System.String)">
            <summary>
            Deletes older document versions to keep specified version history length.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishVersionInternal(System.Int32,System.Boolean)">
            <summary>
            Puts the specified node history version to the front DB tables.
            </summary>
            <param name="versionHistoryId">ID of the version history record</param>
            <param name="checkPublish">If true, the ToBePublished item is checked to find out whether to publish or not</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UndoCheckOutInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Undo all operations made during last checkout.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RollbackVersionInternal(System.Int32)">
            <summary>
            Adds specified earlier version to the top of the version history.
            </summary>
            <param name="versionHistoryId">Version history ID</param>
            <returns>Returns new version history ID</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAllScheduledInternal(System.String)">
            <summary>
            Publishes all documents scheduled for the current time.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RestoreDocumentInternal(System.Int32)">
            <summary>
            Restores deleted node and returns the restored node.
            </summary>
            <param name="versionHistoryId">ID of the version to be restored</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetNewVersionInternal(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns new version number representation.
            </summary>
            <param name="oldVersionNumber">Old version number</param>
            <param name="isMajorVersion">If true, the version number is considered major</param>
            <param name="siteName">Site name</param>
            <param name="useCheckInCheckOut">Indicates if use check-in/check-out</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureVersionInternal(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Ensures that the document version history is present for the given document, returns the document version.
            </summary>
            <param name="node">Document node</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="nodeDeletion">Indicates if the version should be ensured for the recycle bin</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
            <remarks>The document is updated to the database, there is no need to update it after</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureVersionAttachments(System.Int32)">
            <summary>
            Ensures attachments for given version.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseCheckInCheckOutInternal(System.String)">
            <summary>
            Specifies whether the environment is configured to use check-in and check-out actions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseAutomaticVersionNumberingInternal(System.String)">
            <summary>
            Specifies whether the environment is configured to use automatic version numbering.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetHistoryLengthInternal(System.String)">
            <summary>
            Gets version history length
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedCoupledColumnInternal(System.String,System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="className">Class name</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedDocumentColumnInternal(System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemNodeColumnInternal(System.String)">
            <summary>
            Returns true if the given column name is a system data column name of the node.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemDocumentColumnInternal(System.String)">
            <summary>
            Returns true if the given column name is a system data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureConsistencyInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures the document consistency with current database content.
            </summary>
            <param name="node">Node to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureUserConsistency(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Ensures the consistency of the user ID column
            </summary>
            <param name="node">Document node</param>
            <param name="colName">Column name with the user ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveAttachmentVersionInternal(System.Int32,System.Guid)">
            <summary>
            Removes the AttachmentHistory binding to the document version history and deletes the AttachmentHistory object if there is no more bindings to that version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAttachmentsInternal(System.Int32)">
            <summary>
            Publishes the attachments for the given version.
            </summary>
            <param name="versionHistoryId">Version history for which the attachments should be published</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestAttachmentVersionInternal(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns attachment version for latest version of a document.
            Searches only in main attachments. Attachment variants are omitted and if found, returns <c>null</c>.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestVersionHistoryId(System.Guid,System.String)">
            <summary>
            Returns latest document version history ID for given attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionAttachmentsInternal(System.Int32)">
            <summary>
            Returns attachment histories for the given version.
            </summary>
            <param name="versionHistoryId">Version history ID.</param>
            <remarks>The IncludeBinaryData property and the BinaryData method don't load binary data
            for attachments stored on the filesystem. To load binary data for attachments stored on the
            filesystem, use the AttachmentBinary property of every record.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersionInternal(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersionInternal(System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveWorkflowInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Removes all the workflow information from the document and initializes the document as non-workflow.
            </summary>
            <param name="node">Document node (current version)</param>
            <remarks>Intended for use after finishing current workflow cycle to remove workflow scope from the document</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionDataInternal(System.Data.DataSet,System.Boolean,System.Collections.Generic.ISet{System.String})">
            <summary>
            Applies the document version data to the document DataSet.
            </summary>
            <param name="data">Dataset with the data</param>
            <param name="coupled">Indicates if versioned data should be applied to the coupled data</param>
            <param name="excludedColumns">Set of columns which should not be applied</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionDataInternal``1(System.Collections.Generic.IList{``0},System.Boolean,System.Collections.Generic.ISet{System.String})">
            <summary>
            Applies the version data to the list of <see cref="T:CMS.DocumentEngine.TreeNode"/>s.
            </summary>
            <param name="treeNodes">List of <see cref="T:CMS.DocumentEngine.TreeNode"/>s to apply version data to.</param>
            <param name="coupled">Indicates if version data should be applied to the coupled data.</param>
            <param name="excludedColumns">Set of columns where version data should not be applied.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionHistoryIDs(System.Data.DataSet)">
            <summary>
            Gets the version history IDs from the given data set
            </summary>
            <param name="data">Input data set</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CorrectAutomaticallyGeneratedProperties(CMS.Base.IDataContainer,CMS.Base.IDataContainer)">
            <summary>
            Corrects the values of automatically properties in data based on latest data from version data.
            </summary>
            <param name="container">Data container to which the version data is applied</param>
            <param name="versionContainer">Version data container</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionDataInternal(CMS.Base.IDataContainer,CMS.DocumentEngine.VersionHistoryInfo,System.Boolean,System.Collections.Generic.ISet{System.String})">
            <summary>
            Applies the document version data to the document data row.
            </summary>
            <param name="container">Data container</param>
            <param name="version">Document version</param>
            <param name="coupled">Indicates if versioned data should be applied to the coupled data</param>
            <param name="excludedColumns">Set of columns which should not be applied</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyCoupledData(CMS.Base.IDataContainer,CMS.Base.IDataContainer,System.Collections.Generic.ISet{System.String})">
            <summary>
            Applies coupled versioned data including SKU data
            </summary>
            <param name="container">Data container</param>
            <param name="versionContainer">Version container</param>
            <param name="excludedColumns">Set of columns which should not be applied</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplySKUData(CMS.Base.IDataContainer,CMS.Base.IDataContainer,System.Collections.Generic.ISet{System.String})">
            <summary>
            Applies SKU versioned data
            </summary>
            <param name="container">Data container</param>
            <param name="versionContainer">Version container</param>
            <param name="excludedColumns">Set of columns which should not be applied</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyDocumentData(CMS.Base.IDataContainer,CMS.Base.IDataContainer,System.Collections.Generic.ISet{System.String})">
            <summary>
            Applies document versioned data
            </summary>
            <param name="container">Data container</param>
            <param name="versionContainer">Version data container</param>
            <param name="excludedColumns">Set of columns which should not be applied</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionColumns(CMS.Base.IDataContainer,CMS.Base.IDataContainer,CMS.DataEngine.ClassStructureInfo,System.Func{System.String,System.Boolean})">
            <summary>
            Applies the given list of columns from the source data row to the node data row
            </summary>
            <param name="targetContainer">Taret data container</param>
            <param name="sourceContainer">Source data container</param>
            <param name="structure">Class structure</param>
            <param name="columnCondition">Column condition</param>
        </member>
        <member name="T:CMS.DocumentEngine.BaseDocumentAction">
            <summary>
            Class for base document action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceAliasPath">
            <summary>
            Source alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceSiteName">
            <summary>
            Source site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceCulture">
            <summary>
            Source document culture code
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceCombineWithDefaultCulture">
            <summary>
            Specifies if return the default culture document when specified culture not found.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceSite">
            <summary>
            Source site
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceNode">
            <summary>
            Node to be copied
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CopyDocumentAction">
            <summary>
            Class for document copy action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.TargetAliasPath">
            <summary>
            Target alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.TargetSiteName">
            <summary>
            Target site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.IncludeChildren">
            <summary>
            Indicates if child documents should be included
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.CopyPermissions">
            <summary>
            Indicates if document permissions should be copied
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.TargetNodeID">
            <summary>
            Target parent node ID
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DeleteDocumentAction">
            <summary>
            Class for document deletion action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.DeleteAllCultures">
            <summary>
            Indicates if all cultures should be deleted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.DestroyDocument">
            <summary>
            Indicates if the document should be destroyed.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentPropertyAction">
            <summary>
            Class for document property set action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentPropertyAction.PropertyName">
            <summary>
            Gets property name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentPropertyAction.PropertyValue">
            <summary>
            Gets property value
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPropertyAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentWorkflowAction">
            <summary>
            Base document workflow action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentWorkflowAction.Node">
            <summary>
            Current document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentWorkflowAction.WorkflowManager">
            <summary>
            Workflow manager
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentWorkflowAction.RefreshNode">
            <summary>
            Refreshes node instance
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.EmailAction">
            <summary>
            Class representing action to send e-mail
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Recipients">
            <summary>
            Recipients of e-mail separated by ';' or ','.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.TemplateName">
            <summary>
            Template of e-mail.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Sender">
            <summary>
            Sender of e-mail.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Subject">
            <summary>
            Subject specifically defined for step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Body">
            <summary>
            E-mail body specifically defined for step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.BasedOnTemplate">
            <summary>
            Whether is e-mail based or template or not 
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.EmailAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LinkDocumentAction">
            <summary>
            Class for document link action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.TargetAliasPath">
            <summary>
            Target alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.TargetSiteName">
            <summary>
            Target site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.CopyPermissions">
            <summary>
            Indicates if document permissions should be copied
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.TargetNodeID">
            <summary>
            Target parent node ID
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LinkDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogAction">
            <summary>
            Class for log action - for debug purposes
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogAction.Managers">
            <summary>
            Managers who can approve
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LogAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.MoveDocumentAction">
            <summary>
            Class for document move action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.TargetAliasPath">
            <summary>
            Target alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.TargetSiteName">
            <summary>
            Target site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.MoveOnlyChildren">
            <summary>
            Indicates if only child documents should be moved
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.PreservePermissions">
            <summary>
            Indicates if document permissions should be preserved
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.TargetNodeID">
            <summary>
            Target parent node ID
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MoveDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.NotificationEmailsAction">
            <summary>
            Class representing action to send workflow notification e-mails.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NotificationEmailsAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowEmailSender">
            <summary>
            Class for asynchronous workflow e-mail sending.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.Node">
            <summary>
            Tree node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.OriginalStep">
            <summary>
            Original step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.CurrentStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.Action">
            <summary>
            Workflow action.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.Comment">
            <summary>
            Action comment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.ApplicationUrl">
            <summary>
            Application URL for e-mail macro resolving
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowEmailSender.#ctor(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Tree node</param>
            <param name="user">User</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Workflow action</param>
            <param name="comment">Comment</param>
            <param name="applicationUrl">Application URL for macro resolver</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowEmailSender.Run">
            <summary>
            Runs the action.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowException">
            <summary>
            Special workflow exception.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowManager">
            <summary>
            Class for managing the workflow procedure.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowManager.mTreeProvider">
            <summary>
            Inner TreeProvider object for the data access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowManager.mVersionManager">
            <summary>
            Manager for versions
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowManager.mScopesOrderBy">
            <summary>
            Default scopes order by expression to handle scope priorities.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.CheckPermissions">
            <summary>
            Indicates if step permissions should be checked when the step is moved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.TreeProvider">
            <summary>
            TreeProvider instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.VersionManager">
            <summary>
            Version manager instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.ScopesOrderBy">
            <summary>
            Default scopes order by expression to handle scope priorities.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.#ctor(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Constructor - Creates workflow manager.
            </summary>
            <param name="tree">TreeProvider instance to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.Init(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initializes the manager
            </summary>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ChangeManagerTypeTo(System.Type)">
            <summary>
            Changes the manager type to the given type
            </summary>
            <param name="newType">New manager type</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetInstance(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Gets the instance of the manager.
            </summary>
            <param name="tree">TreeProvider instance to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflowScope(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow scope info for the given node, or null when the node does not support workflow.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetFirstWorkflowStep(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns first workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPublishedWorkflowStep(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns published workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflow(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow for the specified node.
            </summary>
            <param name="node">Tree node to analyze for workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetStepInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets step information for given document.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.EnsureStepInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures workflow step for given document.
            </summary>
            <param name="node">Tree node</param>
            <remarks>In case given node is under workflow but doesn't have the workflow step set yet, updates the node information.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepInfo(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Returns previous step information for given node.
            </summary>
            <param name="node">Tree node</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousSteps(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns list of previous steps for current workflow cycle
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextStepInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextSteps(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextSteps(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Workflow step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.LogWorkflowHistory(CMS.WorkflowEngine.WorkflowLogSettings)">
            <summary>
            Logs specified action in the workflow history record.
            </summary>
            <param name="settings">Log settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.HandleStepTimeout(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Handles step timeout
            </summary>
            <param name="node">Node to process</param>
            <param name="user">User info</param>
            <param name="workflow">Workflow</param>
            <param name="currentStep">Current workflow step</param>
            <param name="step">Target workflow step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToNextStep(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the next step in the workflow and returns new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPreviousStep(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the previous step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPreviousSpecificStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified node to the specified previous step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToFirstStep(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the first step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPublishedStep(CMS.DocumentEngine.TreeNode,System.String,System.Boolean)">
            <summary>
            Automatically publishes given document. (Moves document to published step.)
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificNextStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified next step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SetActionStatus(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets action status
            </summary>
            <param name="node">Document node</param>
            <param name="status">Status string</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetActionStatus(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets action status
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ArchiveDocument(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Archives the document, returns the last step info.
            </summary>
            <param name="node">Document to archive</param>
            <param name="comment">Version comment</param>
            <param name="transitionType">Transition type</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.PublishDocument(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Publishes the document, returns the last step info.
            </summary>
            <param name="node">Document to publish</param>
            <param name="comment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveDocument(CMS.DocumentEngine.TreeNode,System.String,System.Func{CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean})">
            <summary>
            Moves the document to the next step until the given condition is satisfied, returns the last step info.
            </summary>
            <param name="node">Document to move</param>
            <param name="comment">Version comment</param>
            <param name="condition">Condition to evaluate</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CheckStepPermissions(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Returns true if current user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CheckStepPermissions(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Returns true if given user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="user">Current user info</param>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CanUserManageWorkflow(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApprove(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve node in the current workflow step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApprove(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of all the users who can approve node in the current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage workflow permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage workflow permission for the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SendWorkflowEmails(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.String)">
            <summary>
            Sends the workflow email for the specified document node.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Workflow action to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetWorkflowEmailRecipients(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets list of user e-mail addresses to send the workflow e-mail
            </summary>
            <param name="node">Document</param>
            <param name="currentStep">Current workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.PropagateTreeProviderInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Propagates tree provider
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetCurrentStepInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Always gets instance of current workflow step. (Also checks document for required settings.)
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflowScopeInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow scope info for the given node, or null when the node does not support workflow.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetFirstWorkflowStepInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns first workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPublishedWorkflowStepInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns published workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflowInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow for the specified node.
            </summary>
            <param name="node">Tree node to analyze for workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetStepInfoInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets step information for given document.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.EnsureStepInfoInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures workflow step for given document.
            </summary>
            <param name="node">Tree node</param>
            <remarks>In case given node is under workflow but doesn't have the workflow step set yet, updates the node information.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepInfoInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Returns previous step information for given node.
            </summary>
            <param name="node">Tree node</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepsInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of previous steps for current workflow cycle
            </summary>
            <param name="node">Tree node</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepInfoInternal(CMS.WorkflowEngine.WorkflowHistoryInfo,System.Int32,System.Boolean)">
            <summary>
            Gets previous workflow step
            </summary>
            <param name="history">Workflow history</param>
            <param name="workflowId">Workflow ID</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetApprovalHistoriesInternal(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Gets approval workflow histories between two given for specified object
            </summary>
            <param name="startHistoryId">Start history ID</param>
            <param name="endHistoryId">End history ID</param>
            <param name="workflowId">Workflow ID</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
            <param name="topN">Top N results</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextStepInfoInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Current step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextStepInfoInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo)">
            <summary>
            Returns list of next steps for given object.
            </summary>
            <param name="node">Node to process</param>
            <param name="stateObj">State object</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToNextStepInternal(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the next step in the workflow and returns new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPreviousStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified node to the previous step in the workflow and returns StepID of the new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MarkRejectHistoriesInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Int32)">
            <summary>
            Marks workflow histories as used when rejecting to specific step.
            </summary>
            <param name="previousStep">Previous workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToFirstStepInternal(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the first step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStepInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="action">Action context</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <param name="transitionType">Type of transition</param>
            <param name="action">Action context</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="step">Target workflow step of the document</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToStepInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,System.Boolean)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="step">Target workflow step of the document</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,System.Boolean)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="step">Target workflow step of the document</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <param name="transitionType">Type of transition</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified node to the first step without automatic transition in the workflow and returns the final step.
            </summary>
            <param name="node">Node to process</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="comment">Action comment</param>
            <remarks>The return step can be different than the original target step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPublishedStepInternal(CMS.DocumentEngine.TreeNode,System.String,System.Boolean)">
            <summary>
            Moves document directly to published step. (Publishes the document without going through all the steps.)
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ArchiveDocumentInternal(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Archives the document, returns the last step info.
            </summary>
            <param name="node">Document to archive</param>
            <param name="comment">Version comment</param>
            <param name="transitionType">Transition type</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.PublishDocumentInternal(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Publishes the document, returns the last step info.
            </summary>
            <param name="node">Document to publish</param>
            <param name="comment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveDocumentInternal(CMS.DocumentEngine.TreeNode,System.String,System.Func{CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean})">
            <summary>
            Moves the document to the next step until the given condition is satisfied, returns the last step info.
            </summary>
            <param name="node">Document to move</param>
            <param name="comment">Version comment</param>
            <param name="condition">Condition to evaluate</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CanUserManageWorkflowInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CheckStepPermissionsInternal(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Returns true if given user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Tree node</param>
            <param name="user">User</param>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApproveInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve node in the current workflow step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApproveInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of all the users who can approve node in the current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage workflow permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage workflow permission for the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersAllowedToEditCultureWhereCondition(System.String)">
            <summary>
            Returns the where condition to get only users who are allowed to edit given culture. Doesn't take into account global administrators.
            </summary>
            <param name="culture">Culture to edit</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SendWorkflowEmailsInternal(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.String)">
            <summary>
            Sends the workflow email for the specified document node.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Workflow action to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEmailTemplateInternal(CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.Boolean,System.Boolean,CMS.MacroEngine.MacroResolver)">
            <summary>
            Gets e-mail template name and default subject to be used for given action
            </summary>
            <param name="workflow">Workflow</param>
            <param name="step">Target workflow step</param>
            <param name="action">Workflow action</param>
            <param name="toEditor">Indicates if e-mail template should be used to send e-mail to editor</param>
            <param name="notification">Indicates if general notification template should be returned</param>
            <param name="resolver">Macro resolver</param>
            <returns>E-mail template name and default subject as a pair. Key represents the template name, value represents default subject.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEditorEmailInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Gets the document editor e-mail
            </summary>
            <param name="node">Document node</param>
            <param name="step">Workflow step</param>
            <remarks>The document editor is a user who approved the document from the Edit step for the last time.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetWorkflowEmailRecipientsInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets list of user e-mail addresses to send the workflow e-mail
            </summary>
            <param name="node">Document</param>
            <param name="currentStep">Current workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNotificationEmailRecipientsInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets list of user e-mail addresses to send the general notification e-mail
            </summary>
            <param name="node">Document</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SetActionStatusInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,System.String)">
            <summary>
            Sets action status
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
            <param name="status">Workflow status</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetActionStatusInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo)">
            <summary>
            Gets action status
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEvalResolverInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo)">
            <summary>
            Gets resolver for evaluation of transitions and source points
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
            <param name="workflow">Workflow</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEmailResolver(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Workflow action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEmailResolverInternal(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Workflow action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPublishedStep(System.Int32)">
            <summary>
            Returns published step of the specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <exception cref="T:System.Exception">Specified workflow does not have a 'published' step.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ProcessActionInternal(CMS.WorkflowEngine.WorkflowActionEventArgs{CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowActionEnum})">
            <summary>
            Processes action connected to given step.
            </summary>
            <param name="arguments">Action arguments</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowResolvers.WorkflowResolver">
            <summary>
            Returns workflow e-mail template macro resolver.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowResolvers.WorkflowBaseDocumentResolver">
            <summary>
            Returns base empty workflow macro resolver with document field.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowResolvers.WorkflowSimpleDocumentResolver">
            <summary>
            Returns simple workflow macro resolver with document field.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowTimer">
            <summary>
            Provides an ITask interface for the workflow timing.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowTimer.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the workflow timer.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.RegisterDocumentTypeAttribute">
            <summary>
            Registers the document type class within the system or overrides the existing one.
            </summary>
        </member>
        <member name="P:CMS.RegisterDocumentTypeAttribute.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.RegisterDocumentTypeAttribute.AssemblyName">
            <summary>
            Class assembly name
            </summary>
        </member>
        <member name="P:CMS.RegisterDocumentTypeAttribute.MarkedType">
            <summary>
            Document factory
            </summary>
        </member>
        <member name="M:CMS.RegisterDocumentTypeAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="className">Class name</param>
            <param name="type">Object type</param>
        </member>
        <member name="M:CMS.RegisterDocumentTypeAttribute.PreInit">
            <summary>
            Initializes the attribute
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.DocumentImportEventArgs">
            <summary>
            Document import event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DocumentImportEventArgs.Document">
            <summary>
            Document being currently imported
            </summary>
        </member>
        <member name="T:CMS.SearchProviderSQL.SearchProvider">
            <summary>
            Class providing searching.
            </summary>
        </member>
        <member name="F:CMS.SearchProviderSQL.SearchProvider.ALL_CULTURES">
            <summary>
            Supplementary constant to specify all document cultures.
            </summary>
        </member>
        <member name="F:CMS.SearchProviderSQL.SearchProvider.ALL_SITES">
            <summary>
            Supplementary constant to specify all sites.
            </summary>
        </member>
        <member name="M:CMS.SearchProviderSQL.SearchProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Searches data and returns results.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Search node path</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Search child nodes</param>
            <param name="classNames">Class names</param>
            <param name="filterResultsByReadPermission">Filter results by read permission?</param>
            <param name="searchOnlyPublished">Search only published?</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
        </member>
        <member name="M:CMS.SearchProviderSQL.SearchProvider.GetWordSearchResult(System.String,System.String,System.String,System.String,CMS.DataEngine.QueryDataParameters)">
            <summary>
            Gets search results based on document text fields
            </summary>
            <param name="className">Class name</param>
            <param name="word">Word to search</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="queryParams">Query parameters for backward compatibility</param>
        </member>
        <member name="M:CMS.SearchProviderSQL.SearchProvider.IntersectResultItems(System.Data.DataSet@,System.Data.DataSet[])">
            <summary>
            Intersects the result items.
            </summary>
            <param name="target">Target data</param>
            <param name="newData">New data (to intersect)</param>
        </member>
        <member name="M:CMS.SearchProviderSQL.SearchProvider.AddResultItems(System.Data.DataSet@,System.Data.DataSet)">
            <summary>
            Adds the result items to the given DataSet.
            </summary>
            <param name="target">Target DataSet</param>
            <param name="newData">New data</param>
        </member>
        <member name="M:CMS.SearchProviderSQL.SearchProvider.GetCompleteWhereCondition(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns the complete where condition based on the given parameters.
            </summary> 
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="M:CMS.SearchProviderSQL.SearchProvider.GetSearchWords(System.String,CMS.Search.SearchModeEnum)">
            <summary>
            Converts search expression to array of searched words according to search mode.
            </summary>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
        </member>
    </members>
</doc>
