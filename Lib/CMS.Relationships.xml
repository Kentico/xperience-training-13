<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.Relationships</name>
    </assembly>
    <members>
        <member name="T:CMS.Relationships.RelationshipsModule">
            <summary>
            Represents the Relationships module.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipsModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Relationships.RelationshipsModuleMetadata">
            <summary>
            Represents the Relationships module metadata.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipsModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Relationships.IRelationshipNameInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.Relationships.RelationshipNameInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.Relationships.IRelationshipNameSiteInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.Relationships.IRelationshipNameSiteInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding structure.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.Relationships.IRelationshipNameSiteInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding structure.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.Relationships.IRelationshipNameSiteInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.Relationships.IRelationshipNameSiteInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameInfo">
            <summary>
            Relationship name info data container class.
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipNameId">
            <summary>
            Gets or sets the relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipDisplayName">
            <summary>
            Gets or sets the relationship display name.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipName">
            <summary>
            Gets or sets the relationship name.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipAllowedObjects">
            <summary>
            Gets or sets the relationship allowed objects.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipNameIsAdHoc">
            <summary>
            Indicates if relationship name is ad-hoc.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipGUID">
            <summary>
            Relationship GUID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.AllowRestore">
            <summary>
            Indicates if the object supports deleting to recycle bin.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.LogEvents">
            <summary>
            If true, Events tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.LogSynchronization">
            <summary>
            Indicates how should be handled the logging of synchronization tasks on the object update.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.#ctor">
            <summary>
            Constructor, creates an empty RelationshipNameInfo structure.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty RelationshipNameInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.IsOnSite(System.Int32)">
            <summary>
            Check whether relationship is in site given by id.
            </summary>
            <param name="siteId">ID of site to check</param>
            <returns>Returns true if relationship name already exists</returns>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameInfoProvider">
            <summary>
            Provides access to information about relationship names.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.SetRelationshipNameInfo(CMS.Relationships.RelationshipNameInfo)">
            <summary>
            Sets the specified relationship name data from info object to DB.
            </summary>
            <param name="relationshipNameInfo">Relationship name data object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfo(System.Int32)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name ID.
            </summary>
            <param name="relationshipNameId">Relationship name ID to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfo(System.String)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name.
            </summary>
            <param name="relationshipName">Relationship name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.DeleteRelationshipName(CMS.Relationships.RelationshipNameInfo)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="ri">RelationshipName object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.DeleteRelationshipName(System.Int32)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="relationshipNameId">ID of relationship name to delete</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNames(System.Int32,System.String)">
            <summary>
            Returns object query of relationship names on selected site specified by where condition.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNames">
            <summary>
            Returns the query for all relationship names.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNames(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns object query of relationship names specified by where condition.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.RelationshipNameExists(System.String)">
            <summary>
            Check whether relationship with given name already exists.
            </summary>
            <param name="name">Relationship name to check</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNamesWhereCondition(System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Returns where condition for selecting relationship names from the database.
            </summary>
            <param name="allowedForObjects">Indicates if relationship names for object should be retrieved</param>
            <param name="allowedForDocuments">Indicates if relationship names for documents should be retrieved</param>
            <param name="siteId">Site ID</param>
            <param name="includeAdHoc">Indicates if Ad-hoc relationship names should be retrieved</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.EnsureAdHocRelationshipNameInfo(CMS.DataEngine.DataClassInfo,CMS.DataEngine.IField)">
            <summary>
            Returns the ad-hoc relationship name object. Creates new if doesn't exist.
            </summary>
            <param name="classInfo">Data class info</param>
            <param name="field">Field for ad-hoc relationship name</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetAdHocRelationshipNameCodeName(System.String,CMS.DataEngine.IField)">
            <summary>
            Gets code name for ad-hoc relationship name
            </summary>
            <param name="className">Class name of the document</param>
            <param name="field">Field for ad-hoc relationship name</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetAdHocRelationshipNameDisplayName(System.String,CMS.DataEngine.IField)">
            <summary>
            Gets display name for ad-hoc relationship name
            </summary>
            <param name="classDisplayName">Class display name of the document</param>
            <param name="field">Field for ad-hoc relationship name</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.RelationshipNameExistsInternal(System.String)">
            <summary>
            Check whether relationship with given name already exists.
            </summary>
            <param name="name">Relationship name to check</param>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameSiteInfo">
            <summary>
            RelationshipNameSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameSiteInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameSiteInfo.RelationshipNameID">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty RelationshipNameSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RelationshipNameSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameSiteInfoProvider">
            <summary>
            Class providing RelationshipNameSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding structure.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding structure.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the RelationshipNameSiteInfo structure for the specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.SetRelationshipNameSiteInfo(CMS.Relationships.RelationshipNameSiteInfo)">
            <summary>
            Sets (updates or inserts) specified relationshipNameSite.
            </summary>
            <param name="relationshipNameSite">RelationshipNameSite to set</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.DeleteRelationshipNameSiteInfo(CMS.Relationships.RelationshipNameSiteInfo)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="infoObj">RelationshipNameSite object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSites">
            <summary>
            Returns the query for all relationship name site bindings.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSites(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the bindings between relationship names and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.RemoveRelationshipNameFromSite(System.Int32,System.Int32)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.Relationships.RelationshipNameSiteInfo"/> binding.
            </summary>
            <param name="relationshipNameId">Relationship name ID.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.AddRelationshipNameToSite(System.Int32,System.Int32)">
            <summary>
            Adds the relationship name specified by id to the site.
            </summary>
            <param name="relationshipNameId">ID of relationship name to add</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.IsRelationShipOnSite(System.Int32,System.Int32)">
            <summary>
            Returns true if the relationship is assigned to the given site.
            </summary>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RelationshipNameSiteInfo structure for the specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.SetInfo(CMS.Relationships.RelationshipNameSiteInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
    </members>
</doc>
