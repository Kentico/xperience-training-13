<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.SocialMarketing</name>
    </assembly>
    <members>
        <member name="T:CMS.SocialMarketing.FacebookAction">
            <summary>
            Action to publish message to Facebook.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAction.Text">
            <summary>
            Text to be published.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAction.UrlShortenerType">
            <summary>
            Gets the type of the URL shortener that will be used to shorten links in this Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAction.PostOnlyOnce">
            <summary>
            If true, the action will verify that there is no post related to the document yet. If there are any, no action is executed.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAction.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInAction">
            <summary>
            Action to publish message to LinkedIn.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAction.Text">
            <summary>
            Text to be published.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAction.UrlShortenerType">
            <summary>
            Gets the type of the URL shortener that will be used to shorten links in this LinkedIn post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAction.PostOnlyOnce">
            <summary>
            If true, the action will verify that there is no post related to the document yet. If there are any, no action is executed.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAction.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterAction">
            <summary>
            Action to publish message to Twitter.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAction.Text">
            <summary>
            Text to be published.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAction.UrlShortenerType">
            <summary>
            Gets the type of the URL shortener that will be used to shorten links in this Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAction.PostOnlyOnce">
            <summary>
            If true, the action will verify that there is no post related to the document yet. If there are any, no action is executed.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAction.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookAccountInfo">
            <summary>
            Represents a Facebook account (page).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookAccountInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookAccountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookAccountInfo.mFacebookPageAccessToken">
            <summary>
            Current information about a Facebook page access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookPageAccessToken">
            <summary>
            Gets or sets information about a Facebook page access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountPageID">
            <summary>
            Gets or sets the Facebook account page ID
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountPageAccessTokenExpiration">
            <summary>
            Gets or sets the Facebook account access token expiration.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountPageAccessToken">
            <summary>
            Gets or sets the Facebook account access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountFacebookApplicationID">
            <summary>
            Gets or sets the identifier of the Facebook application object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountIsDefault">
            <summary>
            Gets or sets indicator whether Account is default for its site
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountGUID">
            <summary>
            Gets or sets the globally unique identifier of the Facebook account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountSiteID">
            <summary>
            Gets or sets the site identifier of the Facebook account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountLastModified">
            <summary>
            Gets or sets the timestamp of the Facebook account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountName">
            <summary>
            Gets or sets the code name of the Facebook account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountID">
            <summary>
            Gets or sets the identifier of the Facebook account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookAccountInfo.FacebookAccountDisplayName">
            <summary>
            Gets or sets the display name of the Facebook account.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfo.DeleteObject">
            <summary>
            Deletes this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfo.GetValue(System.String)">
            <summary>
            Gets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfo.#ctor">
            <summary>
            Initializes a new instance of the FacebookAccountInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the FacebookAccountInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookAccountInfoProvider">
            <summary>
            Provides management of Facebook accounts.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the FacebookAccountInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccounts">
            <summary>
            Returns a query for all the FacebookAccountInfo objects.
            </summary>
            <returns>Query for all the FacebookAccountInfo objects.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccountInfo(System.Int32)">
            <summary>
            Retrieves a Facebook account with the specified identifier, and returns it.
            </summary>
            <param name="accountId">Facebook account identifier.</param>
            <returns>A Facebook account with the specified identifier, if found; otherwise, null.</returns>      
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccountInfo(System.Guid)">
            <summary>
            Returns FacebookAccountInfo with specified GUID.
            </summary>
            <param name="guid">FacebookAccountInfo GUID</param>                
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccountInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a FacebookAccountInfo with the specified Facebook page identifier, and returns it.
            </summary>
            <param name="facebookPageCodeName">Facebook page identifier.</param>
            <param name="siteId">Account site identifier.</param>
            <returns>A FacebookAccountInfo with the specified Facebook page identifier, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.SetFacebookAccountInfo(CMS.SocialMarketing.FacebookAccountInfo)">
            <summary>
            Updates or creates the specified Facebook account.
            </summary>
            <param name="account">Facebook account to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.DeleteFacebookAccountInfo(CMS.SocialMarketing.FacebookAccountInfo)">
            <summary>
            Deletes the specified Facebook account.
            </summary>
            <param name="account">Facebook account to be deleted.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.DeleteFacebookAccountInfo(System.Int32)">
            <summary>
            Deletes the Facebook account with specified identifier.
            </summary>
            <param name="accountId">Facebook account identifier.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccounts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a dataset of Facebook accounts for the specified site, and returns it.
            </summary>
            <param name="siteId">Site identifier.</param>        
            <returns>A dataset of Facebook accounts for the specified site.</returns>  
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetDefaultFacebookAccount(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the default FacebookAccount for given site
            </summary>
            <param name="siteId">Site for which you want the default FacebookAccount</param>
            <returns>Default FacebookAccount for given site, null if no default FacebookAccount exists</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccountsByApplicationId(System.Int32)">
            <summary>
            Retrieves an object query of Facebook accounts belonging to Facebook application with given ID.
            </summary>
            <param name="applicationId">Facebook application ID.</param>
            <returns>Facebook accounts with required application ID.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.SetInfo(CMS.SocialMarketing.FacebookAccountInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.DeleteInfo(CMS.SocialMarketing.FacebookAccountInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccountsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a dataset of Facebook accounts for the specified site, and returns it.
            </summary>
            <param name="siteId">Site identifier.</param>        
            <returns>A dataset of Facebook accounts for the specified site.</returns>  
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetDefaultFacebookAccountInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the default FacebookAccount for given site
            </summary>
            <param name="siteId">Site for which you want the default FacebookAccount</param>
            <returns>Default FacebookAccount for given site, null if no default FacebookAccount exists</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookAccountInfoProvider.GetFacebookAccountsByApplicationIdInternal(System.Int32)">
            <summary>
            Retrieves an object query of Facebook accounts belonging to Facebook application with given ID.
            </summary>
            <param name="applicationId">Facebook application ID.</param>
            <returns>Facebook accounts with required application ID.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookApplicationInfo">
            <summary>
            Represents a Facebook application.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookApplicationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookApplicationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationConsumerKey">
            <summary>
            Gets or sets the consumer key of the Facebook application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationConsumerSecret">
            <summary>
            Gets or sets the consumer secret of the Facebook application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationID">
            <summary>
            Gets or sets the identifier of the FacebookApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationSiteID">
            <summary>
            Gets or sets the site identifier of the FacebookApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationName">
            <summary>
            Gets or sets the code name of the FacebookApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationDisplayName">
            <summary>
            Gets or sets the display name of the FacebookApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationLastModified">
            <summary>
            Gets or sets the timestamp of the FacebookApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookApplicationInfo.FacebookApplicationGUID">
            <summary>
            Gets or sets the globally unique identifier of the FacebookApplicationInfo object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfo.DeleteObject">
            <summary>
            Deletes this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfo.GetValue(System.String)">
            <summary>
            Gets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfo.#ctor">
            <summary>
            Initializes a new instance of the FacebookApplicationInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the FacebookApplicationInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookApplicationInfoProvider">
            <summary>
            Provides management of Facebook applications.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the FacebookApplicationInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.GetFacebookApplications">
            <summary>
            Returns a query for all the FacebookApplicationInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.GetFacebookApplicationInfo(System.Int32)">
            <summary>
            Retrieves a Facebook application with the specified identifier, and returns it.
            </summary>
            <param name="applicationId">Facebook application identifier.</param>
            <returns>A Facebook application with the specified identifier, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.GetFacebookApplicationInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a Facebook application matching the specified criteria, and returns it.
            </summary>
            <param name="applicationName">Facebook application name.</param>
            <param name="siteName">Site name.</param>
            <returns>A Facebook application matching the specified criteria, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.GetFacebookApplicationInfo(System.Guid)">
            <summary>
            Returns FacebookApplicationInfo with specified GUID.
            </summary>
            <param name="guid">FacebookApplicationInfo GUID</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.SetFacebookApplicationInfo(CMS.SocialMarketing.FacebookApplicationInfo)">
            <summary>
            Updates or creates the specified Facebook application.
            </summary>
            <param name="application">Facebook application to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.DeleteFacebookApplicationInfo(CMS.SocialMarketing.FacebookApplicationInfo)">
            <summary>
            Deletes the specified Facebook application.
            </summary>
            <param name="application">Facebook application to be deleted.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.DeleteFacebookApplicationInfo(System.Int32)">
            <summary>
            Deletes the Facebook application with specified identifier.
            </summary>
            <param name="applicationId">Facebook application identifier.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.GetFacebookApplications(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a dataset of Facebook applications for the specified site, and returns it.
            </summary>
            <param name="siteId">Site ID.</param>
            <returns>A dataset of Facebook applications for the specified site.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.SetInfo(CMS.SocialMarketing.FacebookApplicationInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.DeleteInfo(CMS.SocialMarketing.FacebookApplicationInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.SetFacebookInsightsSchedulerStateInternal(CMS.SocialMarketing.FacebookApplicationInfo,System.Boolean)">
            <summary>
            Creates or removes Facebook Insights collection scheduler.
            Called whenever condition for Insights data collection changes - new application is created or an existing is deleted.
            </summary>
            <param name="application">Facebook application for which the stats should be collected.</param>
            <param name="enabled">Enable the task after application creation, disable when deleting.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookApplicationInfoProvider.GetFacebookApplicationsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the FacebookApplicationInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookHelper">
            <summary>
            Helper methods for working with Facebook social network.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.GRAPH_API">
            <summary>
            Uri of Facebook Graph API without trailing slash.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.GRAPH_API_INSIGHTS">
            <summary>
            Insights for single Facebook object ID URL.
            Pass ID as parameter 0.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.GRAPH_API_INSIGHTS_MULTIPLE_ID">
            <summary>
            Insights for multiple Facebook object IDs URL.
            Pass comma separated list of IDs as parameter 0.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.GRAPH_API_COMMENTS_SUMMARY_MULTIPLE_ID">
            <summary>
            Comments summary for multiple Facebook object IDs URL.
            Pass comma separated list of IDs as parameter 0.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.GRAPH_API_LIKES_SUMMARY_MULTIPLE_ID">
            <summary>
            Likes summary for multiple Facebook object IDs URL.
            Pass comma separated list of IDs as parameter 0.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.PAGE_ACCESS_TOKEN_SESSION_KEY">
            <summary>
            Session key for page access token.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.OAUTH_ACCESS_TOKEN_URL">
            <summary>
            URL for getting access token.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookHelper.OAUTH_AUTHORIZE_URL">
            <summary>
            URL for user authorization.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.PublishPostOnFacebookPage(System.String,System.String,System.String,System.String)">
            <summary>
            Publishes the new post on the Facebook page and returns the Facebook post ID.
            </summary>
            <param name="pageId">Facebook's page identifier. Post will be published on that page.</param>
            <param name="pageAccessToken">Access token that will be used for publishing on the page.</param>
            <param name="postText">Text of the post that will be published.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <returns>Facebook identifier of the new post.</returns>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.DeletePostOnFacebookPage(System.String,System.String,System.String)">
            <summary>
            Deletes the post on the Facebook page.
            </summary>
            <param name="postId">Facebook (external) identifier of the post.</param>
            <param name="pageAccessToken">Access token that will be used for deleting the post.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
            <exception cref="T:System.Exception">Exception is thrown if the post could not be deleted.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.ParseOAuthAccessToken(System.String)">
            <summary>
            Parses an OAuth access token in JSON format to <see cref="T:CMS.SocialMarketing.OAuthAccessToken"/>.
            </summary>
            <param name="oAuthAccessToken">OAuth access token JSON string.</param>
            <returns>Parsed token.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.GetPageAccessToken(System.String,System.String,System.String)">
            <summary>
            <para>
            Downloads account info from https://graph.facebook.com/me/accounts/ and finds page access token in it.
            </para>
            <para>
            Returns null if page access token could not be retrieved.
            </para>
            </summary>
            <param name="accessToken">Application access token acquired via login bounce.</param>
            <param name="pageId">Facebook page identifier to find page access token for.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.RetrieveFacebookInsightsPage(System.String,System.String,System.String)">
            <summary>
            Retrieves a single page of Facebook Insights via direct link <paramref name="insightsDirectPageUrl"/>.
            Most of Facebook's responses are paginated by default, the direct link can be obtained from the response on request for insights initial page.
            See http://developers.facebook.com/docs/graph-api/using-graph-api#paging for more details.
            </summary>
            <param name="insightsDirectPageUrl">The Facebook Graph API endpoint that will return the page of insights data.</param>
            <param name="accessToken">Access token for Facebook object.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <returns>Facebook Graph API response.</returns>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.RetrieveFacebookInsightsInitialPage(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Retrieves the initial page of Facebook Insights for object with given Facebook object ID.
            The response may contain a link to the next page of data as described in http://developers.facebook.com/docs/graph-api/using-graph-api#paging.
            </summary>
            <param name="objectId">Facebook object ID.</param>
            <param name="metrics">Metrics to be included in result data.</param>
            <param name="accessToken">Access token for Facebook object.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <param name="since">A date that points to the start of the range of time-based data.</param>
            <param name="period">The aggregation period for all requested <paramref name="metrics"/>. Shrinks the response size, recommended to use only when all metrics use the same period.</param>
            <returns>Facebook Graph API response.</returns>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.RetrieveFacebookInsightsInitialPage(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Retrieves Facebook Insights for objects with given Facebook object IDs.
            The response may contain a link to the next page of data as described in http://developers.facebook.com/docs/graph-api/using-graph-api#paging.
            </summary>
            <param name="ids">Facebook object IDs.</param>
            <param name="metrics">Metrics to be retrieved.</param>
            <param name="accessToken">Access token for Facebook objects.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <param name="since">A date that points to the start of the range of time-based data.</param>
            <param name="period">The aggregation period for all requested <paramref name="metrics"/>. Shrinks the response size, recommended to use only when all metrics use the same period.</param>
            <returns>Facebook Graph API response.</returns>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.RetrieveFacebookCommentsSummary(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Retrieves Facebook Comments for objects with given Facebook object IDs.
            </summary>
            <param name="ids">Facebook object IDs.</param>
            <param name="accessToken">Access token for Facebook objects.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <returns>Facebook Graph API response.</returns>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.RetrieveFacebookLikesSummary(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Retrieves Facebook Likes for objects with given Facebook object IDs.
            </summary>
            <param name="ids">Facebook object IDs.</param>
            <param name="accessToken">Access token for Facebook objects.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <returns>Facebook Graph API response.</returns>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.PublishPostOnFacebookPageInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Publishes the new post on the Facebook page and returns the Facebook post ID.
            </summary>
            <param name="pageId">Facebook's page identifier. Post will be published on that page.</param>
            <param name="pageAccessToken">Access token that will be used for publishing on the page.</param>
            <param name="postText">Text of the post that will be published.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <returns>Facebook identifier of the new post.</returns>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.DeletePostOnFacebookPageInternal(System.String,System.String,System.String)">
            <summary>
            Deletes the post on the Facebook page.
            </summary>
            <param name="postId">Facebook (external) identifier of the post.</param>
            <param name="pageAccessToken">Access token that will be used for deleting the post.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
            <exception cref="T:System.Exception">Exception is thrown if the post could not be deleted.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.ParseOAuthAccessTokenInternal(System.String)">
            <summary>
            Parses an OAuth access token in JSON format to <see cref="T:CMS.SocialMarketing.OAuthAccessToken"/>.
            </summary>
            <param name="oAuthAccessToken">OAuth access token JSON string.</param>
            <returns>Parsed token.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.GetPageAccessTokenInternal(System.String,System.String,System.String)">
            <summary>
            <para>
            Downloads account info from https://graph.facebook.com/me/accounts/ and finds page access token in it.
            </para>
            <para>
            Returns null if page access token could not be retrieved.
            </para>
            </summary>
            <param name="accessToken">Application access token acquired via login bounce.</param>
            <param name="pageId">Facebook page identifier to find page access token for.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.EnsureAdditionalInsightsQueryParameters(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Adds optional Facebook query parameters to the <paramref name="url"/> to adjust the Facebook Insights API request.
            </summary>
            <param name="url">URL for GET request.</param>
            <param name="since">A date that points to the start of the range of time-based data.</param>
            <param name="period">The aggregation period for all requested metrics. Shrinks the response size, recommended to use only when all metrics use the same period.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.GetFacebookResponse(System.String,System.String,System.String)">
            <summary>
            Gets Facebook Graph API response for given URL and access token.
            </summary>
            <param name="url">URL for GET request.</param>
            <param name="accessToken">Access token for request.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
            <returns>Facebook Graph API response.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.GetPageAccessTokenFromAccountsInfo(System.String,System.String)">
            <summary>
            Finds access token for page account in account information stored in serialized array of json objects.
            </summary>
            <param name="json">Account info listed from https://graph.facebook.com/me/accounts</param>
            <param name="pageId">Facebook page identifier</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookHelper.HasRequestSucceeded(Facebook.JsonObject)">
            <summary>
            Checks whether a Facebook request succeeded. The Facebook response is in JSON format. 
            </summary>
            <param name="response">Facebook response</param>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookPageAccessTokenData">
            <summary>
            Represents information about a Facebook page access token.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPageAccessTokenData.AccessToken">
            <summary>
            Access token.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPageAccessTokenData.Expiration">
            <summary>
            Date and time when the access token expires (UTC).
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPageAccessTokenData.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PageAccessTokenData structure.
            </summary>
            <param name="accessToken">Access token.</param>
            <param name="expiration">Date and time when the access token expires.</param>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookPostInfo">
            <summary>
            Represents a Facebook post.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPostInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPostInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostFacebookAccountID">
            <summary>
            Gets or sets the identifier of the Facebook account (page) object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostCampaignID">
            <summary>
            Gets or sets the campaign ID the Facebook post belongs to.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostPostAfterDocumentPublish">
            <summary>
            Indicates whether the post has to be posted to Facebook after the related document gets published.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostDocumentGUID">
            <summary>
            Gets or sets the document GUID the Facebook post belongs to.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostIsCreatedByUser">
            <summary>
            Indicates whether the post was created by user using autopost form control or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostText">
            <summary>
            Gets or sets the text content of the Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostExternalID">
            <summary>
            Gets or sets the Facebook ID of the Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostPublishedDateTime">
            <summary>
            Gets or sets the date and time when the Facebook post was published on Facebook page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostScheduledPublishDateTime">
            <summary>
            Gets or sets the date and time when the Facebook post is scheduled for publishing on Facebook page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostErrorCode">
            <summary>
            Gets or sets the code of the error that occurred while publishing the Facebook post.
            Positive numbers are Facebook's error codes, negative numbers are our custom error codes.
            <see cref="F:CMS.SocialMarketing.FacebookPostInfoProvider.ERROR_CODE_UNKNOWN_ERROR"/> Unknown error.
            <see cref="F:CMS.SocialMarketing.FacebookPostInfoProvider.ERROR_CODE_INVALID_ACCOUNT"/> Account doesn't exist or it is not valid.
            <see cref="F:CMS.SocialMarketing.FacebookPostInfoProvider.ERROR_CODE_DOCUMENT_NOT_EXIST"/> Related document doesn't exist.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostErrorSubcode">
            <summary>
            Gets or sets the subcode of the error that occurred while publishing the Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostURLShortenerType">
            <summary>
            Gets or sets the type of the URL shortener that will be used to shorten links in this Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightPeopleReached">
            <summary>
            Gets or sets the number of people this post reached.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightLikesFromPage">
            <summary>
            Gets or sets the number of likes this post has from the page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightCommentsFromPage">
            <summary>
            Gets or sets the number of comments this post has from the page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightSharesFromPage">
            <summary>
            Gets or sets the number of shares this post has from the page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightLikesTotal">
            <summary>
            Gets or sets the number of likes this post has from both the page and all its shares.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightCommentsTotal">
            <summary>
            Gets or sets the number of comments this post has from both the page and all its shares.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightNegativeHidePost">
            <summary>
            Gets or sets the number of negative actions that leaded to hide the post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightNegativeHideAllPosts">
            <summary>
            Gets or sets the number of negative actions that leaded to hide the post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightNegativeReportSpam">
            <summary>
            Gets or sets the number of negative actions that leaded to report the post as spam.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightNegativeUnlikePage">
            <summary>
            Gets or sets the number of negative actions that leaded to unlike the page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostInsightsLastUpdated">
            <summary>
            Gets or sets date and time when post insights were successfully retrieved.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.IsPublished">
            <summary>
            Indicates whether the post is published or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.IsFaulty">
            <summary>
            Indicates whether the post is faulty (there was an error when publishing the post or post is scheduled and was not published at proper time) or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.IsEditable">
            <summary>
            Indicates whether the post can be edited or not. Faulty or published posts cannot be edited.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostGUID">
            <summary>
            Gets or sets the globally unique identifier of the Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostSiteID">
            <summary>
            Gets or sets the site identifier of the Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostLastModified">
            <summary>
            Gets or sets the timestamp of the Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.FacebookPostID">
            <summary>
            Gets or sets the identifier of the Facebook post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookPostInfo.ObjectDisplayName">
            <summary>
            Gets or sets the display name of the Facebook post.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfo.DeleteObject">
            <summary>
            Deletes this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfo.#ctor">
            <summary>
            Initializes a new instance of the FacebookPostInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the FacebookPostInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookPostInfoProvider">
            <summary>
            Provides management of Facebook posts.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPostInfoProvider.ERROR_CODE_UNKNOWN_ERROR">
            <summary>
            Error code represents unknown error when publishing the post.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPostInfoProvider.ERROR_CODE_INVALID_ACCOUNT">
            <summary>
            Error code represents unexpected error with Facebook account (account doesn't exist or its access token isn't valid).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPostInfoProvider.ERROR_CODE_DOCUMENT_NOT_EXIST">
            <summary>
            Error code represents the post belongs to the document that doesn't exist.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPostInfoProvider.POST_DELAY_TOLERANCE">
            <summary>
            Scheduled posts which are late on publishing for more than POST_DELAY_TOLERANCE are reported as faulty.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookPostInfoProvider.IMMEDIATE_PUBLISH_TOLERANCE">
            <summary>
            Post publishing tolerance interval - posts published within (now + IMMEDIATE_PUBLISH_TOLERANCE) are published immediately as if no delay was set.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the FacebookPostInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPosts">
            <summary>
            Returns a query for all the FacebookPostInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostInfo(System.Int32)">
            <summary>
            Retrieves a Facebook post with the specified identifier, and returns it.
            </summary>
            <param name="postId">Facebook post identifier.</param>
            <returns>A Facebook post with the specified identifier, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostInfo(System.Guid)">
            <summary>
            Returns FacebookPostInfo with specified GUID.
            </summary>
            <param name="guid">FacebookPostInfo GUID</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.SetFacebookPostInfo(CMS.SocialMarketing.FacebookPostInfo)">
            <summary>
            Updates or creates the specified Facebook post.
            </summary>
            <param name="post">Facebook post to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.DeleteFacebookPostInfo(CMS.SocialMarketing.FacebookPostInfo)">
            <summary>
            Deletes the specified Facebook post. If the post is published on the Facebook, it will be deleted there first.
            </summary>
            <param name="post">Facebook post to be deleted.</param>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
            <exception cref="T:System.Exception">Exception is thrown if the Facebook account doesn't exist or its access token is invalid or post could not be deleted from Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.DeleteFacebookPostInfo(System.Int32)">
            <summary>
            Deletes the specified Facebook post. If the post is published on the Facebook, it will be deleted there first.
            </summary>
            <param name="postId">Facebook post identifier.</param>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
            <exception cref="T:System.Exception">Exception is thrown if the Facebook account doesn't exist or its access token is invalid or post could not be deleted from Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPosts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the FacebookPostInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostInfosByAccountId(System.Int32)">
            <summary>
            Retrieves an object query of Facebook posts for the specified Facebook account (page) identifier, and returns it.
            </summary>
            <param name="facebookAccountId">Facebook account (page) identifier.</param>
            <returns>An object query of Facebook posts for the specified account (page).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostInfosByDocumentGuid(System.Guid,System.Int32)">
            <summary>
            Retrieves an object query of Facebook posts for the specified document identifier, and returns it.
            </summary>
            <param name="documentGuid">Document identifier.</param>
            <param name="documentSiteId">Document site identifier.</param>
            <returns>An object query of Facebook posts for the specified document.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.PublishFacebookPost(System.Int32)">
            <summary>
            Publishes the Facebook post on the appropriate Facebook page in proper time.
            Uses scheduler for future posts.
            When modifying scheduled posts, always call the <see cref="M:CMS.SocialMarketing.FacebookPostInfoProvider.TryCancelScheduledPublishFacebookPost(System.Int32)"/> first.
            </summary>
            <seealso cref="M:CMS.SocialMarketing.FacebookPostInfoProvider.TryCancelScheduledPublishFacebookPost(System.Int32)"/>
            <seealso cref="M:CMS.SocialMarketing.FacebookPostInfoProvider.TryCancelScheduledPublishFacebookPost(CMS.SocialMarketing.FacebookPostInfo)"/>
            <param name="postInfoId">Identifier of the FacebookPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to Facebook or the account is not valid.</exception>
            <exception cref="T:Facebook.FacebookApiException">When something in communication with Facebook goes wrong.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.TryCancelScheduledPublishFacebookPost(System.Int32)">
            <summary>
            Tries to cancel scheduled publish of Facebook post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.FacebookPostInfoProvider.PublishFacebookPost(System.Int32)"/>.
            (Has to be called before modification since Facebook does not allow published posts to be modified).
            There is no need to call this method when deleting a post since posts can be deleted even after publication.
            </summary>
            <param name="postInfoId">Identifier of the FacebookPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled, false if the post has already been published.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.TryCancelScheduledPublishFacebookPost(CMS.SocialMarketing.FacebookPostInfo)">
            <summary>
            Tries to cancel scheduled publish of Facebook post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.FacebookPostInfoProvider.PublishFacebookPost(System.Int32)"/>.
            (Has to be called before modification since Facebook does not allow published posts to be modified).
            There is no need to call this method when deleting a post since posts can be deleted even after publication.
            </summary>
            <param name="postInfo">The FacebookPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled, false if the post has already been published.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetPostPublishStateMessage(CMS.SocialMarketing.FacebookPostInfo,CMS.Base.IUserInfo,CMS.Base.ISiteInfo,System.Boolean)">
            <summary>
            Gets localized message that describes the post's publish state.
            </summary>
            <param name="post">Facebook post.</param>
            <param name="user">User whose time zone will be used when formating date time information.</param>
            <param name="site">Site whose time zone will be used when formating date time information.</param>
            <param name="shortMessage">Indicates if short message has to be used instead of detail message.</param>
            <returns>Localized status message.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostInfosWithOutdatedInsights(System.Int32)">
            <summary>
            Retrieves an object query of Facebook posts which has outdated insights for the specified Facebook account (page) identifier, and returns it.
            Insights are considered outdated when they haven't been updated today.
            </summary>
            <param name="facebookAccountId">Facebook account (page) identifier.</param>
            <returns>An object query of Facebook posts which has outdated insights for the specified account (page).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.PublishFacebookPostToFacebook(System.Int32)">
            <summary>
            Publishes the Facebook post on the appropriate Facebook page immediately.
            </summary>
            <param name="postInfoId">Identifier of the FacebookPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to Facebook or the account is not valid.</exception>
            <exception cref="T:Facebook.FacebookApiException">When something in communication with Facebook goes wrong.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.DeleteInfo(CMS.SocialMarketing.FacebookPostInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the FacebookPostInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostInfosByAccountIdInternal(System.Int32)">
            <summary>
            Retrieves an object query of Facebook posts for the specified Facebook account (page) identifier, and returns it.
            </summary>
            <param name="facebookAccountId">Facebook account (page) identifier.</param>
            <returns>An object query of Facebook posts for the specified account (page).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostInfosByDocumentGuidInternal(System.Guid,System.Int32)">
            <summary>
            Retrieves an object query of Facebook posts for the specified document identifier, and returns it.
            </summary>
            <param name="documentGuid">Document identifier.</param>
            <param name="documentSiteId">Document site identifier.</param>
            <returns>An object query of Facebook posts for the specified document.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.PublishFacebookPostInternal(System.Int32)">
            <summary>
            Publishes the Facebook post on the appropriate Facebook page in proper time.
            Uses scheduler for future posts.
            </summary>
            <param name="postInfoId">Identifier of the FacebookPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to Facebook or the account is not valid.</exception>
            <exception cref="T:Facebook.FacebookApiException">When something in communication with Facebook goes wrong.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.TryCancelScheduledPublishFacebookPostInternal(CMS.SocialMarketing.FacebookPostInfo)">
            <summary>
            Tries to cancel scheduled publish of Facebook post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.FacebookPostInfoProvider.PublishFacebookPost(System.Int32)"/>.
            (Has to be called before modification since Facebook does not allow published posts to be modified).
            There is no need to call this method when deleting a post since posts can be deleted even after publication.
            </summary>
            <param name="postInfo">The FacebookPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled (or neither post or scheduled task does not exist), false if the post has already been published (or the task is already running).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.PublishFacebookPostToFacebookInternal(System.Int32)">
            <summary>
            Publishes the Facebook post on the appropriate Facebook page. Throws an exception if something goes wrong.
            </summary>
            <param name="postInfoId">Identifier of the FacebookPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to Facebook or the account is not valid.</exception>
            <exception cref="T:Facebook.FacebookApiException">When something in communication with Facebook goes wrong.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetPostPublishStateMessageInternal(CMS.SocialMarketing.FacebookPostInfo,CMS.Base.IUserInfo,CMS.Base.ISiteInfo,System.Boolean)">
            <summary>
            Gets localized message that describes the post's publish state.
            </summary>
            <param name="post">Facebook post.</param>
            <param name="user">User whose time zone will be used when formating date time information.</param>
            <param name="site">Site whose time zone will be used when formating date time information.</param>
            <param name="shortMessage">Indicates if short message has to be used instead of detail message.</param>
            <returns>Localized status message.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookPostInfoProvider.GetFacebookPostErrorMessage(System.Int32)">
            <summary>
            Gets localized error message that describes the given Facebook's error code.
            </summary>
            <param name="errorCode">Error code that Facebook returned.</param>
            <returns>Localized error message.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookInsightsCollectionTask">
            <summary>
            Handles Facebook Insights analytics data collection when activated by the scheduler.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsCollectionTask.TASK_CODENAME_PREFIX">
            <summary>
            Scheduled task name prefix for Facebook Insights.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsCollectionTask.TASK_CODENAME_FORMAT">
            <summary>
            Scheduled task name format for Facebook Insights.
            Usage: <code>var completeTaskCodeName = String.Format(FacebookInsightsCollectionTask.TASK_CODENAME_FORMAT, {FacebookApplicationInfoID});</code>
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsCollectionTask.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes scheduled analytics data collection.
            The task should be executed once an hour.
            </summary>
            <param name="taskInfo">Contains task data with information related to the Facebook application.</param>
            <returns>Null on success, error description otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsCollectionTask.IsFeatureAvailable(CMS.Scheduler.TaskInfo)">
            <summary>
            Checks whether Insights collection is available.
            </summary>
            <param name="taskInfo">Task info.</param>
            <returns>True if Insights collection is available, false otherwise.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookInsightsCollectionTaskData">
            <summary>
            Represents data of FacebookInsightsCollectionTask.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookInsightsCollectionTaskData.ApplicationId">
            <summary>
            Application ID to which the task belongs.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookInsightsCollectionTaskData.FacebookInsightsState">
            <summary>
            Insights state.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsCollectionTaskData.ToXmlString(CMS.SocialMarketing.FacebookInsightsCollectionTaskData)">
            <summary>
            Gets XML string representation of given taks data object.
            </summary>
            <param name="data">Data to serialize.</param>
            <returns>XML string representation.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsCollectionTaskData.FromXmlString(System.String)">
            <summary>
            Creates task data object from XML string representation.
            </summary>
            <param name="xmlString">XML string representation.</param>
            <returns>Task data object.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsCollectionTaskData.#ctor">
            <summary>
            Creates empty task data.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsCollectionTaskData.#ctor(System.Int32)">
            <summary>
            Creates task data with given application ID.
            </summary>
            <param name="applicationId">Application ID.</param>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookInsightsHelper">
            <summary>
            Provides methods for processing Facebook Insights.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.INSIGHT_CODENAME_PREFIX">
            <summary>
            Prefix used for Facebook Insights code names.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.scalarPageInsights">
            <summary>
            Array containing pairs (name, period) of scalar Insights for Facebook page.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.structuredPageInsights">
            <summary>
            Array containing pairs (name, period) of structured Insights for Facebook page.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.mInsightsTranslationToOldNames">
            <summary>
            Dictionary containing the new name of insights metric as key and its old name as value.
            Covers the breaking changes in metric names in Facebook API.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.POSTS_INSIGHTS_METRICS">
            <summary>
            Collection of metrics to be requested during posts retrieval.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.SKIP_COLLECTION_TIME">
            <summary>
            How long after successful Facebook Insights collection is not necessary to ask Facebook API for new Insights.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.EMPTY_STRUCTURED_NAME">
            <summary>
            Facebook response may contain structured values with zero length key
            (occured i.e. in page_fans_locale_city), which breaks the query
            that displays the graph (results in empty column name).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsHelper.POST_INSIGHTS_BATCH_SIZE">
            <summary>
            How many posts are processed by one Facebook Graph API request.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.ProcessFacebookAccountInsightsByApplication(System.Int32,CMS.SocialMarketing.FacebookInsightsState)">
            <summary>
            Processes Facebook Insights for all pages within given application.
            Skips Insights processing, if Facebook API response does not contain values newer than lastCollectedDay.
            Writes to log if failure during Insights collection occurs, but continues collecting Insights of other accounts (pages).
            </summary>
            <param name="applicationId">ID of Facebook application of which the pages will be processed</param>
            <param name="insightsState">Contains Insights collection state.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.ProcessFacebookAccountInsights(CMS.SocialMarketing.FacebookAccountInfo,CMS.SocialMarketing.FacebookInsightsState)">
            <summary>
            Retrieves Facebook Insights for given account (page).
            After successful collection, the next collection time is not until (Now + SKIP_COLLECTION_TIME).
            Collection state is loaded from and stored to insightsState.
            </summary>
            <param name="account">Facebook account (page).</param>
            <param name="insightsState">Contains Insights collection state.</param>
            <exception cref="T:Facebook.FacebookApiException">FacebookApiException is thrown when an error occurs while communicating with Facebook.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.ProcessInsightsPage(CMS.SocialMarketing.FacebookAccountInfo,System.String[][],CMS.SocialMarketing.FacebookInsightsStateItem,System.String)">
            <summary>
            Processes a single page of Insights data and returns the Facebook Graph API endpoint that will return the next page of data.
            If the result is <c>null</c>, the processed page was the last page of data.
            http://developers.facebook.com/docs/graph-api/using-graph-api#paging
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.ProcessBothFacebookInsights(CMS.SocialMarketing.FacebookAccountInfo,CMS.SocialMarketing.FacebookInsightsParser,System.DateTime)">
            <summary>
            Processes scalar and structured Facebook page insights.
            </summary>
            <param name="account">Facebook account (page).</param>
            <param name="insightsParser">Insights parser with Facebook API response.</param>
            <param name="endTime">End time of values to process.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.GetOriginalMetricName(System.String)">
            <summary>
            A helper method for handling breaking changes in Facebook insight metric names - translates the name of insight metric to its original name (as in Kentico DB).
            Insight reports in Kentico rely on old metric names, plus there may be some already collected statistics under the old names.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.ProcessScalarFacebookInsights(CMS.SocialMarketing.FacebookAccountInfo,CMS.SocialMarketing.FacebookInsightsParser,System.DateTime)">
            <summary>
            Processes scalar Facebook page insights.
            </summary>
            <param name="account">Facebook account (page).</param>
            <param name="insightsParser">Insights parser with Facebook API response.</param>
            <param name="endTime">End time of values to process.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.ProcessStructuredFacebookInsights(CMS.SocialMarketing.FacebookAccountInfo,CMS.SocialMarketing.FacebookInsightsParser,System.DateTime)">
            <summary>
            Processes structured Facebook page insights.
            </summary>
            <param name="account">Facebook account (page).</param>
            <param name="insightsParser">Insights parser with Facebook API response.</param>
            <param name="endTime">End time of values to process.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.ProcessFacebookPostsInsights(CMS.SocialMarketing.FacebookAccountInfo)">
            <summary>
            Retrieves Facebook Insights for all posts of given account (page).
            Insights are retrieved once a day.
            </summary>
            <param name="account">Facebook account (page).</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.UpdateFacebookPostsBatchInsights(System.Collections.Generic.List{CMS.SocialMarketing.FacebookPostInfo},System.String,System.String)">
            <summary>
            Retrieves Facebook Insights for given posts. Insights are retrieved by one batch request for each type of insight.
            </summary>
            <param name="postsBatch">Batch of posts.</param>
            <param name="accessToken">Access token for posts.</param>
            <param name="appSecret">Facebook application secret key for improving security.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.GetOrCreateInsight(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the insight matching the specified criteria, and returns it. Creates a new one, if none found.
            </summary>
            <param name="codeName">The insight code name.</param>
            <param name="externalId">The external identifier of the object associated with the insight.</param>
            <param name="periodType">The type of the time period that the insight represents.</param>
            <param name="valueName">>The value name. Pass NULL, if not named.</param>
            <returns>The insight matching the specified criteria.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.FacebookEndTimeToPeriodDateTime(System.DateTime)">
            <summary>
            Converts Facebook Insight's end time (midnight after Insight collection) to some time from the day 
            the Insight relates to.
            </summary>
            <param name="facebookEndTime">Facebook Insight's end time.</param>
            <returns>Date time from the day the Insight relates to.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsHelper.GetInsightIntegerValue(System.Object,System.String)">
            <summary>
            Gets integer value from insight. Use parameter valueName when insight value is structured. Returns 0 if insight doesn't contain requested value.
            </summary>
            <param name="insight">Insight object.</param>
            <param name="valueName">Name of structured value. Value is considered as scalar if not given.</param>
            <returns>Returns insight's integer value or 0 if value couldn't be retrieved.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookInsightsParser">
            <summary>
            Parses Facebook API response for Insights request.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsParser.mResponseData">
            <summary>
            Contains Facebook Graph API response data section, or null if not present.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsParser.mLatestValueEndTime">
            <summary>
            Cache for latest end time which occurs in data.values.value of the response.
            Null value means the value has not been cached yet.
            DateTime.MinValue means the end time is not present in response (data section is probably empty).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.FacebookInsightsParser.mPagingData">
            <summary>
            Contains Facebook Graph API response paging section, or null if not present.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.#ctor(System.Object)">
            <summary>
            Creates a new instance of parser for given API response.
            </summary>
            <param name="facebookApiReponse">Facebook API response.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.HasData">
            <summary>
            Tells you whether Facebook response contains data section with any data.
            </summary>
            <returns>True if data section exists and contains any data, false otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.GetLongValue(System.String,System.String,System.DateTime)">
            <summary>
            Gets long value of specified Insight.
            </summary>
            <param name="name">Name of the Insight.</param>
            <param name="period">Period of the Insight.</param>
            <param name="endTime">End time of the Insight.</param>
            <returns>Long value, or null if not present.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.GetStructuredValue(System.String,System.String,System.DateTime)">
            <summary>
            Gets all key-value pairs of specified Insight.
            Returns null, if specified Insight is not contained.
            </summary>
            <param name="name">Name of the Insight.</param>
            <param name="period">Period of the Insight.</param>
            <param name="endTime">End time of the Insight.</param>
            <returns>Structured value (string, object), or null if not present.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.GetLatestDateTime(System.String,System.String)">
            <summary>
            Gets latest date time contained in data.values.end_date section.
            </summary>
            <param name="name">Name of the Insight.</param>
            <param name="period">Period of the Insight.</param>
            <returns>Latest date or DateTime.MinValue, if not present.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.GetDateTimes(System.String[][])">
            <summary>
            Gets set of DateTime objects describing available end_time values.
            The set is union of all end_time values for given namesAndPeriods.
            </summary>
            <param name="namesAndPeriods">Array of pairs (name, period) for which to return DateTime</param>
            <returns>Set of DateTime with available end_time values.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.GetNextPageUrl">
            <summary>
            Returns the Facebook Graph API endpoint that will return the next page of data.
            See http://developers.facebook.com/docs/graph-api/using-graph-api#paging for more details.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.FacebookDateTimeStringToDateTime(System.String)">
            <summary>
            Converts Facebook's date format (i.e. "2013-08-02T07:00:00+0000") to DateTime.
            </summary>
            <param name="dateTimeString">Facebook's date.</param>
            <returns>DateTime, or null if given string could not be converted</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsParser.GetValueFromValues(System.Object,System.Nullable{System.DateTime})">
            <summary>
            Gets value with certain end time from values section of the response.
            </summary>
            <param name="valuesSection">data.values section from the Facebook response</param>
            <param name="endTime">End time to search for</param>
            <returns>Value from values section with corresponding end time, or null if not present</returns>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookInsightsState">
            <summary>
            Represents state of Facebook Insights collection.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookInsightsState.StateItemArrayList">
            <summary>
            Contains FacebookInsightsStateItem for purpose of serialization.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsState.ContainsStateItem(System.String)">
            <summary>
            Tells you whether FacebookInsightsState contains item with given object ID.
            </summary>
            <param name="objectId">Object ID of FacebookinsightsStateItem.</param>
            <returns>True if objectId is contained, false otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsState.GetOrCreateStateItem(System.String)">
            <summary>
            Gets FacebookInsightsStateItem with given object ID. Creates one, if not exists.
            </summary>
            <param name="objectId">Object ID of FacebookinsightsStateItem to get.</param>
            <returns>FacebookinsightsStateItem with given object ID.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.FacebookInsightsStateItem">
            <summary>
            Represents state of one object for which Facebook Insights are collected.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookInsightsStateItem.ObjectId">
            <summary>
            Object ID to which the state item belongs.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookInsightsStateItem.CollectedEndTime">
            <summary>
            The latest collected end time.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.FacebookInsightsStateItem.SkipCollectionUntil">
            <summary>
            Till when the collection of this object ID's Insights can be skipped.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsStateItem.#ctor">
            <summary>
            Creates empty FacebookInsightsStateItem.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsStateItem.#ctor(System.String)">
            <summary>
            Creates FacebookInsightsStateItem with all properties set to null except object ID.
            </summary>
            <param name="objectId">Object ID of the Insights object.</param>
        </member>
        <member name="M:CMS.SocialMarketing.FacebookInsightsStateItem.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Create FacebookInsightsStateItem with given properties set.
            </summary>
            <param name="objectId">Object ID of the Insights object.</param>
            <param name="collectedEndTime">Latest end time which has been retrieved from Facebook for this object's Insights.</param>
            <param name="skipCollectionUntil">Until when the collection of new Insights can be skipped.</param>
        </member>
        <member name="T:CMS.SocialMarketing.OAuthAccessToken">
            <summary>
            Represents a response for an OAuth access token request.
            </summary>
            <remarks>
            The response has be following format:
            <code>
            {
                "access_token": {access-token}, 
                "token_type": {type},
                "expires_in":  {seconds-til-expiration}
            }
            </code>
            See https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow#exchangecode for details.
            </remarks>
        </member>
        <member name="P:CMS.SocialMarketing.OAuthAccessToken.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.OAuthAccessToken.TokenType">
            <summary>
            Gets or sets the access token type.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.OAuthAccessToken.ExpiresIn">
            <summary>
            Gets or sets the number of seconds till the access token expires.
            </summary>
            <remarks>
            The token expiration value is 0 for access tokens which never expire.
            </remarks>
        </member>
        <member name="T:CMS.SocialMarketing.InsightInfo">
            <summary>
            Represents an insight for social marketing.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.InsightInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.InsightInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.InsightInfo.InsightCodeName">
            <summary>
            Gets or sets the code name of the Insight.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.InsightInfo.InsightExternalID">
            <summary>
            Gets or sets the external ID of the Insight.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.InsightInfo.InsightValueName">
            <summary>
            Gets or sets the value name of the Insight.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.InsightInfo.InsightPeriodType">
            <summary>
            Gets or sets the period typeof the Insight.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.InsightInfo.InsightID">
            <summary>
            Gets or sets the identifier of the Insight.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfo.#ctor">
            <summary>
            Initializes a new instance of the InsightInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the InsightInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.InsightInfoProvider">
            <summary>
            Provides management of social marketing insights.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the InsightInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.GetInsight(System.Int32)">
            <summary>
            Retrieves the insight with the specified identifier, and returns it.
            </summary>
            <param name="insightId">The insight identifier.</param>
            <returns>The insight with the specified identifier, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.GetInsight(System.String,System.String,System.String)">
            <summary>
            Retrieves the insight matching the specified criteria, and returns it.
            </summary>
            <param name="codeName">The insight code name.</param>
            <param name="externalId">The external identifier of the object associated with the insight.</param>
            <param name="periodType">The type of the time period that the insight represents.</param>
            <returns>The insight matching the specified criteria, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.GetInsight(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the partial insight matching the specified criteria, and returns it.
            </summary>
            <param name="codeName">The insight code name.</param>
            <param name="externalId">The external identifier of the object associated with the insight.</param>
            <param name="periodType">The type of the time period that the insight represents.</param>
            <param name="valueName">The value name.</param>
            <returns>The partial insight matching the specified criteria, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.SetInsight(CMS.SocialMarketing.InsightInfo)">
            <summary>
            Creates or updates the specified insight.
            </summary>
            <param name="insight">The insight to create or update.</param>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.UpdateHits(CMS.SocialMarketing.InsightInfo,System.DateTime,System.Func{CMS.SocialMarketing.InsightInfo,System.DateTime,System.Int64})">
            <summary>
            Stores the value of the specified insight and comuptes the aggregated values.
            </summary>
            <param name="insight">The insight to store the value for.</param>
            <param name="periodDateTime">The local date and time that applies to the specified value.</param>
            <param name="retrieveHits">The function that returns the value for the specified parameters.</param>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.UpdateHits(CMS.SocialMarketing.InsightInfo,System.DateTime,System.Int64)">
            <summary>
            Stores the value of the specified insight and comuptes the aggregated values.
            </summary>
            <param name="insight">The insight to store the value for.</param>
            <param name="periodDateTime">The local date and time that applies to the specified value.</param>
            <param name="hits">The value to store.</param>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.GetInsightInternal(System.String,System.String,System.String)">
            <summary>
            Retrieves the insight matching the specified criteria, and returns it.
            </summary>
            <param name="codeName">The insight code name.</param>
            <param name="externalId">The external identifier of the object associated with the insight.</param>
            <param name="periodType">The type of the time period that the insight represents.</param>
            <returns>The insight matching the specified criteria, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.GetInsightInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the partial insight matching the specified criteria, and returns it.
            </summary>
            <param name="codeName">The insight code name.</param>
            <param name="externalId">The external identifier of the object associated with the insight.</param>
            <param name="periodType">The type of the time period that the insight represents.</param>
            <param name="valueName">The value name.</param>
            <returns>The partial insight matching the specified criteria, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.UpdateHitsInternal(CMS.SocialMarketing.InsightInfo,System.DateTime,System.Func{CMS.SocialMarketing.InsightInfo,System.DateTime,System.Int64})">
            <summary>
            Stores the value of the specified insight and comuptes the aggregated values.
            </summary>
            <param name="insight">The insight to store the value for.</param>
            <param name="periodDateTime">The local date and time that applies to the specified value.</param>
            <param name="retrieveHits">The function that returns the value for the specified parameters.</param>
        </member>
        <member name="M:CMS.SocialMarketing.InsightInfoProvider.UpdateHitsInternal(CMS.SocialMarketing.InsightInfo,System.DateTime,System.Int64)">
            <summary>
            Stores the value of the specified insight and comuptes the aggregated values.
            </summary>
            <param name="insight">The insight to store the value for.</param>
            <param name="periodDateTime">The local date and time that applies to the specified value.</param>
            <param name="hits">The value to store.</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedIn.ILinkedInData">
            <summary>
            Represents data required to get LinkedIn access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.EditorId">
            <summary>
            Gets the editor id in order to set its value.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.ApiKey">
            <summary>
            Gets LinkedIn account api key.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.ApiSecret">
            <summary>
            Gets LinkedIn account api secret.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.Code">
            <summary>
            Gets LinkedIn code required to generate access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.Error">
            <summary>
            Gets the error message when access token was not retrieved.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.IsEmpty">
            <summary>
            Returns true when all of <see cref="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.ApiKey"/>, <see cref="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.ApiSecret"/>, <see cref="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.Code"/> are empty.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.UserDeniedAccess">
            <summary>
            Returns true when user does not allow access using LinkedIn page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.SettingsMissing">
            <summary>
            Returns true when one of <see cref="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.ApiKey"/> and <see cref="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.ApiSecret"/> is empty or if <see cref="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.Code"/> or <see cref="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.Error"/> are empty.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.ILinkedInData.AdditionalQueryParameters">
            <summary>
            Contains additional query parameters used when opening authorization page.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedIn.LinkedInAccessToken">
            <summary>
            Represents information about a LinkedIn user access token and its expiration date.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInAccessToken.AccessToken">
            <summary>
            Access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInAccessToken.Expiration">
            <summary>
            Date and time when the access token expires (UTC).
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInAccessToken.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the LinkedInAccessToken structure.
            </summary>
            <param name="accessToken">Access token.</param>
            <param name="expiration">Date and time when the access token expires.</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedIn.LinkedInAuthenticationHelper">
            <summary>
            LinkedIn helper class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInAuthenticationHelper.GetPurifiedUrl">
            <summary>
            Returns <see cref="P:CMS.Helpers.RequestContext.CurrentURL"/> with stripped OAuth parameters. 
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization">
            <summary>
            Provides authorization methods for LinkedIn API.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization.AUTHORIZATION_ENDPOINT">
            <summary>
            The authorization endpoint.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization.TOKEN_ENDPOINT">
            <summary>
            The access token endpoint.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization.#ctor(CMS.SocialMarketing.LinkedIn.ILinkedInData)">
            <summary>
            Creates a new instance of <see cref="T:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization"/>.
            </summary>
            <param name="data">Data required for LinkedIn authorization.</param>
            <throws>
            <see cref="T:System.ArgumentNullException"/> when data is null.
            </throws>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization.Authorize(System.Uri)">
            <summary>
            Performs authorization request to LinkedIn API.
            </summary>
            <param name="returnUrl">Url used for redirect once the LinkedIn access token request is received.</param>
            <seealso cref="M:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization.OpenAuthorizationPage(System.Uri)"/>
            <returns>Instance of <see cref="T:CMS.SocialMarketing.LinkedIn.LinkedInAccessToken"/> if request is valid.</returns>
            <throws>Exception when request in invalid.</throws>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInAuthorization.OpenAuthorizationPage(System.Uri)">
            <summary>
            Performs redirect to LinkedIn login page.
            </summary>
            <param name="returnUrl">Url used for redirect once the LinkedIn login form is submitted.</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedIn.LinkedInData">
            <summary>
            Represents data required to get LinkedIn access token.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInData.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CMS.SocialMarketing.LinkedIn.LinkedInData"/>.
            </summary>
            <remarks>
            Values <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.EditorId"/>, <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiKey"/> and <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiSecret"/> are retrieved from query string.
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInData.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:CMS.SocialMarketing.LinkedIn.LinkedInData"/>.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.EditorId">
            <summary>
            Gets the editor id in order to set its value.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiKey">
            <summary>
            Gets LinkedIn account api key.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiSecret">
            <summary>
            Gets LinkedIn account api secret.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.Code">
            <summary>
            Gets LinkedIn code required to generate access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.Error">
            <summary>
            Gets the error message when access token was not retrieved.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.IsEmpty">
            <summary>
            Returns true when all of <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiKey"/>, <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiSecret"/>, <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.Code"/> are empty.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.UserDeniedAccess">
            <summary>
            Returns true when user does not allow access using LinkedIn page.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.SettingsMissing">
            <summary>
            Returns true when one of <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiKey"/> and <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.ApiSecret"/> is empty or if <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.Code"/> or <see cref="P:CMS.SocialMarketing.LinkedIn.LinkedInData.Error"/> are empty.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedIn.LinkedInData.AdditionalQueryParameters">
            <summary>
            Contains additional query parameters used when opening authorization page.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedIn.LinkedInProvider">
            <summary>
            LinkedInProvider class
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedIn.LinkedInProvider.ACCESS_TOKEN_PAGE">
            <summary>
            Access token page.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedIn.LinkedInProvider.SESSION_KEY">
            <summary>
            Key for storing data in session.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInProvider.GetLinkedInData">
            <summary>
            Returns instance of <see cref="T:CMS.SocialMarketing.LinkedIn.ILinkedInData"/> retrieved from session or created from current request.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInProvider.Authorize(CMS.SocialMarketing.LinkedIn.ILinkedInData,System.Uri,CMS.SocialMarketing.LinkedIn.LinkedInAccessToken@)">
            <summary>
            Attempts to authorize client application.
            </summary>
            <param name="data">Data required for LinkedIn authorization.</param>
            <param name="returnUrl">Url used for redirect once the LinkedIn access token request is received.</param>
            <param name="token">If <c>true</c> is returned instance of <see cref="T:CMS.SocialMarketing.LinkedIn.LinkedInAccessToken"/> is available.</param>
            <returns>True when given data are valid, false otherwise</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedIn.LinkedInProvider.OpenAuthorizationPage(CMS.SocialMarketing.LinkedIn.ILinkedInData,System.Uri)">
            <summary>
            Performs redirect to LinkedIn login page.
            </summary>
            <param name="data">Data required for redirect.</param>
            <param name="returnUrl">Url used for redirect once the LinkedIn login form is submitted.</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.ApiResponse">
            <summary>
            Represents a response to LinkedIn API request.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ApiResponse.HttpStatusCode">
            <summary>
            Contains the HTTP status code of the response.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ApiResponse.ResponseBody">
            <summary>
            Contains the response body.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInternal.ApiResponse.#ctor(System.Net.HttpStatusCode,System.String,System.Net.WebHeaderCollection)">
            <summary>
            Creates a new instance of <see cref="T:CMS.SocialMarketing.LinkedInInternal.ApiResponse"/> class.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.CompaniesResponse">
            <summary>
            Represents a response body after searching companies.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompaniesResponse.CompanyProjectionList">
            <summary>
            List of companies.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.Company">
            <summary>
            Represents a LinkedIn company.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Company.ID">
            <summary>
            Company ID.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Company.Name">
            <summary>
            Company name.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.CompanyProjection">
            <summary>
            Represents a LinkedIn company projection.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompanyProjection.Company">
            <summary>
            Company.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompanyProjection.CompanyURN">
            <summary>
            Company URN.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.CompanyShareStatisticsRecord">
            /// <summary>
            Represents a company update statistic.
            See https://docs.microsoft.com/en-us/linkedin/marketing/integrations/community-management/organizations/share-statistics#schema for more information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompanyShareStatisticsRecord.CompanyURN">
            <summary>
            The organizational entity URN for which the statistics represents.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompanyShareStatisticsRecord.ShareURN">
            <summary>
            The share URN for describing individual share statistics. Is blank for aggregate share statistics.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompanyShareStatisticsRecord.UgcPost">
            <summary>
            The UGC Post URN for describing individual share statistics.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompanyShareStatisticsRecord.TimeRange">
            <summary>
            Time the statistics record is related to.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.CompanyShareStatisticsRecord.ShareStatisticsData">
            <summary>
            Share statistics during the specified time range.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.Error">
            <summary>
            Represents an error element which is usually returned as an API response in case of a protocol error.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Error.Status">
            <summary>
            HTTP status code of the response.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Error.Timestamp">
            <summary>
            Timestampe of the response.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Error.RequestId">
            <summary>
            Request identifier.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Error.ErrorCode">
            <summary>
            A subcode that further classifies the error.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Error.Message">
            <summary>
            A description of the error.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.FollowerGainStatisticsData">
            <summary>
            Follower gain statistics data. 
            See https://docs.microsoft.com/en-us/linkedin/marketing/integrations/community-management/organizations/follower-statistics#retrieve-time-bound-follower-statistics for more information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.FollowerGainStatisticsData.OrganicFollowerGain">
            <summary>
            Number of gained organic followers.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.FollowerGainStatisticsData.PaidFollowerGain">
            <summary>
            Number of gained paid followers.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.FollowerGainStatisticsRecord">
            <summary>
            Represents Time-Bound Follower Statistics.
            See https://docs.microsoft.com/en-us/linkedin/marketing/integrations/community-management/organizations/follower-statistics#retrieve-time-bound-follower-statistics for more information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.FollowerGainStatisticsRecord.TimeRange">
            <summary>
            Statistics contained in retrieved response.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.FollowerGainStatisticsRecord.FollowerGainStatisticsData">
            <summary>
            Gain statistics during the specified time range.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.FollowerGainStatisticsRecord.CompanyURN">
            <summary>
            Company URN.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.HistoricalFollowStatistics">
            <summary>
            Represents a historical follower statistics element which is usually returned as an API response to company followers statistics request.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.HistoricalFollowStatistics.FollowerGainStatisticsRecords">
            <summary>
            Statistics contained in retrieved response.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.HistoricalStatusUpdateStatistics">
            <summary>
            Represents a historical status update statistics element which is usually returned as an API response to company update statistics request.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.HistoricalStatusUpdateStatistics.CompanyShareStatisticsRecords">
            <summary>
            Statistics contained in retrieved response.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.Share">
            <summary>
            Represents a request body for publishing a new share. 
            See https://docs.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/share-on-linkedin#creating-a-share-on-linkedin for more information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Share.Author">
            <summary>
            The author of a share contains Person URN of the Member creating the share.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Share.LifecycleState">
            <summary>
            Defines the state of the share. For the purposes of creating a share, the lifecycleState will always be "PUBLISHED".
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Share.SpecificContent">
            <summary>
            Provides additional options while defining the content of the share.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Share.Visibility">
            <summary>
            Share's visibility.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.ShareApiResponse">
            <summary>
            Represents a response to LinkedIn API request contaioning unique ID of shared post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareApiResponse.ID">
            <summary>
            Gets the unique shared identifier.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInternal.ShareApiResponse.#ctor(System.Net.HttpStatusCode,System.String,System.Net.WebHeaderCollection)">
            <summary>
            Creates a new instance of <see cref="T:CMS.SocialMarketing.LinkedInInternal.ShareApiResponse"/> class.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.ShareCommentary">
            <summary>
            Represents the message content of the share.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareCommentary.Text">
            <summary>
            Text of share commentary.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.ShareContent">
            <summary>
            Represents the content of the share. 
            See https://docs.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/share-on-linkedin#share-content for more information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareContent.ShareCommentary">
            <summary>
            Provides the primary content for the share.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareContent.ShareMediaCategory">
            <summary>
            Represents the media assets attached to the share. 
            For Kentico integration, the only viable option is "NONE" - the share does not contain any media, and will only consist of text.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData">
            <summary>
            Share statistics data. 
            See https://docs.microsoft.com/en-us/linkedin/marketing/integrations/community-management/organizations/share-statistics#share-statistics-data-schema for more information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.ClickCount">
            <summary>
            Number of clicks.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.CommentCount">
            <summary>
            Number of comments.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.CommentMentionsCount">
            <summary>
            Number of mentions of the organizational entity in a comment across LinkedIn. The field does not have a value when individual share statistics are requested.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.Engagement">
            <summary>
            Engagement - Number of organic clicks, likes, comments, and shares over impressions [%].
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.ImpressionCount">
            <summary>
            Number of impressions.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.LikeCount">
            <summary>
            Number of likes. This field can become negative when members who liked a sponsored share later unlike it. The like is not counted since it is not organic, but the unlike is counted as organic.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.ShareCount">
            <summary>
            Number of shares.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.ShareMentionsCount">
            <summary>
            Number of mentions of the organizational entity in a share across LinkedIn. The field does not have a value when individual share statistics are requested.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.ShareStatisticsData.UniqueImpressionsCount">
            <summary>
            Count of unique member impressions.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.SpecificContent">
            <summary>
            Provides additional options while defining the content of the share.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.SpecificContent.ShareContent">
            <summary>
            The content of the share.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.TimeRange">
            <summary>
            Represents the time range for statistics.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.TimeRange.Start">
            <summary>
            Exclusive starting timestamp of when the query should begin (milliseconds since epoch) Queries from beginning of time when not set.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.TimeRange.End">
            <summary>
            Inclusive ending timestamp of when the query should end (milliseconds since epoch). Queries until current time when not set.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInternal.Visibility">
            <summary>
            Represents visibility setting used i.e. by shares.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInternal.Visibility.MemberNetworkVisibility">
            <summary>
            Visibility code.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInApiException">
            <summary>
            Thrown when protocol error in communication with LinkedIn API occurs.
            </summary>
            <remarks>
            The exception is ment for situations when the error condition arised at LinkedIn server, thus the <see cref="P:CMS.SocialMarketing.LinkedInApiException.HttpStatus"/> and <see cref="P:CMS.SocialMarketing.LinkedInApiException.ErrorCode"/> should always be available.
            Should not be used in situations when the root cause is local.
            </remarks>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApiException.HttpStatus">
            <summary>
            HTTP status code which was present in the API's HTTP response.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApiException.ErrorCode">
            <summary>
            Error code of the LinkedIn API response. Originates from the API response body.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiException.#ctor">
            <summary>
             Thrown when protocol error in communication with LinkedIn API occurs.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiException.#ctor(System.String)">
            <summary>
             Thrown when protocol error in communication with LinkedIn API occurs.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiException.#ctor(System.String,System.Exception)">
            <summary>
             Thrown when protocol error in communication with LinkedIn API occurs.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiException.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Thrown when protocol error in communication with LinkedIn API occurs.
            </summary>
            <param name="httpStatus">HTTP code of LinkedIn API response</param>
            <param name="errorCode">Error code of LinkedIn API response (originates from the API response body)</param>
            <param name="message">Exception message</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">
            <summary>
            Thrown when the LinkedIn API throttle limit is reached.
            The HTTP status code in such case is most certainly a 403.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiThrottleLimitException.#ctor">
            <summary>
            Thrown when the LinkedIn API throttle limit is reached.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiThrottleLimitException.#ctor(System.String)">
            <summary>
            Thrown when the LinkedIn API throttle limit is reached.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiThrottleLimitException.#ctor(System.String,System.Exception)">
            <summary>
            Thrown when the LinkedIn API throttle limit is reached.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiThrottleLimitException.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Thrown when the LinkedIn API throttle limit is reached.
            </summary>
            <param name="httpStatus">HTTP code of LinkedIn API response</param>
            <param name="errorCode">Error code of LinkedIn API response (originates from the API response body)</param>
            <param name="message">Exception message</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">
            <summary>
            Thrown when protocol error in communication with LinkedIn API has the root cause in not being authorized.
            The HTTP status code in such case is most certainly a 401.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiUnauthorizedException.#ctor">
            <summary>
             Thrown when protocol error in communication with LinkedIn API has the root cause in not being authorized.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiUnauthorizedException.#ctor(System.String)">
            <summary>
             Thrown when protocol error in communication with LinkedIn API has the root cause in not being authorized.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiUnauthorizedException.#ctor(System.String,System.Exception)">
            <summary>
             Thrown when protocol error in communication with LinkedIn API has the root cause in not being authorized.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApiUnauthorizedException.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Thrown when protocol error in communication with LinkedIn API has the root cause in not being authorized.
            </summary>
            <param name="httpStatus">HTTP code of LinkedIn API response</param>
            <param name="errorCode">Error code of LinkedIn API response (originates from the API response body)</param>
            <param name="message">Exception message</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInPartialDeleteException">
            <summary>
            Thrown when delete operation of LinkedIn content is not executed completely.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPartialDeleteException.#ctor">
            <summary>
             Thrown when delete operation of LinkedIn content is not executed completely.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPartialDeleteException.#ctor(System.String)">
            <summary>
             Thrown when delete operation of LinkedIn content is not executed completely.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPartialDeleteException.#ctor(System.String,System.Exception)">
            <summary>
             Thrown when delete operation of LinkedIn content is not executed completely.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInAccountInsightsState">
            <summary>
            Represents state of LinkedIn account insights (statistics of a company profile)
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInsightsState.AccountId">
            <summary>
            Account ID to which the task belongs.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInsightsState.LastCollectedDateTime">
            <summary>
            Represents the last DateTime of collected LinkedIn statistics.
            The LinkedIn uses UTC time thus the last collected date time should be a UTC midnight.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInsightsCollectionTask">
            <summary>
            Handles LinkedIn Insights analytics data collection when activated by the scheduler.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsCollectionTask.TASK_CODENAME_PREFIX">
            <summary>
            Scheduled task name prefix for LinkedIn Insights.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsCollectionTask.TASK_CODENAME_FORMAT">
            <summary>
            Scheduled task name format for LinkedIn Insights.
            Usage: <code>var completeTaskCodeName = String.Format(LinkedInInsightsCollectionTask.TASK_CODENAME_FORMAT, {LinkedInApplicationInfoID});</code>
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsCollectionTask.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes scheduled analytics data collection.
            The task should be executed once a day.
            </summary>
            <param name="taskInfo">Contains task data with information related to the LinkedIn application.</param>
            <returns>Null on success, error description otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsCollectionTask.IsFeatureAvailable(CMS.Scheduler.TaskInfo)">
            <summary>
            Checks whether Insights collection is available.
            </summary>
            <param name="taskInfo">Task info.</param>
            <returns>True if Insights collection is available, false otherwise.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInsightsCollectionTaskData">
            <summary>
            Represents data of LinkedInInsightsCollectionTask.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInsightsCollectionTaskData.ApplicationId">
            <summary>
            Application ID to which the task belongs.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInInsightsCollectionTaskData.AccountInsights">
            <summary>
            List of insights collection states of accounts within application.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsCollectionTaskData.ToXmlString(CMS.SocialMarketing.LinkedInInsightsCollectionTaskData)">
            <summary>
            Gets XML string representation of given taks data object.
            </summary>
            <param name="data">Data to serialize.</param>
            <returns>XML string representation.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsCollectionTaskData.FromXmlString(System.String)">
            <summary>
            Creates task data object from XML string representation.
            </summary>
            <param name="xmlString">XML string representation.</param>
            <returns>Task data object.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsCollectionTaskData.#ctor">
            <summary>
            Creates empty task data.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsCollectionTaskData.#ctor(System.Int32)">
            <summary>
            Creates task data with given application ID.
            </summary>
            <param name="applicationId">Application ID.</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInInsightsHelper">
            <summary>
            Contains methods for querying LinkedIn API to retrieve account level or post level insights and for collecting them for given application automatically.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.INSIGHT_CODENAME_PREFIX">
            <summary>
            Prefix used for LinkedIn Insights code names.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.accountHistoricalUpdateInsights">
            <summary>
            Array containing pairs (name, period) of scalar Insights for LinkedIn account updates (company profile).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.accountHistoricalFollowerInsights">
            <summary>
            Array containing pairs (name, period) of scalar Insights for LinkedIn account followers (company profile).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.API_URI">
            <summary>
            Base URI part for LinkedIn stats collection.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.ACCOUNT_FOLLOWER_STATISTICS_URI_FORMAT">
            <summary>
            URI for account stats collection (followers).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.ACCOUNT_NUMBER_OF_FOLLOWERS_URI_FORMAT">
            <summary>
            URI to retrieve number of company followers.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.ACCOUNT_STATUS_STATISTICS_URI_FORMAT">
            <summary>
            URI for account stats collection (status updates).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInInsightsHelper.POST_STATISTICS_URI_FORMAT">
            <summary>
            URI for post stats collection.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.ProcessLinkedInAccountInsightsByApplication(System.Int32,System.Collections.Generic.List{CMS.SocialMarketing.LinkedInAccountInsightsState}@)">
            <summary>
            Processes LinkedIn stats for all company profiles within given application.
            Writes to log if failure during stats collection occurs.
            </summary>
            <param name="applicationId">ID of LinkedIn application of which the company profiles (accounts) will be processed</param>
            <param name="accountInsightsStates">Insights collection states for given application.</param>
            <returns>True on successful collection, false otherwise. Any errors are logged into event log.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.ProcessLinkedInAccountInsights(CMS.SocialMarketing.LinkedInAccountInfo,CMS.SocialMarketing.LinkedInAccountInsightsState)">
            <summary>
            Processes insights for given LinkedIn account (company profile).
            </summary>
            <param name="account">Account for which to process insights.</param>
            <param name="accountInsightsState">State of insights collection from the last time, gets updated after processing.</param>
            <returns>True on successful processing, false otherwise. Any errors are logged into event log.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.ProcessLinkedInPostsInsights(CMS.SocialMarketing.LinkedInAccountInfo)">
            <summary>
            Retrieves LinkedIn stats for all posts of given account (company profile).
            Stats are retrieved once a day.
            </summary>
            <param name="account">LinkedIn account (company profile).</param>
            <returns>True on successful processing, false otherwise. Any internal errors are logged into event log.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.CollectLinkedInAccountInsights(CMS.SocialMarketing.LinkedInAccountInfo,System.Nullable{System.DateTime})">
            <summary>
            Collects LinkedIn statistics for company identified by its LinkedIn identifier.
            The stats are collected once a day.
            If <paramref name="lastCollectedDateTime"/> is not provided, the system will retrieve statistics for the past 2 days.
            When <paramref name="lastCollectedDateTime"/> is supplied (UTC date), the stats are collected from the day after lastCollectedDateTime till yesterday.
            Collects both status update stats and follower stats.
            </summary>
            <param name="account">Account for which to process insights.</param>
            <param name="lastCollectedDateTime">UTC date (time is not needed) of the last collected stats (accordingly to LinkedIn's time stamps)</param>
            <returns>UTC date of the recently collected stats (accordingly to LinkedIn's time stamps). Null if nothing collected.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.ProcessLinkedInAccountStatusUpdateInsights(System.String,CMS.SocialMarketing.LinkedInInternal.HistoricalStatusUpdateStatistics,System.Nullable{System.DateTime}@)">
            <summary>
            Stores historical status update statistics of given company.
            </summary>
            <param name="companyId">ID of the company on LinkedIn</param>
            <param name="statusUpdateAccountStats">Historical status update statistics to be stored.</param>
            <param name="collectedDateTime">UTC date of the recently collected stats (accordingly to LinkedIn's time stamps). Null if nothing collected.</param>
            <returns><c>true</c> in case that there any statistics were processed.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.ProcessLinkedInAccountFollowerInsights(System.String,CMS.SocialMarketing.LinkedInInternal.HistoricalFollowStatistics,System.Nullable{System.DateTime}@)">
            <summary>
            Stores historical follower statistics of given company.
            </summary>
            <param name="companyId">ID of the company on LinkedIn</param>
            <param name="followerAccountStats">Historical follower statistics to be stored.</param>
            <param name="collectedDateTime">UTC date of the recently collected stats (accordingly to LinkedIn's time stamps). Null if nothing collected.</param>
            <returns><c>true</c> in case that there any statistics were processed.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.ProcessLinkedInNumberOfCompanyFollowers(System.String,System.Int32)">
            <summary>
            Stores number of followers of given company.
            </summary>
            <param name="companyId">ID of the company on LinkedIn</param>
            <param name="numberOfFollowers">Number of followers to be stored.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.UpdateLinkedInPostInsights(CMS.SocialMarketing.LinkedInAccountInfo,CMS.SocialMarketing.LinkedInPostInfo)">
            <summary>
            Retrieves LinkedIn Insights for given post. Insights are retrieved by one batch request for each type of insight.
            </summary>
            <param name="account">Account for which to process insights.</param>
            <param name="post">Post.</param>
            <returns>True on successful processing, false otherwise. Any internal errors are logged into event log.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.GetLinkedInHistoricalFollowerStatistics(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Gets historical follower statistics for given LinkedIn company profile (only stats for finished days can be retrieved).
            </summary>
            <param name="accessToken">Access token to be used for API querying.</param>
            <param name="companyId">Company profile ID on LinkedIn.</param>
            <param name="sinceWhen">Since when to get the statistics. The endpoint will provide statistics from 12 months before the request date(UTC) till 2 days before the request date(UTC), or later.</param>
            <returns>Historical follower stats for the company profile.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
            <remarks>
            Can be used to collect statistics for whole days only. This means the latest sinceWhen must represent UTC's date (LinkedIn uses UTC).
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.GetLinkedInHistoricalStatusUpdateStatistics(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Gets historical status update statistics for given LinkedIn company profile (only stats for finished days can be retrieved).
            </summary>
            <param name="accessToken">Access token to be used for API querying.</param>
            <param name="companyId">Company profile ID on LinkedIn.</param>
            <param name="sinceWhen">Since when to get the statistics. Should be a UTC date from the past until yesterday. Today's stats can not be retrieved since they are not complete.</param>
            <returns>Historical status update stats for the company profile.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
            <remarks>
            Can be used to collect statistics for whole days only. This means the latest sinceWhen must represent UTC's yesterday (LinkedIn uses UTC).
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.GetLinkedInHistoricalStatusUpdateStatistics(System.String,System.String,System.String)">
            <summary>
            Gets historical status update statistics for given LinkedIn company update.
            The statistics are with month granularity starting at the post published datetime.
            </summary>
            <param name="accessToken">Access token to be used for API querying.</param>
            <param name="companyId">Company profile ID on LinkedIn.</param>
            <param name="postUpdateKey">Update key of the company update to query.</param>
            <returns>Historical status update stats.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.GetLinkedInCompanyNumberOfFollowers(System.String,System.String)">
            <summary>
            Gets current number of LinkedIn company followers.
            </summary>
            <param name="accessToken">Access token to be used for API querying.</param>
            <param name="companyId">Company profile ID on LinkedIn.</param>
            <returns>Number of followers or <c>null</c> could not retrieve it.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.UnixTimeStampToDateTime(System.Double)">
            <summary>
            Converts UNIX time stamp to local time.
            </summary>
            <param name="timeStamp">Seconds since UNIX epoch</param>
            <returns>DateTime in local time.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.DateTimeToUnixTimeStamp(System.DateTime)">
            <summary>
            Converts any time (local or UTC) to UNIX time stamp.
            </summary>
            <param name="dt">DateTime</param>
            <returns>Seconds since UNIX epoch</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.UtcToday">
            <summary>
            Gets UTC today (today's date according to UTC, time set to midnight).
            </summary>
            <returns>UTC today</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInInsightsHelper.GetOrCreateInsight(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the insight matching the specified criteria, and returns it. Creates a new one, if none found.
            </summary>
            <param name="codeName">The insight code name.</param>
            <param name="externalId">The external identifier of the object associated with the insight.</param>
            <param name="periodType">The type of the time period that the insight represents.</param>
            <param name="valueName">>The value name. Pass NULL, if not named.</param>
            <returns>The insight matching the specified criteria.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInAccountInfo">
            <summary>
            Represents a LinkedIn account (company profile).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInAccountInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInAccountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountAccessToken">
            <summary>
            Gets or sets the access token of the LinkedIn account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountAccessTokenExpiration">
            <summary>
            Gets or sets the access token secret expiration.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountLinkedInApplicationID">
            <summary>
            Gets or sets the identifier of the LinkedIn application object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountProfileID">
            <summary>
            Gets or sets the LinkedIn profile identifier.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountProfileName">
            <summary>
            Gets or sets the LinkedIn profile name.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountIsDefault">
            <summary>
            Gets or sets indicator whether Account is default for its site.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountID">
            <summary>
            Gets or sets the identifier of the LinkedIn account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountGUID">
            <summary>
            Gets or sets the globally unique identifier of the LinkedIn account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountSiteID">
            <summary>
            Gets or sets the site identifier of the LinkedIn account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountLastModified">
            <summary>
            Gets or sets the timestamp of the LinkedIn account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountName">
            <summary>
            Gets or sets the code name of the LinkedIn account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountDisplayName">
            <summary>
            Gets or sets the display name of the LinkedIn account.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.DeleteObject">
            <summary>
            Deletes this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.GetValue(System.String)">
            <summary>
            Gets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.#ctor">
            <summary>
            Initializes a new instance of the LinkedInAccountInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the LinkedInAccountInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInAccountInfoProvider">
            <summary>
            Provides management of LinkedIn accounts.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the LinkedInAccountInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetLinkedInAccounts">
            <summary>
            Returns a query for all the LinkedInAccountInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetLinkedInAccountInfo(System.Int32)">
            <summary>
            Retrieves a LinkedIn account with the specified identifier, and returns it.
            </summary>
            <param name="accountId">LinkedIn account identifier.</param>
            <returns>A LinkedIn account with the specified identifier, if found; otherwise, null.</returns>      
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetLinkedInAccountInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a LinkedIn account with the specified identifier, and returns it.
            </summary>
            <param name="codeName">LinkedIn account code name.</param>
            <param name="siteId">ID of the site the account is for.</param>
            <returns>A LinkedIn account with the specified identifier, if found; otherwise, null.</returns>      
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetLinkedInAccountInfo(System.Guid)">
            <summary>
            Returns LinkedInAccountInfo with specified GUID.
            </summary>
            <param name="guid">LinkedInAccountInfo GUID</param>                
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.SetLinkedInAccountInfo(CMS.SocialMarketing.LinkedInAccountInfo)">
            <summary>
            Updates or creates the specified LinkedIn account.
            </summary>
            <param name="account">LinkedIn account to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.DeleteLinkedInAccountInfo(CMS.SocialMarketing.LinkedInAccountInfo)">
            <summary>
            Deletes the specified LinkedIn account.
            </summary>
            <param name="account">LinkedIn account to be deleted.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.DeleteLinkedInAccountInfo(System.Int32)">
            <summary>
            Deletes the LinkedIn account with specified identifier.
            </summary>
            <param name="accountId">LinkedIn account identifier.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetLinkedInAccounts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the LinkedInAccountInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetDefaultLinkedInAccount(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the default LinkedInAccount for given site.
            </summary>
            <param name="siteId">Site for which you want the default LinkedInAccount</param>
            <returns>Default LinkedInAccount for given site, null if no default LinkedInAccount exists</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.SetInfo(CMS.SocialMarketing.LinkedInAccountInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.DeleteInfo(CMS.SocialMarketing.LinkedInAccountInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetLinkedInAccountsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the LinkedInAccountInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInAccountInfoProvider.GetDefaultLinkedInAccountInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the default LinkedInAccount for given site
            </summary>
            <param name="siteId">Site for which you want the default LinkedInAccount</param>
            <returns>Default LinkedInAccount for given site, null if no default LinkedInAccount exists</returns>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInApplicationInfo">
            <summary>
            Represents a LinkedIn application.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInApplicationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInApplicationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationConsumerKey">
            <summary>
            Gets or sets the consumer key of the LinkedIn application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationConsumerSecret">
            <summary>
            Gets or sets the consumer secret of the LinkedIn application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationID">
            <summary>
            Gets or sets the identifier of the LinkedInApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationDisplayName">
            <summary>
            Gets or sets the display name of the LinkedInApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationName">
            <summary>
            Gets or sets the code name of the LinkedInApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationLastModified">
            <summary>
            Gets or sets the timestamp of the LinkedInApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationGUID">
            <summary>
            Gets or sets the globally unique identifier of the LinkedInApplicationInfo object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInApplicationInfo.LinkedInApplicationSiteID">
            <summary>
            Gets or sets the site identifier of the LinkedInApplicationInfo object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.GetValue(System.String)">
            <summary>
            Gets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.#ctor">
            <summary>
            Constructor - Creates an empty LinkedInApplicationInfo object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new LinkedInApplicationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInApplicationInfoProvider">
            <summary>
            Provides management of LinkedIn applications.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the LinkedInApplicationInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.GetLinkedInApplications">
            <summary>
            Returns a query for all the LinkedInApplicationInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.GetLinkedInApplicationInfo(System.Int32)">
            <summary>
            Retrieves a LinkedIn application with the specified identifier, and returns it.
            </summary>
            <param name="applicationId">LinkedIn application identifier.</param>
            <returns>A LinkedIn application with the specified identifier, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.GetLinkedInApplicationInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a LinkedIn application matching the specified criteria, and returns it.
            </summary>
            <param name="applicationName">LinkedIn application name.</param>
            <param name="siteName">Site name.</param>
            <returns>A LinkedIn application matching the specified criteria, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.GetLinkedInApplicationInfo(System.Guid)">
            <summary>
            Returns LinkedInApplicationInfo with specified GUID.
            </summary>
            <param name="guid">LinkedInApplicationInfo GUID</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.SetLinkedInApplicationInfo(CMS.SocialMarketing.LinkedInApplicationInfo)">
            <summary>
            Updates or creates the specified LinkedIn application.
            </summary>
            <param name="application">LinkedIn application to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.DeleteLinkedInApplicationInfo(CMS.SocialMarketing.LinkedInApplicationInfo)">
            <summary>
            Deletes the specified LinkedIn application.
            </summary>
            <param name="application">LinkedIn application to be deleted.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.DeleteLinkedInApplicationInfo(System.Int32)">
            <summary>
            Deletes the LinkedIn application with specified identifier.
            </summary>
            <param name="applicationId">LinkedIn application identifier.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.GetLinkedInApplications(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a dataset of LinkedIn applications for the specified site, and returns it.
            </summary>
            <param name="siteId">Site ID.</param>
            <returns>A dataset of LinkedIn applications for the specified site.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.SetInfo(CMS.SocialMarketing.LinkedInApplicationInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.DeleteInfo(CMS.SocialMarketing.LinkedInApplicationInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.SetLinkedInInsightsSchedulerStateInternal(CMS.SocialMarketing.LinkedInApplicationInfo,System.Boolean)">
            <summary>
            Creates or removes LinkedIn Insights collection scheduler.
            Called whenever condition for Insights data collection changes - new application is created or an existing is deleted.
            </summary>
            <param name="application">LinkedIn application for which the stats should be collected.</param>
            <param name="enabled">Enable the task after application creation, disable when deleting.</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInApplicationInfoProvider.GetLinkedInApplicationsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the LinkedInApplicationInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInCompany">
            <summary>
            Represents a LinkedIn company.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInCompany.ID">
            <summary>
            Company ID.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInCompany.Name">
            <summary>
            Company name.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInHelper">
            <summary>
            Provides methods for publishing to LinkedIn.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInHelper.COMPANY_SHARE_COMMENT_MAX_LENGTH">
            <summary>
            Max length of a LinkedIn share comment.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.PublishShareOnLinkedInCompanyProfile(System.Int32,System.String)">
            <summary>
            Publishes a new share on company profile identified by <see cref="P:CMS.SocialMarketing.LinkedInAccountInfo.LinkedInAccountID"/>.
            The share is visible to anyone.
            </summary>
            <param name="accountId">Identifier of the account info object (company profile).</param>
            <param name="comment">Comment text.</param>
            <returns>Update key of the published share.</returns>
            <exception cref="T:System.ArgumentException">Thrown when authorization or LinkedIn's company ID resulting from accountId is null, or when comment is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when comment is longer than <see cref="F:CMS.SocialMarketing.LinkedInHelper.COMPANY_SHARE_COMMENT_MAX_LENGTH"/></exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">Thrown when request was not issued correctly or when unexpected (other than 201 Created) response for publishing request is returned.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.GetUserCompanies(System.String)">
            <summary>
            Gets all companies administrated by the user that owns given access token.
            </summary>
            <param name="accessToken">User's access token.</param>
            <returns>Returns list of administrated companies or null if something went wrong.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Exception">Thrown when unexpected error occurs.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.ProcessPostRequest(System.String,System.Uri,System.String)">
            <summary>
            Processes POST request specified by URI and request body. The request is made on behalf of given authorization.
            </summary>
            <param name="accessToken">Access token to be used for the request</param>
            <param name="requestUri">URI which will be requested</param>
            <param name="requestBody">Request body</param>
            <returns>Response resulting from the request.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.ProcessGetRequest(System.String,System.Uri)">
            <summary>
            Processes GET request specified by URI. The request is made on behalf of given authorization.
            </summary>
            <param name="accessToken">Access token to be used for the request</param>
            <param name="requestUri">URI which will be requested</param>
            <returns>Response resulting from the request.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.ProcessApiResponse``1(System.Net.HttpWebRequest)">
            <summary>
            Processes API response to given request.
            </summary>
            <param name="request">Request for which to process the response.</param>
            <returns>Response resulting from the request.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.GetResponse(System.Net.HttpWebRequest,System.Boolean@)">
            <summary>
            Gets response for given HttpWebRequest.
            When a <see cref="T:System.Net.WebException"/> with status <see cref="F:System.Net.WebExceptionStatus.ProtocolError"/> occurs, the response is still returned.
            You should always check the response status after call to this method to see whether the request succeeded.
            </summary>
            <param name="request">Request</param>
            <param name="protocolError">True if protocol error occurred. The response may contain additional information describing the error condition.</param>
            <returns>Response for corresponding request</returns>
            <exception cref="T:System.Net.WebException">Thrown when abort was previously called or timeout occurred or an error occurred while processing the request.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.WriteRequestBody(System.Net.HttpWebRequest,System.String)">
            <summary>
            Writes data stored in a string to the request object.
            Uses UTF-8 encoding for the outgoing data.
            </summary>
            <param name="request">Request whose stream will be used</param>
            <param name="data">Data to be written to the stream</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.ReadResponse(System.Net.HttpWebResponse)">
            <summary>
            Reads response content from a HttpWebResponse.
            </summary>
            <param name="response">HttpWebResponse from which to read the response stream</param>
            <returns>String obtained from response stream (UTF-8 encoded)</returns>
            <remarks>You should always call the response <see cref="M:System.Net.HttpWebResponse.Close"/> method to make sure the connection is released even if getting the response stream fails.</remarks>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.PublishShareOnLinkedInCompanyProfileInternal(System.String,System.String,System.String)">
            <summary>
            Publishes a new share on company profile identified by LinkedIn's company ID.
            </summary>
            <param name="accessToken">Access token to be used for the request.</param>
            <param name="companyId">Identifier of the company used by LinkedIn.</param>
            <param name="comment">Comment text.</param>
            <returns>Update key of the published share.</returns>
            <exception cref="T:System.ArgumentException">Thrown when authorization, companyId or comment is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when comment is longer than <see cref="F:CMS.SocialMarketing.LinkedInHelper.COMPANY_SHARE_COMMENT_MAX_LENGTH"/></exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">Thrown when request was not issued correctly or when unexpected (other than 201 Created) response for publishing request is returned.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.GetUserCompaniesInternal(System.String)">
            <summary>
            Gets all companies administrated by the user that owns given access token.
            </summary>
            <param name="accessToken">User's access token.</param>
            <returns>Returns list of administrated companies.</returns>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiThrottleLimitException">Thrown when protocol error occurs because the limit of API requests was overdrawn.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when unexpected error occurs.</exception>
            <exception cref="T:System.Net.ProtocolViolationException">When request was not issued correctly.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInHelper.GetJsonForCompanyShare(System.String,System.String,CMS.SocialMarketing.LinkedInMemberNetworkVisibilityEnum)">
            <summary>
            Gets JSON representation of a company share.
            </summary>
            <param name="comment">Text of company share.</param>
            <param name="companyId">Company ID.</param>
            <param name="visibilityCode">Visibility code.</param>
            <returns>JSON suitable for LinkedIn API request.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInMemberNetworkVisibilityEnum">
            <summary>
            Specifies visibility of a LinkedIn share.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInMemberNetworkVisibilityEnum.Public">
            <summary>
            The share will be viewable by anyone on LinkedIn.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInMemberNetworkVisibilityEnum.ConnectionsOnly">
            <summary>
            The share will be viewable by 1st-degree connections only.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInMemberNetworkVisibilityEnum.LoggedInOnly">
            <summary>
            Viewable by logged in members only.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInPostInfo">
            <summary>
            Represents a LinkedIn company share.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostComment">
            <summary>
            Gets or sets the comment to be published as a company share.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostURLShortenerType">
            <summary>
            Gets or sets the type of the URL shortener that will be used to shorten links in this LinkedIn post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostScheduledPublishDateTime">
            <summary>
            Gets or sets the date and time when the LinkedIn post (company share) is schleduled for publishing on LinkedIn account (company profile).
            If not set or in the past, the post gets published immediately.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostCampaignID">
            <summary>
            Gets or sets the campaign ID the LinkedIn post belongs to.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostUpdateKey">
            <summary>
            Gets or sets the update key of the LinkedIn post (the LinkedIn API returns it after successful publishing).
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostPostAfterDocumentPublish">
            <summary>
            Indicates whether the post has to be posted to LinkedIn after the related document gets published.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostDocumentGUID">
            <summary>
            Gets or sets the document GUID the LinkedIn post belongs to.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostIsCreatedByUser">
            <summary>
            Indicates whether the post was created by user using autopost form control or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostPublishedDateTime">
            <summary>
            Gets or sets the date and time when the LinkedIn post was published on LinkedIn account (company profile).
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostHTTPStatusCode">
            <summary>
            Gets or sets the HTTP status code returned while publishing the LinkedIn post.
            The HTTP status code on successful publishing is 201 (Created)
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostErrorCode">
            <summary>
            Gets or sets the error code the LinkedIn API returned in response to unsuccessful publishing in the response body.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostErrorMessage">
            <summary>
            Gets or sets the error message the LinkedIn API returned in response to unsuccessful publishing in the response body.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostClickCount">
            <summary>
            Gets or sets the LinkedIn post click count
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostCommentCount">
            <summary>
            Gets or sets the LinkedIn post comment count
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostEngagement">
            <summary>
            Gets or sets the LinkedIn post engagement
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostImpressionCount">
            <summary>
            Gets or sets the LinkedIn post impression count
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostLikeCount">
            <summary>
            Gets or sets the LinkedIn post like count
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostShareCount">
            <summary>
            Gets or sets the LinkedIn post share count
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostInsightsLastUpdated">
            <summary>
            Gets or sets the LinkedIn post insights last updated
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.IsPublished">
            <summary>
            Indicates whether the post is published or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.IsFaulty">
            <summary>
            Indicates whether the post is faulty (there was an error when publishing the post or post is scheduled and was not published at proper time) or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.IsEditable">
            <summary>
            Indicates whether the post can be edited or not. Faulty or published posts cannot be edited.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostID">
            <summary>
            Gets or sets the identifier of the LinkedIn post (company share).
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostLinkedInAccountID">
            <summary>
            Gets or sets the LinkedIn account (company profile) on which the post is to be published.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostLastModified">
            <summary>
            Gets or sets the timestamp of the LinkedIn post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostGUID">
            <summary>
            Gets or sets the globally unique identifier of the LinkedIn post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.LinkedInPostSiteID">
            <summary>
            Gets or sets the site identifier of the LinkedIn post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.LinkedInPostInfo.ObjectDisplayName">
            <summary>
            Gets or sets the display name of the LinkedIn post.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
            <exception cref="T:CMS.SocialMarketing.LinkedInPartialDeleteException">Thrown when the deleted post has already been published on LiknedIn. In such case the post is deleted locally only.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfo.#ctor">
            <summary>
            Constructor - Creates an empty LinkedInPostInfo object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new LinkedInPostInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.LinkedInPostInfoProvider">
            <summary>
            Provides management of LinkedIn posts.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfoProvider.ERROR_CODE_UNKNOWN_ERROR">
            <summary>
            Error code representing unknown error when publishing the post.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfoProvider.ERROR_CODE_INVALID_ACCOUNT">
            <summary>
            Error code representing unexpected error with LinkedIn account (account doesn't exist or its access token isn't valid).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfoProvider.ERROR_CODE_DOCUMENT_DOES_NOT_EXIST">
            <summary>
            Error code representing the post belongs to the document that doesn't exist.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfoProvider.ERROR_CODE_COMMENT_TOO_LONG">
            <summary>
            Error code representing post with too long comment.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfoProvider.POST_DELAY_TOLERANCE">
            <summary>
            Scheduled posts which are late on publishing for more than POST_DELAY_TOLERANCE are reported as faulty.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.LinkedInPostInfoProvider.IMMEDIATE_PUBLISH_TOLERANCE">
            <summary>
            Post publishing tolerance interval - posts published within (now + IMMEDIATE_PUBLISH_TOLERANCE) are published immediately as if no delay was set.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the LinkedInPostInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPosts">
            <summary>
            Returns a query for all the LinkedInPostInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostInfo(System.Int32)">
            <summary>
            Returns LinkedInPostInfo with specified ID.
            </summary>
            <param name="id">LinkedInPostInfo ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostInfo(System.Guid)">
            <summary>
            Returns LinkedInPostInfo with specified GUID.
            </summary>
            <param name="guid">LinkedInPostInfo GUID</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.SetLinkedInPostInfo(CMS.SocialMarketing.LinkedInPostInfo)">
            <summary>
            Sets (updates or inserts) specified LinkedInPostInfo.
            </summary>
            <param name="infoObj">LinkedInPostInfo to be set</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.DeleteLinkedInPostInfo(CMS.SocialMarketing.LinkedInPostInfo)">
            <summary>
            Deletes specified LinkedInPostInfo.
            </summary>
            <param name="infoObj">LinkedInPostInfo to be deleted</param>
            <exception cref="T:CMS.SocialMarketing.LinkedInPartialDeleteException">Thrown when the deleted post has already been published on LiknedIn. In such case the post is deleted locally only.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.DeleteLinkedInPostInfo(System.Int32)">
            <summary>
            Deletes LinkedInPostInfo with specified ID.
            </summary>
            <param name="id">LinkedInPostInfo ID</param>
            <exception cref="T:CMS.SocialMarketing.LinkedInPartialDeleteException">Thrown when the deleted post has already been published on LiknedIn. In such case the post is deleted locally only.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPosts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the LinkedInPostInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostInfosByAccountId(System.Int32)">
            <summary>
            Retrieves an object query of LinkedIn posts for the specified LinkedIn account (company profile) identifier, and returns it.
            </summary>
            <param name="linkedInAccountId">LinkedIn account (company profile) identifier.</param>
            <returns>An object query of LinkedIn posts for the specified account (company profile).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostInfosByDocumentGuid(System.Guid,System.Int32)">
            <summary>
            Retrieves an object query of LinkedIn posts for the specified document identifier, and returns it.
            </summary>
            <param name="documentGuid">Document identifier.</param>
            <param name="documentSiteId">Document site identifier.</param>
            <returns>An object query of LinkedIn posts for the specified document.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.PublishLinkedInPost(System.Int32)">
            <summary>
            Publishes the LinkedIn post on the appropriate LinkedIn account (company profile) in proper time.
            Uses scheduler for future posts.
            When modifying scheduled posts, always call the <see cref="M:CMS.SocialMarketing.LinkedInPostInfoProvider.TryCancelScheduledPublishLinkedInPost(System.Int32)"/> first.
            </summary>
            <seealso cref="M:CMS.SocialMarketing.LinkedInPostInfoProvider.TryCancelScheduledPublishLinkedInPost(System.Int32)"/>
            <seealso cref="M:CMS.SocialMarketing.LinkedInPostInfoProvider.TryCancelScheduledPublishLinkedInPost(CMS.SocialMarketing.LinkedInPostInfo)"/>
            <param name="postInfoId">Identifier of the LinkedInPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to LinkedIn or the account is not valid.</exception>
            <exception cref="T:System.ArgumentException">Thrown when authorization or LinkedIn's company ID resulting from accountId is null, or when comment is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when comment is longer than <see cref="F:CMS.SocialMarketing.LinkedInHelper.COMPANY_SHARE_COMMENT_MAX_LENGTH"/></exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.TryCancelScheduledPublishLinkedInPost(System.Int32)">
            <summary>
            Tries to cancel scheduled publish of LinkedIn post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.LinkedInPostInfoProvider.PublishLinkedInPost(System.Int32)"/>.
            (Has to be called before modification since LinkedIn does not allow published posts to be modified).
            </summary>
            <param name="postInfoId">Identifier of the LinkedInPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled, false if the post has already been published.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.TryCancelScheduledPublishLinkedInPost(CMS.SocialMarketing.LinkedInPostInfo)">
            <summary>
            Tries to cancel scheduled publish of LinkedIn post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.LinkedInPostInfoProvider.PublishLinkedInPost(System.Int32)"/>.
            (Has to be called before modification since LinkedIn does not allow published posts to be modified).
            </summary>
            <param name="postInfo">The LinkedInPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled, false if the post has already been published.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetPostPublishStateMessage(CMS.SocialMarketing.LinkedInPostInfo,CMS.Base.IUserInfo,CMS.Base.ISiteInfo,System.Boolean)">
            <summary>
            Gets localized message that describes the post's publish state.
            </summary>
            <param name="post">LinkedIn post.</param>
            <param name="user">User whose time zone will be used when formating date time information.</param>
            <param name="site">Site whose time zone will be used when formating date time information.</param>
            <param name="shortMessage">Indicates if short message has to be used instead of detail message.</param>
            <returns>Localized status message.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostInfosWithOutdatedInsights(System.Int32)">
            <summary>
            Retrieves an object query of LinkedIn posts which have outdated insights for the specified LinkedIn account (company profile) identifier, and returns it.
            Insights are considered outdated when they haven't been updated today.
            </summary>
            <param name="accountId">LinkedIn account (page) identifier.</param>
            <returns>An object query of LinkedIn posts which have outdated insights for the specified account (company profile).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.PublishLinkedInPostToLinkedIn(System.Int32)">
            <summary>
            Publishes the LinkedIn post on the appropriate LinkedIn account (company profile) immediately.
            </summary>
            <param name="postInfoId">Identifier of the LinkedInPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to LinkedIn or the account is not valid.</exception>
            <exception cref="T:System.ArgumentException">Thrown when authorization or LinkedIn's company ID resulting from accountId is null, or when comment is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when comment is longer than <see cref="F:CMS.SocialMarketing.LinkedInHelper.COMPANY_SHARE_COMMENT_MAX_LENGTH"/></exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.DeleteInfo(CMS.SocialMarketing.LinkedInPostInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the LinkedInPostInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostInfosByAccountIdInternal(System.Int32)">
            <summary>
            Retrieves an object query of LinkedIn posts for the specified LinkedIn account (company profile) identifier, and returns it.
            </summary>
            <param name="linkedInAccountId">LinkedIn account (company profile) identifier.</param>
            <returns>An object query of LinkedIn posts for the specified account (company profile).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostInfosByDocumentGuidInternal(System.Guid,System.Int32)">
            <summary>
            Retrieves an object query of LinkedIn posts for the specified document identifier, and returns it.
            </summary>
            <param name="documentGuid">Document identifier.</param>
            <param name="documentSiteId">Document site identifier.</param>
            <returns>An object query of LinkedIn posts for the specified document.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.PublishLinkedInPostInternal(System.Int32)">
            <summary>
            Publishes the LinkedIn post on the appropriate LinkedIn account (company profile) in proper time.
            Uses scheduler for future posts.
            </summary>
            <param name="postInfoId">Identifier of the LinkedInPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to LinkedIn or the account is not valid.</exception>
            <exception cref="T:System.ArgumentException">Thrown when authorization or LinkedIn's company ID resulting from accountId is null, or when comment is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when comment is longer than <see cref="F:CMS.SocialMarketing.LinkedInHelper.COMPANY_SHARE_COMMENT_MAX_LENGTH"/></exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.TryCancelScheduledPublishLinkedInPostInternal(CMS.SocialMarketing.LinkedInPostInfo)">
            <summary>
            Tries to cancel scheduled publish of LinkedIn post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.LinkedInPostInfoProvider.PublishLinkedInPost(System.Int32)"/>.
            (Has to be called before modification since LinkedIn does not allow published posts to be modified).
            </summary>
            <param name="postInfo">The LinkedInPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled (or neither post or scheduled task does not exist), false if the post has already been published (or the task is already running).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.PublishLinkedInPostToLinkedInInternal(System.Int32)">
            <summary>
            Publishes the LinkedIn post on the appropriate LinkedIn account (company profile). Throws an exception if something goes wrong.
            </summary>
            <param name="postInfoId">Identifier of the LinkedInPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to LinkedIn or the account is not valid.</exception>
            <exception cref="T:System.ArgumentException">Thrown when authorization or LinkedIn's company ID resulting from accountId is null, or when comment is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when comment is longer than <see cref="F:CMS.SocialMarketing.LinkedInHelper.COMPANY_SHARE_COMMENT_MAX_LENGTH"/></exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiUnauthorizedException">Thrown when protocol error occurs because the request is not authorized properly.</exception>
            <exception cref="T:CMS.SocialMarketing.LinkedInApiException">Thrown when protocol error occurs.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetPostPublishStateMessageInternal(CMS.SocialMarketing.LinkedInPostInfo,CMS.Base.IUserInfo,CMS.Base.ISiteInfo,System.Boolean)">
            <summary>
            Gets localized message that describes the post's publish state.
            </summary>
            <param name="post">LinkedIn post.</param>
            <param name="user">User whose time zone will be used when formating date time information.</param>
            <param name="site">Site whose time zone will be used when formating date time information.</param>
            <param name="shortMessage">Indicates if short message has to be used instead of detail message.</param>
            <returns>Localized status message.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.LinkedInPostInfoProvider.GetLinkedInPostErrorMessage(System.Int32,System.Int32,System.String)">
            <summary>
            Gets localized error message that describes the given LinkedIn's error code.
            </summary>
            <param name="httpStatusCode">HTTP status code returned when publishing to LinkedIn.</param>
            <param name="errorCode">Error code that LinkedIn returned in the response body. Or custom error (negative value)</param>
            <param name="errorMessage">Error message that LinkedIn returned in the response body.</param>
            <returns>Localized error message.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.SocialMarketingHandlers">
            <summary>
            Provides handlers for social marketing.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingHandlers.Init">
            <summary>
            Initializes the social marketing handlers.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingHandlers.Workflow_Publish_After_Facebook(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler will post to Facebook after publishing the document.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingHandlers.Workflow_Publish_After_LinkedIn(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler will post to LinkedIn after publishing the document.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingHandlers.Workflow_Publish_After_Twitter(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler will post to Twitter after publishing the document.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.SocialMarketingModule">
            <summary>
            Represents the Social marketing module.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingModule.#ctor">
            <summary>
            Initializes a new instance of the SocialMarketingModule class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingModule.OnInit">
            <summary>
            Initializes social marketing module.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.SocialMarketingModuleMetadata">
            <summary>
            Represents the Social media module metadata.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the SocialMarketingModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.SocialMarketingPostPublishingTask">
            <summary>
            Handles scheduled post publishing when activated by the scheduler.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialMarketingPostPublishingTask.TASK_CODENAME_FORMAT_FACEBOOK">
            <summary>
            Scheduled task name format for Facebook.
            Usage: <code>var completeTaskCodeName = String.Format(SocialMarketingPostPublishingTask.TASK_CODENAME_FORMAT_FACEBOOK, {FacebookPostInfoID});</code>
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialMarketingPostPublishingTask.TASK_CODENAME_FORMAT_LINKEDIN">
            <summary>
            Scheduled task name format for Facebook.
            Usage: <code>var completeTaskCodeName = String.Format(SocialMarketingPostPublishingTask.TASK_CODENAME_PREFIX_LINKEDIN, {LinkedInPostInfoID});</code>
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialMarketingPostPublishingTask.TASK_CODENAME_FORMAT_TWITTER">
            <summary>
            Scheduled task name format for Twitter.
            Usage: <code>var completeTaskCodeName = String.Format(SocialMarketingPostPublishingTask.TASK_CODENAME_FORMAT_TWITTER, {TwitterPostInfoID});</code>
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialMarketingPostPublishingTask.TASK_CODENAME_PREFIX_FACEBOOK">
            <summary>
            Scheduled task name prefix for Facebook.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialMarketingPostPublishingTask.TASK_CODENAME_PREFIX_LINKEDIN">
            <summary>
            Scheduled task name prefix for LinkedIn.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialMarketingPostPublishingTask.TASK_CODENAME_PREFIX_TWITTER">
            <summary>
            Scheduled task name prefix for Twitter.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingPostPublishingTask.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes scheduled post publishing.
            </summary>
            <param name="taskInfo">Contains information related to the post.</param>
            <returns>Null on success, error description otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingPostPublishingTask.Execute_Facebook(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes scheduled Facebook post publishing.
            </summary>
            <param name="taskInfo">Contains information related to the post.</param>
            <returns>Null on success, error description otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingPostPublishingTask.Execute_LinkedIn(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes scheduled LinkedIn post publishing.
            </summary>
            <param name="taskInfo">Contains information related to the post.</param>
            <returns>Null on success, error description otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.SocialMarketingPostPublishingTask.Execute_Twitter(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes scheduled Twitter post publishing.
            </summary>
            <param name="taskInfo">Contains information related to the post.</param>
            <returns>Null on success, error description otherwise.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.ITwitterRetryPolicyProvider">
            <summary>
            Provides methods for performing retry policy when the exception is caused by a network problem.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.ITwitterRetryPolicyProvider.ApplyRetryPolicy">
            <summary>
            Applies retry policy and checks whether the exception should be handled in standard pipeline, or should be suppressed.
            </summary>
            <returns>True if the policy was successfully applied and another try can be performed; false if the exception should be handled in standard pipeline.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.ITwitterRetryPolicyProvider.IsEligible(System.Exception)">
            <summary>
            Checks whether the given <paramref name="exception"/> is eligible to be used in retry policy.
            </summary>
            <param name="exception">Exception to be checked</param>
            <returns>True if the exception is candidate for retry policy; otherwise, false</returns>
        </member>
        <member name="M:CMS.SocialMarketing.ITwitterRetryPolicyProvider.Reset">
            <summary>
            Ensures reset of retry policy. Should be called when <see cref="M:CMS.SocialMarketing.ITwitterRetryPolicyProvider.ApplyRetryPolicy"/> returns false so next attempt starts from the initial state.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterIdentifierRange">
            <summary>
            Represents a range of object identifiers on a Twitter timeline.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterIdentifierRange.From">
            <summary>
            Gets the range start (inclusive).
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterIdentifierRange.To">
            <summary>
            Gets the range end (inclusive).
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterIdentifierRange.#ctor(System.UInt64,System.UInt64)">
            <summary>
            Initializes a new instance of the TimelineRange struct.
            </summary>
            <param name="from">The range start (inclusive).</param>
            <param name="to">The range end (inclusive).</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterIdentifierRange.ToString">
            <summary>
            Converts this range into a string.
            </summary>
            <returns>A string that represents this range.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterIdentifierRange.Parse(System.String)">
            <summary>
            Converts the string representation of a range to an equivalent range.
            </summary>
            <param name="input">A string containing a range to convert.</param>
            <returns>A range whose value is represented by the specified string.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterInsightsCollectionTask">
            <summary>
            Retrieves insights from Twitter.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Retrieves insights from Twitter and stores them in the database.
            </summary>
            <param name="task">The task data.</param>
            <returns>An error message if there was an error; otherwise, an empty string.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.ProcessAccounts(CMS.DataEngine.SiteInfoIdentifier,System.DateTime)">
            <summary>
            Collects insights for all Twitter accounts from the specified site.
            </summary>
            <param name="siteId">The site identifier.</param>
            <param name="currentDateTime">The current date and time.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.ProcessAccount(CMS.SocialMarketing.TwitterAccountInfo,System.DateTime)">
            <summary>
            Collects insights for the specified Twitter account.
            </summary>
            <param name="account">The Twitter account.</param>
            <param name="currentDateTime">The current date and time.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.ProcessFollowers(CMS.SocialMarketing.TwitterAccountInfo,System.DateTime,LinqToTwitter.TwitterContext,LinqToTwitter.Help)">
            <summary>
            Collects the number of followers for the specified Twitter account, if the Twitter API request rate limits allow it.
            </summary>
            <param name="account">The Twitter account.</param>
            <param name="currentDateTime">The current date and time.</param>
            <param name="context">The Twitter context.</param>
            <param name="help">The object with Twitter API request rate limits.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.ProcessFollowers(CMS.SocialMarketing.TwitterAccountInfo,System.DateTime,LinqToTwitter.TwitterContext)">
            <summary>
            Collects the number of followers for the specified Twitter account.
            </summary>
            <param name="account">The Twitter account.</param>
            <param name="currentDateTime">The current date and time.</param>
            <param name="context">The Twitter context.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.ProcessMentions(CMS.SocialMarketing.TwitterAccountInfo,System.DateTime,LinqToTwitter.TwitterContext,LinqToTwitter.Help)">
            <summary>
            Collects the number of mentions for the specified Twitter account, if the Twitter API request rate limits allow it.
            </summary>
            <param name="account">The Twitter account.</param>
            <param name="currentDateTime">The current date and time.</param>
            <param name="context">The Twitter context.</param>
            <param name="help">The object with Twitter API request rate limits.</param>
            <remarks>
            This method counts tweets on the mentions timeline.
            As the number of API calls is limited it uses a range of tweet identifiers to remember which part of the timeline has been already processed.
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.GetMentions(LinqToTwitter.TwitterContext,LinqToTwitter.Help)">
            <summary>
            Retrieves a queryable collection of mentions, and returns it.
            </summary>
            <param name="context">The Twitter context.</param>
            <param name="help">The object with Twitter API request rate limits.</param>
            <returns>A queryable collection of mentions.</returns>
            <remarks>
            If the request cannot be performed because the API limit of number of calls has been reached, an empty queryable collection is returned. 
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.ProcessPosts(CMS.SocialMarketing.TwitterAccountInfo,System.DateTime,LinqToTwitter.TwitterContext,LinqToTwitter.Help)">
            <summary>
            Collects insights for posts that belong to the specified Twitter account, if the Twitter API request rate limits allow it.
            </summary>
            <param name="account">The Twitter account.</param>
            <param name="currentDateTime">The current date and time.</param>
            <param name="context">The Twitter context.</param>
            <param name="help">The object with Twitter API request rate limits.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.ProcessPost(CMS.SocialMarketing.TwitterPostInfo,System.DateTime,LinqToTwitter.TwitterContext)">
            <summary>
            Collects insights for the specified post.
            </summary>
            <param name="post">The Twitter post.</param>
            <param name="currentDateTime">The current date and time.</param>
            <param name="context">The Twitter context.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.TryPerformRequest(System.String,System.String,LinqToTwitter.Help,System.Action)">
            <summary>
            Performs the specified action, if the current Twitter API request rate limits allow it.
            </summary>
            <param name="categoryName">The API resource category name.</param>
            <param name="resourceName">The API resource name.</param>
            <param name="help">The object with Twitter API request rate limits.</param>
            <param name="request">The optional action to perform, if the Twitter API request rate limits allow it.</param>
            <returns>A value indicating whether the specified action was performed.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.CreateContext(CMS.SocialMarketing.TwitterAccountInfo)">
            <summary>
            Creates a new instance of the Twitter context, and returns it.
            </summary>
            <param name="channel">The Twitter channel to create the context for.</param>
            <returns>A new instance of the Twitter context.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.GetOrCreateInsight(System.String,System.String,System.String)">
            <summary>
            Gets or creates a Twitter insight, and returns it.
            </summary>
            <param name="codeName">The insight code name.</param>
            <param name="externalId">The insight channel external identifier.</param>
            <param name="periodType">The insight period type.</param>
            <returns>A Twitter insight.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterInsightsCollectionTask.IsFeatureAvailable(CMS.Scheduler.TaskInfo)">
            <summary>
            Checks whether Insights collection is available.
            </summary>
            <param name="taskInfo">Task info.</param>
            <returns>True if Insights collection is available, false otherwise.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterRetryPolicyProvider">
            <summary>
            Provides methods for performing retry policy when the exception is caused by a network problem.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterRetryPolicyProvider.ApplyRetryPolicy">
            <summary>
            Increases retry count, and checks whether the count exceeds retry limit.
            </summary>
            <returns>True if the policy was successfully applied and another try can be performed; false if the exception should be handled in standard pipeline.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterRetryPolicyProvider.IsEligible(System.Exception)">
            <summary>
            Checks whether the given <paramref name="exception"/> is eligible for the retry policy. Given exception has to be <see cref="T:LinqToTwitter.TwitterQueryException"/>, 
            cannot have known error code provided by twitter API and the underlying inner exception has to be <see cref="T:System.Net.WebException"/>.
            In other cases the exception is not eligible and should be proceeded in the standard pipeline.
            </summary>
            <param name="exception">Exception to be checked</param>
            <returns>True if the exception is candidate for retry policy; otherwise, false</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterRetryPolicyProvider.Reset">
            <summary>
            Resets the retry count to zero.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterAccountInfo">
            <summary>
            Represents a Twitter account (channel).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterAccountInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterAccountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountAccessToken">
            <summary>
            Gets or sets the access token of the Twitter account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountAccessTokenSecret">
            <summary>
            Gets or sets the access token secret of the Twitter account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountTwitterApplicationID">
            <summary>
            Gets or sets the identifier of the Twitter application object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountUserID">
            <summary>
            Gets or sets the Twitter user identifier.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountFollowers">
            <summary>
            Gets or sets the number of followers on Twitter.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountMentions">
            <summary>
            Gets or sets the number of mentions on Twitter.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountIsDefault">
            <summary>
            Gets or sets indicator whether Account is default for its site
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountMentionsRange">
            <summary>
            Gets or sets the range of identifiers on Twitter mentions timeline that the number of mentions was computed from.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountGUID">
            <summary>
            Gets or sets the globally unique identifier of the Twitter account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountSiteID">
            <summary>
            Gets or sets the site identifier of the Twitter account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountLastModified">
            <summary>
            Gets or sets the timestamp of the Twitter account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountName">
            <summary>
            Gets or sets the code name of the Twitter account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountID">
            <summary>
            Gets or sets the identifier of the Twitter account.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterAccountInfo.TwitterAccountDisplayName">
            <summary>
            Gets or sets the display name of the Twitter account.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfo.DeleteObject">
            <summary>
            Deletes this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfo.GetValue(System.String)">
            <summary>
            Gets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfo.#ctor">
            <summary>
            Initializes a new instance of the TwitterAccountInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the TwitterAccountInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterAccountInfoProvider">
            <summary>
            Provides management of Twitter accounts.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the TwitterAccountInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetTwitterAccounts">
            <summary>
            Returns a query for all the TwitterAccountInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetTwitterAccountInfo(System.Int32)">
            <summary>
            Retrieves a Twitter account with the specified identifier, and returns it.
            </summary>
            <param name="accountId">Twitter account identifier.</param>
            <returns>A Twitter account with the specified identifier, if found; otherwise, null.</returns>      
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetTwitterAccountInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a Twitter account with the specified identifier, and returns it.
            </summary>
            <param name="codeName">Twitter account code name.</param>
            <param name="siteId">ID of the site the account is for.</param>
            <returns>A Twitter account with the specified identifier, if found; otherwise, null.</returns>      
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetTwitterAccountInfo(System.Guid)">
            <summary>
            Returns TwitterAccountInfo with specified GUID.
            </summary>
            <param name="guid">TwitterAccountInfo GUID</param>                
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.SetTwitterAccountInfo(CMS.SocialMarketing.TwitterAccountInfo)">
            <summary>
            Updates or creates the specified Twitter account.
            </summary>
            <param name="account">Twitter account to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.DeleteTwitterAccountInfo(CMS.SocialMarketing.TwitterAccountInfo)">
            <summary>
            Deletes the specified Twitter account.
            </summary>
            <param name="account">Twitter account to be deleted.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.DeleteTwitterAccountInfo(System.Int32)">
            <summary>
            Deletes the Twitter account with specified identifier.
            </summary>
            <param name="accountId">Twitter account identifier.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetTwitterAccounts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the TwitterAccountInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetDefaultTwitterAccount(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the default TwitterAccount for given site
            </summary>
            <param name="siteId">Site for which you want the default TwitterAccount</param>
            <returns>Default TwitterAccount for given site, null if no default TwitterAccount exists</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.SetInfo(CMS.SocialMarketing.TwitterAccountInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.DeleteInfo(CMS.SocialMarketing.TwitterAccountInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetTwitterAccountsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the TwitterAccountInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterAccountInfoProvider.GetDefaultTwitterAccountInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the default TwitterAccount for given site
            </summary>
            <param name="siteId">Site for which you want the default TwitterAccount</param>
            <returns>Default TwitterAccount for given site, null if no default TwitterAccount exists</returns>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterApplicationInfo">
            <summary>
            Represents a Twitter application.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterApplicationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterApplicationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationConsumerKey">
            <summary>
            Gets or sets the consumer key of the Twitter application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationConsumerSecret">
            <summary>
            Gets or sets the consumer secret of the Twitter application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationID">
            <summary>
            Gets or sets the identifier of the Twitter application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationSiteID">
            <summary>
            Gets or sets the site identifier of the Twitter application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationName">
            <summary>
            Gets or sets the code name of the Twitter application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationDisplayName">
            <summary>
            Gets or sets the display name of the Twitter application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationLastModified">
            <summary>
            Gets or sets the timestamp of the Twitter application.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterApplicationInfo.TwitterApplicationGUID">
            <summary>
            Gets or sets the globally unique identifier of the Twitter application.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfo.DeleteObject">
            <summary>
            Deletes this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfo.GetValue(System.String)">
            <summary>
            Gets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfo.#ctor">
            <summary>
            Initializes a new instance of the TwitterApplicationInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the TwitterApplicationInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterApplicationInfoProvider">
            <summary>
            Provides management of Twitter applications.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the TwitterApplicationInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.GetTwitterApplications">
            <summary>
            Returns a query for all the TwitterApplicationInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.GetTwitterApplicationInfo(System.Int32)">
            <summary>
            Retrieves a Twitter application with the specified identifier, and returns it.
            </summary>
            <param name="applicationId">Twitter application identifier.</param>
            <returns>A Twitter application with the specified identifier, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.GetTwitterApplicationInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a Twitter application matching the specified criteria, and returns it.
            </summary>
            <param name="applicationName">Twitter application name.</param>
            <param name="siteName">Site name.</param>
            <returns>A Twitter application matching the specified criteria, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.GetTwitterApplicationInfo(System.Guid)">
            <summary>
            Returns TwitterApplicationInfo with specified GUID.
            </summary>
            <param name="guid">TwitterApplicationInfo GUID</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.SetTwitterApplicationInfo(CMS.SocialMarketing.TwitterApplicationInfo)">
            <summary>
            Updates or creates the specified Twitter application.
            </summary>
            <param name="application">Twitter application to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.DeleteTwitterApplicationInfo(CMS.SocialMarketing.TwitterApplicationInfo)">
            <summary>
            Deletes the specified Twitter application.
            </summary>
            <param name="application">Twitter application to be deleted.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.DeleteTwitterApplicationInfo(System.Int32)">
            <summary>
            Deletes the Twitter application with specified identifier.
            </summary>
            <param name="applicationId">Twitter application identifier.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.GetTwitterApplications(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves a dataset of Twitter applications for the specified site, and returns it.
            </summary>
            <param name="siteId">Site ID.</param>
            <returns>A dataset of Twitter applications for the specified site.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.SetInfo(CMS.SocialMarketing.TwitterApplicationInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.DeleteInfo(CMS.SocialMarketing.TwitterApplicationInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.GetTwitterApplicationsInternal(System.Int32)">
            <summary>
            Returns a query for all the TwitterApplicationInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterApplicationInfoProvider.EnsureScheduledTask(System.Int32)">
            <summary>
            Determines whether there is a scheduled task to collect Twitter insights. If it does not, creates the task.
            </summary>
            <param name="siteId">The identifier of the site where the task will be created.</param>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterConfiguration">
            <summary>
            Represents information about a configuration of Twitter.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterConfiguration.ShortUrlLength">
            <summary>
            Length of the URL shortened by Twitter's shortener t.co.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterConfiguration.ShortUrlLengthHttps">
            <summary>
            Length of the URL shortened by Twitter's shortener t.co if https protocol is used.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterConfiguration.#ctor">
            <summary>
            Initializes a new instance of the TwitterConfiguration with default values.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterHelper">
            <summary>
            Provides helper method for Twitter social network.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterHelper.TwitterConfiguration">
            <summary>
            Gets Twitter configuration. 
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.PublishTweet(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Publishes the new tweet on the Twitter channel and returns the Twitter's tweet ID.
            </summary>
            <param name="consumerKey">The consumer key that will be used for authentication.</param>
            <param name="consumerSecret">The consumer secret that will be used for authentication.</param>
            <param name="accessToken">The access token that will be used for authentication.</param>
            <param name="accessTokenSecret">The access token secret that will be used for authentication.</param>
            <param name="postText">Text that will be published.</param>
            <returns>Twitter identifier of the new tweet.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.DeleteTweet(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Deletes tweet with given ID from Twitter.
            </summary>
            <param name="consumerKey">The consumer key that will be used for authentication.</param>
            <param name="consumerSecret">The consumer secret that will be used for authentication.</param>
            <param name="accessToken">The access token that will be used for authentication.</param>
            <param name="accessTokenSecret">The access token secret that will be used for authentication.</param>
            <param name="tweetId">Identifier of the tweet on Twitter.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.GetTwitterUserId(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the Twitter user identifier for the specified credentials, and returns it.
            </summary>
            <param name="consumerKey">The consumer key that will be used for authentication.</param>
            <param name="consumerSecret">The consumer secret that will be used for authentication.</param>
            <param name="accessToken">The access token that will be used for authentication.</param>
            <param name="accessTokenSecret">The access token secret that will be used for authentication.</param>
            <returns>The Twitter user identifier for the specified credentials.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.PublishTweetInternal(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Publishes the new tweet on the Twitter channel and returns the Twitter's tweet ID.
            </summary>
            <param name="consumerKey">The consumer key that will be used for authentication.</param>
            <param name="consumerSecret">The consumer secret that will be used for authentication.</param>
            <param name="accessToken">The access token that will be used for authentication.</param>
            <param name="accessTokenSecret">The access token secret that will be used for authentication.</param>
            <param name="postText">Text that will be published.</param>
            <returns>Twitter identifier of the new tweet.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.DeleteTweetInternal(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Deletes tweet with given ID from Twitter.
            </summary>
            <param name="consumerKey">The consumer key that will be used for authentication.</param>
            <param name="consumerSecret">The consumer secret that will be used for authentication.</param>
            <param name="accessToken">The access token that will be used for authentication.</param>
            <param name="accessTokenSecret">The access token secret that will be used for authentication.</param>
            <param name="tweetId">Identifier of the tweet on Twitter.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.DeleteTweetAsync(LinqToTwitter.PinAuthorizer,System.UInt64)">
            <summary>
            Deletes tweet with given ID from Twitter.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.GetTwitterUserIdInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves the Twitter user identifier for the specified credentials, and returns it.
            </summary>
            <param name="consumerKey">The consumer key that will be used for authentication.</param>
            <param name="consumerSecret">The consumer secret that will be used for authentication.</param>
            <param name="accessToken">The access token that will be used for authentication.</param>
            <param name="accessTokenSecret">The access token secret that will be used for authentication.</param>
            <returns>The Twitter user identifier for the specified credentials.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.GetTwitterConfiguration">
            <summary>
            Gets Twitter configuration using Twitter API. If it is not possible to get configuration, default configuration will be used.
            </summary>
            <returns>Twitter configuration.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.GetConfigurationFromTwitter(CMS.SocialMarketing.TwitterAccountInfo)">
            <summary>
            Gets configuration using Twitter API with credentials of given Twitter account. If it is not possible to get configuration, exception is thrown.
            </summary>
            <param name="account">Twitter account with credentials that will be used when communication with API.</param>
            <returns>Actual Twitter configuration.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterHelper.IsPostNotFoundErrorCode(System.Int32)">
            <summary>
            Indicates whether twitter post with given ID was not found based on response error code.
            </summary>
            <param name="errorCode">Error code returned by <see cref="T:LinqToTwitter.TwitterQueryException"/></param>
            <remarks>This can occur when the user manually deletes the post on the twitter, instead of deleting it through CMS API.</remarks>
            <returns><c>true</c> when post not found; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterPostInfo">
            <summary>
            Represents a Twitter post.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostTwitterAccountID">
            <summary>
            Gets or sets the identifier of the Twitter account (channel) object.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostCampaignID">
            <summary>
            Gets or sets the campaign ID the Twitter post belongs to.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostPostAfterDocumentPublish">
            <summary>
            Indicates whether the post has to be posted to Twitter after the related document gets published.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostDocumentGUID">
            <summary>
            Gets or sets the document GUID the Twitter post belongs to.  
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostIsCreatedByUser">
            <summary>
            Indicates whether the tweet was created by user using autopost form control or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostText">
            <summary>
            Gets or sets the text content of the Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostURLShortenerType">
            <summary>
            Gets or sets the type of the URL shortener that will be used to shorten links in this Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostExternalID">
            <summary>
            Gets or sets the Twitter ID of the Twitter post (tweet).
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostPublishedDateTime">
            <summary>
            Gets or sets the date and time when the Twitter post was published on Twitter channel.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostScheduledPublishDateTime">
            <summary>
            Gets or sets the date and time when the Twitter post is scheduled for publishing on Twitter channel.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostErrorCode">
            <summary>
            Gets or sets the code of the error that occurred while publishing the Twitter post.
            Positive numbers are Twitter's error codes, negative numbers are our custom error codes.
            <see cref="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_UNKNOWN_ERROR"/> Unexpected error that was not returned by Twitter.
            <see cref="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_INVALID_ACCOUNT"/> Account doesn't exist or it is not valid.
            <see cref="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_INVALID_APPLICATION"/> Application doesn't exist or it is not valid.
            <see cref="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_DOCUMENT_NOT_EXIST"/> Related document doesn't exist.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostFavorites">
            <summary>
            Gets or sets the number that indicates approximately how many times this tweet has been favored by Twitter users.
            </summary>
            <remarks>
            Favorites were renamed to likes in twitter application.
            </remarks>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostRetweets">
            <summary>
            Gets or sets the number of times this tweet has been retweeted. 
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostInsightsUpdateDateTime">
            <summary>
            Gets or sets the date and time when the tweet insights were last updated.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostGUID">
            <summary>
            Gets or sets the globally unique identifier of the Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostSiteID">
            <summary>
            Gets or sets the site identifier of the Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostLastModified">
            <summary>
            Gets or sets the timestamp of the Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.TwitterPostID">
            <summary>
            Gets or sets the identifier of the Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.ObjectDisplayName">
            <summary>
            Gets or sets the display name of the Twitter post.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.IsPublished">
            <summary>
            Indicates whether the post is published or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.IsFaulty">
            <summary>
            Indicates whether the post is faulty (there was an error when publishing the post or post is scheduled and was not published at proper time) or not.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.TwitterPostInfo.IsEditable">
            <summary>
            Indicates whether the post can be edited or not. Faulty or published posts cannot be edited.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfo.DeleteObject">
            <summary>
            Deletes this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfo.SetObject">
            <summary>
            Updates this object.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfo.#ctor">
            <summary>
            Initializes a new instance of the TwitterPostInfo class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfo.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the TwitterPostInfo class with the specified data.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.SocialMarketing.TwitterPostInfoProvider">
            <summary>
            Provides management of Twitter posts.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_UNKNOWN_ERROR">
            <summary>
            Error code represents unknown error when publishing the post.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_INVALID_ACCOUNT">
            <summary>
            Error code represents unexpected error with Twitter account (account doesn't exist or it isn't valid).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_INVALID_APPLICATION">
            <summary>
            Error code represents unexpected error with Twitter application (application doesn't exist or it isn't valid).
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfoProvider.ERROR_CODE_DOCUMENT_NOT_EXIST">
            <summary>
            Error code represents the post belongs to the document that doesn't exist.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfoProvider.POST_DELAY_TOLERANCE">
            <summary>
            Scheduled posts which are late on publishing for more than POST_DELAY_TOLERANCE are reported as faulty.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.TwitterPostInfoProvider.IMMEDIATE_PUBLISH_TOLERANCE">
            <summary>
            Post publishing tolerance interval - posts published within (now + IMMEDIATE_PUBLISH_TOLERANCE) are published immediately as if no delay was set.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the TwitterPostInfoProvider class.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPosts">
            <summary>
            Returns a query for all the TwitterPostInfo objects.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPostInfo(System.Int32)">
            <summary>
            Retrieves a Twitter post with the specified identifier, and returns it.
            </summary>
            <param name="postId">Twitter post identifier.</param>
            <returns>A Twitter post with the specified identifier, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.SetTwitterPostInfo(CMS.SocialMarketing.TwitterPostInfo)">
            <summary>
            Updates or creates the specified Twitter post.
            </summary>
            <param name="post">Twitter post to be updated or created.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.DeleteTwitterPostInfo(CMS.SocialMarketing.TwitterPostInfo)">
            <summary>
            Deletes the specified Twitter post from both the Twitter and the CMS database.
            </summary>
            <param name="post">Twitter post to be deleted.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.DeleteTwitterPostInfo(System.Int32)">
            <summary>
            Deletes the Twitter post with specified identifier from both the Twitter and the CMS database.
            </summary>
            <param name="postId">Twitter post identifier.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPosts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the TwitterPostInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPostInfoByAccountId(System.Int32)">
            <summary>
            Retrieves an object query of Twitter posts for the specified Twitter account (channel) identifier, and returns it.
            </summary>
            <param name="twitterAccountId">Twitter account (channel) identifier.</param>
            <returns>An object query of Twitter posts for the specified account (channel).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPostInfosByDocumentGuid(System.Guid,System.Int32)">
            <summary>
            Retrieves an object query of Twitter posts for the specified document identifier, and returns it.
            </summary>
            <param name="documentGuid">Document identifier.</param>
            <param name="documentSiteId">Document site identifier.</param>
            <returns>An object query of Twitter posts for the specified document.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.PublishTwitterPost(System.Int32)">
            <summary>
            Publishes the Twitter post on the appropriate Twitter channel. Throws an exception if something goes wrong.
            Uses scheduler for future posts.
            When modifying scheduled posts, always call the <see cref="M:CMS.SocialMarketing.TwitterPostInfoProvider.TryCancelScheduledPublishTwitterPost(System.Int32)"/> first.
            </summary>
            <seealso cref="M:CMS.SocialMarketing.TwitterPostInfoProvider.TryCancelScheduledPublishTwitterPost(System.Int32)"/>
            <seealso cref="M:CMS.SocialMarketing.TwitterPostInfoProvider.TryCancelScheduledPublishTwitterPost(CMS.SocialMarketing.TwitterPostInfo)"/>
            <param name="postInfoId">Identifier of the TwitterPostInfo that will be published.</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.TryCancelScheduledPublishTwitterPost(System.Int32)">
            <summary>
            Tries to cancel scheduled publish of Twitter post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.TwitterPostInfoProvider.PublishTwitterPost(System.Int32)"/>.
            (Has to be called before modification since Twitter does not allow published posts to be modified).
            There is no need to call this method when deleting a post since posts can be deleted even after publication.
            </summary>
            <param name="postInfoId">Identifier of the TwitterPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled, false if the post has already been published.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.TryCancelScheduledPublishTwitterPost(CMS.SocialMarketing.TwitterPostInfo)">
            <summary>
            Tries to cancel scheduled publish of Twitter post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.TwitterPostInfoProvider.PublishTwitterPost(System.Int32)"/>.
            (Has to be called before modification since Twitter does not allow published posts to be modified).
            There is no need to call this method when deleting a post since posts can be deleted even after publication.
            </summary>
            <param name="postInfo">The TwitterPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled, false if the post has already been published.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetPostPublishStateMessage(CMS.SocialMarketing.TwitterPostInfo,CMS.Base.IUserInfo,CMS.Base.ISiteInfo,System.Boolean)">
            <summary>
            Gets localized message that describes the post's publish state.
            </summary>
            <param name="post">Twitter post.</param>
            <param name="user">User whose time zone will be used when formating date time information.</param>
            <param name="site">Site whose time zone will be used when formating date time information.</param>
            <param name="shortMessage">Indicates if short message has to be used instead of detail message.</param>
            <returns>Localized status message.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.PublishTwitterPostToTwitter(System.Int32)">
            <summary>
            Publishes the Twitter post on the appropriate Twitter channel immediately.
            </summary>
            <param name="postInfoId">Identifier of the TwitterPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to Twitter or the account is not valid.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.DeleteTwitterPostInfoInternal(CMS.SocialMarketing.TwitterPostInfo)">
            <summary>
            Deletes the specified Twitter post from both the Twitter and the CMS database.
            Deletes scheduled task as well.
            </summary>
            <param name="post">Twitter post to be deleted.</param>
            <exception cref="T:System.Exception">When twitter account or application not found or tweet not deleted successfully.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPostsInternal(System.Int32)">
            <summary>
            Returns a query for all the TwitterPostInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPostInfoByAccountIdInternal(System.Int32)">
            <summary>
            Retrieves an object query of Twitter posts for the specified Twitter account (channel) identifier, and returns it.
            </summary>
            <param name="twitterAccountId">Twitter account (channel) identifier.</param>
            <returns>An object query of Twitter posts for the specified account (channel).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPostInfosByDocumentGuidInternal(System.Guid,System.Int32)">
            <summary>
            Retrieves an object query of Twitter posts for the specified document identifier, and returns it.
            </summary>
            <param name="documentGuid">Document identifier.</param>
            <param name="documentSiteId">Document site identifier.</param>
            <returns>An object query of Twitter posts for the specified document.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.PublishTwitterPostInternal(System.Int32)">
            <summary>
            Publishes the Twitter post on the appropriate Twitter channel.
            Uses scheduler for future posts.
            </summary>
            <param name="postInfoId">Identifier of the TwitterPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to Twitter or the account is not valid.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.TryCancelScheduledPublishTwitterPostInternal(CMS.SocialMarketing.TwitterPostInfo)">
            <summary>
            Tries to cancel scheduled publish of Twitter post. If successful, the post can be modified using <see cref="M:CMS.SocialMarketing.TwitterPostInfoProvider.PublishTwitterPost(System.Int32)"/>.
            (Has to be called before modification since Twitter does not allow published posts to be modified).
            There is no need to call this method when deleting a post since posts can be deleted even after publication.
            </summary>
            <param name="postInfo">The TwitterPostInfo that shall be canceled.</param>
            <returns>True if successfully canceled (or neither post or scheduled task does not exist), false if the post has already been published (or the task is already running).</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.PublishTwitterPostToTwitterInternal(System.Int32)">
            <summary>
            Publishes the Twitter post on the appropriate Twitter channel. Throws an exception if something goes wrong.
            </summary>
            <param name="postInfoId">Identifier of the TwitterPostInfo that will be published.</param>
            <exception cref="T:System.Exception">When post does not exist, has already been published to Twitter or the account is not valid.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetPostPublishStateMessageInternal(CMS.SocialMarketing.TwitterPostInfo,CMS.Base.IUserInfo,CMS.Base.ISiteInfo,System.Boolean)">
            <summary>
            Gets localized message that describes the post's publish state.
            </summary>
            <param name="post">Twitter post.</param>
            <param name="user">User whose time zone will be used when formating date time information.</param>
            <param name="site">Site whose time zone will be used when formating date time information.</param>
            <param name="shortMessage">Indicates if short message has to be used instead of detail message.</param>
            <returns>Localized status message.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.TwitterPostInfoProvider.GetTwitterPostErrorMessage(System.Int32)">
            <summary>
            Gets localized error message that describes the given Twitter's error code.
            </summary>
            <param name="errorCode">Error code that Twitter returned.</param>
            <returns>Localized error message.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.BitLyShortener.#ctor">
            <summary>
            Public default constructor
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.BitLyShortener.#ctor(CMS.SocialMarketing.URLShortening.IURLShortenerHelperEnvironment)">
            <summary>
            Internal constructor for testing purposes
            </summary>
            <param name="env">Environment mock</param>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.BitLyShortener.IsAvailable(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Determines whether shortener is available
            </summary>
            <param name="site">Site for whom availability you want to know</param>
            <returns>True if available.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.BitLyShortener.Shorten(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Shortens the given URL via bit.ly.
            </summary>
            <param name="url">URL to be shortened</param>
            <param name="site">Context to get settings for</param>
            <returns>Shortened URL on success, <paramref name="url"/> otherwise.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.URLShortening.IURLShortener">
            <summary>
            Provides a template for what any URLshortener class should do.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.IURLShortener.IsAvailable(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Determines whether shortener is available
            </summary>
            <param name="site">Site for whom availability you want to know</param>
            <returns>True if available.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.IURLShortener.Shorten(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Shortens the given URL via an URLShortener
            </summary>
            <param name="url">URL to be shortened</param>
            <param name="site">Context to get settings for</param>
            <returns>Shortened URL on succes, <paramref name="url"/> otherwise.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.URLShortening.IURLShortenerHelperEnvironment">
            <summary>
            This interface is designed purely to separate URLShortener helper from the CMS environment.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.IURLShortenerHelperEnvironment.GetStringSettingValue(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Provides settings for URLShortenerHelper.
            </summary>
            <param name="key">SetteingsKey</param>
            <param name="site">Site which you want the settings for</param>
            <returns>Site's settings for given key or global settings. Empty string if key does not exist.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.IURLShortenerHelperEnvironment.URLEncode(System.String)">
            <summary>
            Provides URL-Encoding function. ' ' => %20 etc.
            </summary>
            <param name="str">string to be URL-Encoded</param>
            <returns>URL-Encoded original string</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.IURLShortenerHelperEnvironment.LogWarning(System.String,System.String,System.Exception,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Logs a warning if an URLshortening failed.
            </summary>
            <param name="source">Source of the event (Content, Administration, etc.)</param>
            <param name="eventCode">Event code (UPDATEDOC, SENDEMAIL, DELETE, etc.)</param>
            <param name="eventException">Exception to be logged</param>
            <param name="site">Current site</param>
        </member>
        <member name="T:CMS.SocialMarketing.URLShortening.TinyURLShortener">
            <summary>
            Represents a provider for TinyURL
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.TinyURLShortener.#ctor">
            <summary>
            Public default constructor
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.TinyURLShortener.#ctor(CMS.SocialMarketing.URLShortening.IURLShortenerHelperEnvironment)">
            <summary>
            Internal constructor for testing purposes
            </summary>
            <param name="env">Environment mock</param>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.TinyURLShortener.IsAvailable(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Determines whether shortener is available
            </summary>
            <param name="site">Site for whom availability you want to know</param>
            <returns>True if available.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.TinyURLShortener.Shorten(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Shortens the given URL via TinyURL
            </summary>
            <param name="url">URL to be shortened</param>
            <param name="site">Context to get settings for</param>
            <returns>Shortened URL on succes, <paramref name="url"/> otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.URLShortenerHelperEnvironment.URLEncode(System.String)">
            <summary>
            Provides URL-Encoding function. ' ' => %20 etc.
            </summary>
            <param name="str">string to be URL-Encoded</param>
            <returns>URL-Encoded original string</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.URLShortenerHelperEnvironment.GetStringSettingValue(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Provides settings for URLShortenerHelper.
            </summary>
            <param name="key">SetteingsKey</param>
            <param name="site">Site which you want the settings for</param>
            <returns>Site's settings for given key or global settings. Empty string if key does not exist.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortening.URLShortenerHelperEnvironment.LogWarning(System.String,System.String,System.Exception,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Logs a warning if an URLshortening failed.
            </summary>
            <param name="source">Source of the event (Content, Administration, etc.)</param>
            <param name="eventCode">Event code (UPDATEDOC, SENDEMAIL, DELETE, etc.)</param>
            <param name="eventException">Exception to be logged</param>
            <param name="site">Current site</param>
        </member>
        <member name="T:CMS.SocialMarketing.SocialNetworkTypeEnum">
            <summary>
            Types of social networks.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialNetworkTypeEnum.Twitter">
            <summary>
            Twitter
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialNetworkTypeEnum.Facebook">
            <summary>
            Facebook
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialNetworkTypeEnum.LinkedIn">
            <summary>
            LinkedIn
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.SocialNetworkTypeEnum.None">
            <summary>
            None - Error state - null replacement
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.URLParser">
            <summary>
            Provides methods for replacing URLs in a text.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.mURLRegex">
            <summary>
            The URL regular expression.
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.URLParser.URLRegex">
            <summary>
            Gets the URL regular expression.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.URLParser.Replace(System.String,System.Func{CMS.SocialMarketing.URLParserMatch,System.String})">
            <summary>
            In a specified input string, replaces all URLs with a string returned by an evaluator.
            </summary>
            <param name="input">The string to search for URLs.</param>
            <param name="evaluator">A custom method that examines each match and returns a replacement string.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched URL.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLParser.EvaluateMatch(System.Text.RegularExpressions.Match,System.Func{CMS.SocialMarketing.URLParserMatch,System.String})">
            <summary>
            Examines a matched URL and returns a replacement string.
            </summary>
            <param name="match">An URL match.</param>
            <param name="evaluator">A custom method that examines an URL match and returns a replacement string.</param>
            <returns>A replacement string.</returns>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_DOMAIN_GROUPNAME">
            <summary>
            The regular expression group name of the matched domain.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_PROTOCOL_GROUPNAME">
            <summary>
            The regular expression group name of the matched protocol.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_VALID_PRECEEDING_CHARS">
            <summary>
            Chars allowed to preced URL as a separator
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_VALID_UNICODE_CHARS">
            <summary>
             Any non-space, non-punctuation characters. \p{Z} = any kind of whitespace or invisible separator.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_VALID_GTLD">
            <summary>
            Global top level domains
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_VALID_CCTLD">
            <summary>
            Top level domains
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_PUNYCODE">
            <summary>
            PunyCode is used to encode Unicode characters in URLs into chars allowed in URLs
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_IPV4_VALID_OCTET">
            <summary>
            One part of IPv4
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_IPV4_VALID_ADDRESS">
            <summary>
            IPv4 address
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_IPV6_VALID_SEGMENT">
            <summary>
            One segmentf of IPv6 address in the 4-hexadecimal-digit-format
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_IPV6_VALID_ADDRESS">
            <summary>
            IPv6 in whatever format allowed by RFC
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_VALID_DOMAIN">
            <summary>
            Valid domain name as a whole.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_BALANCED_PARENS">
            <summary>
            Allow URL paths to contain balanced parens
            1. Used in Wikipedia URLs like /Primer_(film)
            2. Used in IIS sessions like /S(dfd346)/
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.URL_VALID_PATH_ENDING_CHARS">
            <summary>
            Valid end-of-path chracters (so /foo. does not gobble the period).
            Allow <![CDATA[=&#]]> for empty URL parameters and other URL-join artifacts
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLParser.VALID_URL_PATTERN_STRING">
            <summary>
            The whole URL recognition pattern.
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.URLParserMatch">
            <summary>
            Represents a URL extracted by <see cref="T:CMS.SocialMarketing.URLParser"/>
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.URLParserMatch.URL">
            <summary>
            Whole URL
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.URLParserMatch.Protocol">
            <summary>
            Protocol
            </summary>
        </member>
        <member name="P:CMS.SocialMarketing.URLParserMatch.Domain">
            <summary>
            Domain
            </summary>
        </member>
        <member name="T:CMS.SocialMarketing.URLShortenerHelper">
            <summary>
            Provides methods for shortening URLs using URL shortening services.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLShortenerHelper.mBitLy">
            <summary>
            Protocol extraction regexp
            </summary>
            <remarks>
            Static because of backward compatibility and public accessor being static
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.#ctor">
            <summary>
            Default constructor used to create default HelperObject.
            </summary>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.#ctor(CMS.SocialMarketing.URLShortening.IURLShortenerHelperEnvironment,CMS.SocialMarketing.URLShortening.IURLShortener,CMS.SocialMarketing.URLShortening.IURLShortener)">
            <summary>
            Constructor fopr testing purposes
            </summary>
            <param name="environment">Environment behaviour mock</param>
            <param name="bitLy">bit.ly shortener mock</param>
            <param name="tinyUrl">tinyurl shortener mock</param>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.GetDefaultURLShortenerForSocialNetwork(CMS.SocialMarketing.SocialNetworkTypeEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves the URL shortener for the specified social network posts, and returns it.
            </summary>
            <param name="socialNetwork">The type of the social network.</param>
            <param name="siteIdentifier">Determines which site's settings are used. Provide null to use global settings.</param>
            <returns>The URL shortener for the specified social network posts.</returns>
            <remarks>
            If the URL shortener is not set or the value in the settings is not valid or the social network with the specified name does not exist,
            a special value URLShortenerTypeEnum.None is returned.
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.GetAvailableURLShorteners(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Creates a collection of available URL shorteners, and returns it.
            </summary>
            <param name="siteIdentifier">Determines which site's URL shortener settings are used. Provide null to use global settings.</param>
            <returns>A collection of available URL shorteners.</returns>
            <remarks>
            The collection contains URL shorteners that either require no configuration, or where the configuration is present.
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.IsURLShortenerAvailable(CMS.SocialMarketing.URLShortenerTypeEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Provides information about availability of the URL shortener.
            If specified shortener is configured for given site, true is returned. False otherwise.
            If shortener is URLShortenerTypeEnum.None, true is returned as this shortener is always available.
            </summary>
            <param name="shortener">Shortener whose availability you're interested in.</param>
            <param name="siteIdentifier">Determines which site's URL shortener settings are used. Provide null to use global settings.</param>
            <returns>
            If specified shortener is configured for given site, true is returned. False otherwise.
            If shortener is URLShortenerTypeEnum.None, true is returned as this shortener is always available.
            </returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.ShortenURLsInText(System.String,CMS.SocialMarketing.URLShortenerTypeEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Shortens URLs in given text using selected URL shortener. Throws an exception if shortener is not available for the given site.
            </summary>
            <param name="text">Text in that all URLs will be shortened.</param>
            <param name="shortener">Shortener that will be used for shortening.</param>
            <param name="siteIdentifier">Determines which site's URL shortener settings are used. Provide null to use global settings.</param>
            <returns>Text with shortened URLs.</returns>
            <exception cref="T:System.Exception">Shortener is not available for the given site.</exception>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.GetDefaultURLShortenerForSocialNetworkInternal(CMS.SocialMarketing.SocialNetworkTypeEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Retrieves the URL shortener for the specified social network posts, and returns it.
            </summary>
            <param name="socialNetwork">The type of the social network.</param>
            <param name="siteIdentifier">Determines which site's settings are used. Provide null to use global settings.</param>
            <returns>The URL shortener for the specified social network posts.</returns>
            <remarks>
            If the URL shortener is not set or the value in the settings is not valid or the social network with the specified name does not exist,
            a special value URLShortenerTypeEnum.None is returned.
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.GetAvailableURLShortenersInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Creates a collection of available URL shorteners, and returns it.
            </summary>
            <param name="siteIdentifier">Determines which site's URL shortener settings are used. Provide null to use global settings.</param>
            <returns>A collection of available URL shorteners.</returns>
            <remarks>
            The collection contains URL shorteners that either require no configuration, or where the configuration is present.
            </remarks>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.IsURLShortenerAvailableInternal(CMS.SocialMarketing.URLShortenerTypeEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Provides information about availability of the URL shortener.
            If specified shortener is configured for given site, true is returned. False otherwise.
            If shortener is URLShortenerTypeEnum.None, true is returned as this shortener is always available.
            </summary>
            <param name="shortener">Shortener whose availability you're interested in.</param>
            <param name="siteIdentifier">Determines which site's URL shortener settings are used. Provide null to use global settings.</param>
            <returns>
            If specified shortener is configured for given site, true is returned. False otherwise.
            If shortener is URLShortenerTypeEnum.None, true is returned as this shortener is always available.
            </returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.ShortenURLsInTextInternal(System.String,CMS.SocialMarketing.URLShortenerTypeEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Shortens all URLs in provided text.
            Returns the same text with all URLs shortened by the specified shortener.
            If shortener is URLShortenerTypeEnum.None, original inputText is returned.
            </summary>
            <param name="inputText">Input text</param>
            <param name="shortener">Shortener of your choice</param>
            <param name="siteIdentifier">Site name used to get URLShortener settings, since they are site-specific.</param>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.GetShortenedURLInternal(CMS.SocialMarketing.URLParserMatch,CMS.SocialMarketing.URLShortenerTypeEnum,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Shortens provided URL
            </summary>
            <param name="longURLMatch">A Match containing the URL to be shortened.</param>
            <param name="shortener">URL shortener.</param>
            <param name="siteIdentifier">Site name used to get URLShortener settings, since they are site-specific.</param>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.IsURLShortened(CMS.SocialMarketing.URLParserMatch)">
            <summary>
            Determines whether an URL is shortened or to be shortened.
            </summary>
            <param name="match">URLMatch to be examined</param>
            <returns>True is URL looks like a shortened-one.</returns>
        </member>
        <member name="M:CMS.SocialMarketing.URLShortenerHelper.GetURLForShortening(CMS.SocialMarketing.URLParserMatch)">
            <summary>
            Prepares any found URL for shortening.
            </summary>
            <param name="match">URL to be prepared.</param>
            <returns>String representing the URL to be shortened.</returns>
        </member>
        <member name="T:CMS.SocialMarketing.URLShortenerTypeEnum">
            <summary>
            Enumeration with URL shortener types.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLShortenerTypeEnum.None">
            <summary>
            No URL shortener will be used.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLShortenerTypeEnum.Bitly">
            <summary>
            Bit.ly URL shortener.
            </summary>
        </member>
        <member name="F:CMS.SocialMarketing.URLShortenerTypeEnum.TinyURL">
            <summary>
            TinyURL.com shortener.
            </summary>
        </member>
    </members>
</doc>
