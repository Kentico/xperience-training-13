<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.WorkflowEngine</name>
    </assembly>
    <members>
        <member name="T:CMS.WorkflowEngine.AbstractWorkflowManager`3">
            <summary>
            Abstract class for managing the workflow procedure.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mEventLogSource">
            <summary>
            Event log source name.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mMacroResolver">
            <summary>
            Inner MacroResolver object.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mSendEmails">
            <summary>
            Indicates if notification e-mails should be sent.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mCheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked when the step is moved.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.CheckPermissions">
            <summary>
            Indicates if step permissions should be checked when the step is moved.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.EventLogSource">
            <summary>
            Event log source name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.MacroResolver">
            <summary>
            Macro resolver instance.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendEmails">
            <summary>
            Indicates if notification e-mails should be sent
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendEmailToModerator">
            <summary>
            Returns whether the e-mails should be sent to the current moderator (reflects the CMSWorkflowSendEmailToModerator web.config settings).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.ApplicationUrl">
            <summary>
            Application URL for macro resolver
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.CurrentHops">
            <summary>
            Number of currently processed hops
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.#cctor">
            <summary>
            Register generic type because of application reset.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetEmailResolver(`0,`1,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Workflow action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.SetActionStatusInternal(`0,`1,System.String)">
            <summary>
            Sets action status
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="status">Status string</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetActionStatusInternal(`0,`1)">
            <summary>
            Gets action status
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetEvalResolverInternal(`0,`1,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo)">
            <summary>
            Gets resolver for evaluation of transitions and source points
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="workflow">Workflow</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.MoveToSpecificStepInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,`2)">
            <summary>
            Moves the specified object to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="action">Action context</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.MoveToStepInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,System.Boolean)">
            <summary>
            Moves the specified object to the specified step in the workflow and returns the step.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the object</param>
            <param name="step">Target workflow step of the object</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetNextStepInfoInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo)">
            <summary>
            Returns list of next steps for given object.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetPreviousStepInfoInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Returns previous step information for given node.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetPreviousStepsInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of previous steps for current workflow cycle
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepTransitions(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Gets all workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepTransitions(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="transitionType">Type of transitions to get</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateTransitions(CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo,System.Int32,CMS.MacroEngine.MacroResolver)">
            <summary>
            Evaluates list of existing transitions for given workflow step and returns either one best match or multiple transitions matched
            </summary>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
            <param name="siteId">Site ID</param>
            <param name="resolver">Macro resolver to evaluate conditions</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateTransitions(CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo,System.Int32,CMS.MacroEngine.MacroResolver,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Evaluates list of existing transitions for given workflow step and returns either one best match or multiple transitions matched
            </summary>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
            <param name="siteId">Site ID</param>
            <param name="resolver">Macro resolver to evaluate conditions</param>
            <param name="transitionType">Transition type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendWorkflowEmails(CMS.WorkflowEngine.WorkflowEmailSettings)">
            <summary>
            Sends the workflow e-mails to given recipients.
            </summary>
            <param name="settings">E-mail sending settings</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.ProcessActions(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Processes all actions in scope.
            </summary>
            <param name="arguments">Initial action arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.HandleStepInternal(`0,`1,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean)">
            <summary>
            Handles step additional actions
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="user">User info</param>
            <param name="workflow">Workflow</param>
            <param name="currentStep">Current workflow step</param>
            <param name="step">Target workflow step</param>
            <param name="comment">Action comment</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.HandleStepTimeoutInternal(`0,`1,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Handles step timeout
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="user">User info</param>
            <param name="workflow">Workflow</param>
            <param name="currentStep">Current workflow step</param>
            <param name="step">Target workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.CreateActionArgumentsInternal(`0,`1,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Creates action arguments with prefilled parameters.
            </summary>
            <param name="infoObj">Current object in workflow</param>
            <param name="stateObj">State object</param>
            <param name="user">User</param>
            <param name="initialStep">Initial workflow step</param>
            <param name="actionStep">Initial workflow step</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.ProcessActionInternal(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Processes action connected to given step.
            </summary>
            <param name="arguments">Action arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.CreateActionArgumentsInternal(`0,`1,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.AbstractWorkflowManager{`0,`1,`2},System.String)">
            <summary>
            Creates action arguments.
            </summary>
            <param name="infoObj">Current object in workflow</param>
            <param name="stateObj">State object</param>
            <param name="user">User</param>
            <param name="initialStep">Initial workflow step</param>
            <param name="actionStep">Initial workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="manager">Manager</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.ProcessActionsInternal(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Processes all actions in scope.
            </summary>
            <param name="arguments">Initial action arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.MoveStepInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo,System.String)">
            <summary>
            Moves the specified object to the first step without automatic transition in the workflow and returns the final step.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the object</param>
            <param name="user">User</param>
            <param name="comment">Action comment</param>
            <remarks>The return step can be different than the original target step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetBasicResolverInternal(CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo)">
            <summary>
            Gets basic resolver for evaluation of transitions and source points
            </summary>
            <param name="workflow">Workflow</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateSourcePointsInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.Collections.Generic.List{CMS.WorkflowEngine.Definitions.SourcePoint},CMS.MacroEngine.MacroResolver)">
            <summary>
            Evaluates source points with given macro resolver
            </summary>
            <param name="step">Workflow step</param>
            <param name="points">Source points</param>
            <param name="resolver">Macro resolver</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendWorkflowEmailsInternal(CMS.WorkflowEngine.WorkflowEmailSettings)">
            <summary>
            Sends the workflow e-mails to given recipients.
            </summary>
            <param name="settings">E-mail sending settings</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepInboundTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.DataEngine.WhereCondition)">
            <summary>
            Gets transitions leading into given step.
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetPreviousStepInfoFromManualInboundTransitionInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Tries to get previous step info from manual transition leading into given step.
            </summary>
            <param name="step">Source step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogMessage(System.String,System.String,System.String,`0,CMS.Membership.UserInfo)">
            <summary>
            Logs custom message to event log.
            </summary>
            <param name="eventType">Event type</param>
            <param name="eventCode">Event code</param>
            <param name="message">Message</param>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogMissingConnectionWarningInternal(`0,CMS.Membership.UserInfo)">
            <summary>
            Logs warning about missing connection
            </summary>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogHopsReachedWarningInternal(`0,CMS.Membership.UserInfo)">
            <summary>
            Logs warning about maximum hops reached
            </summary>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogMessageInternal(System.String,System.String,System.String,System.String,`0,CMS.Membership.UserInfo)">
            <summary>
            Logs message to the event log
            </summary>
            <param name="type">Message type</param>
            <param name="source">Source</param>
            <param name="eventCode">Event code</param>
            <param name="message">Message</param>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo,System.Int32,CMS.MacroEngine.MacroResolver,CMS.DataEngine.WhereCondition)">
            <summary>
            Evaluates list of existing transitions for given workflow step and returns either one best match or multiple transitions matched
            </summary>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
            <param name="siteId">Site ID</param>
            <param name="resolver">Macro resolver to evaluate conditions</param>
            <param name="where">Where condition for transitions</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.DataEngine.WhereCondition)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="T:CMS.WorkflowEngine.IAutomationActionDataCollector">
            <summary>
            Describes additional data collector for automation actions.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IAutomationActionDataCollector.GetStepInformation(System.Int32)">
            <summary>
            Returns HTML representation of additional information that will be displayed in automation designer for given <paramref name="stepId"/>.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IAutomationActionDataCollector.ProvidesStepInformation(System.Int32,System.Int32)">
            <summary>
            Returns <c>true</c> when step with given <paramref name="actionId"/> and <paramref name="workflowId"/> is capable of displaying additional step information.
            If step is not capable of displaying additional step information returns <c>false</c>.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IAutomationActionDataCollector.GetStepDescription(System.Int32)">
            <summary>
            Returns the HTML description of the automation step with given <paramref name="stepId"/>.
            If the step does not provide any description, returns <c>null</c>.
            </summary>
            <param name="stepId">ID of the automation step <seealso cref="T:CMS.WorkflowEngine.WorkflowStepInfo"/>.</param>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.CaseSourcePoint">
            <summary>
            Class handling initial values for case source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.CaseSourcePoint.#ctor">
            <summary>
            Default constructor ensuring default label.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.CaseSourcePoint.#ctor(System.String)">
            <summary>
            Constructor ensuring arbitrary label.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.CaseSourcePoint.#ctor(System.Int32)">
            <summary>
            Constructor ensuring numbered default labels.
            </summary>
            <param name="order">Number to be added to label.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.CaseSourcePoint.CloneInternal">
            <summary>
            Returns new instance of <see cref="T:CMS.WorkflowEngine.Definitions.CaseSourcePoint"/>.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint">
            <summary>
            Class handling initial values for user choice source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint.#ctor(System.Int32)">
            <summary>
            Constructor ensuring numbered default labels
            </summary>
            <param name="order">Number to be added to label</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint.CloneInternal">
            <summary>
            Returns new instance of <see cref="T:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint"/>.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.ConditionSourcePoint">
            <summary>
            Class handling initial values for condition source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ConditionSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ConditionSourcePoint.CloneInternal">
            <summary>
            Returns new instance of <see cref="T:CMS.WorkflowEngine.Definitions.ConditionSourcePoint"/>.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.ElseSourcePoint">
            <summary>
            Class handling initial values for else source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ElseSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ElseSourcePoint.CloneInternal">
            <summary>
            Returns new instance of <see cref="T:CMS.WorkflowEngine.Definitions.ElseSourcePoint"/>.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.NoteStep">
            <summary>
            Class to hold the note step definition.
            </summary>
            <remarks>
            Use <see cref="M:CMS.WorkflowEngine.Factories.StepFactory.CreateStep(CMS.DataEngine.WorkflowStepTypeEnum,System.String)"/> to get the instance.
            </remarks>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.NoteStep.Note">
            <summary>
            Content of the <see cref="F:CMS.Helpers.UniGraphConfig.NodeTypeEnum.Note"/> step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.NoteStep.DefinitionPoint">
            <summary>
            Source point with additional definitions
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.NoteStep.TimeoutEnabled">
            <summary>
            Indicates whether timeout is enabled for the step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.NoteStep.TimeoutInterval">
            <summary>
            Timeout interval of the step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.NoteStep.TimeoutTarget">
            <summary>
            GUID of target transition to use after timeout
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.NoteStep.SourcePoints">
            <summary>
            List of source points for transitions
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.NoteStep.#ctor">
            <summary>
            Initialized a new instance of <see cref="T:CMS.WorkflowEngine.Definitions.NoteStep"/>.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.NoteStep.GetSerializer">
            <summary>
            Return instance of <see cref="T:System.Xml.Serialization.XmlSerializer"/> used afterwards to serialize the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.NoteStep.CloneInternal">
            <summary>
            Returns new instance of <see cref="T:CMS.WorkflowEngine.Definitions.NoteStep"/>.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.SourcePoint">
            <summary>
            Class to hold the workflow step source point definition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Guid">
            <summary>
            Point GUID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Label">
            <summary>
            Point label
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Text">
            <summary>
            Point action text
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Tooltip">
            <summary>
            Point action tooltip
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Condition">
            <summary>
            Point condition
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Type">
            <summary>
            Point type
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.StepRolesSecurity">
            <summary>
            Security settings for roles
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.StepUsersSecurity">
            <summary>
            Security settings for users
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.InheritsUsersSettings">
            <summary>
            Indicates if users settings are inherited
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.InheritsRolesSettings">
            <summary>
            Indicates if roles settings are inherited
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.InheritsStepSettings">
            <summary>
            Indicates if all step security settings are inherited
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.SourcePoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.SourcePoint.Clone">
            <summary>
            Returns cloned instance, containing same data.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.SourcePoint.CloneInternal">
            <summary>
            Clones the instance of <see cref="T:CMS.WorkflowEngine.Definitions.SourcePoint"/> or derived type.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.Step">
            <summary>
            Class to hold the workflow step definition.
            </summary>
            <remarks>
            Use <see cref="M:CMS.WorkflowEngine.Factories.StepFactory.CreateStep(CMS.DataEngine.WorkflowStepTypeEnum,System.String)"/> to get the instance.
            </remarks>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.TimeoutEnabled">
            <summary>
            Indicates whether timeout is enabled for the step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.TimeoutInterval">
            <summary>
            Timeout interval of the step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.TimeoutTarget">
            <summary>
            GUID of target transition to use after timeout
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.SourcePoints">
            <summary>
            List of source points for transitions
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.DefinitionPoint">
            <summary>
            Source point with additional definitions
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.Position">
            <summary>
            Position of the step
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:CMS.WorkflowEngine.Definitions.Step"/>.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.GetData">
            <summary>
            Gets XML node representation.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.Clone">
            <summary>
            Creates a clone of the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.CloneInternal">
            <summary>
            Returns empty the instance of <see cref="T:CMS.WorkflowEngine.Definitions.SourcePoint"/> or derived type used for cloning.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.GetSerializer">
            <summary>
            Return instance of <see cref="T:System.Xml.Serialization.XmlSerializer"/> used afterwards to serialize the object.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.TimeoutSourcePoint">
            <summary>
            Class handling initial values for timeout source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.TimeoutSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.TimeoutSourcePoint.CloneInternal">
            <summary>
            Returns new instance of <see cref="T:CMS.WorkflowEngine.Definitions.TimeoutSourcePoint"/>.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepFactory">
            <summary>
            Factory for creating step objects based on the step type.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepFactory.CreateStep(CMS.DataEngine.WorkflowStepTypeEnum,System.String)">
            <summary>
            Returns step object based on given step type <paramref name="stepType"/> and optionally on step definition <paramref name="stepDefinition"/>.
            </summary>
            <param name="stepType">Type of step</param>
            <param name="stepDefinition">Step definition in XML format</param>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes">
            <summary>
            Factory class for marketing automation step type properties.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.Instance">
            <summary>
            Instance for singleton pattern usage.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetNode(CMS.DataEngine.WorkflowStepTypeEnum)">
            <summary>
            Creates new workflow node instance based on given workflow step type.
            </summary>
            <param name="type">Type of workflow step</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetActionSettings">
            <summary>
            Creates new workflow node for step type action.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetConditionSettings">
            <summary>
            Creates new workflow node for step type condition.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetDocumentArchivedSettings">
            <summary>
            Creates new workflow node for step type of archived document.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetDocumentEditSettings">
            <summary>
            Creates new workflow node for step type of edited document.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetDocumentPublishedSettings">
            <summary>
            Creates new workflow node for step type of published document.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetActionSettings(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Creates new workflow node for step type action.
            </summary>
            <param name="actionDefinition">Info object</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetMultichoiceSettings">
            <summary>
            Creates new workflow node for step type multi choice.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetMultichoiceFirstWinSettings">
            <summary>
            Creates new workflow node for step type multi choice first win.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetStandardSettings">
            <summary>
            Creates new workflow node for step type standard.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetStartSettings">
            <summary>
            Creates new workflow node for step type start.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetFinishedSettings">
            <summary>
            Creates new workflow node for step type start.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetUndefinedSettings">
            <summary>
            Creates new workflow node for step type undefined.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetUserchoiceSettings">
            <summary>
            Creates new workflow node for step type user choice.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetWaitSettings">
            <summary>
            Creates new workflow node for step type wait.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetDefaultSettings">
            <summary>
            Creates new workflow node for step type default.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeAutomationNodes.GetNoteSettings">
            <summary>
            Creates a new automation process note.
            </summary>
            <returns>New automation process note.</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1">
            <summary>
            Abstract class for creating settings containers based on step type.
            </summary>
            <typeparam name="TContainerType">Type of returned setting object</typeparam>
        </member>
        <member name="P:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.Factory">
            <summary>
            Setting property executing the creation.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetSettingsObject(CMS.DataEngine.WorkflowStepTypeEnum)">
            <summary>
            Returns settings for specified step type.
            </summary>
            <param name="type">Step type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetSettingsObject(System.Collections.Generic.List{CMS.DataEngine.WorkflowStepTypeEnum})">
            <summary>
            Returns settings for specified workflow step types.
            </summary>
            <param name="types">List of workflow step types</param>
            <returns>List of settings objects</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetSettingsObjectBy(System.Collections.Generic.IEnumerable{CMS.WorkflowEngine.WorkflowActionInfo})">
            <summary>
            Returns settings for specified workflow actions.
            </summary>
            <param name="actions">Info objects</param>
            <returns>List of generic data types</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetActionSettings(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Injects dependencies for step type action.
            </summary>
            <param name="actionDefinition">Info object</param>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetActionSettings">
            <summary>
            Injects dependencies for step type action.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetConditionSettings">
            <summary>
            Injects dependencies for step type condition.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDocumentArchivedSettings">
            <summary>
            Injects dependencies for step type of archived document.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDocumentEditSettings">
            <summary>
            Injects dependencies for step type of edited document.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDocumentPublishedSettings">
            <summary>
            Injects dependencies for step type of published document.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetMultichoiceSettings">
            <summary>
            Injects dependencies for step type multi choice.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetMultichoiceFirstWinSettings">
            <summary>
            Injects dependencies for step type multi choice first win.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetStandardSettings">
            <summary>
            Injects dependencies for step type standard.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetStartSettings">
            <summary>
            Injects dependencies for step type start.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetFinishedSettings">
            <summary>
            Injects dependencies for step type start.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetUndefinedSettings">
            <summary>
            Injects dependencies for step type undefined.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetUserchoiceSettings">
            <summary>
            Injects dependencies for step type user choice.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetWaitSettings">
            <summary>
            Injects dependencies for step type wait.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDefaultSettings">
            <summary>
            Injects dependencies for step type default.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetNoteSettings">
            <summary>
            Injects dependencies for automation process note.
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepTypeFactory`1">
            <summary>
            Factory for creating setting objects based on workflow step type.
            </summary>
            <typeparam name="TContainerType">Type of settings object</typeparam>
        </member>
        <member name="F:CMS.WorkflowEngine.Factories.StepTypeFactory`1.mInjector">
            <summary>
            Local variable containing dependency injector.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeFactory`1.#ctor(CMS.WorkflowEngine.Factories.StepTypeDependencyInjector{`0})">
            <summary>
            Sets dependency injector.
            </summary>
            <param name="injector">Dependency injector used in factory methods</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeFactory`1.GetSettingsObject(CMS.DataEngine.WorkflowStepTypeEnum)">
            <summary>
            Creates menu items based on workflow step type.
            </summary>
            <param name="nodeType">Workflow step types</param>
            <returns>Settings object</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes">
            <summary>
            Factory class for getting display name based on step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.Instance">
            <summary>
            Instance for singleton pattern usage.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetNode(CMS.DataEngine.WorkflowStepTypeEnum)">
            <summary>
            Creates new workflow node instance based on given workflow step type.
            </summary>
            <param name="type">Type of workflow step</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetActionSettings">
            <summary>
            Creates new workflow node for step type action.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetConditionSettings">
            <summary>
            Creates new workflow node for step type condition.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetDocumentArchivedSettings">
            <summary>
            Creates new workflow node for step type of archived document.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetDocumentEditSettings">
            <summary>
            Creates new workflow node for step type of edited document.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetDocumentPublishedSettings">
            <summary>
            Creates new workflow node for step type of published document.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetMultichoiceSettings">
            <summary>
            Creates new workflow node for step type multi choice.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetMultichoiceFirstWinSettings">
            <summary>
            Creates new workflow node for step type multi choice first win.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetStandardSettings">
            <summary>
            Creates new workflow node for step type standard.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetStartSettings">
            <summary>
            Creates new workflow node for step type start.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetFinishedSettings">
            <summary>
            Creates new workflow node for step type start.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetUndefinedSettings">
            <summary>
            Creates new workflow node for step type undefined.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetUserchoiceSettings">
            <summary>
            Creates new workflow node for step type user choice.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetWaitSettings">
            <summary>
            Creates new workflow node for step type wait.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetDefaultSettings">
            <summary>
            Creates new workflow node for step type default.
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetActionSettings(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Creates new workflow node for step type action.
            </summary>
            <param name="actionDefinition">Info object</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNodes.GetNoteSettings">
            <summary>
            Creates a new automation process note.
            </summary>
            <returns>New automation process note.</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowConnection">
            <summary>
            Class creating connection definition from information given by workflow.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowConnection.#ctor(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Creates Connection configuration object by given WorkflowTransitionInfo object.
            </summary>
            <param name="transition">Transition to be rewritten</param>
            <returns>Connection configuration object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowConnection.#ctor(System.String,System.String)">
            <summary>
            Method for support of basic workflows.
            </summary>
            <param name="fromID">ID of source node</param>
            <param name="toID">ID of target node</param>
            <returns>New connection</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowGraph">
            <summary>
            Definition of workflow graph
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.mWorkflow">
            <summary>
            Workflow to be converted.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.#ctor(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates graph configuration object from given Workflow.
            </summary>
            <returns>Graph configuration object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.GetDefaultConnections">
            <summary>
            Returns default list of connections based on given information.
            </summary>
            <returns>List of connections.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.GetDefaultNodes">
            <summary>
            Returns default list of nodes based on given information.
            </summary>
            <returns>List of nodes</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.SuplementBasicNodesDefinition">
            <summary>
            Supplements definition of basic nodes to be printable.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.AddConnection(System.Int32,System.Int32)">
            <summary>
            Adds single connection based on given indexes from list of Nodes.
            </summary>
            <param name="fromIndex">Index from nodes</param>
            <param name="toIndex">Index from nodes</param>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.ExtendGraphResources">
            <summary>
            Extends resource dictionaries for graph in JS.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowNode">
            <summary>
            Workflow node configuration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.GraphConfig.WorkflowNode.mWorkflowStep">
            <summary>
            Reference to workflow step on which is based this node.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.GraphConfig.WorkflowNode.RetrievesData">
            <summary>
            Gets or sets the information whether node can retrieve data using <see cref="T:CMS.WorkflowEngine.IAutomationActionDataCollector"/>.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.GraphConfig.WorkflowNode.HasError">
            <summary>
            Gets or sets the error message for node configuration.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.GetInstance(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Method creating node based on given workflow step.
            </summary>
            <param name="step">Workflow step</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.GetInstance(CMS.WorkflowEngine.WorkflowTypeEnum,CMS.DataEngine.WorkflowStepTypeEnum)">
            <summary>
            Method creating an empty node with predefined type-specific properties.
            </summary>
            <param name="workflowType">Workflow type</param>
            <param name="stepType">Workflow step type</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.LoadAction(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Fills information about action of step.
            </summary>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.GetDefaultSourcePoints">
            <summary>
            Method returning default list of source points based on given information.
            </summary>
            <returns>List of source points</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowSourcePoint">
            <summary>
            Workflow source point configuration
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowSourcePoint.#ctor(CMS.WorkflowEngine.Definitions.SourcePoint)">
            <summary>
            Creates source point configuration object by given workflow source point object.
            </summary>
            <param name="sourcePoint">Source point to be rewritten</param>
            <returns>Source point configuration object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowSourcePoint.ResolveMacroRuleText(System.String)">
            <summary>
            Resolves macro rule text in the given input.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionEnum">
            <summary>
            Workflow action enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Unknown">
            <summary>
            Unknown action.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Approve">
            <summary>
            The document is approved - send e-mail to the users that are approve within next step and to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Reject">
            <summary>
            Document is rejected - send e-mail to the user that reject the document and to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Publish">
            <summary>
            The document is published - send e-mail to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Archive">
            <summary>
            The document is archived - send e-mail to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.MoveToSpecificStep">
            <summary>
            The document is moved to specific step.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowEmailTypeEnum">
            <summary>
            Workflow email type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Approved">
            <summary>
            Template for e-mails sent to editor/moderator when document is approved.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.ReadyForApproval">
            <summary>
            Template for e-mails sent when document is approved.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Rejected">
            <summary>
            Template for e-mails sent when document is rejected.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Published">
            <summary>
            Template for e-mails sent when document is published.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Archived">
            <summary>
            Template for e-mails sent when document is archived.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Notification">
            <summary>
            Template for general notification e-mails.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepSecurityEnum">
            <summary>
            Workflow step security enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepSecurityEnum.Default">
            <summary>
            Default security settings. (for whole step - no one is allowed, for source point - inherit settings from step)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepSecurityEnum.OnlyAssigned">
            <summary>
            Only assigned are granted with permissions.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepSecurityEnum.AllExceptAssigned">
            <summary>
            All are granted with permissions except assigned.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTransitionTypeEnum">
            <summary>
            Workflow transition type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTransitionTypeEnum.Manual">
            <summary>
            Manual transition.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTransitionTypeEnum.Automatic">
            <summary>
            Automatic transition.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTriggerTypeEnum">
            <summary>
            ObjectWorkflowTrigger type enumeration
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTriggerTypeEnum.Creation">
            <summary>
            Object has been created.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTriggerTypeEnum.Change">
            <summary>
            Object has been changed.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTriggerTypeEnum.TimeBased">
            <summary>
            Time based.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTypeEnum">
            <summary>
            Workflow type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Basic">
            <summary>
            Basic approval workflow for documents.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Approval">
            <summary>
            Advanced approval workflow.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Advanced">
            <summary>
            General advanced workflow.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Automation">
            <summary>
            Automation workflow.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ExportSpecialActions">
            <summary>
            Handles special actions during the export process.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ExportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ExportWorkflow">
            <summary>
            Handles special actions during the workflow export process.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ExportWorkflow.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowEnums">
            <summary>
            Wrapper class to provide workflow enumerations.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowEnums.RegisterFields">
            <summary>
            Registers the workflow enumerations.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowModule">
            <summary>
            Represents the Workflow module.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowModule.WORKFLOW_EMAIL_TEMPLATE_TYPE_NAME">
            <summary>
            Name of email template type for workflow.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.OnInit">
            <summary>
            Initializes the module.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowModuleMetadata">
            <summary>
            Represents the Workflow module metadata.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowResolvers.WorkflowBaseResolver">
            <summary>
            Returns base empty workflow macro resolver.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowResolvers.WorkflowSimpleResolver">
            <summary>
            Returns simple empty workflow macro resolver.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowActionInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowActionInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.BaseWorkflowAction`3">
            <summary>
            General base class for workflow actions.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Arguments">
            <summary>
            Action arguments
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.MacroTable">
            <summary>
            Hash table for resolved parameters values
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Manager">
            <summary>
            Manager.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.ActionDefinition">
            <summary>
            Action definition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Parameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.User">
            <summary>
            User running action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.ActionStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.InitialStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.OriginalStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Workflow">
            <summary>
            Current workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.InfoObject">
            <summary>
            Current info object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.StateObject">
            <summary>
            Current state object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Comment">
            <summary>
            Comment used when action moves to next step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.MacroResolver">
            <summary>
            Macro resolver for action.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.Execute">
            <summary>
            Executes action. You can use parameters to allow users to modify the behavior.
            </summary>
            <example>
            To access the values of parameters, you can use this code.
            <code>
            GetResolvedParameter("StringParameterName", string.Empty);
            GetResolvedParameter("BooleanParameterName", false);
            </code>
            </example>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.GetDefaultMacroResolver">
            <summary>
            Prepares macro resolver for usage.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.GetResolvedParameter``1(System.String,``0)">
            <summary>
            Gets resolved value of parameter.
            </summary>
            <param name="parameterName">Parameter name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.Process(CMS.WorkflowEngine.IWorkflowActionEventArgs)">
            <summary>
            Processes action.
            </summary>
            <param name="args">Arguments of action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.LogMessage(System.String,System.String,System.String,`0)">
            <summary>
            Logs message to event log.
            </summary>
            <param name="eventType">Type of the event. Please use predefined constants from EventLogProvider</param>
            <param name="eventCode">Event code (UPDATEDOC, SENDEMAIL, DELETE, etc.)</param>
            <param name="message">Message</param>
            <param name="infoObj">Info object</param>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowAction">
            <summary>
            Interface for workflow actions.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowAction.Arguments">
            <summary>
            Action arguments
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowAction.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowAction.Process(CMS.WorkflowEngine.IWorkflowActionEventArgs)">
            <summary>
            Processes action.
            </summary>
            <param name="args">Arguments of action</param>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowActionEventArgs">
            <summary>
            Interface for workflow action arguments.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.ActionDefinition">
            <summary>
            Action definition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.Parameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.User">
            <summary>
            User running action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.ActionStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.InitialStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.OriginalStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.Workflow">
            <summary>
            Current workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.Comment">
            <summary>
            Comment used when action moves to next step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.StopProcessing">
            <summary>
            Indicates if the process should be stopped. Process is not moved to the next step.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionEventArgs`3">
            <summary>
            Workflow action event arguments
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Manager">
            <summary>
            Manager.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.ActionDefinition">
            <summary>
            Action definition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Parameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.User">
            <summary>
            User running action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.ActionStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.InitialStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.OriginalStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Workflow">
            <summary>
            Current workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.InfoObject">
            <summary>
            Current info object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.StateObject">
            <summary>
            Info object representing automation state. Used for automation processes.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Comment">
            <summary>
            Comment used when action moves to next step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.StopProcessing">
            <summary>
            Indicates if the process should be stopped. Process is not moved to the next step.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionEventArgs`3.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionInfo">
            <summary>
            WorkflowActionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionInfo.OBJECT_TYPE_AUTOMATION">
            <summary>
            Object type for automation action
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionInfo.TYPEINFO_AUTOMATION">
            <summary>
            Type information for automation action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionID">
            <summary>
            ID of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionGUID">
            <summary>
            Action GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionParameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionClass">
            <summary>
            Class name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionName">
            <summary>
            Code name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionDisplayName">
            <summary>
            Display name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionResourceID">
            <summary>
            Resource of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionDescription">
            <summary>
            Action description.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionAssemblyName">
            <summary>
            Assembly name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionThumbnailGUID">
            <summary>
            Thumbnail GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionThumbnailClass">
            <summary>
            Thumbnail CSS font icon class name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionIconGUID">
            <summary>
            Toolbar icon GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionIconClass">
            <summary>
            Icon CSS font icon class name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionEnabled">
            <summary>
            Indicates if action is enabled.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionAllowedObjects">
            <summary>
            Gets or sets the workflow action allowed objects.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionWorkflowType">
            <summary>
            Type of the workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionDataProviderAssemblyName">
            <summary>
            Assembly name of data provider class.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionDataProviderClass">
            <summary>
            Class name of data provider class.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ObjectFullName">
            <summary>
            Object full name if defined
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowActionInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowActionInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionInfoProvider">
            <summary>
            Class providing WorkflowActionInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActions">
            <summary>
            Returns all workflow actions.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfo(System.Int32)">
            <summary>
            Returns workflow action with specified ID.
            </summary>
            <param name="actionId">Workflow action ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfo(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns workflow action with specified name.
            </summary>
            <param name="actionName">Workflow action name</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfo(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.SetWorkflowActionInfo(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Sets (updates or inserts) specified workflow action.
            </summary>
            <param name="actionObj">Workflow action to be set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.DeleteWorkflowActionInfo(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Deletes specified workflow action.
            </summary>
            <param name="actionObj">Workflow action to be deleted</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.DeleteWorkflowActionInfo(System.Int32)">
            <summary>
            Deletes workflow action with specified ID.
            </summary>
            <param name="actionId">Workflow action ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.CheckDependencies(System.Int32,System.Collections.Generic.List{System.String}@)">
            <summary>
            Checks the object dependencies. Returns true if there are depending objects.
            </summary>
            <param name="workflowActionId">Workflow action ID</param>
            <param name="stepNames">List of step names which use given workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfoInternal(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns workflow action with specified name.
            </summary>
            <param name="actionName">Workflow action name</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetFullNameDictionary">
            <summary>
            Creates new dictionary for caching the objects by full name
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name
            </summary>
            <param name="fullName">Object full name</param>
        </member>
        <member name="T:CMS.WorkflowEngine.ProcessInstanceStatusEnum">
            <summary>
            Process instance status enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessInstanceStatusEnum.None">
            <summary>
            There is no process instance
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessInstanceStatusEnum.Running">
            <summary>
            There is at least one running instance
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessInstanceStatusEnum.Finished">
            <summary>
            All process instances are finished
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum">
            <summary>
            Process recurrence type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.NotSpecified">
            <summary>
            Recurrence type not specified.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.Recurring">
            <summary>
            The process can be started on the contact anytime.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.NonRecurring">
            <summary>
            The process can only be started if it hasn't been run on the contact before.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.NonConcurrentRecurring">
            <summary>
            The process can only be started if the same process is currently not running on the contact. It is either already finished or there is no record of the run.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ProcessStatusEnum">
            <summary>
            Process status enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessStatusEnum.Pending">
            <summary>
            Pending status
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessStatusEnum.Processing">
            <summary>
            Processing status
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessStatusEnum.Finished">
            <summary>
            Finished status
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowStepInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowStepInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowStepRoleInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowStepInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepRoleInfoProvider.Get(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <returns>Returns an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepRoleInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepRoleInfoProvider.Remove(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Deletes <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepRoleInfoProvider.Add(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Creates <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowStepUserInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepUserInfoProvider.Get(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <returns>Returns an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepUserInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepUserInfoProvider.Remove(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Deletes <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowStepUserInfoProvider.Add(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Creates <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfo">
            <summary>
            Class to hold the workflow step record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepInfo.OBJECT_TYPE_AUTOMATION">
            <summary>
            Object type for automation step
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepInfo.TYPEINFO_AUTOMATION">
            <summary>
            Type information for automation step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepName">
            <summary>
            Step code name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepDisplayName">
            <summary>
            Step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepWorkflowID">
            <summary>
            Step workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepWorkflowType">
            <summary>
            Step workflow type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepActionID">
            <summary>
            Step action ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepActionParameters">
            <summary>
            Step action parameters.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepOrder">
            <summary>
            Step order index.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepGUID">
            <summary>
            Step GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepLastModified">
            <summary>
            Step last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepType">
            <summary>
            Step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowReject">
            <summary>
            Indicates if step allows reject action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowPublish">
            <summary>
            Indicates if step allows direct publish action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepRolesSecurity">
            <summary>
            Security settings for roles
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepUsersSecurity">
            <summary>
            Security settings for users
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepReadyForApprovalTemplateName">
            <summary>
            E-mail template name for ready to approval action when moving to this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepApprovedTemplateName">
            <summary>
            E-mail template name for approve action when moving to this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepRejectedTemplateName">
            <summary>
            E-mail template name for reject action when moving from this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendEmails">
            <summary>
            Indicates if notification e-mails should be sent when moving to this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendApproveEmails">
            <summary>
            Indicates if e-mails should be sent for approve action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendReadyForApprovalEmails">
            <summary>
            Indicates if e-mails should be sent for ready to approval action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendRejectEmails">
            <summary>
            Indicates if e-mails should be sent for reject action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.RelatedTransition">
            <summary>
            Related transition which leads to this step. (This property is initialized only when deciding the next steps.)
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.RelatedHistoryID">
            <summary>
            Related workflow history ID to which the step belongs to in context of reject action. (This property is initialized only when deciding the previous steps.)
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsPublished">
            <summary>
            Indicates if step represents published document state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsStart">
            <summary>
            Indicates if step represents start workflow state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsFinished">
            <summary>
            Indicates if step represents finished workflow state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsEdit">
            <summary>
            Indicates if step represents edit document state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsArchived">
            <summary>
            Indicates if step represents archived document state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsDefault">
            <summary>
            Indicates if step represents one of the default document step types (DocumentPublished, DocumentArchived, DocumentEdit, Start)
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsAction">
            <summary>
            Indicates if step is action step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsWait">
            <summary>
            Indicates if step is wait step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepActionHasParameters">
            <summary>
            Indicates if step action has parameters with at least one field.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsNote">
            <summary>
            Indicates if step is note
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsDeletable">
            <summary>
            Indicates if step can be deleted. Deletion is not allowed for some step types.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsAllowed">
            <summary>
            Indicates if step is allowed due to security settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepDefinition">
            <summary>
            Step definition (advanced settings).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepHasTimeout">
            <summary>
            Indicates if step has timeout defined
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowBranch">
            <summary>
            Indicates if step allows branch
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowTimeout">
            <summary>
            Indicates if step allows timeout settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowOnlyAutomaticTransitions">
            <summary>
            Indicates if step allows only automatic outgoing transitions
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowDefaultTimeoutTarget">
            <summary>
            Indicates if default timeout target can be specified
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepHasSingleWinTransition">
            <summary>
            Indicates if step allows branch and always has single winning transition
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.InsertAsClonePostprocessing(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Clones workflow transitions objects (has to be done after the whole process because it needs the steps already created).
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Result of the cloning - messages in this object will be altered by processing this method</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetSiblingsWhereCondition">
            <summary>
            Creates where condition according to Parent, Group and Site settings.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetLastObjectOrder(System.String)">
            <summary>
            Returns number which will be the last order within all the other items (according to Parent, Group and Site settings).
            I.e. returns largest existing order + 1.
            </summary>
            <param name="orderColumn">Name of the order column. If null, OrderColumn from TypeInfo is taken</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.InitObjectsOrderPostprocessing">
            <summary>
            Method called after the InitObjectOrder method is called. Override this to do further actions after order initialization. Does nothing by default.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.Duplicate(System.Int32,System.Int32)">
            <summary>
            Duplicates the current step, positions the clone on the specified position (<paramref name="positionX"/>, <paramref name="positionY"/>) in <see cref="P:CMS.WorkflowEngine.WorkflowStepInfo.StepDefinition"/>, and saves the clone to the database.
            </summary>
            <param name="positionX">The x-coordinate that will be set to clone.</param>
            <param name="positionY">The y-coordinate that will be set to clone.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the current step is not persisted in database.</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.Clone(System.Boolean)">
            <summary>
            Creates a clone of the object
            </summary>
            <param name="clear">If true, the object is cleared to be able to create new object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.LoadDefaultData">
            <summary>
            Loads the default object data
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified node column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.SendEmails(System.String,CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Indicates if notification e-mails should be sent when moving to this step
            </summary>
            <param name="siteName">Site name</param>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetEmailTemplateName(CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Gets e-mail template to be used.
            </summary>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetStepConnectionType(System.Guid)">
            <summary>
            Returns default transition type for transitions starting in this step.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.ConnectTo(System.Guid,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Connects step with target step.
            </summary>
            <param name="sourcePoint">Start step source point</param>
            <param name="targetStep">Target step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.EnsureDefaultDefinition">
            <summary>
            Ensures default step definition.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.ValidateParameters(System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            Returns <c>true</c> all required, visible and enabled parameters have value, returns <c>false</c> otherwise
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetSourcePoint(System.Guid)">
            <summary>
            Gets source point
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.AddSourcePoint">
            <summary>
            Adds source point with default definition.
            </summary>
            <returns>Potential error message</returns>
            <remarks>Throws exception if database operation fails.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.AddSourcePoint(CMS.WorkflowEngine.Definitions.SourcePoint)">
            <summary>
            Adds source point.
            </summary>
            <param name="sourcePoint">Source point to be added</param>
            <returns>Potential error message</returns>
            <remarks>Throws exception if database operation fails.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.RemoveSourcePoint(System.Guid)">
            <summary>
            Removes specified source point.
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
            <returns>Potential error message</returns>
            <remarks>Throws exception if database operation fails.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.MoveSourcePoint(System.Int32,System.Int32)">
            <summary>
            Moves source point from the old to the new index.
            </summary>
            <param name="oldIndex">Old order index of the source point.</param>
            <param name="newIndex">New order index of the source point.</param>
            <returns>True if the source point has been moved, false otherwise.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.MoveSourcePointUp(System.Guid)">
            <summary>
            Moves source point up.
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.MoveSourcePointDown(System.Guid)">
            <summary>
            Moves source point down.
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfoProvider">
            <summary>
            Workflow step info provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.Set(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Inserts or updates the <paramref name="info"/> object in the underlying data store.
            </summary>
            <param name="info">Info object to be inserted or updated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="info"/> is null.</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SetWorkflowStepInfo(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Sets the specified workflow step data.
            </summary>
            <param name="infoObj">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfo(System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step ID.
            </summary>
            <param name="stepId">ID of the workflow step to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfo(System.String,System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow id of the step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfo(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Deletes the specified workflow step.
            </summary>
            <param name="wsi">Workflow step object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfo(System.Int32)">
            <summary>
            Deletes the specified workflow step.
            </summary>
            <param name="stepId">Workflow step ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.InitStepOrders(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Initializes the workflow step orders.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepUp(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step up (decreases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepDown(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step down (increases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetStepRoles(System.Int32)">
            <summary>
            Returns all roles assigned to given step.
            </summary>
            <param name="stepId">Step ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetEditStep(System.Int32)">
            <summary>
            Returns the edit step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPublishedStep(System.Int32)">
            <summary>
            Returns the published step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetArchivedStep(System.Int32)">
            <summary>
            Returns the archived step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFirstStep(System.Int32)">
            <summary>
            Returns first workflow step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFinishedStep(System.Int32)">
            <summary>
            Returns the finished step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.Int32)">
            <summary>
            Returns the Dataset of workflow steps.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps">
            <summary>
            Returns the query for all workflow steps.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultWorkflowSteps(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default workflow steps for the given workflow.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowSteps(System.Int32)">
            <summary>
            Deletes all the steps of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.LicenseVersionCheck(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Checks if WorkFlowStep fulfill license limitations.
            </summary>
            <param name="workflowStep">Step info to check</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetUsersWhoCanApprove(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve given step source point. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserApprove(CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Int32)">
            <summary>
            Returns true if given user can approve or reject given step.
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserApprove(CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32)">
            <summary>
            Returns true if given user can approve or reject given step.
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageWorkflow(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageAutomationProcesses(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage automation.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserStartAutomationProcess(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can start automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserRemoveAutomationProcess(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can start automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserMoveToSpecificAutomationStep(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can move automation process to specific step.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageAutomationTemplates(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage automation templates.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CheckDependencies(System.Int32,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowStepId">Workflow step ID</param>
            <param name="documentNames">List of document names which use given workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ConnectSteps(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Connects two steps.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePoint">Start source point for branching steps. Use Guid.Empty if there is no branching and standard source point should be used.</param>
            <param name="endStep">End step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ValidateStepIntegrity(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid)">
            <summary>
            Checks whether selected start step and possibly source point already has a connection.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePointGuid">Start step source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SetWorkflowStepInfoInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Sets the specified workflow step data.
            </summary>
            <param name="infoObj">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.String,System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow id of the step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteInfo(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.InitStepOrdersInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Initializes the workflow step orders.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepUpInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step up (decreases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepDownInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step down (increases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetEditStepInternal(System.Int32)">
            <summary>
            Returns the edit step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPublishedStepInternal(System.Int32)">
            <summary>
            Returns the published step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFinishedStepInternal(System.Int32)">
            <summary>
            Returns the finished step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetArchivedStepInternal(System.Int32)">
            <summary>
            Returns the archived step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFirstStepInternal(System.Int32)">
            <summary>
            Returns the first workflow step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultWorkflowStepsInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default workflow steps for the given workflow.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultAutomationSteps(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default automation steps for the given workflow.
            </summary>
            <param name="workflow">Workflow to be added steps to</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultApprovalSteps(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default approval steps for the given workflow.
            </summary>
            <param name="workflow">Workflow to be added steps to</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetUsersWhoCanApproveInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve given step and source point. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPendingStepsWhereCondition(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Creates complete where condition to filter only pending steps for given user and site.
            </summary>
            <param name="columnName">Column name which indicates step identifier in table</param>
            <param name="userId">User ID for the security check</param>
            <param name="siteId">Site ID for the security check</param>
            <param name="typeWhereCondition">Partial where condition for filter specific workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetAutomationPendingStepsWhereCondition(CMS.Membership.UserInfo,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets complete where condition for pending steps from automation processes.
            </summary>
            <param name="user">User info</param>
            <param name="site">Site identifier</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowPendingStepsWhereCondition(CMS.Membership.UserInfo,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets complete where condition for pending steps from workflow.
            </summary>
            <param name="user">User info</param>
            <param name="site">Site identifier</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageWorkflowInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageAutomationProcessesInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage automation processes.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserStartAutomationProcessInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can start automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserRemoveAutomationProcessInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can remove automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserMoveToSpecificAutomationStepInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can move automation process to any step.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageAutomationTemplatesInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage automation templates.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserApproveInternal(CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32)">
            <summary>
            Returns true if given user can approve or reject given step.
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Workflow step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetRequestKeyInternal(CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Guid,System.Int32)">
            <summary>
            Gets key for request to store the permissions check result
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="sourcePointGuid">Source point GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ConnectStepsInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Connects two steps.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePoint">Start source point for branching steps. Use Guid.Empty if there is no branching and standard source point should be used.</param>
            <param name="endStep">End step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ValidateStepIntegrityInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid)">
            <summary>
            Checks whether selected start step and possibly source point already has a connection.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePointGuid">Start step source point GUID</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings">
            <summary>
            Class for evaluation security settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.SourcePoint">
            <summary>
            Source point
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.PointGuid">
            <summary>
            Source point GUID to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.UsersPointGuid">
            <summary>
            Users source point GUID to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.RolesPointGuid">
            <summary>
            Roles source point GUID to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.UsersSettings">
            <summary>
            Users security settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.RolesSettings">
            <summary>
            Roles security settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.EvaluateRoles">
            <summary>
            Indicates if roles should be evaluated if users match (AND operator)
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.#ctor(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint)">
            <summary>
            Constructor
            </summary>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Source point</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepRoleInfo">
            <summary>
            WorkflowStepRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepRoleInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.WorkflowStepRoleID">
            <summary>
            WorkflowStepRole ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.StepSourcePointGUID">
            <summary>
            Step source point GUID.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.GetExisting">
            <summary>
            Gets existing object
            </summary>
            <returns>Existing workflow step role object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepRoleInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider">
            <summary>
            Class providing WorkflowStepRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoles">
            <summary>
            Returns workflow step roles.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.Get(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <returns>Returns an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoleInfo(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowStepRoleInfo structure for the specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoleInfo(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepRoleInfo structure for the specified workflow step, role and source point GUID.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.SetWorkflowStepRoleInfo(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Sets (updates or inserts) specified workflowStepRole.
            </summary>
            <param name="workflowStepRole">WorkflowStepRole to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.Remove(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Deletes <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.RemoveRoleFromWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Deletes specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.RemoveRoleFromWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Removes role from workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.Add(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Creates <see cref="T:CMS.WorkflowEngine.WorkflowStepRoleInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="roleId">Role ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.AddRoleToWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Adds specified role to the workflow step.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.AddRoleToWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Adds specified role to the workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.DeleteWorkflowStepRoleInfo(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Deletes specified workflowStepRole.
            </summary>
            <param name="workflowStepRole">WorkflowStepRole object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoleInfoInternal(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepRoleInfo structure for the specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.DeleteWorkflowStepRoleInfos(CMS.DataEngine.IWhereCondition)">
            <summary>
            Deletes the workflow step roles in the database based on the given where condition.
            </summary>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepUserInfo">
            <summary>
            WorkflowStepUserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepUserInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.WorkflowStepUserID">
            <summary>
            WorkflowStepUser ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.StepSourcePointGUID">
            <summary>
            Step source point GUID.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.GetExisting">
            <summary>
            Gets existing object
            </summary>
            <returns>Existing workflow step user object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.GetExistingWhereCondition">
            <summary>
            Gets a where condition to find an existing object based on current object
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepUserInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepUserInfoProvider">
            <summary>
            Class providing WorkflowStepUserInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUsers">
            <summary>
            Returns workflow step users.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.Get(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <returns>Returns an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding structure.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUserInfo(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowStepUserInfo structure for the specified workflowStepUser.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUserInfo(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepUserInfo structure for the specified workflow step, user and source point GUID.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.SetWorkflowStepUserInfo(CMS.WorkflowEngine.WorkflowStepUserInfo)">
            <summary>
            Sets (updates or inserts) specified workflowStepUser.
            </summary>
            <param name="workflowStepUser">WorkflowStepUser to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.Remove(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Deletes <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.RemoveUserFromWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Deletes specified workflowStepUser.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.RemoveUserFromWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Removes user from workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.Add(System.Int32,System.Int32,System.Nullable{System.Guid})">
            <summary>
            Creates <see cref="T:CMS.WorkflowEngine.WorkflowStepUserInfo"/> binding.
            </summary>
            <param name="workflowStepId">Workflow step ID.</param>
            <param name="userId">User ID.</param>
            <param name="sourcePointGuid">Source point GUID, or null.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.AddUserToWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Adds specified user to the workflow step.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.AddUserToWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Adds specified user to the workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.DeleteWorkflowStepUserInfo(CMS.WorkflowEngine.WorkflowStepUserInfo)">
            <summary>
            Deletes specified workflowStepUser.
            </summary>
            <param name="workflowStepUser">WorkflowStepUser object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUserInfoInternal(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepUserInfo structure for the specified workflowStepUser.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.DeleteWorkflowStepUserInfos(CMS.DataEngine.IWhereCondition)">
            <summary>
            Deletes the workflow step users in the database based on the given where condition.
            </summary>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowTransitionInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowTransitionInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTransitionInfo">
            <summary>
            WorkflowTransitionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTransitionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTransitionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionID">
            <summary>
            Transition ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionStartStepID">
            <summary>
            Start step of the transition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionEndStepID">
            <summary>
            End step of the transition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionType">
            <summary>
            Transition type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionLastModified">
            <summary>
            Transition time stamp.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionSourcePointGUID">
            <summary>
            Transition source point GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionWorkflowID">
            <summary>
            Transition workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionSourcePoint">
            <summary>
            Start point definition of the transition (dynamically loaded)
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.GetExistingWhereCondition">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowTransitionInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowTransitionInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTransitionInfoProvider">
            <summary>
            Class providing WorkflowTransitionInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitions">
            <summary>
            Returns all workflow transitions.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitionInfo(System.Int32)">
            <summary>
            Returns workflow transition with specified ID.
            </summary>
            <param name="transitionId">Workflow transition ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitionInfo(System.Guid)">
            <summary>
            Returns workflow transition with specified GUID.
            </summary>
            <param name="transitionGuid">Workflow transition GUID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.SetWorkflowTransitionInfo(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Sets (updates or inserts) specified workflow transition.
            </summary>
            <param name="transitionObj">Workflow transition to be set.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.DeleteWorkflowTransitionInfo(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Deletes specified workflow transition.
            </summary>
            <param name="transitionObj">Workflow transition to be deleted.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.DeleteWorkflowTransitionInfo(System.Int32)">
            <summary>
            Deletes workflow transition with specified ID.
            </summary>
            <param name="transitionId">Workflow transition ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetStepTransitions(CMS.WorkflowEngine.WorkflowStepInfo,CMS.DataEngine.WhereCondition)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.UpdateTransitionsEndStep(System.String,System.Int32)">
            <summary>
            Sets given end step ID to all transitions matching specified where condition.
            </summary>
            <param name="where">Where condition for selection all transitions to be updated.</param>
            <param name="endStepID">Desired transition end step ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.SetInfo(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.DeleteWorkflowTransitionInfos(CMS.DataEngine.IWhereCondition)">
            <summary>
            Deletes the workflow transitions in the database based on the given where condition.
            </summary>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetStepTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.DataEngine.WhereCondition)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowValidationHelper">
            <summary>
            Validation methods for workflow related objects.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowValidationHelper.ValidateStepData(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Performs validation for given <paramref name="step"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">When step has invalid combination of data</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowValidationHelper.ValidateTransitionData(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Performs validation for given <paramref name="transition"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">When step has invalid combination of data</exception>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowHistoryInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowHistoryInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHistoryInfo">
            <summary>
            Class to hold the workflow history record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.WorkflowHistoryID">
            <summary>
            Workflow history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepDisplayName">
            <summary>
            Step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepName">
            <summary>
            Step name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepType">
            <summary>
            Step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepID">
            <summary>
            Target step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepDisplayName">
            <summary>
            Target step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepName">
            <summary>
            Target step name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepType">
            <summary>
            Target step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryWorkflowID">
            <summary>
            History workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.ApprovedByUserID">
            <summary>
            Approved by user ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.ApprovedWhen">
            <summary>
            Approved when.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.Comment">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.WasRejected">
            <summary>
            Was rejected. Specifies direction of the movement. True if the log is for reject action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryRejected">
            <summary>
            Indicates if the history was used when moved to previous step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryObjectID">
            <summary>
            ID of the related object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryTransitionType">
            <summary>
            Type of the transition.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHistoryInfoProvider">
            <summary>
            Class providing WorkflowHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistories">
            <summary>
            Returns all workflow histories.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistoryInfo(System.Int32)">
            <summary>
            Returns the WorkflowHistoryInfo structure for the specified workflow history.
            </summary>
            <param name="workflowHistoryId">History ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.SetWorkflowHistoryInfo(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified workflow history.
            </summary>
            <param name="workflowHistory">History to set.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.DeleteWorkflowHistoryInfo(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Deletes specified workflow history.
            </summary>
            <param name="workflowHistory">History to delete.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionFromStep(System.Int32,System.String,System.Int32)">
            <summary>
            Gets last approval action from given step.
            </summary>
            <param name="stepId">Step ID.</param>
            <param name="objectType">Object type.</param>
            <param name="objectId">Object ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionToStep(System.Int32,System.String,System.Int32)">
            <summary>
            Gets last approval action to given step for advanced workflow only.
            </summary>
            <param name="stepId">Step ID.</param>
            <param name="objectType">Object type.</param>
            <param name="objectId">Object ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionFromFirstStep(System.String,System.Int32)">
            <summary>
            Gets last approval action from first step for advanced workflow only.
            </summary>
            <param name="objectType">Object type.</param>
            <param name="objectId">Object ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.ChangeDocument(System.Int32,System.Int32)">
            <summary>
            Changes document ID for workflow histories.
            </summary>
            <param name="originalDocumentId">Original document ID.</param>
            <param name="newDocumentId">New document ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.MarkRejected(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Marks workflow histories as used when rejecting to specific step.
            </summary>
            <param name="startHistoryId">Start history ID.</param>
            <param name="endHistoryId">End history ID.</param>
            <param name="workflowId">Workflow ID.</param>
            <param name="objectType">Object type.</param>
            <param name="objectId">Object ID.</param>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowHistoryListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowHistoryListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowScopeInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowScopeInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowScopeInfo">
            <summary>
            Class to hold the workflow scope data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeMacroCondition">
            <summary>
            Scope macro condition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeStartingPath">
            <summary>
            Scope starting path - The scope applies to the starting path subtree.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeID">
            <summary>
            Scope ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeClassID">
            <summary>
            Scope class ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeWorkflowID">
            <summary>
            Scope workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeSiteID">
            <summary>
            Scope site ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeGUID">
            <summary>
            Scope step GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeCultureID">
            <summary>
            Scope culture ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeExcludeChildren">
            <summary>
            Indicates if child nodes should be excluded from scope.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeExcluded">
            <summary>
            Indicates if the scope is used to exclude the workflow.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.UpdateData">
            <summary>
            Updates the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.InsertData">
            <summary>
            Inserts the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.DeleteData">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowScopeInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowScopeInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow scope info data</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowScopeInfoProvider">
            <summary>
            Workflow scope info provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes">
            <summary>
            Returns all workflow scopes.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfoByGUID(System.Guid,System.Int32)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.SetWorkflowScopeInfo(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Sets the specified workflow scope data.
            </summary>
            <param name="infoObj">Workflow scope data object</param>
            <exception cref="T:System.Exception">Throws exception if license limitation are not fulfilled</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfo(System.Int32)">
            <summary>
            Returns the WorkflowScopeInfo structure for the specified workflow scope ID.
            </summary>
            <param name="scopeId">ID of the workflow scope to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfo(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="wsi">Workflow scope object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfo(System.Int32)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="scopeId">Workflow scope ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes(System.Int32)">
            <summary>
            Returns all workflow steps for the given workflow.
            </summary>        
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopes(System.Int32)">
            <summary>
            Deletes the scopes of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopesInternal(System.Int32)">
            <summary>
            Deletes the scopes of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowScopeListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowScopeListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowUserInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowUserInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding structure.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowUserInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding structure.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowUserInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowUserInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowInfo">
            <summary>
            Class to hold the workflow record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowInfo.OBJECT_TYPE_AUTOMATION">
            <summary>
            Object type for automation process
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowInfo.TYPEINFO_PROCESS">
            <summary>
            Type information for automation process.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowName">
            <summary>
            Workflow code name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowDisplayName">
            <summary>
            Workflow display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowID">
            <summary>
            Workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowGUID">
            <summary>
            Workflow GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowEnabledFrom">
            <summary>
            Workflow enabled from.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowEnabledTo">
            <summary>
            Workflow enabled to.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowAutoPublishChanges">
            <summary>
            Indicates if this workflow will automatically publish changes.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowUseCheckinCheckout">
            <summary>
            Indicates if this workflow will use check-in/check-out functionality
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowType">
            <summary>
            Type of the workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendEmails">
            <summary>
            Indicates if notification e-mails should be sent
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowApprovedTemplateName">
            <summary>
            E-mail template name for approve action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowReadyForApprovalTemplateName">
            <summary>
            E-mail template name for ready to approval action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowRejectedTemplateName">
            <summary>
            E-mail template name for reject action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowPublishedTemplateName">
            <summary>
            E-mail template name for document publish action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowArchivedTemplateName">
            <summary>
            E-mail template name for document archive action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowNotificationTemplateName">
            <summary>
            E-mail template name for general notification
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendApproveEmails">
            <summary>
            Indicates if e-mails should be sent for approve action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendReadyForApprovalEmails">
            <summary>
            Indicates if e-mails should be sent for ready to approval action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendRejectEmails">
            <summary>
            Indicates if e-mails should be sent for reject action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendPublishEmails">
            <summary>
            Indicates if e-mails should be sent for document publish action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendArchiveEmails">
            <summary>
            Indicates if e-mails should be sent for document archive action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowAllowedObjects">
            <summary>
            Gets or sets the workflow allowed objects.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowRecurrenceType">
            <summary>
            Gets or sets the recurring type of workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowEnabled">
            <summary>
            Indicates if workflow is enabled or disabled
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.ObjectFullName">
            <summary>
            Object full name if defined
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsDocumentWorkflow">
            <summary>
            Indicates if workflow is document approval workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsBasic">
            <summary>
            Indicates if workflow is basic workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsApproval">
            <summary>
            Indicates if workflow is approval workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsAdvanced">
            <summary>
            Indicates if workflow is advanced workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsAutomation">
            <summary>
            Indicates if workflow is automation workflow
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            This method is called on cloned object prepared in memory by InsertAsClone method.
            Override if you need to do further actions before inserting actual object to DB (insert special objects, modify foreign keys, copy files, etc.).
            Calls Insert() by default.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Result of the cloning - messages in this object will be altered by processing this method</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.InsertAsClonePostprocessing(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Clones workflow transitions objects (has to be done after the whole process because it needs the steps already created).
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Result of the cloning - messages in this object will be altered by processing this method</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.LoadDefaultData">
            <summary>
            Loads the default data to the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.UseCheckInCheckOut(System.String)">
            <summary>
            Indicates if current workflow uses check-in/check-out functionality
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.SendEmails(System.String,CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Indicates if notification e-mails should be sent for current workflow
            </summary>
            <param name="siteName">Site name</param>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.GetEmailTemplateName(CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Gets e-mail template to be used.
            </summary>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.IsScheduled">
            <summary>
            Returns whether the workflow has scheduled activation.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.IsEnabled">
            <summary>
            Returns whether the workflow is currently enabled. There can be a tiny time frame, when the workflow is enabled or disabled by scheduled activation but this state is not reflected by <see cref="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowEnabled"/> property yet. 
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowInfoProvider">
            <summary>
            Class to provide the workflow info management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflows">
            <summary>
            Returns all workflows.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.SetWorkflowInfo(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Sets the specified workflow data.
            </summary>
            <param name="infoObj">Workflow data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.String)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow name. (Except the automation processes.)
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns the WorkflowInfo structure of specified type for the specified workflow name.
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.Int32)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow ID.
            </summary>
            <param name="workflowId">ID of the workflow to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfo(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Deletes the specified workflow.
            </summary>
            <param name="wi">Workflow object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfo(System.Int32)">
            <summary>
            Deletes the specified workflow.
            </summary>
            <param name="workflowId">Workflow ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.CheckDependencies(System.Int32,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="documentNames">List of document names which use given workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.IsCustomStepAllowed">
            <summary>
            Determines whether custom workflow steps are allowed by license for current domain.
            </summary>
            <returns>
            	<c>true</c> if custom steps are allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.IsAdvancedWorkflowAllowed">
            <summary>
            Determines whether advanced workflow is available in license for current domain.
            </summary>
            <returns>
            	<c>true</c> if advanced workflow is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.IsMarketingAutomationAllowed">
            <summary>
            Determines whether marketing automation is available in license for current domain.
            </summary>
            <returns>
            	<c>true</c> if marketing automation is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.ConvertToAdvancedWorkflow(System.Int32)">
            <summary>
            Converts basic workflow to advanced workflow.
            </summary>
            <param name="workflowId">workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoInternal(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns the WorkflowInfo structure of specified type for the specified workflow name.
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteInfo(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.ConvertToAdvancedWorkflowInternal(System.Int32)">
            <summary>
            Converts basic workflow to advanced workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetFullNameDictionary">
            <summary>
            Creates new dictionary for caching the objects by full name
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name
            </summary>
            <param name="fullName">Object full name</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowUserInfo">
            <summary>
            WorkflowUserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowUserInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowUserInfo.WorkflowID">
            <summary>
            Workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowUserInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowUserInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowUserInfoProvider">
            <summary>
            Class providing WorkflowUserInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetWorkflowUsers">
            <summary>
            Returns all workflow users.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.Get(System.Int32,System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding structure.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
            <returns>Returns an instance of <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Asynchronously gets an instance of the <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding structure.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning either an instance of <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> corresponding to given identifiers or null.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetWorkflowUserInfo(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowUserInfo structure for the specified workflowUser.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.SetWorkflowUserInfo(CMS.WorkflowEngine.WorkflowUserInfo)">
            <summary>
            Sets (updates or inserts) specified workflowUser.
            </summary>
            <param name="workflowUser">WorkflowUser to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.RemoveUserFromWorkflow(System.Int32,System.Int32)">
            <summary>
            Deletes specified workflowUser.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.Add(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:CMS.WorkflowEngine.WorkflowUserInfo"/> binding.
            </summary>
            <param name="workflowId">Workflow ID.</param>
            <param name="userId">User ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.AddUserToWorkflow(System.Int32,System.Int32)">
            <summary>
            Adds specified user to the workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.DeleteWorkflowUserInfo(CMS.WorkflowEngine.WorkflowUserInfo)">
            <summary>
            Deletes specified workflowUser.
            </summary>
            <param name="workflowUser">WorkflowUser object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetWorkflowUserInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowUserInfo structure for the specified workflowUser.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionContext">
            <summary>
            Workflow action context. Ensures context for the workflow actions block.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionContext.mCheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionContext.mProcessActionsAsync">
            <summary>
            Indicates if the workflow actions should be processed asynchronously (in new thread).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionContext.CheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionContext.ProcessActionsAsync">
            <summary>
            Indicates if the workflow actions should be processed asynchronously (in new thread).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionContext.CurrentCheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionContext.CurrentProcessActionsAsync">
            <summary>
            Indicates if the workflow actions should be processed asynchronously (in new thread).
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionContext.RestoreOriginalValues">
            <summary>
            Restores the original values to the context
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionQueueWorker">
            <summary>
            Queue worker for processing workflow actions
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowEmailSettings">
            <summary>
            Class for workflow e-mail sending settings.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Resolver">
            <summary>
            Macro resolver to use for resolving macros in e-mail
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Recipients">
            <summary>
            List of e-mail recipients
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.User">
            <summary>
            Target workflow step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.EmailTemplateName">
            <summary>
            E-mail template name to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.DefaultSubject">
            <summary>
            Default subject used when 'Subject' and selected template subject are empty.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Subject">
            <summary>
            Subject with higher priority then subject from template
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Body">
            <summary>
            Body with higher priority then body from template
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Sender">
            <summary>
            Sender with higher priority then sender from template
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.SiteName">
            <summary>
            Site name
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.LogEvents">
            <summary>
            Indicates if errors should be logged to event log
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowEmailSettings.#ctor(CMS.Membership.UserInfo)">
            <summary>
            Constructor
            </summary>
            <param name="user">User</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHelper">
            <summary>
            Class for workflow helper methods.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHelper.MAX_STEP_HOPS">
            <summary>
            Maximum number of allowed step hops (to prevent endless cycles)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHelper.MAX_NOTE_CONTENT_LENGTH">
            <summary>
            Maximum length of the note content
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHelper.ACTION_SATUS_RUNNING">
            <summary>
            Action status - running action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHelper.MaxStepsHopsCount">
            <summary>
            Maximum number of allowed step hops (to prevent endless cycles)
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetResolverName(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Gets macro resolver name for given workflow
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowEmailsSender(System.String)">
            <summary>
            Gets workflow e-mails default sender from settings
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.SendWorkflowEmails(System.String)">
            <summary>
            Gets settings indicating if workflow e-mails should be sent
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetScheduledTaskName(System.Guid)">
            <summary>
            Gets scheduled task name for given object and step
            </summary>
            <param name="stateGuid">State GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.StepActionHasParameters(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Checks if <paramref name="step"/> action has parameters with at least one field.
            </summary>
            <param name="step">Workflow step.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.CreateSourcePoint(CMS.WorkflowEngine.WorkflowTypeEnum,CMS.DataEngine.WorkflowStepTypeEnum)">
            <summary>
            Creates source point with respect to the workflow step type.
            </summary>
            <param name="workflowType">Workflow type</param>
            <param name="stepType">Workflow step type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowTypeString(CMS.WorkflowEngine.WorkflowTypeEnum,System.Boolean)">
            <summary>
            Gets workflow type string representation
            </summary>
            <param name="type">Workflow type</param>
            <param name="versioning">Indicates if workflow automatically publishes changes</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowActionString(CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets workflow action string representation
            </summary>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowTriggerTypeString(CMS.WorkflowEngine.WorkflowTriggerTypeEnum)">
            <summary>
            Gets workflow trigger type string representation.
            </summary>
            <param name="triggerType">Workflow trigger type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetDefaultEmailTemplateName(CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Gets default e-mail template name.
            </summary>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetProcessStatusString(CMS.WorkflowEngine.ProcessStatusEnum)">
            <summary>
            Gets process status string representation.
            </summary>
            <param name="processStatus">Process status</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.CheckNoteContentLength(System.Int32,System.String@)">
            <summary>
            Returns <c>true</c> if given content lenght doesn't exceed 450 characters.
            </summary>
            <param name="noteLength">Node content lenght</param>
            <param name="errorMessage">Passes error message if method's return value is <c>false</c></param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowLogSettings">
            <summary>
            Class for workflow history log settings.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.VersionHistoryId">
            <summary>
            Version history ID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.SourceStep">
            <summary>
            Source workflow step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.TargetStep">
            <summary>
            Target workflow step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.Rejected">
            <summary>
            Indicates if step was rejected.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.Time">
            <summary>
            Date and time of the action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.User">
            <summary>
            User info for the action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.ObjectType">
            <summary>
            Object type
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.ObjectID">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.TransitionType">
            <summary>
            Transition type
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowLogSettings.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="T:CMS.WorkflowEngine.Internal.WorkflowStepsUpgrade">
            <summary>
            Class to handle upgrade and object import of workflow steps.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Internal.WorkflowStepsUpgrade.Upgrade">
            <summary>
            Performs upgrade of existing workflow steps.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Internal.WorkflowStepsUpgrade.UpgradeStep(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Upgrades the workflow step to ensure its definition is valid.
            </summary>
            <param name="step">The step to upgrade.</param>
        </member>
    </members>
</doc>
