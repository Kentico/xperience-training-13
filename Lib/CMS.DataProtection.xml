<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.DataProtection</name>
    </assembly>
    <members>
        <member name="T:CMS.DataProtection.ConsentArchiveInfo">
            <summary>
            Data container class for <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.ConsentArchiveInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.ConsentArchiveInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentArchiveInfo.ConsentArchiveID">
            <summary>
            Consent archive ID.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentArchiveInfo.ConsentArchiveGuid">
            <summary>
            Consent archive guid.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentArchiveInfo.ConsentArchiveLastModified">
            <summary>
            Consent archive last modified.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentArchiveInfo.ConsentArchiveConsentID">
            <summary>
            Consent ID.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentArchiveInfo.ConsentArchiveHash">
            <summary>
            Consent hash.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentArchiveInfo.ConsentArchiveContent">
            <summary>
            Consent content.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instances of the <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.DataProtection.ConsentArchiveInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DataProtection.ConsentArchiveInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfoProvider.GetConsentArchives">
            <summary>
            Returns a query for all the <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> objects.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfoProvider.GetConsentArchiveInfo(System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfoProvider.SetConsentArchiveInfo(CMS.DataProtection.ConsentArchiveInfo)">
            <summary>
            Sets (updates or inserts) specified <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> to be set.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfoProvider.DeleteConsentArchiveInfo(CMS.DataProtection.ConsentArchiveInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> to be deleted.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfoProvider.DeleteConsentArchiveInfo(System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> ID.</param>
        </member>
        <member name="T:CMS.DataProtection.IConsentArchiveInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.Consent">
            <summary>
            Represents a consent which contains text either from <see cref="T:CMS.DataProtection.ConsentInfo"/> or <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/>,
                depending on which version of the consent's text has been agreed by the contact.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.Consent.Id">
            <summary>
            Consent ID.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.Consent.Name">
            <summary>
            Consent name.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.Consent.DisplayName">
            <summary>
            Consent display name.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.Consent.Content">
            <summary>
            Consent content.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.Consent.Hash">
            <summary>
            Consent hash.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.Consent.GetConsentText(System.String)">
            <summary>
            Gets consent's text for specific <paramref name="cultureCode"/>.
            </summary>
            <param name="cultureCode">Culture code of consent.</param>
            <returns>Language specific consent's text.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="cultureCode"/> is null or empty.</exception>
        </member>
        <member name="T:CMS.DataProtection.ConsentAgreementInfo">
            <summary>
            Data container class for <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.ConsentAgreementInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.ConsentAgreementInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentAgreementInfo.ConsentAgreementID">
            <summary>
            Consent agreement ID
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentAgreementInfo.ConsentAgreementGuid">
            <summary>
            Consent agreement guid
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentAgreementInfo.ConsentAgreementContactID">
            <summary>
            Contact ID
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentAgreementInfo.ConsentAgreementConsentID">
            <summary>
            Consent ID
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentAgreementInfo.ConsentAgreementRevoked">
            <summary>
            Indicates if consent agreement was revoked.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentAgreementInfo.ConsentAgreementConsentHash">
            <summary>
            Consent hash
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentAgreementInfo.ConsentAgreementTime">
            <summary>
            Gets or sets a time of a consent action
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instance of the <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.DataProtection.ConsentAgreementInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfoProvider.GetConsentAgreements">
            <summary>
            Returns all <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> bindings.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfoProvider.SetConsentAgreementInfo(CMS.DataProtection.ConsentAgreementInfo)">
            <summary>
            Sets specified <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> to set.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfoProvider.DeleteConsentAgreementInfo(CMS.DataProtection.ConsentAgreementInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> binding.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> object.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementInfoProvider.BulkMoveConsentAgreements(System.Int32,System.Int32)">
            <summary>
            Moves all consent agreements from the contact identified by given <paramref name="sourceContactID"/> to the contact identified by <paramref name="targetContactID"/>.
            </summary>
            <remarks>
            This method should be used only in the merging process. Note that there is no consistency check on whether the contacts with given IDs exist or not (nor is the 
            foreign key check in DB). Caller of this method should perform all the necessary checks prior to the method invocation.
            </remarks>
            <param name="sourceContactID">Identifier of the contact the activities are moved from</param>
            <param name="targetContactID">Identifier of the contact the activities are moved to</param>
        </member>
        <member name="T:CMS.DataProtection.ConsentInfo">
            <summary>
            Data container class for <see cref="T:CMS.DataProtection.ConsentInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.ConsentInfo.OBJECT_TYPE">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.ConsentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentInfo.ConsentID">
            <summary>
            Consent ID.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentInfo.ConsentName">
            <summary>
            Code name of the Consent.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentInfo.ConsentDisplayName">
            <summary>
            Consent display name.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentInfo.ConsentContent">
            <summary>
            Consent content.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentInfo.ConsentGuid">
            <summary>
            Consent GUID.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentInfo.ConsentLastModified">
            <summary>
            Consent last modified.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentInfo.ConsentHash">
            <summary>
            Consent hash
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfo.#ctor">
            <summary>
            Creates an empty instance of the <see cref="T:CMS.DataProtection.ConsentInfo"/> class.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Creates a new instances of the <see cref="T:CMS.DataProtection.ConsentInfo"/> class from the given <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="T:CMS.DataProtection.ConsentInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.DataProtection.ConsentInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DataProtection.ConsentInfoProvider"/>.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.GetConsents">
            <summary>
            Returns a query for all the <see cref="T:CMS.DataProtection.ConsentInfo"/> objects.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.GetConsentInfo(System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataProtection.ConsentInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DataProtection.ConsentInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.GetConsentInfo(System.String)">
            <summary>
            Returns <see cref="T:CMS.DataProtection.ConsentInfo"/> with specified name.
            </summary>
            <param name="name"><see cref="T:CMS.DataProtection.ConsentInfo"/> name.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.SetConsentInfo(CMS.DataProtection.ConsentInfo)">
            <summary>
            Sets (updates or inserts) specified <see cref="T:CMS.DataProtection.ConsentInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DataProtection.ConsentInfo"/> to be set.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.DeleteConsentInfo(CMS.DataProtection.ConsentInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.DataProtection.ConsentInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.DataProtection.ConsentInfo"/> to be deleted.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.DeleteConsentInfo(System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.DataProtection.ConsentInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.DataProtection.ConsentInfo"/> ID.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoProvider.SetInfo(CMS.DataProtection.ConsentInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="T:CMS.DataProtection.ConsentText">
            <summary>
            Represents consent's text.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentText.ShortText">
            <summary>
            Consent short text.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentText.FullText">
            <summary>
            Consent full text.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.IdentityCollectorRegister">
            <summary>
            Contains identity collectors.
            </summary>
            <seealso cref="T:CMS.DataProtection.IIdentityCollector"/>
        </member>
        <member name="M:CMS.DataProtection.IdentityCollectorRegister.#ctor">
            <summary>
            Initializes the register.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.IdentityCollectorRegister.Instance">
            <summary>
            Gets the <see cref="T:CMS.DataProtection.IdentityCollectorRegister"/> instance.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.IdentityCollectorRegister.Count">
            <summary>
            Gets the number of registered <see cref="T:CMS.DataProtection.IIdentityCollector"/>s in the register.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.IdentityCollectorRegister.Add(CMS.DataProtection.IIdentityCollector)">
            <summary>
            Adds identity collector to the register.
            </summary>
            <param name="identitiesCollector">Instance of <see cref="T:CMS.DataProtection.IIdentityCollector"/> responsible for collecting data subject's identities.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="identitiesCollector"/> is null.</exception>
        </member>
        <member name="M:CMS.DataProtection.IdentityCollectorRegister.CollectIdentities(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Collects all the data subject's identities by invoking registered collectors and passing them the <paramref name="dataSubjectIdentifiersFilter"/>.
            </summary>
            <param name="dataSubjectIdentifiersFilter">Key value collection containing data subject's information that identifies it.</param>
            <returns>Collection of data subject's identities.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSubjectIdentifiersFilter"/> is null.</exception>
            <exception cref="T:CMS.DataEngine.LicenseException">Thrown if insufficient license found.</exception>
            <seealso cref="M:CMS.DataProtection.IIdentityCollector.Collect(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.List{CMS.DataEngine.BaseInfo})"/>
        </member>
        <member name="T:CMS.DataProtection.IIdentityCollector">
            <summary>
            Defines contract for collecting identities of a data subject.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.IIdentityCollector.Collect(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.List{CMS.DataEngine.BaseInfo})">
            <summary>
            Collects all the identities satisfying given <paramref name="dataSubjectIdentifiersFilter"/> and appends them to the list of <paramref name="identities"/>.
            </summary>
            <remarks>
            Contents of the <paramref name="identities"/> list may be modified in any way.
            Duplicate entries do not need to be appended to the <paramref name="identities"/>list. 
            </remarks>
            <param name="dataSubjectIdentifiersFilter">Key value collection containing data subject's information that identifies it.</param>
            <param name="identities">List of already collected identities.</param>
        </member>
        <member name="T:CMS.DataProtection.IPersonalDataCollector">
            <summary>
            Defines contract for collecting personal data of a data subject.
            </summary>
            <seealso cref="T:CMS.DataProtection.PersonalDataCollectorRegister"/>
        </member>
        <member name="M:CMS.DataProtection.IPersonalDataCollector.Collect(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.String)">
            <summary>
            Collects personal data based on given <paramref name="identities"/>.
            </summary>
            <param name="identities">Collection of identities representing a data subject.</param>
            <param name="outputFormat">Defines an output format for the result.</param>
            <returns><see cref="T:CMS.DataProtection.PersonalDataCollectorResult"/> containing personal data.</returns>
        </member>
        <member name="T:CMS.DataProtection.IPersonalDataEraser">
            <summary>
            Defines contract for erasing personal data of a data subject.
            </summary>
            <seealso cref="T:CMS.DataProtection.PersonalDataEraserRegister"/>
        </member>
        <member name="M:CMS.DataProtection.IPersonalDataEraser.Erase(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Erases personal data of data subject's <paramref name="identities"/> filtered by <paramref name="configuration"/>.
            </summary>
            <param name="identities">Collection of identities representing a data subject.</param>
            <param name="configuration">Defines which personal data will be erased.</param>
        </member>
        <member name="T:CMS.DataProtection.PersonalDataCollectorRegister">
            <summary>
            Contains personal data collectors.
            </summary>
            <seealso cref="T:CMS.DataProtection.IPersonalDataCollector"/>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataCollectorRegister.#ctor">
            <summary>
            Initializes the register.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.PersonalDataCollectorRegister.Instance">
            <summary>
            Gets the <see cref="T:CMS.DataProtection.PersonalDataCollectorRegister"/> instance.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.PersonalDataCollectorRegister.Count">
            <summary>
            Gets the number of registered <see cref="T:CMS.DataProtection.IPersonalDataCollector"/>s in the register.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataCollectorRegister.Add(CMS.DataProtection.IPersonalDataCollector)">
            <summary>
            Adds personal data collector to the register.
            </summary>
            <param name="personalDataCollector">Instance of <see cref="T:CMS.DataProtection.IPersonalDataCollector"/> responsible for collecting personal data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="personalDataCollector"/> is null.</exception>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataCollectorRegister.CollectData(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.String)">
            <summary>
            Collects all the personal data by invoking registered collectors and passing them the <paramref name="identities"/>.
            </summary>
            <param name="identities">Collection of identities representing a data subject.</param>
            <param name="outputFormat">Defines an output format for the result.</param>
            <returns>Returns results of each data collector in an order they were registered.</returns>
            <exception cref="T:CMS.DataEngine.LicenseException">Thrown if insufficient license found.</exception>
            <seealso cref="M:CMS.DataProtection.IdentityCollectorRegister.CollectIdentities(System.Collections.Generic.IDictionary{System.String,System.Object})"/>
            <seealso cref="M:CMS.DataProtection.IPersonalDataCollector.Collect(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.String)"/>
        </member>
        <member name="T:CMS.DataProtection.PersonalDataCollectorResult">
            <summary>
            Represents result of the data collecting.
            </summary>
            <seealso cref="T:CMS.DataProtection.IPersonalDataCollector"/>
        </member>
        <member name="P:CMS.DataProtection.PersonalDataCollectorResult.Text">
            <summary>
            Returns data collecting result as text.
            Is null when no data was found.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.PersonalDataEraserRegister">
            <summary>
            Contains personal data erasers.
            </summary>
            <seealso cref="T:CMS.DataProtection.IPersonalDataEraser"/>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataEraserRegister.#ctor">
            <summary>
            Initializes the register.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.PersonalDataEraserRegister.Instance">
            <summary>
            Gets the <see cref="T:CMS.DataProtection.PersonalDataEraserRegister"/> instance.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.PersonalDataEraserRegister.Count">
            <summary>
            Gets the number of registered <see cref="T:CMS.DataProtection.IPersonalDataEraser"/>s in the register.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataEraserRegister.Add(CMS.DataProtection.IPersonalDataEraser)">
            <summary>
            Adds personal data eraser to the register.
            </summary>
            <param name="personalDataEraser">Instance of <see cref="T:CMS.DataProtection.IPersonalDataEraser"/> responsible for erasing personal data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="personalDataEraser"/> is null.</exception>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataEraserRegister.EraseData(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Erases all personal data of data subject's <paramref name="identities"/> filtered by <paramref name="configuration"/> by invoking registered erasers.
            </summary>
            <param name="identities">Collection of identities representing a data subject.</param>
            <param name="configuration">Defines which personal data will be erased.</param>
            <seealso cref="M:CMS.DataProtection.IPersonalDataEraser.Erase(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.Collections.Generic.IDictionary{System.String,System.Object})"/>
            <exception cref="T:CMS.DataEngine.LicenseException">Thrown if insufficient license found.</exception>
        </member>
        <member name="T:CMS.DataProtection.PersonalDataFormat">
            <summary>
            Defines formats of personal data collectors' result.
            </summary>
            <seealso cref="T:CMS.DataProtection.PersonalDataHelper"/>
            <seealso cref="T:CMS.DataProtection.PersonalDataCollectorResult"/>
        </member>
        <member name="F:CMS.DataProtection.PersonalDataFormat.HUMAN_READABLE">
            <summary>
            Represents a human readable format.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.PersonalDataFormat.MACHINE_READABLE">
            <summary>
            Represents a machine readable format.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.PersonalDataHelper">
            <summary>
            Contains helper methods for personal data processing.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataHelper.JoinPersonalData(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Joins individual results (<see cref="P:CMS.DataProtection.PersonalDataCollectorResult.Text"/>) of personal data collection.
            </summary>
            <param name="personalData">Enumeration of individual personal data (<see cref="P:CMS.DataProtection.PersonalDataCollectorResult.Text"/>) obtained from collectors.</param>
            <param name="outputFormat">Output format to determine proper join method.</param>
            <returns>Returns joined <paramref name="personalData"/> with respect to <paramref name="outputFormat"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="personalData"/> or <paramref name="outputFormat"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when given <paramref name="outputFormat"/> is not supported.</exception>
            <seealso cref="M:CMS.DataProtection.PersonalDataCollectorRegister.CollectData(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.String)"/>
            <seealso cref="T:CMS.DataProtection.PersonalDataFormat"/>
            <remarks>
            The default system implementation supports <see cref="F:CMS.DataProtection.PersonalDataFormat.HUMAN_READABLE"/> and <see cref="F:CMS.DataProtection.PersonalDataFormat.MACHINE_READABLE"/> output format.
            </remarks>
        </member>
        <member name="M:CMS.DataProtection.PersonalDataHelper.JoinPersonalDataInternal(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Joins individual results (<see cref="P:CMS.DataProtection.PersonalDataCollectorResult.Text"/>) of personal data collection.
            </summary>
            <param name="personalData">Enumeration of individual personal data (<see cref="P:CMS.DataProtection.PersonalDataCollectorResult.Text"/>) obtained from collectors.</param>
            <param name="outputFormat">Output format to determine proper join method.</param>
            <returns>Returns joined <paramref name="personalData"/> with respect to <paramref name="outputFormat"/>, or empty string for empty <paramref name="personalData"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="personalData"/> or <paramref name="outputFormat"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when given <paramref name="outputFormat"/> is not supported.</exception>
            <seealso cref="M:CMS.DataProtection.PersonalDataCollectorRegister.CollectData(System.Collections.Generic.IEnumerable{CMS.DataEngine.BaseInfo},System.String)"/>
            <seealso cref="T:CMS.DataProtection.PersonalDataFormat"/>
            <remarks>
            The default system implementation supports <see cref="F:CMS.DataProtection.PersonalDataFormat.HUMAN_READABLE"/> and <see cref="F:CMS.DataProtection.PersonalDataFormat.MACHINE_READABLE"/> output format.
            </remarks>
        </member>
        <member name="T:CMS.DataProtection.DataProtectionEvents">
            <summary>
            Data protection events.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.DataProtectionEvents.RevokeConsentAgreement">
            <summary>
            Fires after a consent agreement is revoked.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.RevokeConsentAgreementEventArgs">
            <summary>
            Arguments of the event represented by <see cref="T:CMS.DataProtection.RevokeConsentAgreementHandler"/>.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.RevokeConsentAgreementEventArgs.ConsentAgreement">
            <summary>
            Gets the consent agreement that has been revoked.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.RevokeConsentAgreementEventArgs.Consent">
            <summary>
            Gets the consent that has been revoked.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.RevokeConsentAgreementEventArgs.Contact">
            <summary>
            Gets the contact who has revoked the consent.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.RevokeConsentAgreementHandler">
            <summary>
            Event handler for the event fired when a consent agreement has been revoked.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.ConsentArchiveInfoExtensions">
            <summary>
            Extension methods for <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveInfoExtensions.GetConsentText(CMS.DataProtection.ConsentArchiveInfo,System.String)">
            <summary>
            Gets consent's text for specific <paramref name="cultureCode"/>.
            </summary>
            <param name="consentArchive">Consent archive for which the text gets retrieved.</param>
            <param name="cultureCode">Culture code of consent.</param>
            <returns>Language specific consent's text.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consentArchive"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="cultureCode"/> is null.</exception>
        </member>
        <member name="T:CMS.DataProtection.ConsentInfoExtensions">
            <summary>
            Extension methods for <see cref="T:CMS.DataProtection.ConsentInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoExtensions.GetConsentText(CMS.DataProtection.ConsentInfo,System.String)">
            <summary>
            Gets consent's text for specific <paramref name="cultureCode"/>.
            </summary>
            <param name="consent">Consent for which the text gets retrieved.</param>
            <param name="cultureCode">Culture code of consent.</param>
            <returns>Language specific consent's text.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consent"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="cultureCode"/> is null or empty.</exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoExtensions.UpsertConsentText(CMS.DataProtection.ConsentInfo,System.String,System.String,System.String)">
            <summary>
            Adds new or updates existing consent language version.
            </summary>
            <param name="consent">Consent info.</param>
            <param name="cultureCode">Culture code of consent.</param>
            <param name="shortText">Short text of consent.</param>
            <param name="fullText">Full text of consent.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consent"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="cultureCode"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="shortText"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="fullText"/> is <c>null</c>.</exception>
        </member>
        <member name="T:CMS.DataProtection.IConsentAgreementInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.IConsentInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.DataProtection.ConsentInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.InternalLicenseHelper">
            <summary>
            Provides helper methods for license checking.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.InternalLicenseHelper.ThrowIfInsufficientLicense">
            <summary>
            Checks if current license allows <see cref="F:CMS.DataEngine.FeatureEnum.DataProtection"/> feature and if it doesn't the method throws <see cref="T:CMS.DataEngine.LicenseException"/>.
            </summary>
            <exception cref="T:CMS.DataEngine.LicenseException">Thrown if insufficient license found.</exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentInfoMethods.GetConsentText(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns localized text of the consent. Texts themselves are stored in the <see cref="T:CMS.DataProtection.ConsentText"/> object.
            </summary>
            <param name="context">Evaluation context with child resolver.</param>
            <param name="parameters">Method parameters.</param>
        </member>
        <member name="M:CMS.DataProtection.ContactInfoMethods.AgreedWithConsent(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact has agreed with the specified consent.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DataProtection.ContactInfoMethods.AgreedWithConsentInternal(System.Object,System.String)">
            <summary>
            Returns true if the contact has agreed with the specified consent.
            </summary>
            <param name="contact">Contact info object.</param>
            <param name="consentName">Code name of the consent.</param>
            <returns></returns>
        </member>
        <member name="T:CMS.DataProtection.DataProtectionModule">
            <summary>
            Represents the DataProtection module.
            </summary>
        </member>
        <member name="F:CMS.DataProtection.DataProtectionModule.MODULE_NAME">
            <summary>
            Name of DataProtection module.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.DataProtectionModule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.DataProtectionModule.OnInit">
            <summary>
            Initializes the module.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.ConsentArchiveService">
            <summary>
            Service for archiving consent versions.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveService.#ctor(CMS.DataProtection.IConsentAgreementInfoProvider,CMS.DataProtection.IConsentArchiveInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DataProtection.ConsentArchiveService"/> class.
            </summary>
            <param name="consentAgreementInfoProvider">Provider for <see cref="T:CMS.DataProtection.ConsentAgreementInfo"/> management.</param>
            <param name="consentArchiveInfoProvider">Provider for <see cref="T:CMS.DataProtection.ConsentArchiveInfo"/> management.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consentAgreementInfoProvider"/> or <paramref name="consentArchiveInfoProvider"/> is null.</exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentArchiveService.Archive(CMS.DataProtection.ConsentInfo)">
            <summary>
            Archives specified consent if it was already agreed or revoked by some contact.
            </summary>
            <param name="consent">Consent to archive.</param>
        </member>
        <member name="T:CMS.DataProtection.IConsentArchiveService">
            <summary>
            Interface for service archiving consent versions.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.IConsentArchiveService.Archive(CMS.DataProtection.ConsentInfo)">
            <summary>
            Puts specified consent into archive.
            </summary>
            <param name="consent">Consent to archive.</param>
        </member>
        <member name="T:CMS.DataProtection.ConsentAgreementMergeService">
            <summary>
            Service for merging consent agreements of contacts.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementMergeService.Merge(System.Int32,System.Int32)">
            <summary>
            Moves all consent agreements from source contact to target contact.
            </summary>
            <param name="sourceContactId">Source Contact ID</param>
            <param name="targetContactId">Target Contact ID</param>
        </member>
        <member name="T:CMS.DataProtection.IConsentAgreementMergeService">
            <summary>
            Service for merging consent agreements of contacts.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.IConsentAgreementMergeService.Merge(System.Int32,System.Int32)">
            <summary>
            Moves all consent agreements from source contact to target contact.
            </summary>
            <param name="sourceContactId">Source Contact ID.</param>
            <param name="targetContactId">Target Contact ID.</param>
        </member>
        <member name="T:CMS.DataProtection.ConsentAgreementService">
            <summary>
            Service to manage consent agreements.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.#ctor(CMS.Core.Internal.IDateTimeNowService)">
            <summary>
            Creates an instance of <see cref="T:CMS.DataProtection.ConsentAgreementService"/> class.
            </summary>
            <param name="dateTimeNowService">The DateTimeNowService which will be used for retrieving the current time.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.Agree(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo)">
            <summary>
            Inserts an <see cref="T:CMS.DataProtection.ConsentAgreementInfo">agreement</see> of the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> and the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <remarks>
            If an active agreement already exists then this active agreement is kept and its hash is updated with a one from the given consent.
            </remarks>
            <param name="contact">Contact</param>
            <param name="consent">Consent</param>
            <returns>Returns the agreement object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contact"/> is <c>null</c> -or <paramref name="consent"/> is <c>null</c></exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.IsAgreed(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo)">
            <summary>
            Indicates whether the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see> has agreed the specified <see cref="T:CMS.DataProtection.ConsentInfo">consent</see>.
            </summary>
            <param name="contact">Contact.</param>
            <param name="consent">Consent.</param>
            <returns>Returns <c>true</c> when the given contact agreed the specified consent and is still valid.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contact"/> is <c>null</c> -or <paramref name="consent"/> is <c>null</c></exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.Revoke(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo)">
            <summary>
            Revokes an agreement of the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> for the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <param name="contact">Contact</param>
            <param name="consent">Consent</param>
            <returns>Returns the agreement object that has been revoked.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contact"/> is <c>null</c> -or <paramref name="consent"/> is <c>null</c></exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.GetAgreedConsents(CMS.ContactManagement.ContactInfo)">
            <summary>
            Returns agreed consents for the given contact.
            </summary>
            <param name="contact">Contact.</param>
            <remarks>Only returns agreed consents, revoked consents are not included.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="contact"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.GetContactIDsWhoAgreed(CMS.DataProtection.ConsentInfo)">
            <summary>
            Gets an object query that returns contact IDs who agreed to the specified consent and their agreement is still active (has not been revoked).
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.GetActiveAgreementsQuery(CMS.DataEngine.WhereCondition,System.String)">
            <summary>
            Gets a query that returns only those agreements which have not been revoked.
            </summary>
            <param name="where">Specify the restricting conditions for the query</param>
            <param name="partitionByColumnName">Name of the column by which the order gets partitioned by.</param>
            <remarks>
            Note: If you need to restrict the scope of agreements (specific contact, specific consent ...), provide this restriction in the <paramref name="where" /> parameter.
            That way the generated query will use the restriction in the inner select, therefore will provide better performance.
            </remarks>
        </member>
        <member name="M:CMS.DataProtection.ConsentAgreementService.GetLastConsentAgreement(System.Int32,System.Int32)">
            <summary>
            Gets a last consent agreement that has been created.
            </summary>
            <returns>Returns latest consent agreement object or <c>null</c> when a consent agreement is not found.</returns>
        </member>
        <member name="T:CMS.DataProtection.IConsentAgreementService">
            <summary>
            Service to manage consent agreements.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.IConsentAgreementService.Agree(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo)">
            <summary>
            Inserts an <see cref="T:CMS.DataProtection.ConsentAgreementInfo">agreement</see> of the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> and the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <remarks>
            If an active agreement already exists then this active agreement is kept and its hash is updated with a one from the given consent.
            </remarks>
            <param name="contact">Contact</param>
            <param name="consent">Consent</param>
            <returns>Returns the agreement.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contact"/> is <c>null</c> -or <paramref name="consent"/> is <c>null</c></exception>
        </member>
        <member name="M:CMS.DataProtection.IConsentAgreementService.IsAgreed(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo)">
            <summary>
            Indicates whether the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see> has agreed with the specified <see cref="T:CMS.DataProtection.ConsentInfo">consent</see>.
            </summary>
            <param name="contact">Contact.</param>
            <param name="consent">Consent.</param>
            <returns>Returns <c>true</c> when the given contact agreed with the specified consent and is still valid.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contact"/> is <c>null</c> -or <paramref name="consent"/> is <c>null</c></exception>
        </member>
        <member name="M:CMS.DataProtection.IConsentAgreementService.Revoke(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo)">
            <summary>
            Revokes an agreement of the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> for the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <param name="contact">Contact</param>
            <param name="consent">Consent</param>
            <returns>Returns the agreement object that has been revoked.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contact"/> is <c>null</c> -or <paramref name="consent"/> is <c>null</c></exception>
        </member>
        <member name="M:CMS.DataProtection.IConsentAgreementService.GetAgreedConsents(CMS.ContactManagement.ContactInfo)">
            <summary>
            Returns agreed consents for the given contact.
            </summary>
            <param name="contact">Contact.</param>
            <remarks>Only returns agreed consents, revoked consents are not included.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="contact"/> is <c>null</c>.</exception>
        </member>
        <member name="T:CMS.DataProtection.Internal.ConsentContactsRetriever">
            <summary>
            Retrieves contacts who have agreed to the given consent.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.Internal.ConsentContactsRetriever.#ctor(CMS.DataProtection.ConsentInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DataProtection.Internal.ConsentContactsRetriever"/> class.
            </summary>
            <param name="consent">The consent which contacts will be returned for.</param>
        </member>
        <member name="M:CMS.DataProtection.Internal.ConsentContactsRetriever.GetContacts">
            <summary>
            Returns contacts who agreed to the consent.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.ConsentContent">
            <summary>
            Represents consent's language versions contained within the <see cref="P:CMS.DataProtection.ConsentInfo.ConsentContent"/>.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentContent.ConsentLanguageVersions">
            List of the consent's language versions contained within the <see cref="P:CMS.DataProtection.ConsentInfo.ConsentContent"/>.
        </member>
        <member name="M:CMS.DataProtection.ConsentContent.#ctor">
            <summary>
            Creates an instance of <see cref="T:CMS.DataProtection.ConsentContent"/> class.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.ConsentContentManager">
            <summary>
            Manages consent content language versions.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentContentManager.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:CMS.DataProtection.ConsentContentManager"/>.
            </summary>
            <param name="contentText">Consent content text.</param>
        </member>
        <member name="M:CMS.DataProtection.ConsentContentManager.Upsert(System.String,System.String,System.String)">
            <summary>
            Adds new or updates existing consent language version.
            </summary>
            <param name="cultureCode">Culture code of consent.</param>
            <param name="shortText">Short text of consent.</param>
            <param name="fullText">Full text of consent.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="cultureCode"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="shortText"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="fullText"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentContentManager.GetContentText">
            <summary>
            Gets consent content text.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentContentManager.GetShortText(System.String)">
            <summary>
            Gets consent's short text for specific <paramref name="cultureCode"/>.
            </summary>
            <param name="cultureCode">Culture code of consent.</param>
            <returns>Language specific consent's short text.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="cultureCode"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentContentManager.GetFullText(System.String)">
            <summary>
            Gets consent's full text for specific <paramref name="cultureCode"/>.
            </summary>
            <param name="cultureCode">Culture code of consent.</param>
            <returns>Language specific consent's full text.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="cultureCode"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="T:CMS.DataProtection.ConsentContentService">
            <summary>
            Service for managing language versions of consent content.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.ConsentContentService.#ctor(CMS.DataProtection.IConsentArchiveService,CMS.DataProtection.IConsentInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.DataProtection.ConsentContentService"/> class.
            </summary>
            <param name="consentArchiveService">Service for archiving consent versions.</param>
            <param name="consentInfoProvider">Provider for <see cref="T:CMS.DataProtection.ConsentInfo"/> management.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consentArchiveService"/> or <paramref name="consentInfoProvider"/> is null.</exception>
        </member>
        <member name="M:CMS.DataProtection.ConsentContentService.AddOrUpdateText(CMS.DataProtection.ConsentInfo,System.String,System.String,System.String)">
            <summary>
            Adds new or updates existing consent language version.
            </summary>
            <param name="consentInfo">Consent info.</param>
            <param name="cultureCode">Culture code of consent.</param>
            <param name="shortText">Short text of consent.</param>
            <param name="fullText">Full text of consent.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consentInfo"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="cultureCode"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="shortText"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="fullText"/> is <c>null</c>.</exception>
        </member>
        <member name="T:CMS.DataProtection.ConsentLanguageVersion">
            <summary>
            Represents language version of consent contained within the <see cref="P:CMS.DataProtection.ConsentInfo.ConsentContent"/>.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentLanguageVersion.CultureCode">
            <summary>
            Culture code of consent language version.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentLanguageVersion.ShortText">
            <summary>
            Short text of consent language version.
            </summary>
        </member>
        <member name="P:CMS.DataProtection.ConsentLanguageVersion.FullText">
            <summary>
            Full text of consent language version.
            </summary>
        </member>
        <member name="T:CMS.DataProtection.IConsentContentService">
            <summary>
            Interface for service managing language versions of consent content.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.IConsentContentService.AddOrUpdateText(CMS.DataProtection.ConsentInfo,System.String,System.String,System.String)">
            <summary>
            Adds new or updates existing consent language version.
            </summary>
            <param name="consentInfo">Consent info.</param>
            <param name="cultureCode">Culture code of consent.</param>
            <param name="shortText">Short text of consent.</param>
            <param name="fullText">Full text of consent.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consentInfo"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="cultureCode"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="shortText"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="fullText"/> is <c>null</c>.</exception>
        </member>
        <member name="T:CMS.DataProtection.FormConsentAgreementService">
            <summary>
            Service to agree consent in forms.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.FormConsentAgreementService.#ctor(CMS.ContactManagement.IContactDataInjector,CMS.DataProtection.IConsentAgreementService,CMS.ContactManagement.IContactCreator,CMS.ContactManagement.IContactPersistentStorage)">
            <summary>
            Creates an instance of <see cref="T:CMS.DataProtection.FormConsentAgreementService"/> class.
            </summary>
            <param name="contactDataInjector">Contact data injector.</param>
            <param name="consentAgreementService">Contact agreement service.</param>
            <param name="contactCreator">Contact creator.</param>
            <param name="contactPersistentStorage">Contact persistent storage.</param>
        </member>
        <member name="M:CMS.DataProtection.FormConsentAgreementService.Agree(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo,CMS.DataEngine.BaseInfo)">
            <summary>
            Agrees the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> with the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <param name="contact">Contact.</param>
            <param name="consent">Consent.</param>
            <param name="data">Info object being edited by the form.</param>
            <returns>The <see cref="T:CMS.DataProtection.ConsentAgreementInfo">agreement</see>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consent"/> or <paramref name="data"/> is null.</exception>
            <remarks>When contact is null, ensures contact and maps data to a contact based on mapping configuration of an object.</remarks>
        </member>
        <member name="M:CMS.DataProtection.FormConsentAgreementService.Revoke(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo,CMS.DataEngine.BaseInfo)">
            <summary>
            Revokes the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> for the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <param name="contact">Contact.</param>
            <param name="consent">Consent.</param>
            <param name="data">Info object being edited by the form.</param>
            <returns>The revoked <see cref="T:CMS.DataProtection.ConsentAgreementInfo">agreement</see>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consent"/> or <paramref name="data"/> is null.</exception>
            <remarks>When contact is null, ensures contact and maps data to a contact based on mapping configuration of an object.</remarks>
        </member>
        <member name="T:CMS.DataProtection.IFormConsentAgreementService">
            <summary>
            Service to agree consent in forms.
            </summary>
        </member>
        <member name="M:CMS.DataProtection.IFormConsentAgreementService.Agree(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo,CMS.DataEngine.BaseInfo)">
            <summary>
            Agrees the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> with the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <param name="contact">Contact.</param>
            <param name="consent">Consent.</param>
            <param name="data">Info object being edited by the form.</param>
            <returns>The <see cref="T:CMS.DataProtection.ConsentAgreementInfo">agreement</see>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consent"/> or <paramref name="data"/> is null.</exception>
            <remarks>When contact is null, ensures contact and maps data to a contact based on mapping configuration of an object.</remarks>
        </member>
        <member name="M:CMS.DataProtection.IFormConsentAgreementService.Revoke(CMS.ContactManagement.ContactInfo,CMS.DataProtection.ConsentInfo,CMS.DataEngine.BaseInfo)">
            <summary>
            Revokes the given <see cref="T:CMS.DataProtection.ConsentInfo">consent</see> for the given <see cref="T:CMS.ContactManagement.ContactInfo">contact</see>.
            </summary>
            <param name="contact">Contact.</param>
            <param name="consent">Consent.</param>
            <param name="data">Info object being edited by the form.</param>
            <returns>The revoked <see cref="T:CMS.DataProtection.ConsentAgreementInfo">agreement</see>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="consent"/> or <paramref name="data"/> is null.</exception>
            <remarks>When contact is null, ensures contact and maps data to a contact based on mapping configuration of an object.</remarks>
        </member>
    </members>
</doc>
