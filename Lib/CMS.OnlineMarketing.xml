<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.OnlineMarketing</name>
    </assembly>
    <members>
        <member name="T:CMS.OnlineMarketing.ABTestConstants">
            <summary>
            Defines constants for A/B test module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.AB_TEST_VARIANT_QUERY_STRING_PARAMETER_NAME">
            <summary>
            Defines a query string parameter that indicates which A/B variant is to be displayed in the UI.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.ABSESSIONCONVERSION_FIRST">
            <summary>
            Code name of the first session conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.ABSESSIONCONVERSION_RECURRING">
            <summary>
            Code name of the recurring session conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConstants.ABCONVERSION">
            <summary>
            Code name of the conversion.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestHelper">
            <summary>
            Contains A/B test helper methods.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetABTestPage(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets the latest version of a page for the given <paramref name="abTest"/>.
            Site and culture of the A/B test has to match site and culture of the page.
            </summary>
            <param name="abTest">A/B test to get the page for.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="abTest"/> is null.</exception>
            <returns>Found page.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetUsersTests">
            <summary>
            Gets names of the current user's A/B tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetValidVariants">
            <summary>
            Returns collection with variant identifiers of A/B tests, which are running and in which the current user is included.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.HasABTestVariantsMaterialized(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns whether <paramref name="abTest"/> has it's variants materialized.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetABTestPageInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets the latest version of a page for given <paramref name="abTest"/>.
            Site and culture of the A/B test has to match site and culture of the page.
            </summary>
            <param name="abTest">A/B test to get the page for.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="abTest"/> is null.</exception>
            <returns>Found page.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetUsersTestsInternal">
            <summary>
            Gets names of the current user's A/B tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestHelper.GetValidVariantsInternal">
            <summary>
            Returns collection with variant identifiers of A/B tests, which are running and in which the current user is included.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConversionLogger">
            <summary>
            Class providing method for logging A/B test conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConversionLogger.#ctor(CMS.OnlineMarketing.Internal.IABUserStateManagerFactory,CMS.Base.Internal.IHttpContextRetriever,CMS.WebAnalytics.IAnalyticsLogger,CMS.SiteProvider.ISiteInfoProvider)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.Internal.ABTestConversionLogger"/> with given <paramref name="abUserStateManagerFactory"/>, <paramref name="httpContextRetriever"/>, 
            <paramref name="siteInfoProvider"/> and <paramref name="analyticsLogger"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConversionLogger.LogConversion(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal)">
            <summary>
            Log A/B test conversion with given parameters. Actual logging of conversions is different for content only sites and other sites based on given <paramref name="siteName"/>.
            </summary>
            <param name="requestDomain">Domain of current HTTP request.</param>
            <param name="siteName">Site name where conversion occurred.</param>
            <param name="culture">Culture of page where conversion occurred.</param>
            <param name="conversionName">Name of conversion registered in system.</param>
            <param name="itemIdentifier">Identifier of object connected to conversion.</param>
            <param name="count">Number of conversions that occurred.</param>
            <param name="value">Conversion value.</param>
            <seealso cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Register(CMS.OnlineMarketing.ABTestConversionDefinition)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConversionLogger.LogConversion(System.String,System.String,System.String,System.Decimal,System.Int32,System.String)">
            <summary>
            Logs A/B test conversion.
            </summary>
            <param name="conversionName">Name of conversion registered in system.</param>
            <param name="siteName">Site name where conversion occurred.</param>
            <param name="itemIdentifier">Identifier of object connected to conversion.</param>
            <param name="value">Default value used for logging. This value has lower priority than the conversion default value defined in the A/B testing application.</param>
            <param name="count">Number of conversions that occurred - 1 by default.</param>
            <param name="culture">Culture name connected to conversion - current thread culture is used if not specified.</param>
            <seealso cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Register(CMS.OnlineMarketing.ABTestConversionDefinition)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConversionLogger.GetConversionValue(CMS.OnlineMarketing.ABTestInfo,System.String,System.Decimal)">
            <summary>
            Returns value that should be used as value of given <paramref name="conversionName"/>.
            </summary>
            <param name="abTest">A/B test for which conversion is logged.</param>
            <param name="conversionName">Name of conversion for which value is returned.</param>
            <param name="value">Conversion value used for portal engine A/B tests, or fallback conversion value for content only A/B tests.</param>
            <returns>Conversion value.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConfiguration">
            <summary>
            Represents the configuration of a AB test of a given document.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestConfiguration.Variants">
            <summary>
            Collection of AB test variants associated with given document.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/> class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer">
            <summary>
            Serializer of <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.#ctor(CMS.Core.IEventLogService)">
            <summary>
            Initializes a new instance of an <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer"/>.
            </summary>
            <param name="eventLogService">Service for logging events.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.Serialize(CMS.OnlineMarketing.Internal.ABTestConfiguration)">
            <summary>
            Serializes an AB test configuration to JSON.
            </summary>
            <param name="testConfiguration">Configuration to be serialized to JSON.</param>
            <returns>Returns serialized configuration.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.Deserialize(System.String)">
            <summary>
            Deserializes configuration of an AB test instance from JSON.
            </summary>
            <param name="configurationJson">Configuration in JSON to be deserialized.</param>
            <returns>Returns deserialized configuration.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer.GetSettings">
            <summary>
            Gets serializer settings used to serialize and deserialize <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/> objects.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestConfigurationTypesBinder">
            <summary>
            Serialization binder for <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfigurationSerializer"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestConfigurationTypesBinder.BindToType(System.String,System.String)">
            <summary>
            Binds given <paramref name="typeName"/> in <paramref name="assemblyName"/> only if this type is valid for <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestVariant">
            <summary>
            Represents single AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.Guid">
            <summary>
            Identifier of a AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.Name">
            <summary>
            Name of a AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.IsOriginal">
            <summary>
            Indicates whether this AB test variant is original. In case of <see cref="P:CMS.OnlineMarketing.Internal.ABTestVariant.IsOriginal"/> variant, data associated to this variant are loaded from respective properties of <see cref="T:CMS.DocumentEngine.Internal.DocumentCultureDataInfo"/>.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.PageBuilderWidgets">
            <summary>
            Configuration of page builder widgets in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABTestVariant.PageTemplate">
            <summary>
            Configuration of page template in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestVariant.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.OnlineMarketing.Internal.ABTestVariant"/> class.
            </summary>
            <param name="name">Name of new variant.</param>
            <param name="isOriginal">Whether variant is original.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestVariant.#ctor(System.Guid,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.OnlineMarketing.Internal.ABTestVariant"/> class.
            </summary>
            <param name="guid">Guid of the variant.</param>
            <param name="name">Name of new variant.</param>
            <param name="isOriginal">Whether variant is original.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer">
            <summary>
            Defines serializer of <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer.Serialize(CMS.OnlineMarketing.Internal.ABTestConfiguration)">
            <summary>
            Serializes an AB test configuration to JSON.
            </summary>
            <param name="testConfiguration">Configuration to be serialized to JSON.</param>
            <returns>Returns serialized configuration.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer.Deserialize(System.String)">
            <summary>
            Deserializes configuration of an AB test instance from JSON.
            </summary>
            <param name="configurationJson">Configuration in JSON to be deserialized.</param>
            <returns>Returns deserialized configuration.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.VariantConfigurationSource">
            <summary>
            Source of the configuration for A/B test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.VariantConfigurationSource.Widgets">
            <summary>
            Page builder widgets configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.VariantConfigurationSource.PageTemplate">
            <summary>
            Page template configuration.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABTestUIHelper">
            <summary>
            Provides helper methods for A/B testing UI.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABTestUIHelper.IsElementVisible(System.String,CMS.Base.ISiteInfo,CMS.Base.ITreeNode)">
            <summary>
            Returns <c>true</c> when A/B testing related element should be visible.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator">
            <summary>
            Class that evaluates AB segmentation conditions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator.CheckUserIsEditor">
            <summary>
            Returns true if visitor is editor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator.CheckIncludedTrafficCondition(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns false if visitor did not pass traffic condition.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABSegmentationEvaluator.CheckVisitorTargetingMacro(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns false if visitor did not pass targeting macro condition.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.StaticRandom">
            <summary>
            Class that provides <see cref="T:System.Random"/> generator from thread local storage. This class is preferred to use, because <see cref="T:System.Random"/> class is not
            thread-safe.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.StaticRandom.Instance">
            <summary>
            Gets instance for generator. Differs for each thread.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.StaticRandom.Next(System.Int32)">
            <summary>
            Returns a nonnegative random number less than the specified maximum.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to zero, and less than <paramref name="maxValue"/>; that is, the range of return values ordinarily includes zero but not <paramref name="maxValue"/>. However, if <paramref name="maxValue"/> equals zero, <paramref name="maxValue"/> is returned.
            </returns>
            <param name="maxValue">The exclusive upper bound of the random number to be generated. <paramref name="maxValue"/> must be greater than or equal to zero. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxValue"/> is less than zero. </exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.StaticRandom.Next(System.Int32,System.Int32)">
            <summary>
            Returns a random number within a specified range.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to <paramref name="minValue"/> and less than <paramref name="maxValue"/>; that is, the range of return values includes <paramref name="minValue"/> but not <paramref name="maxValue"/>. If <paramref name="minValue"/> equals <paramref name="maxValue"/>, <paramref name="minValue"/> is returned.
            </returns>
            <param name="minValue">The inclusive lower bound of the random number returned. </param><param name="maxValue">The exclusive upper bound of the random number returned. <paramref name="maxValue"/> must be greater than or equal to <paramref name="minValue"/>. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minValue"/> is greater than <paramref name="maxValue"/>. </exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABCookieValue">
            <summary>
            Class representing deserialized permanent A/B cookie value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABCookieValue.VariantIdentifier">
            <summary>
            A/B variant identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABCookieValue.ExcludedFromTest">
            <summary>
            Indicates whether is visitor included in A/B test or not.
            If not, Control is always shown and no A/B conversions and A/B visits are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABCookieValue.Conversions">
            <summary>
            Conversions performed during this test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABCookieValue.#ctor">
            <summary>
            Constructor. Sets properties to empty values.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABUserStateManager">
            <summary>
            Manages current user's A/B test state - can assign an A/B variant to him, save which conversions he has done, or read saved state. Internally uses a cookie for permanent state
            (see <see cref="T:CMS.OnlineMarketing.Internal.ABCookieValue"/>) and session for session state(see <see cref="T:CMS.Helpers.SessionHelper"/>).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABUserStateManager.CookieValue">
            <summary>
            Gets or sets cached cookie value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABUserStateManager.VariantCookieValue">
            <summary>
            Gets or sets cached variant cookie value (present even without cookie consent).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABUserStateManager.IsExcluded">
            <summary>
            Indicates whether is visitor included in A/B test or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.Internal.ABUserStateManager"/>.
            </summary>
            <param name="testName">Name of the test for which the user's state is managed</param>
            <exception cref="T:System.ArgumentException">testName is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.#ctor(System.String,CMS.OnlineMarketing.Internal.IABResponseCookieProvider)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.Internal.ABUserStateManager"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.SetVisit">
            <summary>
            Sets a A/B test visit for current user so that from now on, conversions can be logged also as A/B test session conversions.
            </summary>
            <returns>True if visit was assigned successfully (wasn't already assigned). False if a visit is already set.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.SetVisitToSession">
            <summary>
            Sets current A/B test visit directly to the session store.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.IsABVisit">
            <summary>
            Returns true if user has visited A/B test page and has visit session.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.GetVariantIdentifier">
            <summary>
            Gets name of the A/B variant assigned to the current user. Returns null, if the user hasn't got any variant assigned yet.
            </summary>
            <returns>Code name of the variant that is assigned to the current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.AssignVariant(System.Guid)">
            <summary>
            Assigns an A/B variant to current user so that it can be used on next visit. From now on, permanent conversions can be also saved to
            user's state.
            </summary>
            <param name="variantIdentifier">Identifier of the variant to assign to current user.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.Exclude">
            <summary>
            Excludes visitor from A/B test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.GetPermanentConversions">
            <summary>
            Gets permanent conversions that are done by current user.
            </summary>
            <returns>Permanent conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.GetSessionConversions">
            <summary>
            Gets session conversions that are done by current user.
            </summary>
            <returns>Session conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.AddConversion(System.String)">
            <summary>
            Adds a conversion to session and permanent conversions if possible.
            </summary>
            <param name="conversion">Conversion to add to current user</param>
            <exception cref="T:System.ArgumentException">conversion is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.IsABTestCookieDefined">
            <summary>
            Returns true when A/B test cookie is defined.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.TryAddPermanentConversion(System.String)">
            <summary>
            Adds specified conversion to permanent cookie.
            </summary>
            <param name="conversion">Conversion name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.TryAddSessionConversion(System.String)">
            <summary>
            Adds specified conversion to session cookie.
            </summary>
            <param name="conversion">Conversion name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.GetCookieValue(System.String)">
            <summary>
            Returns deserialized value of specified cookie.
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.GetVariantCookieValue(System.String)">
            <summary>
            Returns value of specified variant cookie.
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.SetCookie(System.String,CMS.OnlineMarketing.Internal.ABCookieValue,System.DateTime)">
            <summary>
            Serializes object to a cookie as a JSON object.
            </summary>
            <param name="cookieName">Name of the cookie to save object to</param>
            <param name="cookieValue">Object to serialize to the cookie</param>
            <param name="expiration">Expiration of the cookie</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManager.SetCookie(System.String,System.Guid,System.DateTime)">
            <summary>
            Sets GUID to a cookie.
            </summary>
            <param name="cookieName">Name of the cookie to save object to</param>
            <param name="abVariant">AB variant GUID</param>
            <param name="expiration">Expiration of the cookie</param>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABUserStateManagerFactory">
            <summary>
            Factory for <see cref="T:CMS.OnlineMarketing.Internal.IABUserStateManager"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABUserStateManagerFactory.Create(System.String)">
            <summary>
            Creates a new user state manager for A/B test identified by <paramref name="abTestName"/>.
            </summary>
            <param name="abTestName">Name of A/B test to create a manager for.</param>
            <returns>Returns a new instance of A/B test manager for a test.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="abTestName"/> is null or an empty string.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.ABVisitRequestHelper">
            <summary>
            Holds data related to the current request AB visit logging.
            </summary>
            <remarks>
            This helper class is designed for output cache support in MVC. ABVisit is stored in ASP.NET session. Session creates cookie when something is stored.
            Set-Cookie causes that output cache response is not cached. This helper ensures that session is created within a separate request.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABVisitRequestHelper.ABVisitRequestEnabled">
            <summary>
            Indicates whether <see cref="T:CMS.OnlineMarketing.Internal.ABVisitRequestHelper"/> should be used.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.ABVisitRequestHelper.ABVisitRequestTestName">
            <summary>
            Gets the test name used for ABVisit hit within current request.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.ABVisitRequestHelper.SetABVisitRequestTestName(System.String)">
            <summary>
            Sets the current ABVisit test name to the request store
            </summary>
            <param name="testName">A/B test name</param>
            <returns><c>true</c> when stored successfully to the request store; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABResponseCookieProvider">
            <summary>
            Defines interface for cookie methods.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABResponseCookieProvider.SetValue(System.String,System.String,System.String,System.DateTime,System.Nullable{System.Boolean},System.String)">
            <summary>
            Sets the cookie value.
            </summary>
            <param name="name">Cookie name</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie path</param>
            <param name="expires">Cookie expiration</param>
            <param name="httpOnly">Indicates whether a cookie is accessible by client-side script</param>
            <param name="domain">Cookie domain</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABResponseCookieProvider.GetValue(System.String)">
            <summary>
            Returns cookie value
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABResponseCookieProvider.GetDistinctCookieNames">
            <summary>
             Gets names of both request and response cookies without duplicates.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABUserStateManager">
            <summary>
            Manages current user's A/B test state - can assign an A/B variant to him, save which conversions he has done, or read saved state. Internally uses a cookie for permanent state
            (see <see cref="T:CMS.OnlineMarketing.Internal.ABCookieValue"/>) and session for session state(see <see cref="T:CMS.Helpers.SessionHelper"/>).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.Internal.IABUserStateManager.IsExcluded">
            <summary>
            Indicates whether is visitor included in A/B test or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.SetVisit">
            <summary>
            Sets a A/B test visit for current user so that from now on, conversions can be logged also as A/B test session conversions.
            </summary>
            <returns>True if visit was assigned successfully (wasn't already assigned). False if a visit is already set.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.SetVisitToSession">
            <summary>
            Sets current A/B test visit to the session store.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.IsABVisit">
            <summary>
            Returns true if user has visited A/B test page and has visit session.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.GetVariantIdentifier">
            <summary>
            Gets identifier of the A/B variant assigned to the current user. Returns null, if the user hasn't got any variant assigned yet.
            </summary>
            <returns>Identifier of the variant that is assigned to the current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.AssignVariant(System.Guid)">
            <summary>
            Assigns an A/B variant to current user so that it can be used on next visit. From now on, permanent conversions can be also saved to
            user's state.
            </summary>
            <param name="variantIdentifier">Identifier of the variant to assign to current user.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.Exclude">
            <summary>
            Excludes visitor from A/B test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.GetPermanentConversions">
            <summary>
            Gets permanent conversions that are done by current user.
            </summary>
            <returns>Permanent conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.GetSessionConversions">
            <summary>
            Gets session conversions that are done by current user.
            </summary>
            <returns>Session conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.AddConversion(System.String)">
            <summary>
            Adds a conversion to session and permanent conversions if possible.
            </summary>
            <param name="conversion">Conversion to add to current user</param>
            <exception cref="T:System.ArgumentException">conversion is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManager.IsABTestCookieDefined">
            <summary>
            Returns true when A/B test cookie is defined.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Internal.IABUserStateManagerFactory">
            <summary>
            Factory for <see cref="T:CMS.OnlineMarketing.Internal.IABUserStateManager"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Internal.IABUserStateManagerFactory.Create(System.String)">
            <summary>
            Creates a new user state manager for A/B test identified by <paramref name="abTestName"/>.
            </summary>
            <param name="abTestName">Name of A/B test to create a manager for.</param>
            <returns>Returns a new instance of A/B test manager for a test.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="abTestName"/> is null or an empty string.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestManager">
            <summary>
            Class provides management methods for retrieving and creating A/B test variants.
            Methods of this class do not save any changes made to pages, they have to be saved explicitly.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestManager.MAXIMUM_VARIANT_NAME_LENGTH">
            <summary>
            Maximum length of a variant name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.#ctor(CMS.OnlineMarketing.Internal.IABTestConfigurationSerializer,CMS.OnlineMarketing.IABTestInfoProvider)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestManager"/>.
            </summary>
            <param name="serializer">Serializes the <see cref="T:CMS.OnlineMarketing.Internal.ABTestConfiguration"/>.</param>
            <param name="abTestInfoProvider">Provider for <see cref="T:CMS.OnlineMarketing.ABTestInfo"/> management.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.CreateABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a new A/B test for <paramref name="page"/> with included traffic set to 100
            and stores it to the database. If the page has any A/B test variants defined,
            they are cleared.
            </summary>
            <param name="page">Page to create A/B test for.</param>
            <returns>Returns a new A/B for <paramref name="page"/>.</returns>
            <remarks>
            The A/B test's name is inferred using <see cref="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)"/>.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test without a winner for a given <paramref name="page"/>.
            Returns null if no A/B test is associated with the <paramref name="page"/> or associated A/B test has a winner.
            </summary>
            <param name="page">Page to retrieve an unconclued A/B test for.</param>
            <returns>Returns an unconcluded A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test for <paramref name="page"/> which is still running.
            Returns null if no running A/B is available for the page.
            </summary>
            <param name="page">Page to retrieve running A/B test for.</param>
            <returns>Returns running A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.AddVariant(CMS.DocumentEngine.TreeNode,System.Nullable{System.Guid})">
            <summary>
            Adds a new A/B test variant into <paramref name="page"/> based on an existing source variant.
            </summary>
            <param name="page">Page for which to add a new variant.</param>
            <param name="sourceVariantGuid">GUID of the source variant (if null or <see cref="F:System.Guid.Empty"/>, original is assumed as the source).</param>
            <returns>Returns the new A/B test variant.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="sourceVariantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.RemoveVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Removes an A/B test variant identified by <paramref name="variantGuid"/> from <paramref name="page"/>.
            </summary>
            <param name="page">Page from which to remove a variant.</param>
            <param name="variantGuid">GUID of the variant to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the original A/B variant is to be deleted.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.PromoteVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Promotes a variant identified by <paramref name="variantGuid"/> as the winner variant.
            Winning variant is stored in the database within the A/B test.
            </summary>
            <param name="page">Page for which to promote the winner variant.</param>
            <param name="variantGuid">GUID of the variant to be promoted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when there is no unconcluded A/B test or <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the A/B test for the current <paramref name="page"/> has not finished yet.</exception>
            <seealso cref="M:CMS.OnlineMarketing.ABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetVariants(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns all A/B test variants existing for given <paramref name="page"/>.
            </summary>
            <returns>
            Existing variants or empty enumeration when document has empty A/B variant configuration.
            Variants are represented by <see cref="T:CMS.OnlineMarketing.IABTestVariant"/> interface.
            </returns>
            <exception cref="T:System.ArgumentNullException">When passed <paramref name="page"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">When document has malformed A/B variant configuration data.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.RenameVariant(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Renames an A/B test variant in <paramref name="page"/> identified by variant GUID with given name.
            </summary>
            <param name="page">Page in which to rename the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which the change the name.</param>
            <param name="newVariantName">New name for the variant identified with <paramref name="variantGuid"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="newVariantName"/> is null, empty or has more than <see cref="F:CMS.OnlineMarketing.ABTestManager.MAXIMUM_VARIANT_NAME_LENGTH"/> characters.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no variant with <paramref name="variantGuid"/> identifier.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.UpdateVariant(CMS.DocumentEngine.TreeNode,System.Guid,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Updates an A/B test variant in <paramref name="page"/> identified by variant GUID with given Page builder widgets configuration.
            </summary>
            <param name="page">Page in which to update the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which to update the configuration.</param>
            <param name="configurationSource">Source of the configuration to update the variant with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> or <paramref name="configurationSource"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetSourceVariantConfigurationOrThrow(CMS.DocumentEngine.TreeNode,CMS.OnlineMarketing.Internal.ABTestConfiguration,System.Nullable{System.Guid})">
            <summary>
            Gets the variants configuration of the <paramref name="page"/>.
            </summary>
            <param name="page">Page for which to get the variants configuration.</param>
            <param name="testConfiguration">A/B test configuration of the page.</param>
            <param name="sourceVariantGuid">GUID of the variant.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.GetVariantOrThrow(CMS.DocumentEngine.TreeNode,CMS.OnlineMarketing.Internal.ABTestConfiguration,System.Guid)">
            <summary>
            Gets a variant from <paramref name="testConfiguration"/> belonging to <paramref name="page"/> identified by <paramref name="variantGuid"/>.
            </summary>
            <param name="page">Page for which to get the variant.</param>
            <param name="testConfiguration">A/B test configuration of the page.</param>
            <param name="variantGuid">GUID of the variant to get.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="page"/> does not contain A/B test variant identified by <paramref name="variantGuid"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.CreateABVariant(System.String,System.Boolean,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Returns newly created instance of <see cref="T:CMS.OnlineMarketing.Internal.ABTestVariant"/> using given parameters.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestManager.UpdateDocument(CMS.DocumentEngine.TreeNode,CMS.OnlineMarketing.Internal.ABTestConfiguration)">
            <summary>
            Updates given <paramref name="page"/> by given <paramref name="variantsConfiguration"/>.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestNameHelper">
            <summary>
            Contains helper method for default A/B test naming.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets display name to be used when initializing a new A/B test for a page.
            </summary>
            <param name="page">Page to get display name for.</param>
            <returns>Returns display name for <paramref name="page"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <remarks>
            The default implementation returns display name in format '<see cref="P:CMS.DocumentEngine.TreeNode.DocumentName"/> (<see cref="P:CMS.DocumentEngine.TreeNode.DocumentCulture"/>)'.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayNameInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets display name to be used when initializing a new A/B test for a page.
            </summary>
            <param name="page">Page to get display name for.</param>
            <returns>Returns display name for <paramref name="page"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <remarks>
            The default implementation returns display name in format '<see cref="P:CMS.DocumentEngine.TreeNode.DocumentName"/> (<see cref="P:CMS.DocumentEngine.TreeNode.DocumentCulture"/>)'.
            </remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.CachedABTestManager">
            <summary>
            Acts as a decorator for <see cref="T:CMS.OnlineMarketing.IABTestManager"/> and adds caching to methods.
            </summary>
            <remarks>
            The implementation caches the <see cref="M:CMS.OnlineMarketing.CachedABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)"/> method's return value only.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.CachedABTestManager.CacheMinutes">
            <summary>
            Gets the number of minutes used for absolute cache expiration.
            </summary>
            <remarks>
            The implementation returns 1440 minutes (24 hours).
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.#ctor(CMS.OnlineMarketing.IABTestManager,CMS.Core.Internal.IDateTimeNowService)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.CachedABTestManager"/>.
            </summary>
            <param name="abTestManager"><see cref="T:CMS.OnlineMarketing.IABTestManager"/> implementation to be decorated with caching.</param>
            <param name="dateTimeNowService">Service used for getting current datetime.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.AddVariant(CMS.DocumentEngine.TreeNode,System.Nullable{System.Guid})">
            <summary>
            Adds a new A/B test variant into <paramref name="page"/> based on an existing source variant.
            </summary>
            <param name="page">Page for which to add a new variant.</param>
            <param name="sourceVariantGuid">GUID of the source variant (if null or <see cref="F:System.Guid.Empty"/>, original is assumed as the source).</param>
            <returns>Returns the new A/B test variant.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="sourceVariantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.CreateABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a new A/B test for <paramref name="page"/> with included traffic set to 100
            and stores it to the database. If the page has any A/B test variants defined,
            they are cleared.
            </summary>
            <param name="page">Page to create A/B test for.</param>
            <returns>Returns a new A/B for <paramref name="page"/>.</returns>
            <remarks>
            The A/B test's name is inferred using <see cref="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)"/>.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test without a winner for a given <paramref name="page"/>.
            Returns null if no A/B test is associated with the <paramref name="page"/> or associated A/B test has a winner.
            </summary>
            <param name="page">Page to retrieve an unconclued A/B test for.</param>
            <returns>Returns an unconcluded A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test for <paramref name="page"/> which is still running.
            Returns null if no running A/B is available for the page.
            Results of this method are cached.
            </summary>
            <param name="page">Page to retrieve running A/B test for.</param>
            <returns>Returns running A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.GetVariants(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns all A/B test variants existing for given <paramref name="page"/>.
            </summary>
            <returns>
            Existing variants or empty enumeration when document has empty A/B variant configuration.
            Variants are represented by <see cref="T:CMS.OnlineMarketing.IABTestVariant"/> interface.
            </returns>
            <exception cref="T:System.ArgumentNullException">When passed <paramref name="page"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">When feature is not available by license, A/B testing is disabled, resource is not allowed on site, user does not have a Read permission, site isn't defined as content only or document has malformed A/B variant configuration data.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.PromoteVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Promotes a variant identified by <paramref name="variantGuid"/> as the winner variant.
            Winning variant is stored in the database within the A/B test.
            </summary>
            <param name="page">Page for which to promote the winner variant.</param>
            <param name="variantGuid">GUID of the variant to be promoted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when there is no unconcluded A/B test or <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the A/B test for the current <paramref name="page"/> has not finished yet.</exception>
            <seealso cref="M:CMS.OnlineMarketing.CachedABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.RemoveVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Removes an A/B test variant identified by <paramref name="variantGuid"/> from <paramref name="page"/>.
            </summary>
            <param name="page">Page from which to remove a variant.</param>
            <param name="variantGuid">GUID of the variant to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the original A/B variant is to be deleted.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.RenameVariant(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Renames an A/B test variant in <paramref name="page"/> identified by variant GUID with given name.
            </summary>
            <param name="page">Page in which to rename the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which the change the name.</param>
            <param name="newVariantName">New name for the variant identified with <paramref name="variantGuid"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="newVariantName"/> is null, empty or has more than <see cref="F:CMS.OnlineMarketing.ABTestManager.MAXIMUM_VARIANT_NAME_LENGTH"/> characters.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no variant with <paramref name="variantGuid"/> identifier.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedABTestManager.UpdateVariant(CMS.DocumentEngine.TreeNode,System.Guid,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Updates an A/B test variant in <paramref name="page"/> identified by variant GUID with given Page builder widgets configuration.
            </summary>
            <param name="page">Page in which to update the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which to update the configuration.</param>
            <param name="configurationSource">Source of the configuration to update the variant with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> or <paramref name="configurationSource"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionDefinition">
            <summary>
            Describes configuration for A/B test conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName">
            <summary>
            Represents unique code name of conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionDisplayName">
            <summary>
            Represents display name of conversion type.
            </summary>
            <remarks>
            String for localization can be used.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.DefaultValuePlaceholderText">
            <summary>
            A placeholder text for the conversion type default value field.
            </summary>
            <remarks>
            String for localization can be used.
            </remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.FormControlDefinition">
            <summary>
            Definition of the form control used to pick the object related to conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinition.IsSystem">
            <summary>
            Indicates whether the conversion is a system conversion.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String,CMS.OnlineMarketing.ABTestFormControlDefinition)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <param name="formControlDefinition">Form control definition used to pick the object related to conversion type.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="formControlDefinition"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <param name="isSystem">Determines whether the conversion should be registered as a system conversion.</param>
            <param name="defaultValuePlaceholderText">Placeholder text for the conversion type default value field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinition.#ctor(System.String,System.String,CMS.OnlineMarketing.ABTestFormControlDefinition,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
            <param name="conversionName">Unique code name of conversion type.</param>
            <param name="conversionDisplayName">Display name of conversion type.</param>
            <param name="formControlDefinition">Form control definition used to pick the object related to conversion type.</param>
            <param name="isSystem">Determines whether the conversion should be registered as a system conversion.</param>
            <param name="defaultValuePlaceholderText">Placeholder text for the conversion type default value field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="conversionName"/> or <paramref name="conversionDisplayName"/> is null or empty, or <paramref name="conversionName"/> is not a valid code name (<see cref="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)"/>).</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="formControlDefinition"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionDefinitionRegister">
            <summary>
            Register for conversion types used in A/B testing feature.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Instance">
            <summary>
            Gets the <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinitionRegister"/> instance.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Items">
            <summary>
            Gets all registered instances of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinitionRegister"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Register(CMS.OnlineMarketing.ABTestConversionDefinition)">
            <summary>
            Registers given <paramref name="definition"/> to the system.
            </summary>
            <param name="definition">Instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/> to be registered.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when null <paramref name="definition"/> is provided.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="definition"/> with already registered <see cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/> is provided.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Get(System.String)">
            <summary>
            Gets registered configuration retrieved by given <paramref name="conversionName"/>.
            </summary>
            <param name="conversionName">Conversion type name.</param>
            <returns>Configuration instance or null.</returns>
            <exception cref="T:System.ArgumentException">Thrown when null or empty <paramref name="conversionName"/> is provided.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionHelper">
            <summary>
            Helper class for working with A/B test conversions.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionHelper.CONVERSION_FULLNAME_SEPARATOR">
            <summary>
            Separator ('|') is used to join base conversion name from its definition and related item identifier (if specified).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionHelper.GetConversionFullName(System.String,System.String)">
            <summary>
            Create full name of <paramref name="conversionName"/> using given <paramref name="relatedItemIdentifier"/>.
            </summary>
            <param name="conversionName">Name of conversion which full name to return.</param>
            <param name="relatedItemIdentifier">Identifier of a item related to conversion.</param>
            <returns>Full name of conversion.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionHelper.GetConversionOriginalName(System.String)">
            <summary>
            Returns base conversion name if given name <paramref name="conversionFullName"/> contains related item identifier.
            </summary>
            <param name="conversionFullName">Conversion name which may contain related item identifier</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="conversionFullName"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionNames">
            <summary>
            Class containing names of A/B test conversions.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PURCHASE">
            <summary>
            Purchase conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PRODUCT_ADDED_TO_CART">
            <summary>
            Product has been added to shopping cart conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PAGE_VISIT">
            <summary>
            Page visit conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.FORM_SUBMISSION">
            <summary>
            Form submission conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.NEWSLETTER_SUBSCRIPTION">
            <summary>
            Subscription to a newsletter conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.USER_REGISTRATION">
            <summary>
            User registration conversion.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionNames.PRODUCT_PURCHASE">
            <summary>
            Product purchase conversion.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestFormControlDefinition">
            <summary>
            Describes configuration of the form control used to pick the object related to A/B test conversion type.
            </summary>
            <seealso cref="T:CMS.OnlineMarketing.ABTestConversionDefinition"/>.
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlType">
            <summary>
            Type of the form control used to pick the object related to conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlName">
            <summary>
            Name of the form control used to pick the object related to conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlParameters">
            <summary>
            Parameters which allow customization of form control defined by <see cref="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlName"/>.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlCaption">
            <summary>
            Caption shown above the form control used to pick the object related to conversion type.
            </summary>
            <seealso cref="P:CMS.OnlineMarketing.ABTestFormControlDefinition.FormControlName"/>.
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestFormControlDefinition.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestFormControlDefinition"/>.
            </summary>
            <param name="formControlName">Name of the form control used to pick the object related to conversion type.</param>
            <param name="formControlCaption">Caption shown as label above the form control used to pick the object related to conversion type.</param>
            <param name="formControlParameters">Parameters which allow customization of form control defined by <paramref name="formControlName"/>.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestFormControlDefinition.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestFormControlDefinition"/>.
            </summary>
            <param name="formControlType">Type of the form control used to pick the object related to conversion type.</param>
            <param name="formControlCaption">Caption shown as label above the form control used to pick the object related to conversion type.</param>
            <param name="formControlParameters">Parameters which allow customization of form control defined by <paramref name="formControlType"/>.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.IABTestConversionLogger">
            <summary>
            Defines set of methods for logging A/B test conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestConversionLogger.LogConversion(System.String,System.String,System.String,System.Decimal,System.Int32,System.String)">
            <summary>
            Logs A/B test conversion.
            </summary>
            <param name="conversionName">Name of conversion registered in system.</param>
            <param name="siteName">Site name where conversion occurred.</param>
            <param name="itemIdentifier">Identifier of object connected to conversion.</param>
            <param name="value">Default value used for logging. This value has lower priority than the conversion default value defined in the A/B testing application.</param>
            <param name="count">Number of conversions that occurred - 1 by default.</param>
            <param name="culture">Culture name connected to conversion - current thread culture is used if not specified.</param>
            <seealso cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestConversionDefinitionRegister.Register(CMS.OnlineMarketing.ABTestConversionDefinition)"/>
        </member>
        <member name="T:CMS.OnlineMarketing.TreeNodeExtensions">
            <summary>
            Extension methods for <see cref="T:CMS.DocumentEngine.TreeNode"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.GetPageBuilderWidgets(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets page builder widgets configuration from <paramref name="page"/>.
            </summary>
            <param name="page">Page to retrieve configuration from.</param>
            <returns>Returns page builder widgets configuration.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.SetPageBuilderWidgets(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets page builder widgets configuration to <paramref name="page"/>.
            </summary>
            <param name="page">Page to set configuration to.</param>
            <param name="value">Configuration value to be set.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.GetPageTemplateConfiguration(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets page template configuration from <paramref name="page"/>.
            </summary>
            <param name="page">Page to retrieve configuration from.</param>
            <returns>Returns page template configuration.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.SetPageTemplateConfiguration(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets page template configuration to <paramref name="page"/>.
            </summary>
            <param name="page">Page to set configuration to.</param>
            <param name="value">Configuration value to be set.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.GetABTestConfiguration(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test configuration from <paramref name="page"/>.
            </summary>
            <param name="page">Page to retrieve configuration from.</param>
            <returns>Returns A/B test configuration.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.TreeNodeExtensions.SetABTestConfiguration(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets A/B test configuration to <paramref name="page"/>.
            </summary>
            <param name="page">Page to set configuration to.</param>
            <param name="value">Configuration value to be set.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.IABTestManager">
            <summary>
            Defines set of methods for managing test variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.CreateABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a new A/B test for <paramref name="page"/> with included traffic set to 100
            and stores it to the database. If the page has any A/B test variants defined,
            they are cleared.
            </summary>
            <param name="page">Page to create A/B test for.</param>
            <returns>Returns a new A/B for <paramref name="page"/>.</returns>
            <remarks>
            The A/B test's name is inferred using <see cref="M:CMS.OnlineMarketing.ABTestNameHelper.GetDefaultDisplayName(CMS.DocumentEngine.TreeNode)"/>.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test without a winner for a given <paramref name="page"/>.
            Returns null if no A/B test is associated with the <paramref name="page"/> or associated A/B test has a winner.
            </summary>
            <param name="page">Page to retrieve an unconclued A/B test for.</param>
            <returns>Returns an unconcluded A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.GetRunningABTest(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets A/B test for <paramref name="page"/> which is still running.
            Returns null if no running A/B is available for the page.
            </summary>
            <param name="page">Page to retrieve running A/B test for.</param>
            <returns>Returns running A/B test for the page, or null.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.AddVariant(CMS.DocumentEngine.TreeNode,System.Nullable{System.Guid})">
            <summary>
            Adds a new A/B test variant into <paramref name="page"/> based on an existing source variant.
            </summary>
            <param name="page">Page for which to add a new variant.</param>
            <param name="sourceVariantGuid">GUID of the source variant (if null or <see cref="F:System.Guid.Empty"/>, original is assumed as the source).</param>
            <returns>Returns the new A/B test variant.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="sourceVariantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.RemoveVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Removes an A/B test variant identified by <paramref name="variantGuid"/> from <paramref name="page"/>.
            </summary>
            <param name="page">Page from which to remove a variant.</param>
            <param name="variantGuid">GUID of the variant to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the original A/B variant is to be deleted.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.PromoteVariant(CMS.DocumentEngine.TreeNode,System.Guid)">
            <summary>
            Promotes a variant identified by <paramref name="variantGuid"/> as the winner variant.
            Winning variant is stored in the database within the A/B test.
            </summary>
            <param name="page">Page for which to promote the winner variant.</param>
            <param name="variantGuid">GUID of the variant to be promoted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when there is no unconcluded A/B test or <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the A/B test for the current <paramref name="page"/> has not finished yet.</exception>
            <seealso cref="M:CMS.OnlineMarketing.IABTestManager.GetABTestWithoutWinner(CMS.DocumentEngine.TreeNode)"/>
            <seealso cref="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)"/>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.GetVariants(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns all A/B test variants existing for given <paramref name="page"/>.
            </summary>
            <returns>
            Existing variants or empty enumeration when document has empty A/B variant configuration.
            Variants are represented by <see cref="T:CMS.OnlineMarketing.IABTestVariant"/> interface.
            </returns>
            <exception cref="T:System.ArgumentNullException">When passed <paramref name="page"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">When document has malformed A/B variant configuration data.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.RenameVariant(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Renames an A/B test variant in <paramref name="page"/> identified by variant GUID with given name.
            </summary>
            <param name="page">Page in which to rename the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which the change the name.</param>
            <param name="newVariantName">New name for the variant identified with <paramref name="variantGuid"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="newVariantName"/> is null, empty or has more than 100 characters.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no variant with <paramref name="variantGuid"/> identifier.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IABTestManager.UpdateVariant(CMS.DocumentEngine.TreeNode,System.Guid,CMS.OnlineMarketing.Internal.VariantConfigurationSource)">
            <summary>
            Updates an A/B test variant in <paramref name="page"/> identified by variant GUID with given Page builder widgets configuration.
            </summary>
            <param name="page">Page in which to update the variant.</param>
            <param name="variantGuid">Unique identifier of the variant for which to update the configuration.</param>
            <param name="configurationSource">Source of the configuration to update the variant with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="page"/> or <paramref name="configurationSource"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Throw when <paramref name="variantGuid"/> does not identify an existing variant within <paramref name="page"/>.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ICachedABTestManager">
            <summary>
            Acts as a decorator for <see cref="T:CMS.OnlineMarketing.IABTestManager"/> and adds caching to methods.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversion">
            <summary>
            Represents single conversion setting for an A/B test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.ConversionName">
            <summary>
            Code name of the conversion which is used for logging.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.Value">
            <summary>
            Numeric value for conversion of type specified in <see cref="P:CMS.OnlineMarketing.ABTestConversion.ConversionName"/>.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.RelatedItemIdentifier">
            <summary>
            Identifier of an item related to the conversion, e.g. newsletter name related to newsletter subscription conversion.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.RelatedItemDisplayName">
            <summary>
            Display name of an item related to the conversion, e.g. newsletter display name related to newsletter subscription conversion.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversion.ConversionOriginalName">
            <summary>
            Original name from conversion definition (<see cref="P:CMS.OnlineMarketing.ABTestConversionDefinition.ConversionName"/>).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.#ctor(System.String,System.String,System.Decimal)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> class.
            </summary>
            <param name="conversionName">Code name of new conversion</param>
            <param name="relatedItemIdentifier">Identifier of related item</param>
            <param name="value">Value of new conversion</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> class from its XML representation.
            </summary>
            <param name="node">XML representation of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.GetXMLNode(System.Xml.XmlDocument)">
            <summary>
            Returns XML node representing the conversion setting.
            </summary>
            <param name="doc">XML document</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversion.LoadFromXml(System.Xml.XmlNode)">
            <summary>
            Loads conversion setting from XML definition.
            </summary>
            <param name="node">Conversion setting XML node</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestConversionConfiguration">
            <summary>
            Represents conversion configuration for an A/B test which contains list of <see cref="T:CMS.OnlineMarketing.ABTestConversion"/> instances.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionConfiguration.mABTest">
            <summary>
            A/B Test to which this Conversion Configuration belongs
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestConversionConfiguration.mABTestConversions">
            <summary>
            List of conversion settings for an A/B test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionConfiguration.ABTestConversions">
            <summary>
            Iterator for conversions in current configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestConversionConfiguration.ConversionsCount">
            <summary>
            Gets conversions count in current configuration.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.#ctor(CMS.OnlineMarketing.ABTestInfo,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CMS.OnlineMarketing.ABTestConversionConfiguration"/> class.
            </summary>
            <param name="abTest">Parent A/B Test object.
            If null value is provided, then this object has to be manually serialized into <see cref="T:CMS.OnlineMarketing.ABTestInfo"/> backing DB field.</param>
            <param name="conversionConfig">Serialized <see cref="T:CMS.OnlineMarketing.ABTestConversionConfiguration"/> object.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.SetABTestInfoABTestConversions">
            <summary>
            Serializes current configuration into parent A/B Test object database field.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.Serialize">
            <summary>
            Returns conversion configuration serialized into XML format string.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.AddConversion(CMS.OnlineMarketing.ABTestConversion)">
            <summary>
            Adds new conversion to current configuration.
            </summary>
            <param name="conversion">Conversion to be added.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.GetConversionAt(System.Int32)">
            <summary>
            Gets conversion from current configuration.
            </summary>
            <param name="index">The zero-based index of the conversion to retrieve.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.SetConversionAt(System.Int32,CMS.OnlineMarketing.ABTestConversion)">
            <summary>
            Updates conversion in current configuration.
            </summary>
            <param name="index">The zero-based index of the conversion to update.</param>
            <param name="conversion">Conversion to be set at <paramref name="index"/>.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.RemoveConversionAt(System.Int32)">
            <summary>
            Removes conversion from current configuration.
            </summary>
            <param name="index">The zero-based index of the conversion to remove.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.TryGetConversion(System.String,CMS.OnlineMarketing.ABTestConversion@)">
            <summary>
            Returns true, if conversion specified by <paramref name="conversionName"/> is defined in the configuration and provides this conversion through the output parameter <paramref name="conversion"/> if exists.
            </summary>
            <param name="conversionName">Conversion name.</param>
            <param name="conversion">Output parameter for conversion.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestConversionConfiguration.TryGetConversionByOriginalName(System.String,CMS.OnlineMarketing.ABTestConversion@)">
            <summary>
            Returns true, if conversion specified by <paramref name="conversionOriginalName"/> is defined in the configuration and provides this conversion through the output parameter <paramref name="conversion"/> if exists.
            </summary>
            <param name="conversionOriginalName">Original name of the conversion (<see cref="P:CMS.OnlineMarketing.ABTestConversion.ConversionOriginalName"/>) to be retrieved..</param>
            <param name="conversion">Output parameter for conversion.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.IABTestVariant">
            <summary>
            Describes A/B test variant object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.Guid">
            <summary>
            Gets the identifier of a A/B test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.Name">
            <summary>
            Gets the name of a A/B test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.IsOriginal">
            <summary>
            Indicates whether this A/B test variant is original variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.PageBuilderWidgets">
            <summary>
            Configuration of page builder widgets in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IABTestVariant.PageTemplate">
            <summary>
            Configuration of page template in JSON format, associated with this variant.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantNameGenerator">
            <summary>
            Generator for unique A/B variant names.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CMS.OnlineMarketing.VariantNameGenerator"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetOriginalName">
            <summary>
            Returns name of original variant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetDefaultUniqueName(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns unique name in default format "Variant A" with character which is not used in any of given <paramref name="existingNames"/>.
            </summary>
            <param name="existingNames">Set of existing names</param>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetName(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Returns name based on given collection of indexes from <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetNameWithoutExtension(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns name based on given collection of indexes representing characters in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            Name is not required to be extended as none index represents last character in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantNameGenerator.GetNameWithExtension(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns name based on given collection of indexes representing characters in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            Name is required to be extended because atleast one index represents last character in <see cref="F:CMS.OnlineMarketing.VariantNameGenerator.CHARS"/> constant.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABCachedObjects">
            <summary>
            Class providing access to cached AB tests and variants.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABCachedObjects.CACHE_MINUTES">
            <summary>
            Caching is set to 24 hours.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetTests">
            <summary>
            Returns all AB tests using the cached section.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetVariantsData(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns cached variants for the given AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetVariantDisplayName(System.Int32,System.Guid)">
            <summary>
            Returns cached <see cref="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantDisplayName"/> of A/B test variant with given <paramref name="variantIdentifier"/> on site with given <paramref name="siteId"/>.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestInfo">
            <summary>
            ABTestInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestGUID">
            <summary>
            Unique test identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestName">
            <summary>
            Test name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDisplayName">
            <summary>
            Test display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenTo">
            <summary>
            End date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenFrom">
            <summary>
            Start date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversions">
            <summary>
            Test conversions. Only those conversions that are assigned to the test will be shown on overview tab.
            If none conversions are set, all conversions will be visible.
            </summary>
            <remarks>This property can be used only on portal engine sites. Use <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversionConfiguration"/> on content only sites.</remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversionConfiguration">
            <summary>
            Returns object representation of A/B Test conversion configuration.
            </summary>
            <remarks>This property can be used only on content only sites. Use <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversions"/> on portal engine sites.</remarks>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestCulture">
            <summary>
            Test culture.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestID">
            <summary>
            Test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestSiteID">
            <summary>
            Site ID of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestWinnerGUID">
            <summary>
            Test winner GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOriginalPage">
            <summary>
            Original page for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestLastModified">
            <summary>
            Last modification of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDescription">
            <summary>
            Test description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestIncludedTraffic">
            <summary>
            Indicates what percentage of visitors will be included in AB test.
            This condition is resolved after segmentation macro.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestVisitorTargeting">
            <summary>
            Segmentation macro which decides whether visitor will be included in ab test or not.
            This condition is resolved before traffic condition.
            Available objects are Contact, User and Visitor. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABTestInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABTestInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes dependencies from the specified AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the AB Test object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestInfoProvider">
            <summary>
            Class providing ABTestInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestingEnabled(System.String)">
            <summary>
            Returns true if AB testing is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.Int32)">
            <summary>
            Returns AB test with specified ID.
            </summary>
            <param name="abTestId">AB test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.String,System.String)">
            <summary>
            Returns AB test with specified name.
            </summary>
            <param name="abTestName">AB test name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTests">
            <summary>
            Returns query of all AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Sets (updates or inserts) specified AB test.
            </summary>
            <param name="abTestObj">AB test to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes specified AB test.
            </summary>
            <param name="abTestObj">AB test to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(System.Int32)">
            <summary>
            Deletes AB test with specified ID.
            </summary>
            <param name="abTestId">AB test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestID(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Inserts or Updates the object to the database.
            </summary>
            <param name="info">Object to insert / update</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestingEnabledInternal(System.String)">
            <summary>
            Returns true if AB testing is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestIDInternal(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.HandleABVariantDataMaterialization(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Materializes variants of <paramref name="abTestInfo"/> in case A/B test is on content only page, it's OpenFrom column has been changed and it's variants are not materialized.
            </summary>
            <param name="abTestInfo">A/B test whose variant to materialize.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.RenameStatistics(System.String,System.String,System.Int32)">
            <summary>
            Renames AB test statistics data when code name changes.
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.HandleCodeNameChange(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks for code name change and renames statistics if so.
            </summary>
            <param name="abTestObj">AB Test</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestUsageDataSource">
            <summary>
            Module usage tracking data source for A/B testing module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestUsageDataSource.mSettingsToLog">
            <summary>
            Settings keys which are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestUsageDataSource.GetSettingsUsage(System.Boolean)">
            <summary>
            Returns how many times is specific setting used with value which is not same as default value. 
            Only settings on running sites (if <paramref name="global"/> is true), not hidden and not custom are retrieved.
            Only global settings when <paramref name="global"/> is false.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantDataInfo">
            <summary>
            Represents a materialized A/B variant. 
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantDataInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantDataInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantID">
            <summary>
            Variant data ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantTestID">
            <summary>
            Variant's test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantDisplayName">
            <summary>
            Variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantGUID">
            <summary>
            Variant GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantDataInfo.ABVariantIsOriginal">
            <summary>
            Indicates whether the variant is the original one.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABVariantDataInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABVariantDataInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantDataInfoProvider">
            <summary>
            Class providing <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.GetABVariantDataInfo(System.Int32)">
            <summary>
            Returns <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.GetVariantsData">
            <summary>
            Returns a query for all the A/B variants data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.SetABVariantDataInfo(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Sets (updates or inserts) specified <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> to be set.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.DeleteABVariantDataInfo(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Deletes specified <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/>.
            </summary>
            <param name="infoObj"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> to be deleted.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.DeleteABVariantDataInfo(System.Int32)">
            <summary>
            Deletes <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> with specified ID.
            </summary>
            <param name="id"><see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantDataInfoProvider.DeleteInfo(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Deletes the object from the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestStatusEnum">
            <summary>
            AB test status enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Running">
            <summary>
            Running status - test is running.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Scheduled">
            <summary>
            Scheduled status - test is scheduled to be started.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.NotStarted">
            <summary>
            NotStarted status - test hasn't been started yet.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Finished">
            <summary>
            Finished status - test has finished.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestStatusEvaluator">
            <summary>
            Evaluates status of an AB test based on its start and finish dates and times.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsRunning(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the AB test is running.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsFinished(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the AB test is finished.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestNotStarted(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the AB test has not been started yet.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestNotStarted(CMS.OnlineMarketing.ABTestStatusEnum)">
            <summary>
            Checks whether the current AB test status corresponds to not started test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.GetStatus(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets status of the AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.GetFormattedStatus(CMS.OnlineMarketing.ABTestStatusEnum)">
            <summary>
            Gets formatted status of the AB test.
            </summary>
            <param name="status">AB test status</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestURLHelper">
            <summary>
            Provides URL processing methods for A/B test conversion logging.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestURLHelper.TryRemovePresentationURLAnchorAndQuery(System.String,CMS.SiteProvider.SiteInfo,System.String@)">
            <summary>
            Tries to parse the application-relative path from the provided <paramref name="url"/>. Query string and anchor (#) are omitted.
            </summary>
            <param name="url">Absolute live site URL or URL relative to presentation URL.</param>
            <param name="site">Site which presentation URL corresponds with <paramref name="url"/> </param>
            <param name="relativeUrl">In case of successful operation, the result is stored here.</param>
            <returns>
            Returns <c>true</c> when given <paramref name="url"/> was successfully stripped by presentation URL and query string; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="url"/> or <paramref name="site"/> is null.</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestURLHelper.TryRemovePresentationURLAnchorAndQuery(System.String,CMS.DataEngine.SiteInfoIdentifier,System.String@)">
            <summary>
            Tries to parse the application-relative path from the provided <paramref name="url"/>. Query string and anchor (#) are omitted.
            </summary>
            <param name="url">Absolute live site URL or URL relative to presentation URL.</param>
            <param name="site">Site identifier which presentation URL corresponds with <paramref name="url"/> </param>
            <param name="relativeUrl">In case of successful operation, the result is stored here.</param>
            <returns>
            Returns <c>true</c> when given <paramref name="url"/> was successfully stripped by presentation URL and query string; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="url"/> or <paramref name="site"/> is null.</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestValidator">
            <summary>
            Class that validates given test (checks for valid from, to and if there's another test already running in this period).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.IsValidStart(System.DateTime)">
            <summary>
            Checks whether the start date is valid.
            </summary>
            <param name="start">Test start date</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.IsValidFinish(System.DateTime,System.DateTime)">
            <summary>
            Checks whether the finish date is valid.
            </summary>
            <param name="start">Test start date</param>
            <param name="finish">Test finish date</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.CollidesWithOtherTests(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the test is in collision with other tests on the same page.
            </summary>
            <param name="abTest">AB test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.GetCollidingTestName(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns display name of the colliding test.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.Collides(CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns true if test schedules collide, false otherwise.
            </summary>
            <param name="editedTest">Test being edited</param>
            <param name="rivalTest">Test being compared</param>
            <remarks>This method is internal so it can be accessed in separate assembly for tests.</remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantColorAssigner">
            <summary>
            Class assigning (graph) colors to AB variants. Is used to generate custom (and cached) colors to Reporting module, so 
            colors of AB testing graphs are not different throughout CMS.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantColorAssigner.Palette">
            <summary>
            Palette from which to assign colors to a variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantColorAssigner.AssignedColors">
            <summary>
            Cached colors assigned to variants of all tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.GetColors(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns cached colors for AB variants that belong to given test.
            </summary>
            <param name="test">AB test to get cached colors for</param>
            <returns>Dictionary of cached colors</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="test"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.RemoveTest(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Tries to remove AB test from cache.
            </summary>
            <param name="test">AB test to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="test"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.RemoveVariantData(CMS.OnlineMarketing.ABVariantDataInfo)">
            <summary>
            Tries to remove AB variant data from cache. 
            </summary>
            <param name="variant">AB variant to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="variant"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.GetVariantColor(System.Int32,System.Int32)">
            <summary>
            Gets cached variant color.
            </summary>
            <param name="variantID">ID of variant to get color for</param>
            <param name="abTestID">ID of test the variant belongs to</param>
            <returns>Cached variant color</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.FindLeastUsedColor(System.Collections.Concurrent.ConcurrentDictionary{System.Int32,System.Drawing.Color})">
            <summary>
            Finds the least used color in given test dictionary. If there is an ambiguity, returns the first from internal palette.
            </summary>
            <param name="assignedColors">AB Test dictionary of colors to search for the least used</param>
            <returns>Color that is least used</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.IABTestInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.OnlineMarketing.ABTestInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IABVariantDataInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.OnlineMarketing.ABVariantDataInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABConversionRateInterval">
            <summary>
            Class encapsulating conversion rate interval data.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.ConversionRateLowerBound">
            <summary>
            Returns lower bound of the conversion rate interval.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.ConversionRateUpperBound">
            <summary>
            Returns upper bound of the conversion rate interval.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.Rate">
            <summary>
            Returns conversions rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.EstimatedConversionRateVariance">
            <summary>
            Returns estimated conversion rate variance.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateInterval.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="conversionRateLowerBound">Conversion rate lower bound. Argument must be larger than 0 and lower than 1.</param>
            <param name="conversionRateUpperBound">Conversion rate upper bound. Argument must be larger than 0 and lower than 1.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateInterval.ToString">
            <summary>
            Returns formatted interval as X % +- Y %.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantStatisticsData">
            <summary>
            Class that holds AB variant's statistics data.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionsCount">
            <summary>
            Gets conversions count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.Visits">
            <summary>
            Gets visits count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionsValue">
            <summary>
            Gets conversions value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionRate">
            <summary>
            Gets conversion rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.AverageConversionValue">
            <summary>
            Gets average conversion value.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantStatisticsData.#ctor(System.Int32,System.Double,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="conversionsCount">Conversions count</param>
            <param name="conversionsValue">Conversions value</param>
            <param name="visits">Visits count</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestActivityModifier">
            <summary>
            Class for updating A/B test related properties in activities.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestActivityModifier.Modify(CMS.Activities.IActivityInfo)">
            <summary>
            Updates <see cref="P:CMS.Activities.IActivityInfo.ActivityABVariantName"/> with name of current A/B test variant if one is present.
            </summary>
            <remarks>Only activities of type <see cref="F:CMS.Activities.PredefinedActivityType.PAGE_VISIT"/> or <see cref="F:CMS.Activities.PredefinedActivityType.LANDING_PAGE"/> are updated.</remarks>
            <param name="activity">Activity which property to update.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactProcessingCheckerActivityLogFilter">
            <summary>
            Filters out logging when processing of contacts (and therefore the activities) cannot continue.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactProcessingCheckerActivityLogFilter.IsDenied">
            <summary>
            Filters out logging for crawlers.
            </summary>
            <returns>Returns <c>true</c> if logging should be filtered out, because processing of contacts cannot continue. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.CurrentUserEnabledTrackingFilter">
            <summary>
            Filters out logging for users with disabled logging.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CurrentUserEnabledTrackingFilter.IsDenied">
            <summary>
            Filters out logging for users with disabled logging
            </summary>
            <returns>Returns <c>true</c> if logging should be filtered out, because current user has disabled logging. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfoMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoMethods.ActivityLinkedToObject(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns if activity is linked to object of type given in parameter and codename given in second parameter.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoMethods.ActivityLinkedToObject(CMS.Activities.ActivityInfo,System.String,System.String)">
            <summary>
            Returns if activity is linked to object of type given in parameter and codename given in second parameter.
            </summary>
            <param name="activityInfo">Activity that should be checked</param>
            <param name="objectType">Object type</param>
            <param name="identifier">Code name or GUID of object</param>
        </member>
        <member name="T:CMS.OnlineMarketing.AutomationStateInfoMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomationStateInfoMethods.GetLastNewsletterIssue(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns GUID of last newsletter that was sent to the user in scope of given automation state. 
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomationStateInfoMethods.GetLastNewsletterIssue(CMS.Automation.AutomationStateInfo)">
            <summary>
            Returns last newsletter issue that was sent to the contact of the state.
            </summary>
            <param name="state">Automation state</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABHandlers">
            <summary>
            AB testing event handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestModule">
            <summary>
            Represents the A/B tests module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestModule.#ctor">
            <summary>
            Initializes a new instance of the ABTestModule class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestModuleMetadata">
            <summary>
            Represents the A/B tests module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the ABTestModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingHandlers">
            <summary>
            Online marketing event handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.DuplicateActivitiesForContact(System.Object,CMS.ContactManagement.DuplicateActivitiesForContactEventArgs)">
            <summary>
            Duplicates record in Activity table and all related tables if required.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.StoreActivities(System.Object,System.EventArgs)">
            <summary>
            Performs bulk insert of activities currently stored in memory before the application ends to ensure the persistence.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingModule">
            <summary>
            Represents the On-line Marketing module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RegisterCommands">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RegisterActivityModifiers">
            <summary>
            Register classes for modifying on-line marketing related properties in activities.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RemoveCustomer(System.Object[])">
            <summary>
            Removes customer from all contact management objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.ContactIsMonitored(System.Object[])">
            <summary>
            Returns TRUE if the given contact is being monitored.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.CreateNewContact(System.Object[])">
            <summary>
            Creates new contact for related object given in <paramref name="parameters"/>.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.CreateRelation(System.Object[])">
            <summary>
            Creates the contact relation
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetCurrentContactId(System.Object[])">
            <summary>
            Returns current contact ID
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetExistingContact(System.Object[])">
            <summary>
            Returns current contact if such exists.
            </summary>
            <param name="parameters">Parameters array.</param>
            <returns>Current contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetUserLoginContactId(System.Object[])">
            <summary>
            Returns contact ID for specified user
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetTruncatedName(System.String)">
            <summary>
            Returns name trimmed to 100 chars. If the string is shorter, returns the same string.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingModuleMetadata">
            <summary>
            Represents the Online Marketing module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeEnum">
            <summary>
            Variant type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Zone">
            <summary>
            Zone
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.WebPart">
            <summary>
            Web part
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Widget">
            <summary>
            Widget
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeFunctions">
            <summary>
            Helper functions for webpart/zone/widget variant type enum.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeEnum(System.String)">
            <summary>
            Returns VariantTypeEnum enum.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeString(CMS.OnlineMarketing.VariantTypeEnum)">
            <summary>
            Returns VariantType string.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingUsageDataSource">
            <summary>
            Module usage tracking data source for Online marketing module.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.mSettingsToLog">
            <summary>
            Settings keys which are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.GetRunningSites">
            <summary>
            Returns all running sites.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingUsageDataSource.GetSettingsUsage(System.Boolean)">
            <summary>
            Returns how many times is specific setting used with value which is not same as default value. 
            Only settings on running sites (if <paramref name="global"/> is true), not hidden and not custom are retrieved.
            Only global settings when <paramref name="global"/> is false.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.Range`1">
            <summary>
            Class representing range of values.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Range`1.#ctor(`0,`0)">
            <summary>
            Class representing range of values.
            </summary>
            <param name="endpoint1">One endpoint of given range</param>
            <param name="endpoint2">Second endpoint of given range</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Range`1.IntersectsWith(CMS.OnlineMarketing.Range{`0})">
            <summary>
            Returns true if range intersects with another one.
            </summary>
            <param name="range">Second range to check for intersection</param>
            <returns>True if the two ranges intersects, false otherwise</returns>
        </member>
        <member name="T:CMS.MarketingAutomation.MarketingAutomationUsageDataSource">
            <summary>
            Provides statistical information about module.
            </summary>
        </member>
        <member name="P:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetData">
            <summary>
            Get all module statistical data.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetNumberOfEnabledMarketingAutomationProcesses(System.Collections.Generic.IEnumerable{CMS.WorkflowEngine.WorkflowInfo})">
            <summary>
            Returns number of enabled marketing automation processes.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetNumberOfDisabledMarketingAutomationProcesses(System.Collections.Generic.IEnumerable{CMS.WorkflowEngine.WorkflowInfo})">
            <summary>
            Returns number of disabled marketing automation processes.
            </summary>
        </member>
        <member name="M:CMS.MarketingAutomation.MarketingAutomationUsageDataSource.GetNumberOfContactsWithinEachProcess">
            <summary>
            Returns number of contacts within each process.
            </summary>
        </member>
    </members>
</doc>
