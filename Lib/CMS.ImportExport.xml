<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.ImportExport</name>
    </assembly>
    <members>
        <member name="T:CMS.CMSImportExport.AbstractImportExportSettings">
            <summary>
            Abstract class for import and export settings.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSelectedGlobalObjectsHashtable">
            <summary>
            Hashtable with lists of global selected objects [ObjectType.ToLowerCSafe()] -> [List of code names]
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSelectedSiteObjectsHashtable">
            <summary>
            Hashtable with lists of site selected objects [ObjectType.ToLowerCSafe()] -> [List of code names]
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSelectedGlobalTasksHashtable">
            <summary>
            Hashtable with lists of global selected tasks [ObjectType.ToLowerCSafe()] -> [List of task IDs]
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSelectedSiteTasksHashtable">
            <summary>
            Hashtable with lists of site selected tasks [ObjectType.ToLowerCSafe()] -> [List of task IDs]
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mProcessGlobalObjectsHashtable">
            <summary>
            Hashtable with lists of global objects to be processed.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mProcessSiteObjectsHashtable">
            <summary>
            Hashtable with lists of site objects to be processed.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSettingsHashtable">
            <summary>
            Hashtable with additional settings.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mVersionsComparations">
            <summary>
            Versions comparations.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mEventLog">
            <summary>
            Event log object.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mVersion">
            <summary>
            Version of the package.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mTemporaryFilesPath">
            <summary>
            Temporary files path.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.EventLog">
            <summary>
            Event log object.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mEventLogSource">
            <summary>
            Event log source.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mEventLogCode">
            <summary>
            Event log code.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mProcessCanceled">
            <summary>
            Flag for process cancelation.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mWebsitePath">
            <summary>
            Website path.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mDefaultProcessObjectType">
            <summary>
            Default object process type.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mExcludedNames">
            <summary>
            Excludes object names.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSiteId">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mSiteInfo">
            <summary>
            Site info.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mInfoDataSet">
            <summary>
            Data set with additional information.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mPersistentSettingsKey">
            <summary>
            Persistent key to store the settings.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mWriteLog">
            <summary>
            If true, write to the log is enabled.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mCurrentUser">
            <summary>
            Current user info.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mUICulture">
            <summary>
            Current UI culture.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mAdministratorId">
            <summary>
            Administrator user ID.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.mAdministrator">
            <summary>
            Administrator user.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.SEPARATOR">
            <summary>
            Internal status separator.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.AbstractImportExportSettings.SUPPORTED_MAJOR_VERSIONS_RANGE">
            <summary>
            Number of backward supported major versions.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.LogContext">
            <summary>
            Log context used to log progress
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.ModuleName">
            <summary>
            Specifies code name of the module that is imported or exported as an installable module package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.IsInstallableModule">
            <summary>
            Indicates if export or import is being performed as part of installable module package creation or installation.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.Version">
            <summary>
            Version of the package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.HotfixVersion">
            <summary>
            Hotfix version of the package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.InfoDataSet">
            <summary>
            DataSet with additional information.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.CurrentUser">
            <summary>
            Current user info.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.EventLogSource">
            <summary>
            Event log source.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.EventLogCode">
            <summary>
            Event log code.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.WebsitePath">
            <summary>
            Physical path to the web site root (ends with \).
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.OriginalTemporaryFilesPath">
            <summary>
            Original temporary files path.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.TemporaryFilesPath">
            <summary>
            Physical path to the temporary files (ends with \).
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.ProcessCanceled">
            <summary>
            Indicates if the process should be canceled.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.DefaultProcessObjectType">
            <summary>
            Default object process type.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.ExcludedNames">
            <summary>
            Array of expressions. Objects with display names and code names starting with these expresions are filtered out.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.SiteId">
            <summary>
            Site ID of the site to be processed.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.SiteName">
            <summary>
            Site name of the site to be processed.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.SiteInfo">
            <summary>
            Site info of the site to be processed.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.PersistentSettingsKey">
            <summary>
            Key for presistent storage.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.WriteLog">
            <summary>
            Indicates if logging to the log is enabled.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.UICulture">
            <summary>
            UI culture.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.Administrator">
            <summary>
            Administrator user.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.AbstractImportExportSettings.AdministratorId">
            <summary>
            Administrator user ID.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.#ctor(CMS.Base.IUserInfo)">
            <summary>
            Constructor - Creates abstract settings.
            </summary>
            <param name="currentUser">Current user info</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetSettings(System.String)">
            <summary>
            Gets additional settings.
            </summary>
            <param name="settingsKey">Settings key</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SetSettings(System.String,System.Boolean)">
            <summary>
            Sets additional settings.
            </summary>
            <param name="settingsKey">Settings key</param>
            <param name="value">Value of the settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetInfo(System.String)">
            <summary>
            Gets additional information.
            </summary>
            <param name="infoKey">Information key</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SetInfo(System.String,System.Object)">
            <summary>
            Sets additional information.
            </summary>
            <param name="infoKey">Information key</param>
            <param name="value">Value of the information</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetSelectedObjects(System.String,System.Boolean)">
            <summary>
            Gets selected objects of specified type.
            </summary>
            <param name="type">Type of the objects</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetSelectedObjectsArray(System.String,System.Boolean)">
            <summary>
            Gets selected objects of specified type.
            </summary>
            <param name="type">Type of the objects</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SetSelectedObjects(System.Collections.Generic.List{System.String},System.String,System.Boolean)">
            <summary>
            Sets selected objects of specified type.
            </summary>
            <param name="list">List of selected objects code names</param>
            <param name="type">Type of the objects</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsSelected(System.String,System.String,System.Boolean)">
            <summary>
            Check if the object with specified code name is selected.
            </summary>
            <param name="type">Type of the objects</param>
            <param name="codeName">Code name of the object</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.Select(System.String,System.String,System.Boolean)">
            <summary>
            Selects the given object.
            </summary>
            <param name="type">Type of the objects</param>
            <param name="codeName">Code name of the object</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.Deselect(System.String,System.String,System.Boolean)">
            <summary>
            Selects the given object.
            </summary>
            <param name="type">Type of the objects</param>
            <param name="codeName">Code name of the object</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsProcessed(System.String,System.String,System.Boolean)">
            <summary>
            Check if the object with specified code name is processed.
            </summary>
            <param name="objectType">Type of the objects</param>
            <param name="codeName">Code name of the object</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsObjectTypeProcessed(System.String,System.Boolean,CMS.CMSImportExport.ProcessObjectEnum)">
            <summary>
            Check if the object with specified code name is processed.
            </summary>
            <param name="objectType">Type of the objects</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
            <param name="processType">Explicitly set process type of the object type (Use ProcessObjectEnum.Default as default settings)</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetSelectedTasks(System.String,System.Boolean)">
            <summary>
            Gets selected tasks of specified type.
            </summary>
            <param name="type">Type of the tasks</param>
            <param name="siteTasks">Indicates if the tasks are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetSelectedTasksArray(System.String,System.Boolean)">
            <summary>
            Gets selected tasks of specified type.
            </summary>
            <param name="type">Type of the tasks</param>
            <param name="siteTasks">Indicates if the tasks are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SetSelectedTasks(System.Collections.Generic.List{System.Int32},System.String,System.Boolean)">
            <summary>
            Sets selected objects of specified object type.
            </summary>
            <param name="list">List of selected tasks code names</param>
            <param name="type">Type of the tasks</param>
            <param name="siteObjects">Indicates if the tasks are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsTaskSelected(System.String,System.Int32,System.Boolean)">
            <summary>
            Check if the task with specified code name is selected.
            </summary>
            <param name="type">Type of the tasks</param>
            <param name="taskId">Task ID</param>
            <param name="siteObjects">Indicates if the tasks are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SelectTask(System.String,System.Int32,System.Boolean)">
            <summary>
            Selects the given task.
            </summary>
            <param name="type">Type of the tasks</param>
            <param name="taskId">Task ID</param>
            <param name="siteObjects">Indicates if the tasks are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.DeselectTask(System.String,System.Int32,System.Boolean)">
            <summary>
            Selects the given task.
            </summary>
            <param name="type">Type of the tasks</param>
            <param name="taskId">Task ID</param>
            <param name="siteObjects">Indicates if the tasks are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsEmptySelection">
            <summary>
            Check if there is no selected object or task in general.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsEmptyObjectSelection">
            <summary>
            Check if there is no selected object in general.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsEmptyObjectSelection(System.Boolean)">
            <summary>
            Check if there is no selected object.
            </summary>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsEmptyTaskSelection">
            <summary>
            Check if there is no selected tasks in general.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsEmptyTaskSelection(System.Boolean)">
            <summary>
            Check if there is no selected tasks.
            </summary>
            <param name="siteObjects">Indicates if the tasks are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetSelectedObjectTypes(System.Boolean)">
            <summary>
            Gets object types that have been selected to process.
            </summary>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetObjectsProcessType(System.String,System.Boolean)">
            <summary>
            Gets process type of object type.
            </summary>
            <param name="type">Type of the object</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SetObjectsProcessType(CMS.CMSImportExport.ProcessObjectEnum,System.String,System.Boolean)">
            <summary>
            Sets objects process type of specified type.
            </summary>
            <param name="processType">Process type of the object</param>
            <param name="type">Type of the object</param>
            <param name="siteObjects">Indicates if the objects are site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsAutomaticallySelected(CMS.DataEngine.GeneralizedInfo)">
            <summary>
            Indicates if given object type is automatically selected.
            </summary>
            <param name="infoObj">Object instance</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetObjectWhereCondition(System.String,System.Boolean)">
            <summary>
            Gets the where condition for specified type of object.
            </summary>
            <param name="objectType">Object type</param>
            <param name="siteObject">Site object</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetObjectTypeFilePath(System.String,System.Boolean)">
            <summary>
            Gets file path within the package for object type.
            </summary>
            <param name="objectType">Type of the object</param>
            <param name="siteObjects">Indicates if the object is site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsLowerVersion(System.String,System.String)">
            <summary>
            Indicates if current version is lower than given one.
            </summary>
            <param name="version">Version to compare</param>
            <param name="hotfixVersion">Hotfix version</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsUnsupportedVersion">
            <summary>
            Indicates whether import package version is supported. Import of unsupported package version may result in error.
            Unsupported version is a version which is two or more major versions behind the current one.
            </summary>
            <returns>Return true when package version is not supported for import.</returns>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.Cancel">
            <summary>
            Cancels the process.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SavePersistentLog">
            <summary>
            Saves the log to the persistent storage.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.SavePersistent">
            <summary>
            Saves the settings object to the persistent storage.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetFromPersistentStorage(System.String)">
            <summary>
            Gets the settings from the persistent storage.
            </summary>
            <param name="key">Key to the persistent storage</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetProgressState">
            <summary>
            Gets progress state.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.ClearProgressLog">
            <summary>
            Clears progress log.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.LogProgressState(CMS.Base.LogStatusEnum,System.String)">
            <summary>
            Logs progress state.
            </summary>
            <param name="type">Type of the message</param>
            <param name="message">Message to be logged</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.LogProgressError(System.String,System.Exception)">
            <summary>
            Logs error progress state.
            </summary>
            <param name="description">Message to be logged</param>
            <param name="ex">Exception to be logged</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.CreateEventLog">
            <summary>
            Creates new event log.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.FinalizeEventLog">
            <summary>
            Logs event object into system.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsWarning">
            <summary>
            Returns true if there are warnings during the process.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.IsError">
            <summary>
            Returns true if there is an error during the process.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetAPIString(System.String,System.String)">
            <summary>
            Gets resource string in correct culture.
            </summary>
            <param name="key">Resource string key</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function.
            </summary>
            <param name="info">Serialization info</param>
            <param name="ctxt">Streaming context</param>
        </member>
        <member name="M:CMS.CMSImportExport.AbstractImportExportSettings.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="ctxt">Streaming context</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportConverter">
            <summary>
            Import package conversion.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportConverter.Versions">
            <summary>
            Array of incompatible versions. (Target version of conversion.)
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportConverter.Namespaces">
            <summary>
            Set of namespaces conversions. [version] -> [[old_namespace] -> [new_namespace]]
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportConverter.EnsureNamespaceConversion(CMS.CMSImportExport.SiteImportSettings,System.String)">
            <summary>
            Ensures conversion of namespaces between versions.
            </summary>
            <param name="settings">Site import settings</param>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportConverter.EnsureConversion(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Ensures all actions for conversion.
            </summary>
            <param name="settings">Site import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportConverter.ConvertPackage(CMS.CMSImportExport.SiteImportSettings,System.Collections.Generic.List{System.String})">
            <summary>
            Process all necessary conversions.
            </summary>
            <param name="originalSettings">Original site import settings</param>
            <param name="conversions">Conversions to be processed</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportConverter.EnsureSeparateFolder(CMS.CMSImportExport.SiteExportSettings,CMS.CMSImportExport.SiteImportSettings,System.String,System.String)">
            <summary>
            Ensures separate folder for version conversion to keep track of package structure
            </summary>
            <param name="exSettings">Export settings</param>
            <param name="imSettings">Import settings</param>
            <param name="targetPath">Target files path</param>
            <param name="conversion">Conversion number</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportConverter.CopyFile(System.String,System.String)">
            <summary>
            Copy file for the import and unset the read-only attributes.
            </summary>
            <param name="sourcePath">Source path</param>
            <param name="destPath">Destination path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportConverter.CopyDirectory(System.String,System.String)">
            <summary>
            Copy directory including subdirectories and files.
            </summary>
            <param name="sourcePath">Source path</param>
            <param name="targetPath">Target path</param>
        </member>
        <member name="T:CMS.CMSImportExport.DefaultSelectionParameters">
            <summary>
            Parameters for loading default selection to import/export settings.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.FilterCurrentWhereCondition">
            <summary>
            Filter current where condition.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.ObjectType">
            <summary>
            Type of the object to load.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.SiteObjects">
            <summary>
            Indicates if the object is site dependent. Default value is true.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.ImportType">
            <summary>
            Type of the import. Default value is ImportTypeEnum.None.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.ExportType">
            <summary>
            Type of the export. Default value is ExportTypeEnum.None.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.LoadObjects">
            <summary>
            If true, the objects are loaded. Default value is true.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.LoadTasks">
            <summary>
            If true, the tasks are loaded. Default value is true.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DefaultSelectionParameters.ClearProgressLog">
            <summary>
            If true, progress log is cleared before loading.  Default value is false.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.HashtableEnum">
            <summary>
            Hashtable type enumeration.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.HashtableEnum.GlobalSelectedObjects">
            <summary>
            Global selected obejct types hashtable.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.HashtableEnum.SiteSelectedObjects">
            <summary>
            Site selected object types hashtable.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.HashtableEnum.GlobalProcessedObjects">
            <summary>
            Global processed object types hashtable.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.HashtableEnum.SiteProcessedObjects">
            <summary>
            Site processed object types hashtable.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.HashtableEnum.AdditionalSettings">
            <summary>
            Additional settings hashtable.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.NewSiteCreationEnum">
            <summary>
            New site wizard enumeration.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.NewSiteCreationEnum.BlankSite">
            <summary>
            Blank site
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.NewSiteCreationEnum.WebSiteTemplate">
            <summary>
            Web site template
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.NewSiteCreationEnum.UsingWizard">
            <summary>
            Using wizard
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ResultEnum">
            <summary>
            Enumeration for the object import result.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ResultEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ResultEnum.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ResultEnum.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ResultEnum.Progress">
            <summary>
            Progress.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ProcessObjectEnum">
            <summary>
            Type of object processing enumeration.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ProcessObjectEnum.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ProcessObjectEnum.All">
            <summary>
            Process all objects.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ProcessObjectEnum.Selected">
            <summary>
            Process only selected.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ProcessObjectEnum.None">
            <summary>
            Do not process.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ProcessObjectEnum.SiteBinding">
            <summary>
            Add site binding(special configuration).
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportHistoryInfo">
            <summary>
            ExportHistoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportHistoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportHistoryInfo.ExportDateTime">
            <summary>
            Date of the export history.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportHistoryInfo.ExportFileName">
            <summary>
            File name of the export history.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportHistoryInfo.ExportSiteID">
            <summary>
            Site ID of the exported site.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportHistoryInfo.ExportSettings">
            <summary>
            Export settings used during the export process.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportHistoryInfo.ExportUserID">
            <summary>
            ID of the user who performed the export.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportHistoryInfo.ExportID">
            <summary>
            Export history ID.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty ExportHistoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ExportHistoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportHistoryInfoProvider">
            <summary>
            Class providing ExportHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.GetExportHistories">
            <summary>
            Returns all export histories.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.GetExportHistoryInfo(System.Int32)">
            <summary>
            Returns the ExportHistoryInfo structure for the specified export history.
            </summary>
            <param name="exportHistoryId">Export history ID</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.SetExportHistoryInfo(CMS.CMSImportExport.ExportHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified exportHistory.
            </summary>
            <param name="exportHistory">Export history info object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.DeleteExportHistoryInfo(CMS.CMSImportExport.ExportHistoryInfo)">
            <summary>
            Deletes specified export history.
            </summary>
            <param name="exportHistoryObj">Export history info object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.DeleteExportHistoryInfo(System.Int32)">
            <summary>
            Deletes specified export history.
            </summary>
            <param name="exportHistoryId">Export history ID</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.DeleteExportHistories(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Deletes all export histories for given site. When site is 0, deletes all global histories.
            </summary>
            <param name="site">Site identifier: ID or site name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.GetExportHistories(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns the export histories for the specified site.
            </summary>
            <param name="site">Site identifier: ID or site name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.DeleteExportHistoryInfoInternal(System.Int32)">
            <summary>
            Deletes specified export history.
            </summary>
            <param name="exportHistoryId">Export history ID</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.DeleteExportHistoriesInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Deletes all export histories for given site. When site is 0, deletes all global histories.
            </summary>
            <param name="site">Site identifier: ID or site name. If not provided, deletes all histories.</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHistoryInfoProvider.GetExportHistoriesInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns the export histories for the specified site.
            </summary>
            <param name="site">Site identifier: ID or site name</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportManager">
            <summary>
            Export manager class.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportManager.Settings">
            <summary>
            Export settings.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportManager.ExportStatus">
            <summary>
            Export status.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportManager.#ctor(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Constructor - Creates export manager.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportManager.Export(System.Object)">
            <summary>
            Runs export process.
            </summary>
            <param name="parameter">Export parameter</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportProvider">
            <summary>
            Class for exporting the objects and sites.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportProvider.ExcludedFolders">
            <summary>
            Excluded folders which are not included into the export package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportProvider.ExcludedFiles">
            <summary>
            Excluded files which are not included into the export package.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportProvider.OnProgressLogEventHandler">
            <summary>
            Progress log event handler.
            </summary>
        </member>
        <member name="E:CMS.CMSImportExport.ExportProvider.OnProgressLog">
            <summary>
            Progress log event.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.LogProgress(System.String)">
            <summary>
            Logs the export progress.
            </summary>
            <param name="message">Progress message</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportCanceled">
            <summary>
            Export canceled.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.UnsetReadonlyAttribute(System.String)">
            <summary>
            Remove readonly atrribute for the file.
            </summary>
            <param name="filePath">File full path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.UnsetReadonlyAttributesDirectory(System.String)">
            <summary>
            Unset files readonly attribute in specified folder.
            </summary>
            <param name="folder">Folder</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.DeleteTemporaryFiles">
            <summary>
            Delete temporary files in default folder.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.DeleteTemporaryFiles(CMS.CMSImportExport.SiteExportSettings,System.Boolean)">
            <summary>
            Delete temporary files.
            </summary>
            <param name="settings">Export settings</param>        
            <param name="onlyFolderStructure">Indicates if only folder structure should be deleted</param>        
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.DeleteTemporaryFiles(System.String)">
            <summary>
            Recursively delete all files in specified path.
            </summary>
            <param name="path">Path of the temporary files</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.LogProgress(CMS.Base.LogStatusEnum,CMS.CMSImportExport.SiteExportSettings,System.String)">
            <summary>
            Logs progress.
            </summary>
            <param name="type">Type of the information</param>
            <param name="settings">Export settings</param>
            <param name="description">Log message</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.LogProgressError(CMS.CMSImportExport.SiteExportSettings,System.String,System.Exception)">
            <summary>
            Logs progress error.
            </summary>
            <param name="settings">Export settings</param>
            <param name="description">Error description</param>
            <param name="ex">Exception to log</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.GetExportData(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.WhereCondition,System.String,System.Boolean,System.Boolean,CMS.DataEngine.TranslationHelper)">
            <summary>
            Gets the export data for specified objects.
            </summary>
            <param name="settings">Export settings</param>
            <param name="where">Where condition for the objects</param>
            <param name="objectType">Object type</param>
            <param name="childData">Indicates if child data should be included</param>
            <param name="selectionOnly">If true, the method gets only the data needed for the selection</param>
            <param name="th">If set, data translation table is initialized</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.GetExportData(CMS.CMSImportExport.SiteExportSettings,System.String,System.Boolean,System.Boolean,System.Boolean,CMS.DataEngine.TranslationHelper)">
            <summary>
            Gets the export data for specified objects.
            </summary>
            <param name="settings">Export settings</param>
            <param name="objectType">Object type</param>
            <param name="siteObjects">Indicates if the object type is site dependent</param>
            <param name="childData">Indicates if child data should be included</param>
            <param name="selectionOnly">If true, the method gets only the data needed for the selection</param>
            <param name="th">If set, data translation table is initialized</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportObjectsData(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Exports all the objects.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportObjectType(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper,System.String,System.Boolean)">
            <summary>
            Exports the given object type objects
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
            <param name="objectType">Object type</param>
            <param name="siteObjects">Flag whether site objects are exported</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportFiles(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Exports the files
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.FinalizeExport(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Finalizes the export process by packaging the output and putting the file to the target folder
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportWebTemplate(CMS.CMSImportExport.ExportWebTemplateSettings)">
            <summary>
            Export web template.
            </summary>
            <param name="exportWebTemplateSettings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyGlobalFolders(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Copies the global folders to the destination package.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopySiteFolders(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Copies the site folders to the destination package.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopySourceFiles(System.String,System.String,System.String)">
            <summary>
            Copies all source files (including code behind files, designer files)
            </summary>
            <param name="sourceObjectPath">Source object file path</param>
            <param name="targetObjectPath">Target object file path</param>
            <param name="websitePath">Web site path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyFiles(CMS.CMSImportExport.SiteExportSettings,System.Data.DataSet,System.String)">
            <summary>
            Copies the object files to the destination package.
            </summary>
            <param name="settings">Export settings</param>
            <param name="ds">DataSet with the objects data</param>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyComponentFile(CMS.CMSImportExport.SiteExportSettings,System.Data.DataSet,System.String,System.String)">
            <summary>
            Copies component files for given object type
            </summary>
            <param name="settings">Export settings</param>
            <param name="data">Data</param>
            <param name="objectType">Object type</param>
            <param name="componentFolder">Component folder name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyAssemblyFiles(CMS.CMSImportExport.SiteExportSettings,System.Data.DataSet,System.String)">
            <summary>
            Copies assembly files for given object type
            </summary>
            <param name="settings">Export settings</param>
            <param name="data">Data</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportAssembly(System.String,System.String,System.String,System.String)">
            <summary>
            Exports assembly file.
            </summary>
            <param name="webSitePath">Physical path to the web site root (ends with \).</param>
            <param name="targetPath">Destination path</param>
            <param name="sourcePath">Source path</param>
            <param name="assemblyName">Name of assembly to export</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.SaveObjects(CMS.CMSImportExport.SiteExportSettings,System.Data.DataSet,System.String,System.Boolean)">
            <summary>
            Saves the objects to the file.
            </summary>
            <param name="settings">Export settings</param>
            <param name="ds">DataSet with the objects data</param>
            <param name="objectType">Type of the object</param>
            <param name="siteObjects">Indicates if object type is site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportObject(System.Int32,System.String,System.String,System.String,CMS.Base.IUserInfo)">
            <summary>
            Export site to file.
            </summary>
            <param name="objectId">Exported object ID</param>
            <param name="objectType">Exported object type</param>
            <param name="fullExportFilePath">Full path to the target file(for example c:\export\filename.zip)</param>
            <param name="websitePath">Path to the web site root(If there is the HttpContext available, the parameter can be null)</param>
            <param name="userInfo">Current user info</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportObject(CMS.DataEngine.GeneralizedInfo,System.String,System.String,CMS.Base.IUserInfo)">
            <summary>
            Export site to file.
            </summary>
            <param name="infoObj">Object to be exported</param>
            <param name="fullExportFilePath">Full path to the target file(for example c:\export\filename.zip)</param>
            <param name="websitePath">Path to the web site root(If there is the HttpContext available, the parameter can be null)</param>
            <param name="userInfo">Current user info</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.ExportSite(System.String,System.String,System.String,System.Boolean,CMS.Base.IUserInfo)">
            <summary>
            Export site to file.
            </summary>
            <param name="siteName">Site name of the exported site</param>
            <param name="fullExportFilePath">Full path to the target file(for example c:\export\filename.zip)</param>
            <param name="websitePath">Path to the web site root(If there is the HttpContext available, the parameter can be null)</param>
            <param name="template">Indicates if the web template should be exported</param>
            <param name="userInfo">Current user info</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyPackageTemplateFiles(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Finalize export - copy template files.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CreateZipPackage(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Finalize export - create ZIP export package.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CompressFolder(CMS.CMSImportExport.SiteExportSettings,System.IO.Compression.ZipArchive,System.String,System.String)">
            <summary>
            Compress specified folder.
            </summary>
            <param name="settings">Export settings</param>
            <param name="zipArchive">ZIP archive</param>
            <param name="path">Destination path</param>
            <param name="tmpPath">Temporary files path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CompressEntry(System.IO.Compression.ZipArchive,System.String,System.String)">
            <summary>
            Compress entry of the ZIP export package file.
            </summary>
            <param name="zipArchive">ZIP archive</param>
            <param name="entryPath">Path of the entry</param>
            <param name="tmpPath">Temporary files path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyFile(System.String,System.String,System.String)">
            <summary>
            Copy file for the export and unset the readonly attributes.
            </summary>
            <param name="sourcePath">Source path</param>
            <param name="destPath">Destination path</param>
            <param name="websitePath">Web site path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.IsFileExcluded(System.String)">
            <summary>
            Indicates if file name is excluded.
            </summary>
            <param name="fileName">File name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyDirectory(System.String,System.String,System.String)">
            <summary>
            Copies specified directory including its subdirectories and all underlying files.
            </summary>
            <param name="sourcePath">Full disk path of the source directory</param>
            <param name="targetPath">Full disk path of the new copy of the directory including its name</param>
            <param name="websitePath">Web site path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.GetDirectories(CMS.IO.DirectoryInfo)">
            <summary>
            Get directories in source folder
            </summary>
            <param name="sourceFolder">Source folder</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.GetFiles(CMS.IO.DirectoryInfo)">
            <summary>
            Gets files in source folder
            </summary>
            <param name="sourceFolder">Source folder</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportProvider.CopyDirectory(System.String,System.String,System.String[],System.String)">
            <summary>
            Copies specified directory including its sub-directories and all underlying files.
            </summary>
            <param name="sourcePath">Full disk path of the source directory</param>
            <param name="targetPath">Full disk path of the new copy of the directory including its name</param>
            <param name="excludedDirs">Sub-directories to be excluded</param>
            <param name="websitePath">Web site path</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportTaskInfo">
            <summary>
            ExportTaskInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportTaskInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportTaskInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskSiteID">
            <summary>
            Task site ID.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskObjectType">
            <summary>
            Task object type.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskObjectID">
            <summary>
            Task object ID.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskTitle">
            <summary>
            Task title.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskData">
            <summary>
            Task data.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskTime">
            <summary>
            Task time.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskID">
            <summary>
            Task ID.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportTaskInfo.TaskType">
            <summary>
            Task type.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfo.#ctor">
            <summary>
            Constructor - Creates an empty ExportTaskInfo object.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ExportTaskInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfo.DisableLogging">
            <summary>
            Disables logging of the object
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportTaskInfoProvider">
            <summary>
            Class providing ExportTaskInfo management.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.GetExportTasks">
            <summary>
            Returns all export tasks.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.GetExportTaskInfo(System.Int32)">
            <summary>
            Returns the ExportTaskInfo structure for the specified exportTask.
            </summary>
            <param name="exportTaskId">ExportTask id</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.SetExportTaskInfo(CMS.CMSImportExport.ExportTaskInfo)">
            <summary>
            Sets (updates or inserts) specified exportTask.
            </summary>
            <param name="exportTask">ExportTask to set</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.DeleteExportTaskInfo(CMS.CMSImportExport.ExportTaskInfo)">
            <summary>
            Deletes specified exportTask.
            </summary>
            <param name="exportTaskObj">ExportTask object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.DeleteExportTasks(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Deletes export tasks for given site.
            </summary>
            <param name="site">Site identifier: ID or site name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.DeleteExportTaskInfo(System.Int32)">
            <summary>
            Deletes specified exportTask.
            </summary>
            <param name="exportTaskId">ExportTask id</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.GetTasksWhereCondition(System.Int32,System.String,CMS.DataEngine.WhereCondition)">
            <summary>
            Returns the tasks where condition.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="objectTypes">Object types</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.SelectTaskList(System.Int32,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all ExportTaskInfos of specified object types and site.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="objectTypes">Object types</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.SelectTaskList(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns all ExportTaskInfos of specified object types and site.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="objectTypes">Object types</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total records</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.LogTask(CMS.DataEngine.GeneralizedInfo,CMS.DataEngine.TaskTypeEnum)">
            <summary>
            Logs the task for the given object.
            </summary>
            <param name="infoObj">Object to log</param>
            <param name="taskType">Task type</param>
            <returns>Returns new task</returns>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.LogObjectChanges(System.String)">
            <summary>
            Indicates if the object changes should be logged for the export.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.CheckExportLogging(CMS.DataEngine.GeneralizedInfo,CMS.DataEngine.TaskTypeEnum)">
            <summary>
            Indicates if the export task should be logged.
            </summary>
            <param name="infoObj">Info object instance</param>
            <param name="taskType">Task type</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.DeleteInfo(CMS.CMSImportExport.ExportTaskInfo)">
            <summary>
            Deletes the object to the database.
            </summary>
            <param name="info">Object to delete</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.DeleteExportTasksInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Deletes export tasks for given site.
            </summary>
            <param name="site">Site identifier: ID or site name. If not provided, deletes all histories.</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.DeleteExportTaskInfoInternal(System.Int32)">
            <summary>
            Deletes specified exportTask.
            </summary>
            <param name="exportTaskId">ExportTask id</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.GetTasksWhereConditionInternal(System.Int32,System.String,CMS.DataEngine.WhereCondition)">
            <summary>
            Returns the tasks where condition.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="objectTypes">Object types</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.SelectTaskListInternal(System.Int32,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all ExportTaskInfos of specified object types and site.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="objectTypes">Object types</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.SelectTaskListInternal(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns all ExportTaskInfos of specified object types and site.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="objectTypes">Object types</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total records</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.LogTaskInternal(CMS.DataEngine.GeneralizedInfo,CMS.DataEngine.TaskTypeEnum)">
            <summary>
            Logs the task for the given object.
            </summary>
            <param name="infoObj">Object to log</param>
            <param name="taskType">Task type</param>
            <returns>Returns new task</returns>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.LogObjectChangesInternal(System.String)">
            <summary>
            Indicates if the object changes should be logged for the export.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportTaskInfoProvider.CheckExportLoggingInternal(CMS.DataEngine.GeneralizedInfo,CMS.DataEngine.TaskTypeEnum)">
            <summary>
            Indicates if the export task should be logged.
            </summary>
            <param name="infoObj">Info object instance</param>
            <param name="taskType">Task type</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportTypeEnum">
            <summary>
            Export type enumeration.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportTypeEnum.None">
            <summary>
            No objects.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportTypeEnum.All">
            <summary>
            All objects.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportTypeEnum.Site">
            <summary>
            Site objects.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ExportTypeEnum.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportWebTemplateAdditionalObject">
            <summary>
            Web template additional object
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateAdditionalObject.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateAdditionalObject.ObjectCodeName">
            <summary>
            Object code name.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateAdditionalObject.IsSiteObject">
            <summary>
            Indicates if object is site dependent.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportWebTemplateSettings">
            <summary>
            Settings for exporting web template.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.SiteCodeName">
            <summary>
            Site code name.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.WebsitePath">
            <summary>
            Full web site path.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.TargetPath">
            <summary>
            Full target path.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.ExcludedNameExpressions">
            <summary>
            Expressions to exclude the exported objects by code name and display name.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.IncludedNameExpressions">
            <summary>
            Expressions to include the exported objects by code name and display name.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.ExportEcommerce">
            <summary>
            Indicates if e-commerce module objects should be exported.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.UserInfo">
            <summary>
            Current user info.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportWebTemplateSettings.AdditionalObjects">
            <summary>
            Additional objects
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.IExportHistoryInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.CMSImportExport.ExportHistoryInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.IExportTaskInfoProvider">
            <summary>
            Declares members for <see cref="T:CMS.CMSImportExport.ExportTaskInfo"/> management.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SiteExportSettings">
            <summary>
            Class representing export settings.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.CopyFiles">
            <summary>
            Indicates if the files should be processed.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.TargetPath">
            <summary>
            Target path for the export package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.TargetFullPath">
            <summary>
            Gets complete target full path with file name.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.TimeStamp">
            <summary>
            If set, only objects modified after this date are exported.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.CreatePackage">
            <summary>
            Indicates if the ZIP package should be created.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.TargetFileName">
            <summary>
            Target file name of the export package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.ExportType">
            <summary>
            Type of the export.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.Version">
            <summary>
            Version of the package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteExportSettings.HotfixVersion">
            <summary>
            Hotfix version of the package.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.#ctor(CMS.Base.IUserInfo)">
            <summary>
            Constructor - Creates export settings.
            </summary>
            <param name="userInfo">Current user info</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets data for serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="ctxt">Streaming context</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="ctxt">Streaming context</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.SelectGlobalObjects(System.Collections.Generic.IEnumerable{System.String},System.String,System.Int32)">
            <summary>
            Selects the exported objects by their name prefixes
            </summary>
            <param name="objectTypes">Object types, if null, includes all object types</param>
            <param name="codeNamePrefix">Code name prefix</param>
            <param name="resourceId">Module ID to select objects that may be assigned to a module</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.EnsureSelectedObjectsExport(System.String,System.Boolean)">
            <summary>
            Ensures that the given object type can include selected objects into the export
            </summary>
            <param name="objectType">Object type</param>
            <param name="siteObject">Site object</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.LoadDefaultSelection(System.Boolean)">
            <summary>
            Loads the default selection to the export settings tables.
            </summary>
            <param name="loadAdditionalSettings">Indicates if additional settings should be loaded</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.LoadDefaultSelection(CMS.CMSImportExport.DefaultSelectionParameters)">
            <summary>
            Loads the default selection to the import settings tables.
            </summary>
            <param name="parameters">object containing selection parameters</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.EnsureAutomaticSelection(CMS.DataEngine.GeneralizedInfo,System.Boolean)">
            <summary>
            Ensures automatic selection for given object type.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="siteObjects">Indicates if object is site object</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.GetDependingObjectTypes(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the array of object types that depend on specified object type [root type, site object, depending type].
            </summary>
            <param name="objectType">Object type</param>
            <param name="child">Seek the child types</param>
            <param name="binding">Seek the binding types</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.IsExportedObjectType(System.String)">
            <summary>
            Returns true if the given object type is exported type (root type).
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.GetXML">
            <summary>
            Returns export settings configuration in XML.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.WriteHashtableXML(System.Xml.XmlWriter,System.Collections.IDictionary,System.String)">
            <summary>
            Gets XML for given hashtable.
            </summary>
            <param name="writer">XML writer</param>
            <param name="hashtable">Hashtable to process</param>
            <param name="tagName">Start element of the XML</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteExportSettings.LoadFromXML(System.String)">
            <summary>
            Loads export settings configuration from XML.
            </summary>
            <param name="xml">XML with configuration</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportBaseEventArgs">
            <summary>
            Export base event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportBaseEventArgs.Settings">
            <summary>
            Export settings
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportCanceledHandler">
            <summary>
            Export canceled handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportCanceledHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportErrorEventArgs">
            <summary>
            Export error event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportErrorEventArgs.Exception">
            <summary>
            Exception being thrown by the export process
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportErrorHandler">
            <summary>
            Export error handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportErrorHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,System.Exception)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="ex">Exception thrown within the export process</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportEventArgs">
            <summary>
            Export event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportEventArgs.TranslationHelper">
            <summary>
            Translation helper
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportEventArgs.Data">
            <summary>
            Exported data. Available only in ExportObjects.After and ExportDocuments.After handler 
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportEventArgs.ObjectType">
            <summary>
            Object type which is exported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportEventArgs.SiteObjects">
            <summary>
            Flag whether the system exports the site objects or global objects
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportGetDataEventArgs">
            <summary>
            Get export data event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportGetDataEventArgs.TranslationHelper">
            <summary>
            Translation helper
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportGetDataEventArgs.Data">
            <summary>
            Exported data.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportGetDataEventArgs.ObjectType">
            <summary>
            Object type which is exported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportGetDataEventArgs.Where">
            <summary>
            Data where condition
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportGetDataEventArgs.ChildData">
            <summary>
            Indicates if child data should be exported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportGetDataEventArgs.SelectionOnly">
            <summary>
            Indicates if data should be get for the selection only
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportGetDataHandler">
            <summary>
            Get export data handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportGetSelectionWhereConditionHandler">
            <summary>
            Get selection where condition for export process handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportHandler">
            <summary>
            Export handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.CMSImportExport.ExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper,System.Data.DataSet)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
            <param name="data">Exported data</param>
        </member>
        <member name="T:CMS.CMSImportExport.ExportSelectionArgs">
            <summary>
            Event arguments for events based on object type
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportSelectionArgs.Settings">
            <summary>
            Export settings
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportSelectionArgs.ObjectType">
            <summary>
            Object type which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportSelectionArgs.Where">
            <summary>
            Where condition.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportSelectionArgs.SiteObject">
            <summary>
            Indicates if site object is being imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportSelectionArgs.Select">
            <summary>
            Indicates if the selection should be done by the system
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ExportSelectionArgs.IncludeDependingObjects">
            <summary>
            Indicates if the depending object types should be reflected
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SingleExportSelectionEventArgs">
            <summary>
            Single export object selection event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SingleExportSelectionEventArgs.InfoObject">
            <summary>
            Exported object
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SingleExportSelectionEventArgs.SelectedObjects">
            <summary>
            List of selected objects (code names)
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SingleExportSelectionHandler">
            <summary>
            Single export object selection handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.SingleExportSelectionHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.GeneralizedInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="infoObj">Exported object</param>
            <param name="selectedObjects">List of selected objects</param>
        </member>
        <member name="T:CMS.CMSImportExport.GetObjectTypeFolderArgs">
            <summary>
            Event arguments for event to get object type package folder
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectTypeFolderArgs.Settings">
            <summary>
            Import/Export settings
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectTypeFolderArgs.ObjectType">
            <summary>
            Object type which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectTypeFolderArgs.SiteObjects">
            <summary>
            Indicates if site object type is processed
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectTypeFolderArgs.Folder">
            <summary>
            Name of the object type package folder
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.GetObjectTypeFolderHandler">
            <summary>
            Get object type package folder handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.GetObjectWhereConditionArgs">
            <summary>
            Event arguments for events based on object type
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectWhereConditionArgs.Settings">
            <summary>
            Import/Export settings
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectWhereConditionArgs.ObjectType">
            <summary>
            Object type which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectWhereConditionArgs.SiteObjects">
            <summary>
            Indicates if site object type is processed
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectWhereConditionArgs.Where">
            <summary>
            Object type where condition
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetObjectWhereConditionArgs.CombineWhereCondition">
            <summary>
            Indicates if the where condition should be combined
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.GetObjectWhereConditionHandler">
            <summary>
            Get object where condition handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.LoadSelectionArgs`1">
            <summary>
            Event arguments for events based on object type
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.Settings">
            <summary>
            Import/Export settings
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.ObjectType">
            <summary>
            Object type which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.SiteObject">
            <summary>
            Indicates if site object is being imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.Select">
            <summary>
            Indicates if the selection should be done by the system
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.ProcessDependency">
            <summary>
            Indicates if the dependency should be processed for automatic selection
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.DependencyIsSiteObject">
            <summary>
            Forces dependency to act like site object
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.DependencyObject">
            <summary>
            Empty dependency object. By default set to parent of current object.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.DependencyObjectType">
            <summary>
            Object type of the object the current object type depends on. By default set to ParentObjectType of current object.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.LoadSelectionArgs`1.DependencyIDColumn">
            <summary>
            Reference column of the object the current object type depends on. By default set to ParentIDColumn of current object.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportLoadSelectionArgs">
            <summary>
            Event arguments for events based on object type in import process
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportLoadSelectionArgs">
            <summary>
            Event arguments for events based on object type in export process
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.LoadSelectionHandler`1">
            <summary>
            Load default selection handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportLoadSelectionHandler">
            <summary>
            Load import default selection handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportLoadSelectionHandler">
            <summary>
            Load export default selection handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportExportEvents">
            <summary>
            Import export events
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.Import">
            <summary>
            Fires when the import process runs for the whole import process. This is the only event where the CMSActionContext is not modified.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportObjects">
            <summary>
            Fires when the import process runs for the import data process. This handler is inside action context with all logging disabled (CMSActionContext.DisableAll method is called).
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportObject">
            <summary>
            Fires when the import process runs for a single object
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportObjectType">
            <summary>
            Fires before objects for specific object type are being processed.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportBindings">
            <summary>
            Fires when the binding objects are imported
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportBindingType">
            <summary>
            Fires when the binding object type is imported
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportBinding">
            <summary>
            Fires when the single binding object is imported
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportChildren">
            <summary>
            Fires when the child objects are imported
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportChildType">
            <summary>
            Fires when the child object type is imported
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportChild">
            <summary>
            Fires when the single child object is imported
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportError">
            <summary>
            Fires when the import process throws an error
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ImportCanceled">
            <summary>
            Fires when the import process is canceled
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.GetImportData">
            <summary>
            Fires when the import process gets data for object type or documents from package
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ProcessFileOperation">
            <summary>
            Fires when the import process processes file/folder operations from package
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.Export">
            <summary>
            Fires when the export process runs for the whole export process
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.FinalizeExport">
            <summary>
            Fires when the export process is being finalized
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ExportObjects">
            <summary>
            Fires when the export process runs for the objects DataSet
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ExportError">
            <summary>
            Fires when the export process throws an error
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.ExportCanceled">
            <summary>
            Fires when the export process is canceled
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.GetExportData">
            <summary>
            Fires when the export process gets data for object type or documents
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportEvents.SingleExportSelection">
            <summary>
            Fires when related objects are being selected for single object export
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.GetBinaryDataSourcePathEventArgs">
            <summary>
            Get binary data source path event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.GetBinaryDataSourcePathEventArgs.Path">
            <summary>
            Source path
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.GetBinaryDataSourcePathHandler">
            <summary>
            Get binary data source path handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportExportBaseEventArgs`1">
            <summary>
            Import/Export base event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportBaseEventArgs`1.Settings">
            <summary>
            Import settings
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportBaseEventArgs`1.TranslationHelper">
            <summary>
            Translation helper
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportBaseEventArgs">
            <summary>
            Import base event arguments
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportBaseHandler">
            <summary>
            Base import handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportBaseHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportBindingsHandler">
            <summary>
            Import bindings handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportCanceledHandler">
            <summary>
            Import canceled handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportCanceledHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportDataEventArgs">
            <summary>
            Import data event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportDataEventArgs.Data">
            <summary>
            Original import package data. Available only in ImportObjects.After handler
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportDataEventArgs.ObjectType">
            <summary>
            Object type which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportDataEventArgs.SiteObjects">
            <summary>
            Flag whether the system processes the site objects or global objects data
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportDataEventArgs.ParentImported">
            <summary>
            Flag whether at least one parent object has been imported.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportDataHandler">
            <summary>
            Import data handler - processes the original data from import package
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportErrorEventArgs">
            <summary>
            Import error event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportErrorEventArgs.Exception">
            <summary>
            Exception being thrown by the import process
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportErrorHandler">
            <summary>
            Import error handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportErrorHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper,System.Exception)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
            <param name="ex">Exception thrown within the import process</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportEventArgs">
            <summary>
            Import event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportEventArgs.Object">
            <summary>
            Object being currently imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportEventArgs.ParentObject">
            <summary>
            Parent object of the object being currently imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportEventArgs.Parameters">
            <summary>
            Import parameters
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportGetDataEventArgs">
            <summary>
            Get import data event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportGetDataEventArgs.Data">
            <summary>
            Imported data.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportGetDataEventArgs.ObjectType">
            <summary>
            Object type which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportGetDataEventArgs.Object">
            <summary>
            Empty object which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportGetDataEventArgs.SiteObjects">
            <summary>
            Indicates if site object type is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportGetDataEventArgs.SelectionOnly">
            <summary>
            Indicates if data should be get for the selection only
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportGetDataHandler">
            <summary>
            Get import data handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportHandler">
            <summary>
            Import handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportObjectTypeArgs">
            <summary>
            Event arguments for events based on object type
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportObjectTypeArgs.ObjectType">
            <summary>
            Object type which is imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportObjectTypeArgs.ParentObject">
            <summary>
            Parent object of the object being currently imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportObjectTypeArgs.Parameters">
            <summary>
            Import parameters
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportObjectTypeHandler">
            <summary>
            Import object type handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportProcessFileOperationEventArgs">
            <summary>
            Process file operation event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportProcessFileOperationEventArgs.Operation">
            <summary>
            File/Folder operation
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportProcessFileOperationHandler">
            <summary>
            Process file operation handler
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProcessFileOperationHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper,CMS.CMSImportExport.FileOperation)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
            <param name="operation">File operation</param>
        </member>
        <member name="T:CMS.CMSImportExport.ProcessDeleteTaskArgs">
            <summary>
            Process delete task event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ProcessDeleteTaskArgs.Task">
            <summary>
            Delete task to be processed
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ProcessDeleteTaskArgs.Object">
            <summary>
            Existing object to be deleted
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ProcessDeleteTaskArgs.Parameters">
            <summary>
            Import parameters
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ProcessDeleteTaskHandler">
            <summary>
            Process delete task handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SimpleDataImportHandler">
            <summary>
            Simple data import handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SimpleImportHandler">
            <summary>
            Simple import handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SimpleImportHandler`1">
            <summary>
            Simple import handler with one parameter
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.TranslateColumnsEventArgs">
            <summary>
            Translate columns event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.TranslateColumnsEventArgs.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.TranslateColumnsHandler">
            <summary>
            Translate columns handler
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SpecialActionsEvents">
            <summary>
            Import export special actions events
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.GetExistingObject">
            <summary>
            Fires when the existing object is being get
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.HandleExistingObject">
            <summary>
            Fires when the existing object is being handled
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ProcessMainObject">
            <summary>
            Fires when the main object is being processed
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ProcessObjectData">
            <summary>
            Fires when the object's data is being processed
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ObjectProcessed">
            <summary>
            Fires when the object is successfully processed
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ProcessAdditionalActions">
            <summary>
            Fires when the additional actions are being processed
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ObjectsPostProcessing">
            <summary>
            Fires when the objects are being post processed
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.PrepareDataStructure">
            <summary>
            Fires when the data structure is being prepared for an object type
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.GetEmptyObject">
            <summary>
            Fires when the import empty object is being get
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ProcessDeleteTask">
            <summary>
            Fires when the delete task is being processed
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.GetBinaryDataSourcePath">
            <summary>
            Fires when the binary data source path is being get
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ImportLoadDefaultSelection">
            <summary>
            Fires when the objects for an object type is being selected during the import process
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ImportEnsureAutomaticSelection">
            <summary>
            Fires when the objects for an object type is being automatically selected during the import process
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.GetObjectWhereCondition">
            <summary>
            Fires when the administrator user is required for the import process
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.GetObjectTypeFolder">
            <summary>
            Fires when the name of the package folder is being get
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ExportLoadDefaultSelection">
            <summary>
            Fires when the objects for an object type is being loaded during the export process selection
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.ExportEnsureAutomaticSelection">
            <summary>
            Fires when the objects for an object type is being automatically selected during the export process
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActionsEvents.GetSelectionWhereCondition">
            <summary>
            Fires when the objects for an object type is being selected during the export process
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportChildObjectTypeFilter">
            <summary>
            Filter child object types according to the import/export configuration in each object type info.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportChildObjectTypeFilter.IsIncludedType(System.String)">
            <summary>
            Returns true if the given object type is included in import.
            </summary>
            <param name="objectType">Object type name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportChildObjectTypeFilter.IsChildIncludedToParent(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Indicates whether given type info is a child processed together with its parent, hence should be ignored in the output.
            </summary>
            <param name="childTypeInfo">Child type info</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportChildObjectTypeFilter.IsBindingIncludedToParent(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Indicates whether given type info is a binding processed together with its parent, hence should be ignored in the output.
            </summary>
            <param name="bindingTypeInfo">Binding type info</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportExportHelper">
            <summary>
            Helper class for import/export process
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.OBJECT_TYPE_TRANSLATION">
            <summary>
            Object translation.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.CMS_INFO_TYPE">
            <summary>
            Info type for additional information.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.MAX_FILE_LENGTH">
            <summary>
            Maximal length of the exported file name with path.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.EXPORT_BACKUP_PATH">
            <summary>
            Path where the backup Zip archive will be created.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.EXPORT_EXTENSION">
            <summary>
            Export extension.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.PACKAGE_EXTENSION">
            <summary>
            Export package extension.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.DATA_FOLDER">
            <summary>
            Data folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.BIZFORM_PREFIX">
            <summary>
            Prefix for BizForm data object type.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.CUSTOMTABLE_PREFIX">
            <summary>
            Prefix for custom table data object type.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.MEDIAFILE_PREFIX">
            <summary>
            Prefix for media files object type.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.BIZFORM_FOLDER">
            <summary>
            BizForm folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.CUSTOMTABLE_FOLDER">
            <summary>
            Custom table folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.MEDIAFILES_FOLDER">
            <summary>
            Media files folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SITE_MACRO">
            <summary>
            Site macro.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_SEAL_EXPORTED_MODULES">
            <summary>
            Seal the exported modules.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_DOC_HISTORY">
            <summary>
            Process documents history.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_DOC_RELATIONSHIPS">
            <summary>
            Process document relationships.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_DOC_ACLS">
            <summary>
            Document ACLs.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_BIZFORM_DATA">
            <summary>
            Process BizForm data.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_CUSTOMTABLE_DATA">
            <summary>
            Process custom table data.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_MEDIA_FILES">
            <summary>
            Process media files.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_MEDIA_FILES_PHYSICAL">
            <summary>
            Copy media files (physical files).
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_BIZFORM_FILES_PHYSICAL">
            <summary>
            Copy BizForm files (physical files).
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_TASKS">
            <summary>
            Process export tasks.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_RUN_SITE">
            <summary>
            Run site after import.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_SITE">
            <summary>
            Import / export site
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_DELETE_SITE">
            <summary>
            Delete site after error during import.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_GLOBAL_FOLDERS">
            <summary>
            Copy global folders.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_ASSEMBLIES">
            <summary>
            Copy global folders.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_SITE_FOLDERS">
            <summary>
            Copy site folders.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_SKIP_OBJECT_ON_TRANSLATION_ERROR">
            <summary>
            Skip translation errors.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_DELETE_TEMPORARY_FILES">
            <summary>
            Delete temporary files.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_ADD_SITE_BINDINGS">
            <summary>
            Add site bindings in case the object is not imported (updated).
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_PROCESS_ECOMMERCE">
            <summary>
            Process e-commerce objects.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_UPDATE_SITE_DEFINITION">
            <summary>
            Update site definition if importing to the existing site.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_WEBTEMPLATE_EXPORT">
            <summary>
            Indicates that web template is exported.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_WORKFLOW_SCOPES">
            <summary>
            Indicates if workflow scopes should be imported.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_GROUP_MEMBERSHIP">
            <summary>
            Indicates if group membership should be imported.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_USER_DASHBOARDS">
            <summary>
            Indicates if user dashboards should be imported.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SETTINGS_USER_SITE_DASHBOARDS">
            <summary>
            Indicates if user dashboards should be imported even if user isn't imported
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_START_TIME">
            <summary>
            Start time of the process.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_SYSTEM_VERSION">
            <summary>
            Version of the system.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.MODULE_NAME">
            <summary>
            Code name of the exported/imported module.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_HOTFIX_VERSION">
            <summary>
            Version of the hotfix.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_MACHINE_NAME">
            <summary>
            Machine name.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_CURRENT_USER">
            <summary>
            Current user.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_DOMAIN_NAME">
            <summary>
            Domain name.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_SINGLE_OBJECT">
            <summary>
            Single object.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_SITE_INCLUDED">
            <summary>
            Site included.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_TIME_STAMP">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_HISTORY_NAME">
            <summary>
            History name.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_HISTORY_DATE">
            <summary>
            History date.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_WEBTEMPLATE_FLAG">
            <summary>
            Webtemplate flag.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.INFO_SYSTEM_WEBAPP">
            <summary>
            Web application flag.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.ExportObjectTree">
            <summary>
            Object tree.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.ImportObjectTree">
            <summary>
            Object tree.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.ObjectTypes">
            <summary>
            List of object types with flag if its global or not. Used by Import/Export, order of the elements matters (objects are in order for import, export order is reverse).
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.ObjectTypeCycles">
            <summary>
            Indicates whether there is a cycle in dependencies among object types supported by import/export.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.ImportWebSiteDirectory">
            <summary>
            Fictive web site directory for imported physical files (for testing purposes only).
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.SiteUtilsFolderPath">
            <summary>
            Site utils folder path (default: ~/CMSSiteUtils/)
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.LangSuffixes">
            <summary>
            Language suffixes for code behind files
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportExportHelper.AppCodeFolder">
            <summary>
            Name of the App_Code folder for current instance
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SRC_SKINS_FOLDER">
            <summary>
            Skins folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SRC_CONTAINERS_FOLDER">
            <summary>
            Web part containers folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SRC_TEMPLATES_FOLDER">
            <summary>
            Templates folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.FILES_FOLDER">
            <summary>
            Templates folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.GLOBAL_FOLDER">
            <summary>
            Global folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.SITE_FOLDER">
            <summary>
            Site folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.ECOMMERCE_FOLDER">
            <summary>
            E-commerce folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.DOCUMENTS_FOLDER">
            <summary>
            Documents folder.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportExportHelper.GENERALOBJECTS_FOLDER">
            <summary>
            General objects folder.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetExcludedSettingKeys">
            <summary>
            Returns set of excluded setting key names. Can return null if there are no excluded keys.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.AddExcludedSettingKey(System.String[])">
            <summary>
            Adds given setting key(s) to the excluded keys. Excluded keys are not exported nor imported.
            </summary>
            <param name="names">Names of the settings key</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.RemoveExcludedSettingKey(System.String[])">
            <summary>
            Removes given setting key(s) from the excluded keys. Excluded keys are not exported nor imported.
            </summary>
            <param name="names">Names of the settings key</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.IsSettingKeyExcluded(System.String)">
            <summary>
            Determines whether the given setting key is excluded from import/export.
            </summary>
            <param name="name">Name of the settings key</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.IsDesignerCodeBehind(System.String)">
            <summary>
            Indicates if file is designer code behind file
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.IsCodeFile(System.String)">
            <summary>
            Indicates if file is code file
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetObjectBackupFolder(CMS.DataEngine.GeneralizedInfo)">
            <summary>
            Gets the backup folder for a given object
            </summary>
            <param name="obj">Object to backup or restore</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetTemporaryFolder(System.String)">
            <summary>
            Returns Temporary folder physical path.
            </summary>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetSiteUtilsFolder">
            <summary>
            Returns Site Utils folder physical path.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetSiteUtilsFolderRelativePath">
            <summary>
            Returns Site Utils folder relative path.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.IsLowerVersion(System.String,System.String,System.String,System.String)">
            <summary>
            Returns true if the first given version is lower than the second one.
            </summary>
            <param name="version1">First version</param>
            <param name="hotfixVersion1">First hotfix version</param>
            <param name="version2">Second version</param>
            <param name="hotfixVersion2">Second hotfix version</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.RemoveExportExtension(System.String)">
            <summary>
            Remove export extensions.
            </summary>
            <param name="path">Starting path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetExportFilePath(System.String)">
            <summary>
            Returns the real file path for the specified path.
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetRealFilePath(System.String)">
            <summary>
            Returns the real file path for the specified file.
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.RenameExportedFiles(System.String)">
            <summary>
            Rename exported files.
            </summary>
            <param name="path">Path where the file should be renamed</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetObjectTypeName(System.String,CMS.CMSImportExport.AbstractImportExportSettings)">
            <summary>
            Gets the name for the object type.
            </summary>
            <param name="objectType">Object type</param>
            <param name="settings">Import or export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetExportPackageUrl(System.String,System.String)">
            <summary>
            Returns URL to export package with given file name.
            </summary>
            <param name="fileName">Name of export package.</param>
            <param name="siteName">Name of site for which the link should be generated.</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetObjectTypeSubFolder(CMS.CMSImportExport.AbstractImportExportSettings,System.String,System.Boolean)">
            <summary>
            Gets sub folder for specified object type.
            </summary>
            <param name="settings">Import export settings</param>
            <param name="objectType">Object type</param>
            <param name="siteObjects">Site objects</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.IsEcommerceObjectType(System.String)">
            <summary>
            Returns true if object type is from e-commerce module.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.IsCMSObjectType(System.String)">
            <summary>
            Returns true if object type is general object.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetSafeObjectTypeName(System.String)">
            <summary>
            Gets safe object type name.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetDataTable(System.Data.DataSet,System.String,System.Data.DataTable@)">
            <summary>
            Gets the data for given object type from DataSet
            </summary>
            <param name="ds">DataSet with source data</param>
            <param name="objectType">Object type</param>
            <param name="data">DataTable with the specified data for the given object type</param>
            <returns>True, if the data table is not empty</returns>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetDocumentsDataWhereCondition(System.String,System.Data.DataSet,System.String,System.String)">
            <summary>
            Gets where condition for specified object type based on documents. Uses the given condition object to build the where condition.
            </summary>
            <param name="objectType">Type of the object</param>
            <param name="ds">DataSet with documents</param>
            <param name="parentIdColumn">Name of the column with ID value</param>
            <param name="sourceColumn">Name of the source column with ID value</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.ValidateExportFileName(CMS.CMSImportExport.SiteExportSettings,System.String)">
            <summary>
            Validate export file name.
            </summary>
            <param name="settings">Export settings</param>
            <param name="fileName">File name to validate</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.InitSingleObjectExportSettings(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.GeneralizedInfo)">
            <summary>
            Initialize provided export settings
            </summary>
            <param name="settings">Export settings to be initialized</param>
            <param name="infoObj">Object to be exported, which will be used to initialize export settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GetFormattedErrorMessage(System.String,System.Exception)">
            <summary>
            Returns formatted message composed from error description and complete exception text.
            </summary>
            <param name="description">Error description</param>
            <param name="ex">Error exception</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.IsPostProcessFile(System.String)">
            <summary>
            Indicates if file should be post processed
            </summary>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportHelper.GenerateExportFileName(System.String,System.String)">
            <summary>
            Returns a file name starting with given <paramref name="prefix"/>, followed by the date, time and given <paramref name="extension"/>.
            </summary>
            <param name="prefix">File name prefix</param>
            <param name="extension">File extension (including the period ".")</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportObjectTypeFilter">
            <summary>
            Filter excluding object types according to the import/export configuration in each object type info.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportObjectTypeFilter.IsIncludedType(System.String)">
            <summary>
            Returns true if the given object type is included in import.
            </summary>
            <param name="objectType">Object type name</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportObjectTypeFilter.IsChildIncludedToParent(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Indicates whether given type info is a child processed together with its parent, hence should be ignored in the output.
            </summary>
            <param name="childTypeInfo">Child type info</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportObjectTypeFilter.IsBindingIncludedToParent(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Indicates whether given type info is a binding processed together with its parent, hence should be ignored in the output.
            </summary>
            <param name="bindingTypeInfo">Binding type info</param>
        </member>
        <member name="T:CMS.CMSImportExport.FileOperation">
            <summary>
            Class representing file operation.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperation.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperation.SourcePath">
            <summary>
            Source file.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperation.DestinationPath">
            <summary>
            Destination file.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperation.Operation">
            <summary>
            Operation to process.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperation.Result">
            <summary>
            Result of the operation.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperation.ParameterType">
            <summary>
            Parameter type
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperation.Parameter">
            <summary>
            Operation parameter.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.FileOperation.Key">
            <summary>
            Operation key to detect duplicities
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperation.#ctor(System.String,System.String,System.String,CMS.CMSImportExport.FileOperationEnum,CMS.CMSImportExport.FileOperationParamaterTypeEnum,System.String)">
            <summary>
            Constructor - Creates the file operation.
            </summary>
            <param name="objectType">Object type</param>
            <param name="sourcePath">Source path</param>
            <param name="destPath">Destination path</param>
            <param name="operation">File operation</param>
            <param name="parameterType">Parameter type</param>
            <param name="parameter">Operation parameter</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperation.GetKey">
            <summary>
            Gets a unique key to identify the operation
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.FileOperationCollection">
            <summary>
            Collection of files for processing.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.FileOperationCollection.Count">
            <summary>
            Count of the file operations.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.#ctor">
            <summary>
            Initializes a new instance of the FileOperationCollection class.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.Add(System.String,System.String,System.String,CMS.CMSImportExport.FileOperationEnum,CMS.CMSImportExport.FileOperationParamaterTypeEnum,System.String)">
            <summary>
            Adds the file operation to the list.
            </summary>
            <param name="objectType">Object type</param>
            <param name="sourcePath">Source path</param>
            <param name="destPath">Destination path</param>
            <param name="operation">Operation</param>
            <param name="parameterType">Parameter type</param>
            <param name="parameter">Operation parameter</param>
            <returns>True if the operation was added.</returns>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.Add(CMS.CMSImportExport.FileOperation)">
            <summary>
            Adds the file operation to the list.
            </summary>
            <param name="op">Operation to add</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.Remove(CMS.CMSImportExport.FileOperation)">
            <summary>
            Removes the file operation from the list.
            </summary>
            <param name="operation">File operation</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.Contains(CMS.CMSImportExport.FileOperation)">
            <summary>
            Indicates if the operation already exists.
            </summary>
            <param name="operation">File operation</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.SetResult(CMS.CMSImportExport.FileOperation,CMS.CMSImportExport.FileResultEnum)">
            <summary>
            Sets the file operation result.
            </summary>
            <param name="operation">File operation</param>
            <param name="result">Operation result</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.GetResultList(CMS.CMSImportExport.FileResultEnum)">
            <summary>
            Gets the file operation result list.
            </summary>
            <param name="result">Operation result</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.Clear">
            <summary>
            Clear the collection
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.FileOperationCollection.Item(System.Int32)">
            <summary>
            Gets the operation on specific index.
            </summary>
            <param name="index">Operation index to get</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the FileOperationCollection class using the specified serialization info.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="M:CMS.CMSImportExport.FileOperationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes this object using the specified serialization info.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:CMS.CMSImportExport.FileOperationEnum">
            <summary>
            File operation enumeration.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperationEnum.None">
            <summary>
            No operation.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperationEnum.CopyFile">
            <summary>
            Copy file.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperationEnum.CopyDirectory">
            <summary>
            Copy directory.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.FileOperationParamaterTypeEnum">
            <summary>
            File operation parameter type.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperationParamaterTypeEnum.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperationParamaterTypeEnum.Webfarm">
            <summary>
            Webfarm task.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileOperationParamaterTypeEnum.Assembly">
            <summary>
            Assembly.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.FileResultEnum">
            <summary>
            File result enumeration.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileResultEnum.Unknown">
            <summary>
            No result.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.FileResultEnum.PermissionsError">
            <summary>
            Permissions errror.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportedObject">
            <summary>
            Imported object info
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportedObject.Object">
            <summary>
            Info object
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportedObject.TaskType">
            <summary>
            Task type
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportedObject.#ctor(CMS.DataEngine.GeneralizedInfo,CMS.DataEngine.TaskTypeEnum)">
            <summary>
            Default constructor
            </summary>
            <param name="obj">Info object</param>
            <param name="taskType">Task type</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportManager">
            <summary>
            Class representing import manager.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportManager.ThrowExceptionOnError">
            <summary>
            Indicates if exception should be thrown on error.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportManager.Settings">
            <summary>
            Import settings.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportManager.ImportStatus">
            <summary>
            Import status.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportManager.#ctor(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Constructor - Creates import manager.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportManager.Import(System.Object)">
            <summary>
            Runs import process.
            </summary>
            <param name="parameter">Import parameter</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportObjectResult">
            <summary>
            Import object result
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportObjectResult.SomeDataImported">
            <summary>
            True if some data was imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportObjectResult.Result">
            <summary>
            Import result
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportObjectResult.#ctor(CMS.DataEngine.UpdateResultEnum,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="result">Import result</param>
            <param name="someDataImported">True if some data was imported</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportParameters">
            <summary>
            Import parameters
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.ExistingObject">
            <summary>
            Existing object
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.ObjectProcessType">
            <summary>
            Type of the object processing
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.SkipObjectUpdate">
            <summary>
            Indicates if the object update should be skipped
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.SiteObject">
            <summary>
            Indicates if site object is being imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.UpdateChildObjects">
            <summary>
            Indicates if child object should be updated
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.PostProcessing">
            <summary>
            Indicates if object is being imported in post processing
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.ObjectOriginalID">
            <summary>
            Represents original object ID
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.Data">
            <summary>
            Complete object package data
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.PostProcessList">
            <summary>
            List of objects for post processing
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.ImportedObjects">
            <summary>
            List of already imported objects
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.ExtraParameters">
            <summary>
            Special parameters for import process
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.CheckExisting">
            <summary>
            If true, the import process should check the existing object, otherwise it should import the object always as a new object.
            Not checking existing objects when not necessary improves import performance.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.ParentObject">
            <summary>
            Parent of the imported object(s) 
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.CheckUnique">
            <summary>
            If true, the objects should check their unique names
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportParameters.TranslationHelper">
            <summary>
            Translation helper object to translate incoming IDs to new IDs
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportParameters.SetValue(System.String,System.Object)">
            <summary>
            Sets extra parameter
            </summary>
            <param name="name">Parameter name</param>
            <param name="value">Parameter value</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportParameters.GetValue``1(System.String,``0)">
            <summary>
            Gets extra parameter
            </summary>
            <typeparam name="ReturnType">Data type of the parameter</typeparam>
            <param name="name">Parameter name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportProvider">
            <summary>
            Ensures import of data and settings.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.ImportProvider.CheckPackageVersion">
            <summary>
            Indicates if package version should be checked.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportProvider.OnProgressLogEventHandler">
            <summary>
            Progress log event handler.
            </summary>
        </member>
        <member name="E:CMS.CMSImportExport.ImportProvider.OnProgressLog">
            <summary>
            Progress log event.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.LogProgress(System.String)">
            <summary>
            Logs the import progress.
            </summary>
            <param name="message">Progress message</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetFirstExportFile(System.String)">
            <summary>
            Gets the first export file found in the specified directory.
            </summary>
            <param name="path">Starting path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.CreateTemporaryFiles(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Creates temporary files.
            </summary>
            <param name="settings">Site import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.DeleteTemporaryFiles(CMS.CMSImportExport.SiteImportSettings,System.Boolean)">
            <summary>
            Delete temporary files.
            </summary>
            <param name="settings">Import settings</param>        
            <param name="onlyFolderStructure">True if only folder structure should be deleted and folders should be left</param>        
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.DeleteTemporaryFiles(System.String)">
            <summary>
            Recursively delete all files in specified path.
            </summary>
            <param name="path">Path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.Uncompress(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Uncompress the zip file.
            </summary>
            <param name="settings">Site import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.CopyImportFiles(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Copy all files and folders from file list.
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.CopyFile(CMS.CMSImportExport.SiteImportSettings,System.String,System.String)">
            <summary>
            Copy file for the import and unset the read-only attributes.
            </summary>
            <param name="settings">Import settings</param>
            <param name="sourcePath">Source path</param>
            <param name="destPath">Destination path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.EnsureTargetPath(CMS.CMSImportExport.SiteImportSettings,System.String)">
            <summary>
            Gets correct target path (especially for App_Code paths)
            </summary>
            <param name="settings">Site import settings</param>
            <param name="originalPath">Original target path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.CopyDirectory(CMS.CMSImportExport.SiteImportSettings,System.String,System.String)">
            <summary>
            Copy directory.
            </summary>
            <param name="settings">Import settings</param>
            <param name="sourcePath">Source path</param>
            <param name="targetPath">Target path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.CheckForCodeFiles(CMS.CMSImportExport.SiteImportSettings,CMS.IO.FileInfo)">
            <summary>
            Returns true if given file is allowed to be processed according to "Copy code files" setting.
            </summary>
            <param name="settings">Import settings</param>
            <param name="file">File to check</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.IsCodeFile(CMS.IO.FileInfo)">
            <summary>
            Returns true if the file is code file (checks the extension)
            </summary>
            <param name="file">File to check</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.LogProgress(CMS.Base.LogStatusEnum,CMS.CMSImportExport.SiteImportSettings,System.String)">
            <summary>
            Logs progress.
            </summary>
            <param name="type">Type of the information</param>
            <param name="settings">Import settings</param>
            <param name="description">Log message</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.LogProgressError(CMS.CMSImportExport.SiteImportSettings,System.String,System.Exception)">
            <summary>
            Logs progress error.
            </summary>
            <param name="settings">Import settings</param>
            <param name="description">Error description</param>
            <param name="ex">Exception to log</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportObjectsData(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Imports all the objects.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportObjectsDataInternal(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Imports all the objects.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.SealImportedModules(System.Collections.Generic.List{System.Int32})">
            <summary>
            Seals modules which were imported during this import.
            </summary>
            <param name="resourceIds">List of imported module IDs.</param>
            <remarks>
            The <see cref="F:CMS.Core.ModuleName.CUSTOMSYSTEM"/> module and modules from older version are never sealed.
            </remarks>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportObjectType(CMS.CMSImportExport.SiteImportSettings,System.String,System.Boolean,CMS.DataEngine.TranslationHelper,CMS.CMSImportExport.ProcessObjectEnum,System.Collections.Generic.List{System.Int32})">
            <summary>
            Imports the specific object type.
            </summary>
            <param name="settings">Import settings</param>
            <param name="objectType">Object type to import</param>
            <param name="siteObject">Site objects</param>
            <param name="th">Translation helper</param>
            <param name="processType">Process type</param>
            <param name="importedParentIds">Table of imported parent object IDs. When set, only objects with parent from the table are imported</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetExistingObjects(CMS.CMSImportExport.SiteImportSettings,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the Dataset of existing database objects.
            </summary>
            <param name="settings">Import settings</param>
            <param name="objectType">Object type</param>
            <param name="siteObjects">Site objects</param>
            <param name="selectionOnly">If true, only data needed for selection are retrieved</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetObjectsData(CMS.CMSImportExport.SiteImportSettings,System.String,System.Boolean)">
            <summary>
            Gets the objects data table.
            </summary>
            <param name="settings">Import settings</param>
            <param name="objectType">Object type</param>
            <param name="siteObjects">Site objects</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetVersion(System.String)">
            <summary>
            Returns the version of the specified file.
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.LoadObjects(CMS.CMSImportExport.SiteImportSettings,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Loads the objects from the import package.
            </summary>
            <param name="settings">Import settings</param>
            <param name="objectType">Object type</param>
            <param name="siteObjects">Site objects</param>
            <param name="selectionOnly">If true, the objects are loaded only for the selection reasons</param>
            <param name="forceXMLStructure">If true, data set structure is loaded from xml even if there is object representation.</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.EnsureDataRowFilterExpression(System.String)">
            <summary>
            Removes Unicode characters from SQL syntax where condition
            </summary>
            <remarks>
            DataTable filter expression doesn't support unicode string option in filter syntax
            </remarks>
            <param name="where">SQL syntax where condition</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ProcessAdditionalActions(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Process additional actions after import.
            </summary>
            <param name="settings">Site import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ProcessTasks(CMS.CMSImportExport.SiteImportSettings,System.Data.DataSet,System.String,System.Boolean,CMS.DataEngine.TranslationHelper,System.Collections.Generic.List{CMS.CMSImportExport.ImportedObject})">
            <summary>
            Imports the objects.
            </summary>
            <param name="settings">Import settings</param>
            <param name="ds">Source DataSet</param>
            <param name="objectType">Object type</param>
            <param name="siteObjects">Site objects</param>
            <param name="th">Translation helper</param>
            <param name="importedObjects">Imported objects</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ProcessTask(CMS.CMSImportExport.SiteImportSettings,CMS.CMSImportExport.ExportTaskInfo,CMS.DataEngine.TranslationHelper,CMS.CMSImportExport.ImportParameters)">
            <summary>
            Processes the task.
            </summary>
            <param name="settings">Import settings</param>
            <param name="taskObj">Task object</param>
            <param name="th">Translation table</param>
            <param name="parameters">Import parameters</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetDataSet(System.String,CMS.DataEngine.TaskTypeEnum,System.String)">
            <summary>
            Returns the dataset loaded from the given task data.
            </summary>
            <param name="taskData">Task data to make the dataset from</param>
            <param name="taskType">Task type</param>
            <param name="taskObjectType">Task object type</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportObjects(CMS.CMSImportExport.SiteImportSettings,System.Data.DataSet,System.String,System.Boolean,CMS.DataEngine.TranslationHelper,System.Boolean,CMS.CMSImportExport.ProcessObjectEnum,System.Collections.Generic.List{System.Int32})">
            <summary>
            Imports the objects.
            </summary>
            <param name="settings">Import settings</param>
            <param name="data">Source DataSet</param>
            <param name="objectType">Object type</param>
            <param name="siteObject">Site objects</param>
            <param name="th">Translation helper</param>
            <param name="importChild">Import child objects?</param>
            <param name="processType">Process type</param>
            <param name="importedParentIds">Table of imported parent object IDs. When set, only objects with parent from the table are imported</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Creates a new object instance from the given data row
            </summary>
            <param name="dr">Data row</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportObject(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,CMS.CMSImportExport.ImportParameters,System.Collections.Generic.List{System.Int32})">
            <summary>
            Updates the object. Returns true if the object was updated.
            </summary>
            <param name="settings">Import settings</param>
            <param name="infoObj">Object to update</param>
            <param name="parameters">Import parameters. The import process may modify the parameter values, always provide a new instance of parameters</param>
            <param name="importedParentIds">Table of imported parent object IDs. When set, only objects with parent from the table are imported</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ProcessObjectData(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,CMS.CMSImportExport.ImportParameters,System.Boolean)">
            <summary>
            Processes the object data such as children, bindings, metafiles etc.
            </summary>
            <param name="settings">Import settings</param>
            <param name="infoObj">Imported object</param>
            <param name="parameters">Import parameters</param>
            <param name="parentIsNew">If true, the data is imported for a new parent object (no need to match to existing data)</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ProcessBindings(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,CMS.CMSImportExport.ImportParameters,System.Boolean)">
            <summary>
            Processes the object bindings. Returns true if some bindings were updated.
            </summary>
            <param name="settings">Import settings</param>
            <param name="infoObj">Imported object</param>
            <param name="parameters">Import parameters</param>
            <param name="parentIsNew">If true, the bindings are imported for a new parent object (no need to check for existing)</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ProcessChildren(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,CMS.CMSImportExport.ImportParameters,System.Boolean)">
            <summary>
            Processes the object children. Returns true if some child objects were updated.
            </summary>
            <param name="settings">Import settings</param>
            <param name="infoObj">Imported object</param>
            <param name="parameters">Import parameters</param>
            <param name="parentIsNew">If true, the children are imported for a new parent object (no need to check for existing)</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ProcessMainObject(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,CMS.CMSImportExport.ImportParameters)">
            <summary>
            Processes the main object data. Returns true if some data was updated
            </summary>
            <param name="settings">Import settings</param>
            <param name="infoObj">Object to import</param>
            <param name="parameters">Import parameters</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.AssignToSite(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,CMS.DataEngine.GeneralizedInfo,CMS.CMSImportExport.ImportParameters)">
            <summary>
            Assign object to site.
            </summary>
            <param name="settings">Site import settings</param>
            <param name="bindingObj">Binding object</param>
            <param name="infoObj">Object to assign</param>
            <param name="parameters">Import parameters</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.SetObject(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,CMS.DataEngine.GeneralizedInfo,System.Collections.Generic.List{CMS.CMSImportExport.ImportedObject})">
            <summary>
            Sets imported object
            </summary>
            <param name="settings">Import settings</param>
            <param name="infoObj">Object instance</param>
            <param name="parentInfo">Parent object</param>
            <param name="importedObjects">List of already imported objects</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ParentImported(CMS.DataEngine.GeneralizedInfo,System.Collections.Generic.List{System.Int32})">
            <summary>
            Indicates if parent for given object was imported.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="importedParentIds">Parent object IDs</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetBinaryDataSourcePath(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,System.String,System.String,System.String)">
            <summary>
            Gets source path for binary data
            </summary>
            <param name="settings">Site import settings</param>
            <param name="infoObj">Info object instance</param>
            <param name="folderName">Binary data folder name</param>
            <param name="fileName">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.AddImportFiles(CMS.CMSImportExport.SiteImportSettings,System.Data.DataSet,System.String,System.Boolean,CMS.DataEngine.TranslationHelper,System.Int32,System.String)">
            <summary>
            Adds the object files to the import files list.
            </summary>
            <param name="settings">Import settings</param>
            <param name="ds">DataSet with the objects data</param>
            <param name="objectType">Object type</param>
            <param name="siteObject">Indicates if object is site object</param>
            <param name="th">Translation helper</param>
            <param name="parentId">Parent object ID</param>
            <param name="parentCodeName">Code name of the parent object</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.AddComponentFiles(System.String,CMS.CMSImportExport.SiteImportSettings,System.Boolean,System.Data.DataSet,System.String)">
            <summary>
            Adds object component files for processing
            </summary>
            <param name="objectType">Object type</param>
            <param name="settings">Site import settings</param>
            <param name="siteObject">Indicates if site object is being processed</param>
            <param name="data">Object data</param>
            <param name="componentFolder">Name of the component folder</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportAssembly(CMS.CMSImportExport.SiteImportSettings,System.String,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Imports assembly file.
            </summary>
            <param name="settings">Import settings object</param>
            <param name="objectType">Object type the assembly belongs to</param>
            <param name="siteObject">Indicates if object is site object</param>
            <param name="sourcePath">Source path</param>
            <param name="targetPath">Destination path</param>
            <param name="objectName">Code name of an object the assembly belongs to</param>
            <param name="assemblyName">Name of the assembly</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.AddSourceFiles(System.String,CMS.CMSImportExport.SiteImportSettings,System.String,System.String)">
            <summary>
            Adds object source files for processing (including code behind files, designer files)
            </summary>
            <param name="objectType">Object type</param>
            <param name="settings">Site import settings</param>
            <param name="sourceObjectPath">Source object file path</param>
            <param name="targetObjectPath">Target object file path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.UseSeparateFolder(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Indicates if separate folder should be used for import files
            </summary>
            <param name="settings">Site import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetTargetPath(CMS.CMSImportExport.SiteImportSettings,System.String)">
            <summary>
            Gets real target path
            </summary>
            <param name="settings">Import settings</param>
            <param name="originalPath">Original target path</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetTargetPath(CMS.CMSImportExport.SiteImportSettings,System.String,System.Boolean)">
            <summary>
            Gets real target path
            </summary>
            <param name="settings">Import settings</param>
            <param name="originalPath">Original target path</param>
            <param name="includeSeparateFolder">Indicates if path should be combined with separate folder</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.AddGlobalFolders(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Adds the global folders to import files list.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.AddSiteFolders(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Adds the site folders to import files list.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetImportFilesList">
            <summary>
            Gets all possible packages from import folder.
            </summary>
            <returns>Array of file names</returns>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetImportFilesList(System.String)">
            <summary>
            Gets all possible packages from import folder.
            </summary>
            <returns>Array of file names</returns>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportCanceled">
            <summary>
            Import canceled.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.ImportSite(System.String,System.String,System.String,System.String,System.String,CMS.Base.IUserInfo)">
            <summary>
            Import site from the file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="siteDisplayName">Site display name</param>
            <param name="siteDomain">Site domain</param>
            <param name="fullSourcePath">Full path to the source file</param>
            <param name="websitePath">Path to the web site root(optional)</param>
            <param name="currentUser">Current user info</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.GetObjectProcessType(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.GeneralizedInfo,System.Boolean,CMS.CMSImportExport.ProcessObjectEnum)">
            <summary>
            Gets object process type
            </summary>
            <param name="settings">Site import settings</param>
            <param name="infoObj">Object</param>
            <param name="siteObject">Site object</param>
            <param name="processType">Process type</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.IsObjectPostProcess(CMS.DataEngine.BaseInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Indicates if the object supports post processing
            </summary>
            <param name="infoObj">Info object</param>
            <param name="failedTranslationColumnNames">Collection of column names whose values could not be translated.</param>
        </member>
        <member name="M:CMS.CMSImportExport.ImportProvider.IsNestedType(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Indicates whether the given ObjectTypeInfo represents a nested type.
            </summary>
            <param name="type">Object typeInfo</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportSpecialCaseContext">
            <summary>
            Class representing context for import special cases.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportSpecialCaseContext.#ctor(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Constructor. Ensures context for special actions during import/export process. Use this context when you modify any instance of object to prevent from unwanted tasks logging.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="T:CMS.CMSImportExport.ImportTypeEnum">
            <summary>
            Import type enumeration.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportTypeEnum.None">
            <summary>
            Do not import any objects.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportTypeEnum.AllNonConflicting">
            <summary>
            Import all objects unless there is a potential conflict between older and newer version data. 
            In this case, for older packages, some of the objects are imported only if they don't exist yet.
            Use AllForced to always overwrite data.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportTypeEnum.New">
            <summary>
            Import only new objects.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportTypeEnum.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.ImportTypeEnum.AllForced">
            <summary>
            Forcibly import all objects, even if there can be potential collisions of data from older package.
            Use AllNonConflicting to avoid overwriting of the new data by the package data.
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.SiteImportSettings">
            <summary>
            Class representing import settings.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SiteImportSettings.mFileOperations">
            <summary>
            File operation collection.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.TranslationSiteId">
            <summary>
            Site ID of the site to be used for IDs translation.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.Version">
            <summary>
            Version of the package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.HotfixVersion">
            <summary>
            Hotfix package version
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.FullVersion">
            <summary>
            Full package version
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.EnableSearchTasks">
            <summary>
            Indicates if the search tasks should be enabled.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.UseAutomaticSiteForTranslation">
            <summary>
            Indicates if site name from translation records should be used as a site source for objects.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.CopyFiles">
            <summary>
            Indicates if the files should be processed.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.CopyCodeFiles">
            <summary>
            Indicates if the code files should be processed.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.SiteIsIncluded">
            <summary>
            Indicates if the site should be included in the package.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.ImportSite">
            <summary>
            Indicates if site should be imported
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.IsNewSite">
            <summary>
            Indicates if new site is being imported (either from a web template or based on blank site).
            </summary>
            <seealso cref="P:CMS.CMSImportExport.SiteImportSettings.IsWebTemplate"/>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.IsWebTemplate">
            <summary>
            Indicates if web template is imported.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.RefreshMacroSecurity">
            <summary>
            Indicates if the macros security parameters should be refreshed during import.
            </summary>
            <seealso cref="P:CMS.CMSImportExport.SiteImportSettings.MacroSecurityUser"/>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.MacroSecurityUser">
            <summary>
            Gets or sets the user whose identity is to be used for macro signing when <see cref="P:CMS.CMSImportExport.SiteImportSettings.RefreshMacroSecurity"/> is set.
            The default value is <see cref="P:CMS.CMSImportExport.AbstractImportExportSettings.CurrentUser"/>.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.TemporaryFilesCreated">
            <summary>
            Indicates if temporary files were created.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.DeleteTemporaryFiles">
            <summary>
            Indicates if temporary files were created and should be deleted.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.CurrentUrl">
            <summary>
            Current URL of the import process.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.SourceFilePath">
            <summary>
            Full source file path of the package (ends with \).
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.SiteDisplayName">
            <summary>
            Site display name.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.IsOlderVersion">
            <summary>
            Indicates if package is from older version.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.IsOlderHotfixVersion">
            <summary>
            Indicates if package is from older version including hotfix.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.SiteDomain">
            <summary>
            Site domain name.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.SiteDescription">
            <summary>
            Site description.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.SitePresentationUrl">
            <summary>
            Presentation URL of the site.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.LogObjectsWarnings">
            <summary>
            Indicates if binding and objects warnings should be logged.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.LogSynchronization">
            <summary>
            Indicates if the synchronization should be logged.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.LogIntegration">
            <summary>
            Indicates if the integration tasks should be logged.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.CreateVersion">
            <summary>
            Indicates if the object version should be created for imported objects.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.ImportType">
            <summary>
            Type of the import process.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.ExistingSite">
            <summary>
            If true, import is into an existing site (defined by SiteId).
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.ScriptParameter">
            <summary>
            Parameter which is used for SQL script execution.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.RebuildSearchIndex">
            <summary>
            Indicates if site search indexes should be rebuilt at the end of import.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.IsWebApplication">
            <summary>
            Indicates whether the packages comes from web application or web site.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.AppCodeFolder">
            <summary>
            Name of the App_Code folder (depending on the package source - WebApp vs Website)
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.FileOperations">
            <summary>
            File operations collection.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.AllowBulkInsert">
            <summary>
            If true, the import process allows bulk inserts for the data to speed up the import process.
            If bulk insert is allowed, some event handlers may not be fired during the import process.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.SiteImportSettings.ImportOnlyNewObjects">
            <summary>
            If true, only new objects (including new children and bindings) are imported and already existing objects are not updated with the package data.
            This setting is useful especially when importing data from web template which may contain additional child objects but should not overwrite already customized data.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.#ctor(CMS.Base.IUserInfo)">
            <summary>
            Constructor - Creates import settings.
            </summary>
            <param name="currentUser">Current user info</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="ctxt">Streaming context</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization function.
            </summary>
            <param name="info">Serialization info</param>
            <param name="ctxt">Streaming context</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.LoadDefaultSelection(System.Boolean)">
            <summary>
            Loads the default selection to the export settings tables.
            </summary>
            <param name="loadAdditionalSettings">Indicates if additional settings should be loaded</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.HandleObjectTypeClassNotFound(System.String,CMS.DataEngine.DataClassNotFoundException)">
            <summary>
            Handles DataClassNotFoundException. Logs warning if missing data class belongs to the object type that is not imported
            by the currently installed module. Returns the message that was logged or empty string.
            </summary>
            <param name="objectType">Object type that caused the exception.</param>
            <param name="ex">Exception that is handled.</param>
            <returns>Returns the message that was logged or empty string.</returns>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.LoadDefaultSelection(CMS.CMSImportExport.DefaultSelectionParameters)">
            <summary>
            Loads the default selection to the import settings tables.
            </summary>
            <param name="parameters">object containing selection parameters</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.EnsureAutomaticSelection(CMS.DataEngine.GeneralizedInfo,System.Boolean)">
            <summary>
            Ensures automatic selection for given object type.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="siteObjects">Indicates if object is site object</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.IsIncluded(System.String,System.Boolean)">
            <summary>
            Check if object type is included in the package.
            </summary>
            <param name="objectType">Type of the object</param>
            <param name="siteObjects">Indicates if the object is site dependent</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.IsIncluded(System.String)">
            <summary>
            Check if object type (site or global) is included in the package.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="M:CMS.CMSImportExport.SiteImportSettings.ClearInfoData">
            <summary>
            Clears info data
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportExportModule">
            <summary>
            Represents the Import/Export module.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportModule.OnInit">
            <summary>
            Init module
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportExportModuleMetadata">
            <summary>
            Represents the Import/Export module metadata.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ImportExportSynchronization">
            <summary>
            Import/export synchronization
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ImportExportSynchronization.Init">
            <summary>
            Initializes the actions for synchronization
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ProcessCanceledException">
            <summary>
            Exception for the cancelation of the process.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ProcessCanceledException.#ctor">
            <summary>
            Constructor - Creates process canceled exception.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.ProcessCanceledException.#ctor(System.String)">
            <summary>
            Constructor - Creates process canceled exception.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:CMS.CMSImportExport.SpecialActions">
            <summary>
            Handles special actions during the import/export process.
            </summary>
        </member>
        <member name="F:CMS.CMSImportExport.SpecialActions.mRemovedSettingsKeysCodeNamesInV13">
            <summary>
            List of removed settings keys code names.
            Settings keys in this list won't be imported to v13.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.SpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.CMSImportExport.ExportSettingsControlsRegister">
            <summary>
            Registers settings controls for export process. The settings controls allow for extending the export UI for particular object types.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:CMS.CMSImportExport.ExportSettingsControlsRegister.RegisterSettingsControl(System.String,System.String)">
            <summary>
            Registers settings control for given <paramref name="objectType"/>. The control is loaded when exporting objects of specified type
            using the UI wizard.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <param name="controlVirtualPath">Virtual path of the control.</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ExportSettingsControlsRegister.RegisterSiteSettingsControl(System.String,System.String)"/>
        </member>
        <member name="M:CMS.CMSImportExport.ExportSettingsControlsRegister.RegisterSiteSettingsControl(System.String,System.String)">
            <summary>
            Registers settings control for given site <paramref name="objectType"/>. The control is loaded when exporting site objects of specified type
            using the UI wizard.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <param name="controlVirtualPath">Virtual path of the control.</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ExportSettingsControlsRegister.RegisterSettingsControl(System.String,System.String)"/>
        </member>
        <member name="M:CMS.CMSImportExport.ExportSettingsControlsRegister.GetSettingsControl(System.String)">
            <summary>
            Gets settings control registered for <paramref name="objectType"/>.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <returns>Virtual path of the control, if any is registered, or null.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="objectType"/> is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ExportSettingsControlsRegister.GetSiteSettingsControl(System.String)"/>
        </member>
        <member name="M:CMS.CMSImportExport.ExportSettingsControlsRegister.GetSiteSettingsControl(System.String)">
            <summary>
            Gets settings control registered for site <paramref name="objectType"/>.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <returns>Virtual path of the control, if any is registered, or null.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="objectType"/> is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ExportSettingsControlsRegister.GetSettingsControl(System.String)"/>
        </member>
        <member name="T:CMS.CMSImportExport.ImportSettingsControlsRegister">
            <summary>
            Registers settings controls for import process. The settings controls allow for extending the import UI for particular object types.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:CMS.CMSImportExport.ImportSettingsControlsRegister.RegisterSettingsControl(System.String,System.String)">
            <summary>
            Registers settings control for given <paramref name="objectType"/>. The control is loaded when importing objects of specified type
            using the UI wizard.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <param name="controlVirtualPath">Virtual path of the control.</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ImportSettingsControlsRegister.RegisterSiteSettingsControl(System.String,System.String)"/>
        </member>
        <member name="M:CMS.CMSImportExport.ImportSettingsControlsRegister.RegisterSiteSettingsControl(System.String,System.String)">
            <summary>
            Registers settings control for given site <paramref name="objectType"/>. The control is loaded when importing site objects of specified type
            using the UI wizard.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <param name="controlVirtualPath">Virtual path of the control.</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ImportSettingsControlsRegister.RegisterSettingsControl(System.String,System.String)"/>
        </member>
        <member name="M:CMS.CMSImportExport.ImportSettingsControlsRegister.GetSettingsControl(System.String)">
            <summary>
            Gets settings control registered for <paramref name="objectType"/>.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <returns>Virtual path of the control, if any is registered, or null.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="objectType"/> is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ImportSettingsControlsRegister.GetSiteSettingsControl(System.String)"/>
        </member>
        <member name="M:CMS.CMSImportExport.ImportSettingsControlsRegister.GetSiteSettingsControl(System.String)">
            <summary>
            Gets settings control registered for site <paramref name="objectType"/>.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <returns>Virtual path of the control, if any is registered, or null.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="objectType"/> is null or empty string.</exception>
            <seealso cref="M:CMS.CMSImportExport.ImportSettingsControlsRegister.GetSettingsControl(System.String)"/>
        </member>
        <member name="T:CMS.CMSImportExport.SettingsControlsRegister">
            <summary>
            Serves as a base register for <see cref="T:CMS.CMSImportExport.ExportSettingsControlsRegister"/> and <see cref="T:CMS.CMSImportExport.ImportSettingsControlsRegister"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:CMS.CMSImportExport.SettingsControlsRegister.RegisterSettingsControl(System.String,System.String,CMS.Base.SafeDictionary{System.String,System.String})">
            <summary>
            Registers settings control for given <paramref name="objectType"/> in <paramref name="register"/>. The control is loaded when importing or exporting objects of specified type
            using the UI wizard.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <param name="controlVirtualPath">Virtual path of the control.</param>
            <param name="register">Register for virtual paths.</param>
            <exception cref="T:System.ArgumentException">Thrown when any of the parameters is null or empty string.</exception>
        </member>
        <member name="M:CMS.CMSImportExport.SettingsControlsRegister.GetSettingsControl(System.String,CMS.Base.SafeDictionary{System.String,System.String})">
            <summary>
            Gets settings control registered for <paramref name="objectType"/> in <paramref name="register"/>.
            </summary>
            <param name="objectType">Object type for which the control is designed.</param>
            <param name="register">Register for virtual paths.</param>
            <returns></returns>
        </member>
        <member name="T:CMS.CMSImportExport.VersionInfo">
            <summary>
            Class for version info.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.Version">
            <summary>
            Gets main version number.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.HotfixVersion">
            <summary>
            Gets hotfix version number.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.SubVersion">
            <summary>
            Gets sub version character.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.BetaVersion">
            <summary>
            Gets beta version.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.RCVersion">
            <summary>
            Gets RC version.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.IsBeta">
            <summary>
            Indicates if version is beta.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.IsRC">
            <summary>
            Indicates if version is RC.
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.VersionInfo.IsNormal">
            <summary>
            Indicates if version is normal.
            </summary>
        </member>
        <member name="M:CMS.CMSImportExport.VersionInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor - Creates version info.
            </summary>
            <param name="versionString">Version string</param>
            <param name="hotfixString">Hotfix version string</param>
        </member>
        <member name="M:CMS.CMSImportExport.VersionInfo.CompareTo(System.Object)">
            <summary>
            Compares two objects.
            </summary>
            <param name="obj">Version info object</param>
        </member>
        <member name="T:CMS.ImportExport.DataExportFormatEnum">
            <summary>
            Defines formats available for functionality of <see cref="T:CMS.ImportExport.DataExportHelper"/>.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportFormatEnum.XLSX">
            <summary>
            Excel 2007.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportFormatEnum.CSV">
            <summary>
            Comma-separated values.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportFormatEnum.XML">
            <summary>
            EXtensible Markup Language.
            </summary>
        </member>
        <member name="T:CMS.ImportExport.DataExportHelper">
            <summary>
            Provides DataSet export functionality to formats defined by DataExportFormatEnum.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.LETTER_COUNT">
            <summary>
            Count of ASCII uppercase letters.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.ASCII_BEGINNING">
            <summary>
            Offset determining starting index of uppercase letters in ASCII table.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.MAX_EXCEL_CELL_SIZE">
            <summary>
            Maximum size of Excel cell.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.MAX_SHEETNAME_LENGTH">
            <summary>
            Maximum length of sheet name.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.DEFAULT_TEMPLATE_NAME">
            <summary>
            Default name of Excel export template.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mMacroResolver">
            <summary>
            Holds macro resolver.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mUseSharedStringStorage">
            <summary>
            Indicates whether to use shared string table during Excel export.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mFileNameWithExtension">
            <summary>
            File of name to export with extension.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mFileName">
            <summary>
            File of name to export (without extension).
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mDataSource">
            <summary>
            Source of data.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.DEFAULT_COLUMN_NAME">
            <summary>
            Name of element representing column used when there is no other name available.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mDataExportTemplatePath">
            <summary>
            Holds path leading to Excel export template.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mDataExportTemplateFolder">
            <summary>
            Holds startup path for Excel template lookup.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.mExportedColumns">
            <summary>
            Holds actually exported columns.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.optionList">
            <summary>
            Holds list of export options.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.DataExportHelper.sharedStringCache">
            <summary>
            Shared strings cache.
            </summary>
        </member>
        <member name="T:CMS.ImportExport.DataExportHelper.OnExternalDataBound">
            <summary>
            Performes external data bound on column of datarow.
            </summary>
            <param name="dataRow">Row with data</param>
            <param name="columnIndex">Index of a column</param>
        </member>
        <member name="E:CMS.ImportExport.DataExportHelper.ExternalDataBound">
            <summary>
            External data bound handler.
            </summary>
        </member>
        <member name="T:CMS.ImportExport.DataExportHelper.OnError">
            <summary>
            Raised when error occurs.
            </summary>
            <param name="customMessage">Message set when error occurs</param>
            <param name="exception">Original exception</param>
        </member>
        <member name="E:CMS.ImportExport.DataExportHelper.Error">
            <summary>
            Error handler.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.AllowExportEmptyDataSource">
            <summary>
            Determines whether to allow export empty data source or raise an error
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.DataExportTemplateFolder">
            <summary>
            Gets a startup path for template lookup.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.DataExportTemplatePath">
            <summary>
            Gets a relative path leading to template.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.MacroResolver">
            <summary>
            Gets or sets macro resolver.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.UseTemplate">
            <summary>
            Indicates whether to use XLSX template.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.CSVDelimiter">
            <summary>
            Defines delimiter for CSV format.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.GenerateHeader">
            <summary>
            Indicates whether to generate also a header row.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.TopN">
            <summary>
            Top N rows to export.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.DataSource">
            <summary>
            Gets or sets the source of data to export.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.AvailableMacros">
            <summary>
            List of macros available for current datasource.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.UseSharedStringStorage">
            <summary>
            Defines whether to use shared string table for storing text values.
            When value is false text is being stored as inline string.
            Applies only to Excel export.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.FileName">
            <summary>
            Name of exported file (without extension).
            </summary>
        </member>
        <member name="P:CMS.ImportExport.DataExportHelper.FileNameWithExtension">
            <summary>
            Name of exported file with extension.
            </summary>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.#ctor(System.Data.DataSet)">
            <summary>
            Constructor initializing data source.
            </summary>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.RaiseError(System.String,System.Exception)">
            <summary>
            Raises error event.
            </summary>
            <param name="customMessage">Message set when error occurs</param>
            <param name="exception">Original exception</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ExportData(CMS.ImportExport.DataExportFormatEnum,System.Web.HttpResponse)">
            <summary>
            Exports data stored in DataSource property, writes it to given response.
            </summary>
            <param name="format">Export format.</param>
            <param name="response">HTTP response.</param>
            <returns>True, if error occurred during data export.</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ExportData(CMS.ImportExport.DataExportFormatEnum,System.IO.Stream)">
            <summary>
            Exports data stored in DataSource property, writes it to given stream.
            </summary>
            <param name="format">Format to export data in</param>
            <param name="stream">Stream to export data to</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetExportedColumns(System.String)">
            <summary>
            Gets columns that should be exported.
            </summary>
            <param name="tableName">Name of a table</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetColumnIndex(System.String,System.String)">
            <summary>
            Gets index of a column corresponding to columns actually selected to export.
            </summary>
            <param name="tableName">Name of a table</param>
            <param name="columnName">Name of a column</param>
            <returns>Index of a column</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetColumnCaptionText(System.Int32,System.String)">
            <summary>
            Gets a caption for given column name.
            </summary>
            <param name="columnIndex">Index of column</param>
            <param name="tableName">Name of a table</param>
            <returns>Caption for a column</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ExportToExcel(System.Data.DataSet,System.IO.Stream)">
            <summary>
            Exports given DataSet to XLSX format.
            </summary>
            <param name="dataSet">DataSet to export</param>
            <param name="stream">Stream to write to</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.FillSheetWithData(System.Data.DataTable,CMS.ImportExport.ExportOptions)">
            <summary>
            Fills sheet with data from given data table.
            </summary>
            <param name="dataTable">Table with data</param>
            <param name="options">Export settings</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.CreateExcelHeader(System.Data.DataTable,CMS.ImportExport.ExportOptions)">
            <summary>
            Creates header in the excel file
            </summary>
            <param name="dataTable">Data table with the data to be exported</param>
            <param name="options">Export options</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.FillContentRow(DocumentFormat.OpenXml.Spreadsheet.Row,System.Data.DataRow,System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Fills given row with content (overwrites columns).
            </summary>
            <param name="row">Row to fill</param>
            <param name="dataRow">Row containing data</param>
            <param name="columnIndexOffset">Offset of column</param>
            <param name="exportedColumns">Columns to export</param>
            <returns>Created row</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.HandleMacros(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.Spreadsheet.SheetData})">
            <summary>
            Resolves macros using macro resolver and gets custom macros (##HEADER##, ##DATA##...).
            </summary>
            <param name="sheets">Excel sheets</param>
            <returns>List of custom macros</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.UpdateExportOptions(System.Int32,System.Int32)">
            <summary>
            Updates row numbers for each not yet resolved macro according to newly added rows.
            </summary>
            <param name="startingRowNumber">Number of row from which to start updating</param>
            <param name="newRows">Count of newly added rows</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.CloneRow(DocumentFormat.OpenXml.Spreadsheet.Row,DocumentFormat.OpenXml.Spreadsheet.SheetData)">
            <summary>
            Creates row below referenced row.
            </summary>
            <param name="referencedRow">Row which should be copied under itself</param>
            <param name="sheetData">Sheet</param>
            <returns>Cloned row</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.SetNewRowIndexes(DocumentFormat.OpenXml.Spreadsheet.Row,System.UInt32)">
            <summary>
            Sets new row indexes to cells in a given row.
            </summary>
            <param name="row">Row to update indexes in</param>
            <param name="newRowIndex">New index to set</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetExistingRow(System.Int32,DocumentFormat.OpenXml.Spreadsheet.SheetData)">
            <summary>
            Gets existing row by its number.
            </summary>
            <param name="rowNumber">Number of a row</param>
            <param name="sheetData">Sheet to search the row in</param>
            <returns>Row if exists otherwise null</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.SortCellsInRow(DocumentFormat.OpenXml.Spreadsheet.Row)">
            <summary>
            Sorts cells in a given row using cell's reference.
            </summary>
            <param name="row">Row to sort cells in</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.DeleteExistingCell(DocumentFormat.OpenXml.Spreadsheet.Row,System.String)">
            <summary>
            Removes cell specified by cell reference from given row.
            </summary>
            <param name="row">Row to use for deletion</param>
            <param name="cellReference">Reference to a cell to be deleted</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.CreateCell(System.String,System.Object)">
            <summary>
            Creates cell based on given value and position.
            </summary>
            <param name="cellReference">Cell reference</param>
            <param name="cellValue">Value to add to cell</param>
            <returns>Created cell with value</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.EnsureSharedStringTablePart(DocumentFormat.OpenXml.Packaging.WorkbookPart)">
            <summary>
            Ensures shared string table part.
            </summary>
            <param name="workbookPart">Corresponding workbook part</param>
            <returns>New or existing shared string table part</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.RemoveSharedStringItem(System.Int32,DocumentFormat.OpenXml.Packaging.WorkbookPart)">
            <summary>
            Removes shared string item from the shared string table.
            </summary>
            <param name="sharedStringId">Index of a shared string</param>
            <param name="workbookPart">Workbook part</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.IsSharedStringReferenced(System.Int32,DocumentFormat.OpenXml.Packaging.WorkbookPart)">
            <summary>
            Determines whether string given by identifier is being referenced.
            </summary>
            <param name="sharedStringId">Identifier of a shared string</param>
            <param name="workbookPart">Workbook part</param>
            <returns>TRUE if the string is referenced</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.AddInlineStringToCell(System.String,DocumentFormat.OpenXml.Spreadsheet.Cell)">
            <summary>
            Adds text as inline string to given cell.
            </summary>
            <param name="cellValue">Value to add as a inline string</param>
            <param name="cell">Cell to be used for addition</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ClearSharedStringsCache">
            <summary>
            Clears collection with cached shared strings.
            </summary>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.RemoveCachedString(System.String)">
            <summary>
            Removes cached string.
            </summary>
            <param name="text">Text to remove</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.CacheExistingSharedStrings(DocumentFormat.OpenXml.Packaging.WorkbookPart)">
            <summary>
            Caches existing shared string table part.
            </summary>
            <param name="workbookPart">Workbook part</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.StoreSharedStringItem(System.String)">
            <summary>
            Saves string to string cache to be used later during creation of shared string table part.
            </summary>
            <param name="text">Text to insert</param>
            <returns>Index of shared string item</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.FillStringTable(DocumentFormat.OpenXml.Packaging.WorkbookPart)">
            <summary>
            Fills given string table part with strings cached during sheet creation.
            </summary>
            <param name="workbookPart">Workbook part</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.InsertWorksheet(DocumentFormat.OpenXml.Packaging.WorkbookPart,System.String)">
            <summary>
            Inserts new worksheet part to a workbook part.
            </summary>
            <param name="workbookPart">Workbook part to use</param>
            <param name="sheetName">Name of new sheet</param>
            <returns>Worksheet part</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetSheetName(DocumentFormat.OpenXml.Spreadsheet.Sheets,System.String,System.UInt32)">
            <summary>
            Gets unique sheet name
            </summary>
            <param name="sheets">Collection of sheets</param>
            <param name="sheetName">Suggested name of the sheet</param>
            <param name="sheetId">Sheet identifier</param>
            <returns>Unique sheet name</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetColumnName(System.String)">
            <summary>
            Returns name of column from given cell reference (ex. "B4" -> "B")
            </summary>
            <param name="cellReference">Cell reference in LETTERNUMBER format</param>
            <returns>Name of a column</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetRowNumber(System.String)">
            <summary>
            Returns number of a row from given cell reference (ex. "B4" -> "4")
            </summary>
            <param name="cellReference">Cell reference in LETTERNUMBER format</param>
            <returns>Number of a row</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.CreateColumnReference(System.Int32,System.Int32)">
            <summary>
            Creates column reference from column and row numbers.
            </summary>
            <param name="columnNumber">Number of a column</param>
            <param name="rowNumber">Number of a row</param>
            <returns>Cell reference in LETTERNUMBER format</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.CreateColumnName(System.Int32)">
            <summary>
            Creates column name from column number ("1" -> "A")
            </summary>
            <param name="columnNumber">Number of column</param>
            <returns>Name of column</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetColumnNumber(System.String)">
            <summary>
            Gets number of given column name ("A" -> "1")
            </summary>
            <param name="columnName">Name of column</param>
            <returns>Number of column</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ExportToCSV(System.Data.DataSet,System.IO.Stream)">
            <summary>
            Exports first table of given DataSet to CSV format.
            </summary>
            <param name="dataSet">DataSet to export</param>
            <param name="stream">Stream to write to</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ExportToCSV(System.Data.DataSet,System.Int32,System.IO.Stream)">
            <summary>
            Exports first table of given DataSet to CSV format.
            </summary>
            <param name="dataSet">DataSet to export</param>
            <param name="tableIndex">Index of table to export</param>
            <param name="stream">Stream to write to</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ExportToCSV(System.Data.DataSet,System.Int32,System.IO.Stream,System.Boolean)">
            <summary>
            Exports specified table of given DataSet to CSV format.
            </summary>
            <param name="dataSet">DataSet to export</param>
            <param name="tableIndex">Index of table to export</param>
            <param name="stream">Stream to write to</param>
            <param name="returnAsArray">If true DataSet is returned in byte array format</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.PrepareCSVValue(System.Object,System.Boolean)">
            <summary>
            Performs necessary steps in order to create valid CSV value.
            </summary>
            <param name="value">Value to transform</param>
            <param name="first">Flag whether the item is the first item in the output</param>
            <returns>Valid CSV value</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.ExportToXML(System.Data.DataSet,System.IO.Stream)">
            <summary>
            Exports given DataSet to XML format.
            </summary>
            <param name="dataSet">DataSet to export</param>
            <param name="stream">Stream to write to</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetXMLElementName(System.String)">
            <summary>
            Normalizes header text to be usable as element name.
            </summary>
            <param name="headerText">Text to normalize</param>
            <returns>Valid element name</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetExportedData(System.Data.DataSet,System.Boolean)">
            <summary>
            Gets the DataSet with the formatted exported data
            </summary>
            <param name="dataSet">DataSet to export</param>
            <param name="encode">If true, the values in the DataSet will be encoded</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetExportedValue(System.Data.DataRowView,System.String,System.Data.DataRow)">
            <summary>
            Gets the exported value for the given 
            </summary>
            <param name="drv">Data row with the source data</param>
            <param name="columnName">Column name</param>
            <param name="dataRow">DataRow with the result</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetFileName(CMS.ImportExport.DataExportFormatEnum)">
            <summary>
            Gets file name with extension.
            </summary>
            <param name="format">Format of a file</param>
            <returns>File name with extension</returns>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetDataExportFormatEnum(System.String)">
            <summary>
            Returns DataExportFormat enum.
            </summary>
            <param name="dataExportFormat">Data export format</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetDataExportFormatString(CMS.ImportExport.DataExportFormatEnum)">
            <summary>
            Returns DataExportFormat string.
            </summary>
            <param name="dataExportFormat">Data export format</param>
        </member>
        <member name="M:CMS.ImportExport.DataExportHelper.GetDataExportFormatContentType(CMS.ImportExport.DataExportFormatEnum)">
            <summary>
            Returns content type for given format.
            </summary>
            <param name="dataExportFormat">Data export format</param>
        </member>
        <member name="T:CMS.ImportExport.ExportOptions">
            <summary>
            Class that holds coordinates of a macro and macro itself.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.Contents">
            <summary>
            What should be exported.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.TemplateMode">
            <summary>
            Whether supplied sheet is a template.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.CellReference">
            <summary>
            Reference to cell that contains the macro.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.Sheet">
            <summary>
            Reference to a sheet containing macro.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.TableName">
            <summary>
            Name of a table to export.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.RowNumber">
            <summary>
            Number of row that contains the cell with macro.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.ColumnName">
            <summary>
            Name of a column that contains the cell with macro.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.ColumnNumber">
            <summary>
            Number of column that contains the cell with macro.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.GenerateHeader">
            <summary>
            Whether the header of the table should be generated.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.GenerateData">
            <summary>
            Whether the contents of the table should be generated.
            </summary>
        </member>
        <member name="P:CMS.ImportExport.ExportOptions.IsProcessed">
            <summary>
            Gets or sets a flag indicating that this instance was processed (exported to sheet).
            </summary>
        </member>
        <member name="M:CMS.ImportExport.ExportOptions.#ctor(System.String,System.String,DocumentFormat.OpenXml.Spreadsheet.SheetData,System.Boolean)">
            <summary>
            Constructor for macros.
            </summary>
            <param name="macro">Name of a macro</param>
            <param name="cellReference">Reference to a cell containing macro</param>
            <param name="sheet">Reference to a sheet containing macro</param>
            <param name="templateMode">Whether the supplied sheet is a template</param>
        </member>
        <member name="M:CMS.ImportExport.ExportOptions.#ctor(CMS.ImportExport.ExportContents,System.String,DocumentFormat.OpenXml.Spreadsheet.SheetData,System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="contents">What should be exported</param>
            <param name="cellReference">Position of generated data</param>
            <param name="sheet">Reference to a sheet to export into</param>
            <param name="templateMode">Whether the supplied sheet is a template</param>
        </member>
        <member name="T:CMS.ImportExport.ExportContents">
            <summary>
            Which part of data table should be exported.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.ExportContents.Header">
            <summary>
            Header row.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.ExportContents.Data">
            <summary>
            Data of a table.
            </summary>
        </member>
        <member name="F:CMS.ImportExport.ExportContents.Table">
            <summary>
            Whole table (header and data).
            </summary>
        </member>
        <member name="T:CMS.ImportExport.NoDataException">
            <summary>
            Thrown during data export when no data are available for export.
            </summary>
        </member>
        <member name="M:CMS.ImportExport.NoDataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.ImportExport.NoDataException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
    </members>
</doc>
