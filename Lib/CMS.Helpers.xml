<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.Helpers</name>
    </assembly>
    <members>
        <member name="T:CMS.Helpers.AngularContext">
            <summary>
            Class that manages registering angular modules for request.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AngularContext.RegisteredModules">
            <summary>
            Dictionary containing all registered angular modules for current request.
            Module id is stored as a key.
            Value represents all the parameters of the module.
            
            Returns null if no module is registered.
            </summary>
        </member>
        <member name="M:CMS.Helpers.AngularContext.RegisterAngularModule(System.String,System.Object)">
            <summary>
            Renders JavaScript code to start a client-side angular module.
            </summary>
            <param name="moduleID">The full name of the client-side module to register.</param>
            <param name="parameters">An object that contains the named parameters to set for the module.</param>
        </member>
        <member name="T:CMS.Helpers.CacheConstants">
            <summary>
            Constants used for cache expiration options.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheConstants.NoAbsoluteExpiration">
            <summary>
            Cache item should never expire.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheConstants.NoSlidingExpiration">
            <summary>
            Disable sliding expirations.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CMSCacheItemPriority">
            <summary>
            Specifies the relative priority of items stored in the cache.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemPriority.Low">
            <summary>
            Cache items with this priority level are the most likely to be deleted from the cache as the server frees system memory.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemPriority.Normal">
            <summary>
            Cache items with this priority level are likely to be deleted from the cache as the server frees system memory.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemPriority.High">
            <summary>
            Cache items with this priority level are the least likely to be deleted from the cache as the server frees system memory.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemPriority.NotRemovable">
            <summary>
            The cache items with this priority level will not be automatically deleted from the cache as the server frees system memory.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CMSCacheItemRemovedCallback">
            <summary>Defines a callback method for notifying applications when a cached item is removed from the cache.</summary>
            <param name="key">The key that is removed from the cache. </param>
            <param name="value">The item associated with the key removed from the cache. </param>
            <param name="reason">The reason the item was removed from the cache.</param>
        </member>
        <member name="T:CMS.Helpers.CMSCacheItemRemovedReason">
            <summary>
            Specifies the reason an item was removed from the cache.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemRemovedReason.Removed">
            <summary>
            The item is removed from the cache because of method remove or replace.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemRemovedReason.Expired">
            <summary>
            The item is removed from the cache because it expired.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemRemovedReason.Underused">
            <summary>
            The item is removed from the cache because the system removed it to free memory.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CMSCacheItemRemovedReason.DependencyChanged">
            <summary>
            The item is removed from the cache because the cache dependency associated with it changed.
            </summary>
        </member>
        <member name="T:CMS.Helpers.Caching.Abstractions.ICacheAccessor">
            <summary>
            Represents a cache with reading, inserting and removing support.
            </summary>
            <seealso cref="T:CMS.Helpers.Caching.Abstractions.ICompactableCache"/>
        </member>
        <member name="M:CMS.Helpers.Caching.Abstractions.ICacheAccessor.Insert(System.String,System.Object,CMS.Helpers.CMSCacheDependency,System.DateTime,System.TimeSpan,CMS.Helpers.CMSCacheItemPriority,CMS.Helpers.CMSCacheItemRemovedCallback)">
            <summary>
            Inserts an object into the cache.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependencies">The file or cache key dependencies for the item. When any dependency changes, the object becomes invalid and is removed from the cache.</param>
            <param name="absoluteExpiration">The time at which the inserted object expires and is removed from the cache. </param>
            <param name="slidingExpiration">The interval between the time the inserted object was last accessed and the time at which that object expires.</param>
            <param name="priority">The cost of the object relative to other items stored in the cache.</param>
            <param name="onRemoveCallback">A delegate that, if provided, will be called when an object is removed from the cache.</param>
        </member>
        <member name="M:CMS.Helpers.Caching.Abstractions.ICacheAccessor.Get(System.String)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <param name="key">The identifier for the cache item to retrieve.</param>
        </member>
        <member name="M:CMS.Helpers.Caching.Abstractions.ICacheAccessor.Remove(System.String)">
            <summary>
            Removes the specified item from the cache.
            </summary>
            <param name="key">The identifier for the cache item to remove.</param>
        </member>
        <member name="M:CMS.Helpers.Caching.Abstractions.ICacheAccessor.GetEnumerator">
            <summary>
            <summary>Retrieves a dictionary enumerator used to iterate through the key settings and their values contained in the cache.</summary>
            </summary>
        </member>
        <member name="T:CMS.Helpers.Caching.Abstractions.ICompactableCache">
            <summary>
            Represents a cache that supports compacting to reduce its size.
            </summary>
            <seealso cref="T:CMS.Helpers.Caching.Abstractions.ICacheAccessor"/>
        </member>
        <member name="M:CMS.Helpers.Caching.Abstractions.ICompactableCache.Compact(System.Double)">
            <summary>
            Tries to remove the specified percentage of items from the cache.
            </summary>
            <param name="percentage">Percentage by which to reduce the cache size.</param>
        </member>
        <member name="T:CMS.Helpers.Caching.AutomaticCallbackMemoryCacheAccessor">
            <summary>
            This implementation of cache accessor ensures that item is removed from cache upon its expiration.
            Timely removal is guaranteed only when using absolute expiration.
            </summary>
        </member>
        <member name="T:CMS.Helpers.Caching.DependencyCacheKeysStore">
            <summary>
            Represents a store of the dependency cache keys.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Caching.DependencyCacheKeysStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.Caching.DependencyCacheKeysStore"/> class.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Caching.DependencyCacheKeysStore.GetOrAdd(System.String)">
            <summary>
            Adds new token source <see cref="T:System.Threading.CancellationTokenSource"/> if no token source exists under the <paramref name="key"/>.
            Returns the newly created or existing token source.
            </summary>
            <param name="key">The key of the <see cref="T:System.Threading.CancellationTokenSource"/> to get or add.</param>
            <returns>Returns the token source for the <paramref name="key"/>.</returns>
        </member>
        <member name="M:CMS.Helpers.Caching.DependencyCacheKeysStore.TryRemove(System.String,System.Threading.CancellationTokenSource@)">
            <summary>
            Tries to remove and return the <see cref="T:System.Threading.CancellationTokenSource"/> corresponding to <paramref name="key"/>.
            </summary>
            <param name="key">The key of the <see cref="T:System.Threading.CancellationTokenSource"/> to remove.</param>
            <param name="value">Contains the removed token source, if the key identified an existing token source.</param>
            <returns>Returns true if <paramref name="key"/> identifies an existing value, otherwise returns false.</returns>
        </member>
        <member name="T:CMS.Helpers.Caching.Internal.IDependencyCacheKeysStore">
            <summary>
            Represents a store of the dependency cache keys.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.Caching.Internal.IDependencyCacheKeysStore.GetOrAdd(System.String)">
            <summary>
            Adds new token source <see cref="T:System.Threading.CancellationTokenSource"/> if no token source exists under the <paramref name="key"/>.
            Returns the newly created or existing token source.
            </summary>
            <param name="key">The key of the <see cref="T:System.Threading.CancellationTokenSource"/> to get or add.</param>
            <returns>Returns the token source for the <paramref name="key"/>.</returns>
        </member>
        <member name="M:CMS.Helpers.Caching.Internal.IDependencyCacheKeysStore.TryRemove(System.String,System.Threading.CancellationTokenSource@)">
            <summary>
            Tries to remove and return the <see cref="T:System.Threading.CancellationTokenSource"/> corresponding to <paramref name="key"/>.
            </summary>
            <param name="key">The key of the <see cref="T:System.Threading.CancellationTokenSource"/> to remove.</param>
            <param name="value">Contains the removed token source, if the key identified an existing token source.</param>
            <returns>Returns true if <paramref name="key"/> identifies an existing value, otherwise returns false.</returns>
        </member>
        <member name="T:CMS.Helpers.Caching.MemoryCacheAccessor">
            <summary>
            <see cref="T:CMS.Helpers.Caching.Abstractions.ICacheAccessor"/> implementation based on <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCache"/>.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Caching.MemoryCacheAccessor.Count">
            <summary>
            Gets the count of the cache entries.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Caching.MemoryCacheAccessor.Compact(System.Double)">
            <summary>
            Tries to remove the specified percentage of items from the memory cache.
            </summary>
            <param name="percentage">Percentage by which to reduce the cache size.</param>
        </member>
        <member name="T:CMS.Helpers.CacheDebug">
            <summary>
            Cache debug methods
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheDebug.Settings">
            <summary>
            Debug settings
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheDebug.CurrentRequestLog">
            <summary>
            Current request log.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheDebug.DebugCurrentRequest">
            <summary>
            Debug current request cache access.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDebug.GetDebugSettings">
            <summary>
            Gets the debug settings
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDebug.NewLogTable">
            <summary>
            Creates a new table for the cache log.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDebug.LogCacheOperation(System.String,System.String,System.Object,CMS.Helpers.CMSCacheDependency,System.DateTime,System.TimeSpan,CMS.Helpers.CMSCacheItemPriority,System.Boolean)">
            <summary>
            Logs the cache operation. Logs the cache operation to the file and to current request log for debugging.
            </summary>
            <param name="operation">Operation</param>
            <param name="key">Cache key</param>
            <param name="value">Object to cache</param>
            <param name="dependencies">Cache dependencies</param>
            <param name="absoluteExpiration">Absolute expiration</param>
            <param name="slidingExpiration">Sliding expiration</param>
            <param name="priority">Priority of the cache item</param>
            <param name="useFullKey">If true, full cache key is used</param>
        </member>
        <member name="M:CMS.Helpers.CacheDebug.LogToFile(System.String,System.String,System.Object,System.DateTime,System.TimeSpan,CMS.Helpers.CMSCacheItemPriority)">
            <summary>
            Logs the cache operation to the log file.
            </summary>
            <param name="operation">Operation</param>
            <param name="key">Cache key</param>
            <param name="value">Object to cache</param>
            <param name="absoluteExpiration">Absolute expiration</param>
            <param name="slidingExpiration">Sliding expiration</param>
            <param name="priority">Priority of the cache item</param>
        </member>
        <member name="T:CMS.Helpers.CachedSection`1">
            <summary>
            Cached section context handler.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection`1.mData">
            <summary>
            Data to be cached / retrieved
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection`1.Data">
            <summary>
            Data to be cached / retrieved
            </summary>
        </member>
        <member name="M:CMS.Helpers.CachedSection`1.#ctor(`0@,System.Double,System.Boolean,System.String,System.Object[])">
            <summary>
            Creates new instance of <see cref="T:CMS.Helpers.CachedSection"/> with absolute expiration.
            </summary>
            <param name="result">Returns the result of the cached data if available</param>
            <param name="cacheMinutes">Defines how long this item will stay in cache (in minutes)</param>
            <param name="condition">Cache condition</param>
            <param name="customCacheItemName">Custom cache item name</param>
            <param name="cacheItemNameParts">Cache item name parts</param>
        </member>
        <member name="M:CMS.Helpers.CachedSection`1.#ctor(`0@,CMS.Helpers.CacheSettings)">
            <summary>
            Creates new instance of <see cref="T:CMS.Helpers.CachedSection"/>.
            </summary>
            <param name="result">Returns the result of the cached data if available</param>
            <param name="settings">Cache settings</param>
        </member>
        <member name="M:CMS.Helpers.CachedSection`1.#ctor(`0@,CMS.Helpers.CacheSettings,CMS.Core.Internal.IDateTimeNowService)">
            <summary>
            Creates new instance of <see cref="T:CMS.Helpers.CachedSection"/>.
            </summary>
            <param name="result">Returns the result of the cached data if available</param>
            <param name="settings">Cache settings</param>
            <param name="dateTimeNowService">DateTime.Now service used for testing purposes.</param>
        </member>
        <member name="M:CMS.Helpers.CachedSection`1.EnterLock(`0@)">
            <summary>
            Enters the cache lock
            </summary>
            <param name="result">Returning result of the operation in case other thread loaded that (waits for it in that case)</param>
        </member>
        <member name="M:CMS.Helpers.CachedSection`1.GetData">
            <summary>
            Attempts to get the data from cache.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CachedSection`1.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CachedSection`1.LoadDataHandled(System.Func{CMS.Helpers.CacheSettings,`0})">
            <summary>
            Loads the data with the given method if the section requests to load the data. This method supports progressive caching and is able to distribute unhandled exceptions to other simultaneously running threads.
            </summary>
            <param name="loadMethod">Method that loads the cached section data</param>
        </member>
        <member name="T:CMS.Helpers.CachedSection">
            <summary>
            Cached section context handler.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection.mLock">
            <summary>
            Object for the synchronization.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection.mLoadData">
            <summary>
            True if the data should be loaded by the code.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection.mLockAcquired">
            <summary>
            Flag whether the lock was acquired for this cached section
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection.mRemoved">
            <summary>
            Flag set when the item is removed from the cache
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection.mDataWasSet">
            <summary>
            Flag indicating whether the data property was set. The data property must be set if progressive caching is enabled
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection.mException">
            <summary>
            Exception that occurred when loading data
            </summary>
        </member>
        <member name="F:CMS.Helpers.CachedSection.mSettings">
            <summary>
            Cache settings
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.Settings">
            <summary>
            Cache settings
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.BoolCondition">
            <summary>
            Cache condition.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.CacheMinutes">
            <summary>
            Cache minutes.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.CacheDependency">
            <summary>
            Cache dependency.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.CacheItemPriority">
            <summary>
            Cache item priority.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.CacheItemName">
            <summary>
            Cache item name used for the caching.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.Cached">
            <summary>
            If true, the data is used from the cache if available / cached
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.LoadData">
            <summary>
            If true, the external code should load the data. Using this property to control does not support distribution of unhandled exceptions in case of progressive caching. 
            </summary>
        </member>
        <member name="P:CMS.Helpers.CachedSection.Exception">
            <summary>
            Exception that occurred within loading of the data
            </summary>
        </member>
        <member name="M:CMS.Helpers.CachedSection.#ctor(CMS.Helpers.CacheSettings)">
            <summary>
            Constructor
            </summary>
            <param name="settings">Cache settings</param>
        </member>
        <member name="M:CMS.Helpers.CachedSection.Remove">
            <summary>
            Removes the cache item
            </summary>
        </member>
        <member name="M:CMS.Helpers.CachedSection.LogDataError">
            <summary>
            Logs the error when data was not set
            </summary>
        </member>
        <member name="T:CMS.Helpers.CacheEvents">
            <summary>
            Cache events.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
            <exclude />
        </member>
        <member name="F:CMS.Helpers.CacheEvents.CacheItemRemoved">
            <summary>
            Fires when the cache item is removed from cache.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheEvents.ClearFullPageCache">
            <summary>
            Fires when full page cache clear is requested.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CacheHelper">
            <summary>
            Provides helper methods for caching.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.FILENODE_KEY">
            <summary>
            File node caching key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.FULLPAGE_KEY">
            <summary>
            Full page caching key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.CSS_KEY">
            <summary>
            CSS caching key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.MACRO_KEY">
            <summary>
            Macro cache key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.NO_CACHE_DEPENDENCIES">
            <summary>
            No cache dependencies constant.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.DEFAULT_CACHE_DEPENDENCIES">
            <summary>
            Default cache dependencies constant.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.DUMMY_KEY">
            <summary>
            Dummy item.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.SEPARATOR">
            <summary>
            Cache item separator.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.mDefaultDependenciesRegex">
            <summary>
            Identifies default cache dependencies macro in string of cache dependencies
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.API_CACHE_MINUTES">
            <summary>
            Cache minutes for caching the system data in API. 1 hour by default
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheHelper.DefaultCacheItemPriority">
            <summary>
            Cache item priority.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.CacheAccessor">
            <summary>
            Resolved instance of <see cref="T:CMS.Helpers.Caching.Abstractions.ICacheAccessor"/> service.
            </summary>
            <remarks>
            Property setter should be used for testing purposes only.
            </remarks>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.AutomaticCallbackCacheAccessor">
            <summary>
            This accessor is used only in <see cref="M:CMS.Helpers.CacheHelper.RegisterAutomaticCallback(System.String,System.DateTime,System.Action,System.Boolean)"/> method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.ProgressiveCaching">
            <summary>
            If true, progressive caching is enabled, meaning that two threads accessing the same code share the result of an internal operation.
            True by default.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.MultiplePrefixesUsed">
            <summary>
            If true, multiple cache prefixes were used
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.CurrentCachePrefix">
            <summary>
            Current context name
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.Removed">
            <summary>
            Removed items count (removed correctly by the system).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.Underused">
            <summary>
            Underused items count (removed sooner for memory reasons).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.DependencyChanged">
            <summary>
            DependencyChanged items count (removed by the dependency).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.Expired">
            <summary>
            Expired items count (removed by the system for expiration reasons).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.AllowCacheByUserName">
            <summary>
            If true, the cache allows separate keys by user name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.AllowCacheByCulture">
            <summary>
            If true, the cache allows separate keys by culture.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.BaseCacheKey">
            <summary>
            Returns the base cache key (created with all parameters considered to be valid for proper caching).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.DefaultDependenciesRegex">
            <summary>
            Identifies default cache dependencies macro in string of cache dependencies
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.ProgressiveCache">
            <summary>
            Gets or sets the underlying progressive cache.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.AlwaysCacheFiles">
            <summary>
            Gets if files are always cached on client, even outside the live site.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.AlwaysCacheResources">
            <summary>
            Gets if resources are always cached on client, even outside the live site.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.PhysicalFilesCacheMinutes">
            <summary>
            Gets the expiration time in minutes that should be set for the physical files in the client cache.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheHelper.ClientCacheRequested">
            <summary>
            Gets if the client specified cache settings in request.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheMinutes(System.String)">
            <summary>
            Cache content minutes.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheImageMinutes(System.String)">
            <summary>
            Cache image minutes.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ClientCacheMinutes(System.String)">
            <summary>
            Client cache minutes for the processed content (both files and pages).
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.RevalidateClientCache(System.String)">
            <summary>
            Returns whether the client cache should be revalidated by the call to the server.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.MaxCacheFileSize(System.String)">
            <summary>
            Maximum size of the file that is allowed to be cached in kilobytes.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheEnabled(System.String)">
            <summary>
            Returns true if the content caching is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheImageEnabled(System.String)">
            <summary>
            Returns true if the image caching is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheImageAllowed(System.String,System.Int32)">
            <summary>
            Checks if the file attachment is below the maximum file size used for caching.
            </summary>
            <param name="siteName">Site name</param>
            <param name="filesize">File size in bytes</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetBaseCacheKey(System.Boolean,System.Boolean)">
            <summary>
            Returns the base cache key (created with all parameters considered to be valid for proper caching).
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCultureCacheKey(System.String)">
            <summary>
            Gets the cache key for the given culture
            </summary>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCultureCacheKey">
            <summary>
            Gets the cache key for current culture
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetUserCacheKey(System.String)">
            <summary>
            Gets the cache key for current user the given user
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetUserCacheKey">
            <summary>
            Gets the cache key for current user
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheItemName(System.String,System.Object[])">
            <summary>
            Gets the cache item string.
            </summary>
            <param name="customName">Custom cache item name</param>
            <param name="parts">Parts of the key if the custom name is empty or null</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheItemName(System.Boolean,System.String,System.Object[])">
            <summary>
            Gets the cache item string.
            </summary>
            <param name="lowerCase">Make the key lowercase</param>
            <param name="customName">Custom cache item name</param>
            <param name="parts">Parts of the key if the custom name is empty or null</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.BuildCacheItemName(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Builds the cache item name from the given parts
            </summary>
            <param name="parts">Parts to build</param>
            <param name="lowerCase">Lower case the result</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.Cache``1(System.Func{CMS.Helpers.CacheSettings,``0},CMS.Helpers.CacheSettings)">
            <summary>
            Wraps the operation to a cached section. This method supports progressive caching and is able to distribute unhandled exceptions to other simultaneously running threads.
            </summary>
            <param name="loadMethod">Method that loads the data</param>
            <param name="settings">Cache settings</param>
            <remarks>
            <see cref="T:CMS.Helpers.IProgressiveCache"/> can be used to avoid a dependency on this static method.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadMethodAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadMethodAsync">Function accepting cache settings and returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadMethodAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadMethodAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadMethodAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            <para>
            <see cref="T:CMS.Helpers.IProgressiveCache"/> can be used to avoid a dependency on this static method.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadMethodAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadMethodAsync">Function accepting cache settings and a cancellation token and returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadMethodAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadMethodAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadMethodAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            <para>
            <see cref="T:CMS.Helpers.IProgressiveCache"/> can be used to avoid a dependency on this static method.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.Cache``1(System.Func{``0},CMS.Helpers.CacheSettings)">
            <summary>
            Wraps the operation to a cached section. This method supports progressive caching and is able to distribute unhandled exceptions to other simultaneously running threads.
            </summary>
            <param name="loadMethod">Method that loads the data</param>
            <param name="settings">Cache settings</param>
            <remarks>
            <see cref="T:CMS.Helpers.IProgressiveCache"/> can be used to avoid a dependency on this static method.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheAsync``1(System.Func{System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadMethodAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadMethodAsync">Function returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadMethodAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadMethodAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadMethodAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            <para>
            <see cref="T:CMS.Helpers.IProgressiveCache"/> can be used to avoid a dependency on this static method.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CacheAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadMethodAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadMethodAsync">Function accepting a cancellation token and returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadMethodAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadMethodAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadMethodAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            <para>
            <see cref="T:CMS.Helpers.IProgressiveCache"/> can be used to avoid a dependency on this static method.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.Add(System.String,System.Object,CMS.Helpers.CMSCacheDependency,System.DateTime,System.TimeSpan)">
            <summary>
            Mirror to Cache.Add().
            </summary>
            <param name="key">Cache key</param>
            <param name="value">Cache value</param>
            <param name="dependencies">Cache dependencies</param>
            <param name="absoluteExpiration">Cache absolute expiration</param>
            <param name="slidingExpiration">Cache sliding expiration</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.Add(System.String,System.Object,CMS.Helpers.CMSCacheDependency,System.DateTime,System.TimeSpan,CMS.Helpers.CMSCacheItemPriority,CMS.Helpers.CMSCacheItemRemovedCallback,System.Boolean)">
            <summary>
            Mirror to Cache.Add().
            </summary>
            <param name="key">Cache key</param>
            <param name="value">Cache value</param>
            <param name="dependencies">Cache dependencies</param>
            <param name="absoluteExpiration">Cache absolute expiration</param>
            <param name="slidingExpiration">Cache sliding expiration</param>
            <param name="priority">Cache priority</param>
            <param name="onCacheRemoveCallback">Cache callback on remove</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetItem(System.String,System.Boolean)">
            <summary>
            Gets item from cache.
            </summary>
            <param name="key">Cache key</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
            <returns>object from cache</returns>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetItem(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets item from cache.
            </summary>
            <param name="key">Cache key</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
            <param name="logOperation">Log the cache operation</param>
            <param name="useFullKey">If true, the full cache key is used</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetInnerValue(System.Object)">
            <summary>
            Gets the inner value for the cache item
            </summary>
            <param name="value">Value to get</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.PrivateContains(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns true if the cache contains the item with specified key.
            </summary>
            <param name="key">Cache key</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
            <param name="useFullKey">If true, the full cache key is used</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TryGetItem``1(System.String,``0@)">
            <summary>
            Returns true if the cache contains the item with specified key.
            </summary>
            <param name="key">Cache key</param>
            <param name="value">Returning the value of the object</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TryGetItem(System.String,System.Object@)">
            <summary>
            Returns true if the cache contains the item with specified key.
            </summary>
            <param name="key">Cache key</param>
            <param name="value">Returning the value of the object</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TryGetItem``1(System.String,System.Boolean,``0@,System.Boolean)">
            <summary>
            Returns true if the cache contains the item with specified key.
            </summary>
            <param name="key">Cache key</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
            <param name="output">Returning the value of the object</param>
            <param name="logOperation">Log the cache operation</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TryGetItem(System.String,System.Boolean,System.Object@)">
            <summary>
            Returns true if the cache contains the item with specified key.
            </summary>
            <param name="key">Cache key</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
            <param name="value">Returning the value of the object</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.Remove(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Removes object from cache.
            </summary>
            <param name="key">Cache key</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
            <param name="logOperation">If true, the operation is logged</param>
            <param name="logTask">Log web farm task</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetFullKey(System.String)">
            <summary>
            Gets the full cache key with the prefix
            </summary>
            <param name="key">Cache key</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CompactCache(System.Double)">
            <summary>
            Tries to remove the specified percentage of items from the underlying cache.
            The return value indicates whether compacting was performed (i.e. whether the underlying cache supports compacting).
            </summary>
            <param name="percentage">Percentage by which to reduce the cache size.</param>
            <returns>Returns false if the underlying cache does not support compacting. Otherwise returns true.</returns>
            <remarks>
            In a web site environment (<see cref="P:CMS.Base.SystemContext.IsWebSite"/>) on the .NET Framework platform the underlying cache is the HTTP runtime cache, which does not support compacting.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ClearCache">
            <summary>
            Clears the entire system cache.
            </summary>
            <see cref="M:CMS.Helpers.CacheHelper.CompactCache(System.Double)"/>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ClearCache(System.String,System.Boolean,System.Boolean)">
            <summary>
            Clears the cache content starting with given string. Clears also full page cache (including persistent) when called on website.
            </summary>
            <param name="startsWith">If null, removes all cache items, if set, remove only items starting with given string</param>
            <param name="caseSensitive">Case sensitivity indicator.</param>
            <param name="logTask">Log web farm task</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ClearCSSCache">
            <summary>
            Clear the CSS cache
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ClearFullPageCache(System.Boolean)">
            <summary>
            Clear the full page cache (output cache) of the pages.
            </summary>
            <param name="logTask">If true, web farm task is logged for this operation</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ClearFileNodeCache(System.String)">
            <summary>
            Clear the cache for the file document nodes.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.RemoveDependencyCallback(System.String)">
            <summary>
            Registers a cache callback for given list of cache dependencies
            </summary>
            <param name="key">Cache key to use</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.RegisterDependencyCallback``1(System.String,CMS.Helpers.CMSCacheDependency,``0,System.Action{``0,System.Object},System.Object,System.Boolean)">
            <summary>
            Registers a cache callback for given list of cache dependencies
            </summary>
            <param name="key">Cache key to use</param>
            <param name="cd">Cache dependency to which bind the handler</param>
            <param name="target">Target object for the callback</param>
            <param name="handler">Callback handler</param>
            <param name="parameter">Callback parameter</param>
            <param name="useManagedThread">If true, managed thread (CMSThread) is used for the callback</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.RegisterAutomaticCallback(System.String,System.DateTime,System.Action,System.Boolean)">
            <summary>
            Registers the automatic callback that is executed at the specific time
            </summary>
            <param name="key">Cache key to leverage</param>
            <param name="when">Time of execution</param>
            <param name="callback">Callback method</param>
            <param name="useManagedThread">If true, managed thread (CMSThread) is used for the callback</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKey(System.String)">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="key">Key to touch</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKey(System.String,System.Boolean,System.Boolean)">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="key">Key to touch</param>
            <param name="logTask">Log web farm task</param>
            <param name="ensureKey">If true, the keys must be present in the cache, if false, the non-existing key is not touched</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKey(System.String,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="key">Key to touch</param>
            <param name="logTask">Log web farm task</param>
            <param name="ensureKey">If true, the keys must be present in the cache, if false, the non-existing key is not touched</param>
            <param name="expiration">Expiration time</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKey(System.String,System.Boolean,System.Boolean,System.DateTime,System.Boolean)">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="key">Key to touch</param>
            <param name="logTask">Log web farm task</param>
            <param name="ensureKey">If true, the keys must be present in the cache, if false, the non-existing key is not touched</param>
            <param name="expiration">Expiration time</param>
            <param name="logOperation">Log the operation</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKeys(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="keys">Key array to touch</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKeys(System.String,System.Boolean,System.Boolean)">
            <summary>
            Touches the cache keys separated by new line to drop the dependencies.
            </summary>
            <param name="allKeys">Key list to touch</param>
            <param name="logTasks">Log web farm tasks</param>
            <param name="ensureKeys">If true, the keys must be present in the cache, if false, the non-existing key is not touched</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKeys(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="keys">Key array to touch</param>
            <param name="logTasks">Log web farm tasks</param>
            <param name="ensureKeys">If true, the keys must be present in the cache, if false, the non-existing key is not touched</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheDependencies(System.Object,System.String)">
            <summary>
            Processes the dependencies string. Returns default dependencies if the source is null or empty.
            If source is NO_CACHE_DEPENDENCY constant, then method also returns this constant.
            When source is specified and contains DEFAULT_CACHE_DEPENDENCIES constant, then this constant
            indicates that default dependencies should be appended to the source. The DEFAULT_CACHE_DEPENDENCIES also remains
            in the string so other processes can insert their default dependencies.
            </summary>
            <param name="dependencies">Source dependencies</param>
            <param name="defaultDependencies">Default dependencies</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetDependencyCacheKeys(System.String)">
            <summary>
            Parses the string and returns the array of the cache dependency keys.
            </summary>
            <param name="keys">Cache keys as a single string separated by new lines</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetFileCacheDependency(System.String)">
            <summary>
            Creates the cache dependency from the given file path.
            </summary>
            <param name="path">File path</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheDependency(System.String)">
            <summary>
            Creates the cache dependency from the given keys.
            </summary>
            <param name="keys">Cache keys</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheDependency(System.String[])">
            <summary>
            Creates the cache dependency from the given keys.
            </summary>
            <param name="keys">Cache keys</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheDependency(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Creates the cache dependency from the given keys.
            </summary>
            <param name="keys">Cache keys</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheDependency(System.Collections.Generic.List{System.String},System.Collections.Generic.ICollection{System.String})">
            <summary>
            Creates the cache dependency from the given keys.
            </summary>
            <param name="files">Files for the cache dependency</param>
            <param name="keys">Cache keys</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheDependency(System.String[],System.String[])">
            <summary>
            Creates the cache dependency from the given keys.
            </summary>
            <param name="files">Files for the cache dependency</param>
            <param name="keys">Cache keys</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.EnsureDummyKey(System.String)">
            <summary>
            Ensures the dummy key with the given name
            </summary>
            <param name="key">Key to ensure</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.EnsureKey(System.String,System.DateTime)">
            <summary>
            Ensures the specified cache key.
            </summary>
            <param name="key">Key to ensure</param>
            <param name="expiration">Expiration time</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ReportRemovedCallback(System.String,System.Object,CMS.Helpers.CMSCacheItemRemovedReason)">
            <summary>
            Callback to report removed items from the cache.
            </summary>
            <param name="key">Key</param>
            <param name="value">Value</param>
            <param name="removedReason">Reason for removal</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetSettingsCacheItems(System.String)">
            <summary>
            Gets collection of cache items defined in settings
            </summary>
            <param name="values">Items stored in system settings</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCombinedCacheItems(System.String,System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Gets combined cache items for setting and default items
            </summary>
            <param name="values">Items stored in system settings</param>
            <param name="items">Basic item collection defined in the code</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheItemsString(System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Gets the cache items string (item names separated by semicolon)
            </summary>
            <param name="items">Basic item collection defined in the code</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetCacheItemRows">
            <summary>
            Creates a list of all cache items to display in the Debug application.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.CreateCacheDependencyInternal(System.String[],System.String[])">
            <summary>
            Creates the cache dependency with specified parameters
            </summary>
            <param name="files">Dependency files</param>
            <param name="keys">Dependency cache keys</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetFullKeyInternal(System.String)">
            <summary>
            Gets the full cache key with the prefix
            </summary>
            <param name="key">Cache key</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.InsertInternal(CMS.Helpers.Caching.Abstractions.ICacheAccessor,System.String,System.Object,CMS.Helpers.CMSCacheDependency,System.DateTime,System.TimeSpan,CMS.Helpers.CMSCacheItemPriority,CMS.Helpers.CMSCacheItemRemovedCallback,System.Boolean)">
            <summary>
            Inserts the item into the cache.
            </summary>
            <param name="cacheAccessor">Cache into which the item is inserted.</param>
            <param name="key">Cache key</param>
            <param name="value">Value to cache</param>
            <param name="dependencies">Cache dependencies</param>
            <param name="absoluteExpiration">Absolute expiration time</param>
            <param name="slidingExpiration">Sliding expiration interval</param>
            <param name="priority">Cache priority</param>
            <param name="onRemoveCallback">Callback called on the removal of the item</param>
            <param name="useFullKey">If true, the full cache key is used</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.AddInternal(CMS.Helpers.Caching.Abstractions.ICacheAccessor,System.String,System.Object,CMS.Helpers.CMSCacheDependency,System.DateTime,System.TimeSpan,CMS.Helpers.CMSCacheItemPriority,CMS.Helpers.CMSCacheItemRemovedCallback,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Mirror to Cache.Add().
            </summary>
            <param name="cacheAccessor">Cache into which the item is inserted.</param>
            <param name="key">Cache key</param>
            <param name="value">Cache value</param>
            <param name="dependencies">Cache dependencies</param>
            <param name="absoluteExpiration">Cache absolute expiration</param>
            <param name="slidingExpiration">Cache sliding expiration</param>
            <param name="priority">Cache priority</param>
            <param name="onCacheRemoveCallback">Cache callback on remove</param>
            <param name="caseSensitive">Cache key is case sensitive</param>
            <param name="logOperation">Log the cache operation</param>
            <param name="useFullKey">If true, the add operation uses the full cache key which includes the context prefix</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKeyInternal(System.String,System.Boolean,System.Boolean,System.DateTime,System.Boolean)">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="key">Key to touch</param>
            <param name="logTask">Log web farm task</param>
            <param name="ensureKey">If true, the keys must be present in the cache, if false, the non-existing key is not touched</param>
            <param name="expiration">Expiration time</param>
            <param name="logOperation">Log the operation</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.TouchKeysInternal(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="keys">Key array to touch</param>
            <param name="logTasks">Log web farm tasks</param>
            <param name="ensureKeys">If true, the keys must be present in the cache, if false, the non-existing key is not touched</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetInternal(System.String,System.Boolean)">
            <summary>
            Gets the item from the cache.
            </summary>
            <param name="key">Cache key</param>
            <param name="useFullKey">If true, the full cache key is used</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.RemoveInternal(System.String,System.Boolean)">
            <summary>
            Removes the item from the cache.
            </summary>
            <param name="key">Cache key</param>
            <param name="useFullKey">If true, the full cache key is used</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.GetEnumeratorInternal">
            <summary>
            Gets the enumerator for the cache items.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelper.ClearFullPageCacheInternal(System.Boolean)">
            <summary>
            Clear the full page cache (output cache) of the pages.
            </summary>
            <param name="logTask">If true, web farm task is logged for this operation</param>
        </member>
        <member name="T:CMS.Helpers.CacheItemRemovedEventArgs">
            <summary>
            Cache item removed event arguments
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
            <exclude />
        </member>
        <member name="P:CMS.Helpers.CacheItemRemovedEventArgs.Key">
            <summary>
            Cache key.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheItemRemovedEventArgs.Value">
            <summary>
            Cached object.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheItemRemovedEventArgs.Reason">
            <summary>
            Specifies the reason an item was removed from the cache.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheItemRemovedEventArgs.#ctor(System.String,System.Object,CMS.Helpers.CMSCacheItemRemovedReason)">
            <summary>
            Creates new instance of <see cref="T:CMS.Helpers.CacheItemRemovedEventArgs"/>.
            </summary>
            <param name="key">Cache key.</param>
            <param name="value">Cached object.</param>
            <param name="reason">Specifies the reason an item was removed from the cache.</param>
        </member>
        <member name="T:CMS.Helpers.CacheOperation">
            <summary>
            Cache operation names
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.TOUCH">
            <summary>
            Touch operation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.ADD">
            <summary>
            Add operation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.ADD_PERSISTENT">
            <summary>
            Add persistent operation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.GET">
            <summary>
            Get operation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.GET_PERSISTENT">
            <summary>
            Get persistent operation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.REMOVE">
            <summary>
            Remove operation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.REMOVE_PERSISTENT">
            <summary>
            Remove persistent operation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheOperation.DEPENDENCY_CALLBACK">
            <summary>
            Dependency callback
            </summary>
        </member>
        <member name="T:CMS.Helpers.CacheSettings">
            <summary>
            Cache settings container.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.BoolCondition">
            <summary>
            Cache condition.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.CacheMinutes">
            <summary>
            Cache minutes.
            </summary>
            <remarks>Value is used as absolute or sliding expiration time based on <see cref="P:CMS.Helpers.CacheSettings.UseSlidingExpiration"/> value.</remarks>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.UseSlidingExpiration">
            <summary>
            Indicates whether sliding expiration should be used. If enabled, objects are removed from the cache only if they are not accessed for the number of minutes specified by <see cref="P:CMS.Helpers.CacheSettings.CacheMinutes"/>.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.CacheDependency">
            <summary>
            Cache dependency to use for the cache item. When GetCacheDependency is set and this property is not set explicitly, the value is retrieved by calling the delegate in GetCacheDependency property.
            Use setter of this property only in the data loading code of the cached code block to avoid unnecessary initialization of the dependencies.
            Use delegate property GetCacheDependency to provide cache dependencies in a more efficient way only when the system really needs them.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.CacheItemName">
            <summary>
            Cache item name used for the caching.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.Cached">
            <summary>
            If true, the data is used from the cache if available / cached.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.CustomCacheItemName">
            <summary>
            Custom cache item name (if set, used instead of the parts).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.CacheItemNameParts">
            <summary>
            Cache item name parts (form the cache item name if the custom item name is not available).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching">
            <summary>
            If true, progressive caching is enabled, meaning that two threads accessing the same code share the result of an internal operation.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.GetCacheDependency">
            <summary>
            Function to dynamically get the cache dependency.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSettings.CacheItemPriority">
            <summary>
            Cache priority.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheSettings.#ctor(System.Double,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.CacheSettings"/> with absolute expiration.
            </summary>
            <param name="cacheMinutes">Cache minutes.</param>
            <param name="cacheItemNameParts">Cache item name parts (form the cache item name if the custom item name is not available).</param>
        </member>
        <member name="M:CMS.Helpers.CacheSettings.#ctor(System.Double,System.Boolean,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.CacheSettings"/>.
            </summary>
            <param name="cacheMinutes">Cache minutes.</param>
            <param name="useSlidingExpiration">Indicates whether sliding expiration should be used. If enabled, objects are removed from the cache only if they are not accessed for the number of minutes specified by <paramref name="cacheMinutes"/>.</param>
            <param name="cacheItemNameParts">Cache item name parts (form the cache item name if the custom item name is not available).</param>
        </member>
        <member name="M:CMS.Helpers.CacheSettings.GetCacheItemName">
            <summary>
            Gets the cache item name
            </summary>
        </member>
        <member name="T:CMS.Helpers.CacheSynchronization">
            <summary>
            Provides support for cache web farm synchronization
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheSynchronization.SynchronizeCache">
            <summary>
            Gets or sets value that indicates whether cache synchronization is enabled.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheSynchronization.LogTouchKeysTask(System.String[])">
            <summary>
            Logs the web farm synchronization task for the touch key operation
            </summary>
            <param name="keys">Keys to touch</param>
        </member>
        <member name="M:CMS.Helpers.CacheSynchronization.LogTouchKeysTask(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Logs the web farm synchronization task for the touch key operation
            </summary>
            <param name="keys">Keys to touch</param>
        </member>
        <member name="M:CMS.Helpers.CacheSynchronization.LogClearCacheTask(System.String,System.Boolean)">
            <summary>
            Logs the web farm task for clear cache operation
            </summary>
            <param name="startsWith">Starts with parameter for the clear operation</param>
            <param name="caseSensitive">Case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.CacheSynchronization.LogRemoveTask(System.String,System.Boolean)">
            <summary>
            Logs the web farm synchronization task for remove operation
            </summary>
            <param name="originalKey">Original key</param>
            <param name="caseSensitive">Case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.CacheSynchronization.LogClearFullPageCacheTask">
            <summary>
            Logs the web farm task for clear full page cache operation
            </summary>
        </member>
        <member name="T:CMS.Helpers.ClearFullpageCacheEventArgs">
            <summary>
            <see cref="F:CMS.Helpers.CacheEvents.ClearFullPageCache"/> event arguments.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
            <exclude />
        </member>
        <member name="P:CMS.Helpers.ClearFullpageCacheEventArgs.LogTask">
            <summary>
            Indicates whether web farm tasks should be logged.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ClearFullpageCacheEventArgs.#ctor(System.Boolean)">
            <summary>
            Creates new instance of <see cref="T:CMS.Helpers.ClearFullpageCacheEventArgs"/>.
            </summary>
            <param name="logTask">Indicates whether web farm tasks should be logged.</param>
        </member>
        <member name="T:CMS.Helpers.CacheItemContainer">
            <summary>
            Container for the cache item.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:CMS.Helpers.CacheItemContainer.Created">
            <summary>
            Time when the item was created
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheItemContainer.Data">
            <summary>
            Data item.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheItemContainer.Dependencies">
            <summary>
            Cache dependencies.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheItemContainer.AbsoluteExpiration">
            <summary>
            Cache absolute expiration.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheItemContainer.SlidingExpiration">
            <summary>
            Cache sliding expiration.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheItemContainer.Priority">
            <summary>
            Cache priority.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheItemContainer.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CMS.Helpers.CacheItemContainer.#ctor(System.Object,CMS.Helpers.CMSCacheDependency,System.DateTime,System.TimeSpan,CMS.Helpers.CMSCacheItemPriority)">
            <summary>
            Constructor.
            </summary>
            <param name="value">Cache value</param>
            <param name="dependencies">Cache dependencies</param>
            <param name="absoluteExpiration">Cache absolute expiration</param>
            <param name="slidingExpiration">Cache sliding expiration</param>
            <param name="priority">Cache priority</param>
        </member>
        <member name="T:CMS.Helpers.Internal.CacheItemContractResolver">
            <summary>
            Custom <see cref="T:Newtonsoft.Json.Serialization.IContractResolver"/> to exclude specific properties when (de)serializing.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="F:CMS.Helpers.Internal.CacheItemContractResolver.IncludedDeclaringTypes">
            <summary>
            List of property types which are included in the contract.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.CacheItemContractResolver.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.CacheItemContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            Creates a <see cref="T:Newtonsoft.Json.Serialization.JsonProperty" /> for the given <see cref="T:System.Reflection.MemberInfo" />.
            Includes only properties of declaring type defined in the <see cref="F:CMS.Helpers.Internal.CacheItemContractResolver.IncludedDeclaringTypes"/> field.
            </summary>
            <param name="member">The member to create a <see cref="T:Newtonsoft.Json.Serialization.JsonProperty" /> for.</param>
            <param name="memberSerialization">The member's parent <see cref="T:Newtonsoft.Json.MemberSerialization" />.</param>
            <returns>A created <see cref="T:Newtonsoft.Json.Serialization.JsonProperty" /> for the given <see cref="T:System.Reflection.MemberInfo" />.</returns>
        </member>
        <member name="T:CMS.Helpers.Internal.CacheItemRowContainer">
            <summary>
            Helper class to hold cache item properties.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:CMS.Helpers.Internal.CacheItemRowContainer.Key">
            <summary>
            Cache item key.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Internal.CacheItemRowContainer.Value">
            <summary>
            Cache item data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Internal.CacheItemRowContainer.Container">
            <summary>
            Cache item container.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.CacheItemRowContainer.#ctor(System.String,System.Object,CMS.Helpers.CacheItemContainer)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:CMS.Helpers.Internal.CacheItemSerializationBinder">
            <summary>
            The serialization binder used when resolving and loading <see cref="T:CMS.Helpers.CacheItemContainer"/> objects.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.Internal.CacheItemSerializationBinder.BindToType(System.String,System.String)">
            <summary>
            When implemented, controls the binding of a serialized object to a type.
            </summary>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type" /> name of the serialized object</param>
            <returns>The type of the object the formatter creates a new instance of.</returns>
        </member>
        <member name="T:CMS.Helpers.Internal.UnknownTypeDictionary`2">
            <summary>
            Represents a collection of keys and values for unknown types.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="T:CMS.Helpers.Internal.DefaultCrawlerChecker">
            <summary>
            Provides method for checking whether the current visitor is crawler.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.DefaultCrawlerChecker.IsCrawler">
            <summary>
            Checks whether the current request comes from the crawler.
            </summary>
            <returns><c>true</c>, if current request comes from the crawler; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:CMS.Helpers.Internal.ICrawlerChecker">
            <summary>
            Provides method for checking whether the current visitor is crawler.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.ICrawlerChecker.IsCrawler">
            <summary>
            Checks whether the current request comes from the crawler.
            </summary>
            <returns>True, if current request comes from the crawler; otherwise, false</returns>
        </member>
        <member name="T:CMS.Helpers.Internal.RedirectException">
            <summary>
            Special exception class to break normal execution flow and record HTTP redirect
            requirements to be later caught by corresponding middleware.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Internal.RedirectException.StatusCode">
            <summary>
            HTTP Status Code.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Internal.RedirectException.Location">
            <summary>
            <c>Location</c> header value.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Internal.RedirectException.UseNoCache">
            <summary>
            When true, the <c>Cache-Control</c> header will be set to <c>no-cache</c>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.RedirectException.#ctor(System.Net.HttpStatusCode,System.Uri,System.Boolean,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.Internal.RedirectException"/> class with parameters specified.
            </summary>
            <param name="statusCode">HTTP Status Code.</param>
            <param name="location">Location header value. Should be of <see cref="F:System.UriKind.RelativeOrAbsolute"/>.</param>
            <param name="useNoCache">Sets <c>Cache-Control</c> header value to <c>no-cache</c>.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:CMS.Helpers.Internal.RedirectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.Internal.RedirectException"/> class with serialized data.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
        </member>
        <member name="M:CMS.Helpers.Internal.RedirectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
        </member>
        <member name="T:CMS.Helpers.Internal.RequestException">
            <summary>
            Special exception base class to break normal execution flow to be later caught by corresponding middleware.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.RequestException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.Internal.RequestException"/> class with a specified error
            message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner
            exception is specified.
            </param>
        </member>
        <member name="M:CMS.Helpers.Internal.RequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.Internal.RequestException"/> class with serialized data.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
        </member>
        <member name="T:CMS.Helpers.Internal.CryptoHelper">
            <summary>
            Encapsulates cryptography helper methods.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Internal.CryptoHelper.GetHashAlgorithm">
            <summary>
            Gets default hash algorithm.
            </summary>
            <returns>Instance of default hash algorithm.</returns>
            <remarks>
            A new instance of hash algorithm is created upon each method call (i.e. you should dispose the instance
            when no longer needed).
            </remarks>
        </member>
        <member name="M:CMS.Helpers.Internal.CryptoHelper.BytesToHexa(System.Byte[],System.Nullable{System.Int32})">
            <summary>
            Converts byte array to string of hexadecimal digits (each byte is represented by 2 digits).
            The length of the string is truncated to <paramref name="truncateToLength"/>, if specified.
            No boundary check is performed.
            </summary>
            <param name="data">Byte array to be converted to hexadecimal digits string.</param>
            <param name="truncateToLength">If specified, the resulting hexadecimal digits string is truncated to given length. Full length is taken by default.</param>
            <returns>Bytes of <paramref name="data"/> array converted to hexadecimal string, optionally truncated to specified length.</returns>
            <seealso cref="M:CMS.Helpers.Internal.CryptoHelper.HexaToBytes(System.String)"/>
        </member>
        <member name="M:CMS.Helpers.Internal.CryptoHelper.HexaToBytes(System.String)">
            <summary>
            Converts string of hexadecimal digits (each byte is represented by 2 digits) to a byte array.
            </summary>
            <param name="hexaString">Hexadecimal string to be converted to a byte array.</param>
            <returns>Byte array converted from <paramref name="hexaString"/>.</returns>
            <seealso cref="M:CMS.Helpers.Internal.CryptoHelper.HexaToBytes(System.String)"/>
        </member>
        <member name="T:CMS.Helpers.ICacheItemContainer">
            <summary>
            Defines contract for cache item container.
            </summary>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
            <exclude />
        </member>
        <member name="P:CMS.Helpers.ICacheItemContainer.Data">
            <summary>
            Data item.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CacheDependencyCallback`1">
            <summary>
            Wrapper class for a weakly referenced callback for the cache helper
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheDependencyCallback`1.mTarget">
            <summary>
            Target object as a weak reference
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheDependencyCallback`1.Key">
            <summary>
            Cache callback key
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheDependencyCallback`1.Handler">
            <summary>
            Event handler executed when the cache dependency is dropped
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheDependencyCallback`1.Parameter">
            <summary>
            Parameter passed to the handler
            </summary>
        </member>
        <member name="P:CMS.Helpers.CacheDependencyCallback`1.Target">
            <summary>
            Target object
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyCallback`1.#ctor(System.String,`0,System.Action{`0,System.Object},System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="key">Cache callback key</param>
            <param name="target">Target object to pass as a parameter to the handler</param>
            <param name="handler">Handler to execute</param>
            <param name="parameter">Parameter passed to the handler</param>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyCallback`1.PerformCallback">
            <summary>
            Executes the callback to the target object
            </summary>
        </member>
        <member name="T:CMS.Helpers.CacheDependencyList">
            <summary>
            List of the cache dependencies.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheDependencyList.mLists">
            <summary>
            Dependency lists.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CacheDependencyList.mDependencies">
            <summary>
            Dependencies within current list.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyList.ClearLists">
            <summary>
            Clears the cached lists of the page cache dependencies.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyList.Clear">
            <summary>
            Clears the dependency list.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyList.Add(System.String[])">
            <summary>
            Adds the dependency keys to the collection.
            </summary>
            <param name="keys">Keys to add</param>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyList.Add(System.String)">
            <summary>
            Adds the dependency key to the collection.
            </summary>
            <param name="key">Key to add</param>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyList.Remove(System.String)">
            <summary>
            Removes the dependency key from the collection.
            </summary>
            <param name="key">Key to add</param>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyList.GetCacheDependency">
            <summary>
            Gets the cache dependency based on the list.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheDependencyList.EnsureList(System.String)">
            <summary>
            Ensures list of cache dependencies with specific key.
            </summary>
            <param name="listKey">List key</param>
        </member>
        <member name="T:CMS.Helpers.CMSCacheDependency">
            <summary>
            Establishes a dependency relationship between an item stored in ASP.NET application's cache
            and a file, cache key, an array of either or another dependency object. This class monitors
            the dependency relationship so that when any of them changes, the cache item will be 
            automatically removed.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CMSCacheDependency.Start">
            <summary>
            The date and time against which to check the last modified date of the objects passed in the filenames and cache keys arrays
            </summary>
        </member>
        <member name="P:CMS.Helpers.CMSCacheDependency.IncludeDefaultDependencies">
            <summary>
            Indicates whether the dependency should include also default dependencies.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CMSCacheDependency.CacheKeys">
            <summary>
            Gets the cache keys of the dependency.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CMSCacheDependency.FileNames">
            <summary>
            Collection of file full paths used for cache dependency.
            </summary>
            <remarks>
            Paths pointing to the external storage are ignored and not used for cache dependency.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.CMSCacheDependency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.CMSCacheDependency"/> class that monitors a file or directory for change.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CMSCacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.CMSCacheDependency"/> class that monitors a file or directory for change.
            </summary>
            <param name="filenames">Sets <see cref="P:CMS.Helpers.CMSCacheDependency.FileNames"/> collection.</param>
            <param name="cachekeys">Sets <see cref="P:CMS.Helpers.CMSCacheDependency.CacheKeys"/> collection.</param>
            <param name="start">Sets <see cref="P:CMS.Helpers.CMSCacheDependency.Start"/> date time against which to check the last modified date of the objects passed in the file names and cache key arrays.</param>
        </member>
        <member name="M:CMS.Helpers.CMSCacheDependency.EnsureDummyKeys">
            <summary>
            Ensures the dummy keys for this dependency
            </summary>
        </member>
        <member name="T:CMS.Helpers.ICacheDependencyCallback">
            <summary>
            Interface which allows the object to execute a PerformCallback method when the object is removed from the cache if the cache dependency has changed
            </summary>
        </member>
        <member name="M:CMS.Helpers.ICacheDependencyCallback.PerformCallback">
            <summary>
            Executes the callback to the target object
            </summary>
        </member>
        <member name="T:CMS.Helpers.IProgressiveCache">
            <summary>
            Provides optimization of parallel data loads. The data are loaded once, stored into cache and the result is shared.
            </summary>
            <remarks>
            Use dependency on this interface rather than depending on static members of the <see cref="T:CMS.Helpers.CacheHelper"/> class (e.g. <see cref="M:CMS.Helpers.CacheHelper.Cache``1(System.Func{CMS.Helpers.CacheSettings,``0},CMS.Helpers.CacheSettings)"/>,
            <see cref="M:CMS.Helpers.CacheHelper.CacheAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings,System.Threading.CancellationToken)"/> or <see cref="M:CMS.Helpers.CacheHelper.CacheAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings)"/>).
            </remarks>
        </member>
        <member name="M:CMS.Helpers.IProgressiveCache.Load``1(System.Func{CMS.Helpers.CacheSettings,``0},CMS.Helpers.CacheSettings)">
            <summary>
            Loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFunc"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadDataFunc">Function accepting cache settings and returning the data.</param>
            <param name="settings">Settings configuring the cache.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadDataFunc"/> or <paramref name="settings"/> is null.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadDataFunc"/> is always executed.
            </para>
            <para>
            The internals of the method are based on <see cref="T:CMS.Helpers.CachedSection`1"/>.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.IProgressiveCache.LoadAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadDataFuncAsync">Function accepting cache settings and returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadDataFuncAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadDataFuncAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.IProgressiveCache.LoadAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadDataFuncAsync">Function accepting cache settings and a cancellation token and returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadDataFuncAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadDataFuncAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="T:CMS.Helpers.ProgressiveCache">
            <summary>
            Provides optimization of parallel data loads. The data are loaded once, stored into cache and the result is shared.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ProgressiveCache.#ctor(CMS.Helpers.IProgressiveLoader,CMS.Helpers.ICacheHelperAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.ProgressiveCache"/> class.
            </summary>
            <param name="progressiveLoader">Progressive loader for loading the data.</param>
            <param name="cacheHelperAccessor"><see cref="T:CMS.Helpers.CacheHelper"/> accessor to store loaded data into.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="progressiveLoader"/> or <paramref name="cacheHelperAccessor"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.ProgressiveCache.Load``1(System.Func{CMS.Helpers.CacheSettings,``0},CMS.Helpers.CacheSettings)">
            <summary>
            Loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFunc"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadDataFunc">Function accepting cache settings and returning the data.</param>
            <param name="settings">Settings configuring the cache.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadDataFunc"/> or <paramref name="settings"/> is null.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadDataFunc"/> is always executed.
            </para>
            <para>
            The internals of the method are based on <see cref="T:CMS.Helpers.CachedSection`1"/>.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ProgressiveCache.LoadAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadDataFuncAsync">Function accepting cache settings and returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadDataFuncAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadDataFuncAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ProgressiveCache.LoadAsync``1(System.Func{CMS.Helpers.CacheSettings,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},CMS.Helpers.CacheSettings,System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load, stores the result into cache and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well. No data are cached in such a case.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="loadDataFuncAsync">Function accepting cache settings and a cancellation token and returning the asynchronous data loading task.</param>
            <param name="settings">Settings configuring the cache.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="loadDataFuncAsync"/> or <paramref name="settings"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <see cref="P:CMS.Helpers.CacheSettings.CacheItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            Based on the <paramref name="settings"/> the data is stored into cache. If <see cref="P:CMS.Helpers.CacheSettings.Cached"/> is set to false, no caching is performed and fresh data are retrieved.
            </para>
            <para>
            If both progressive load is allowed (both <see cref="P:CMS.Helpers.CacheSettings.AllowProgressiveCaching"/> and <see cref="P:CMS.Helpers.CacheHelper.ProgressiveCaching"/> are set to true), the fresh data retrieval is subject to progressive load
            (i.e. only one threads executes the load and the result is distributed to other waiting threads).
            Otherwise, the <paramref name="loadDataFuncAsync"/> is always executed.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="T:CMS.Helpers.ProtectedCache">
            <summary>
            Represents cache protected against value tampering.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ProtectedCacheHelper">
            <summary>
            Manages instances of <see cref="T:CMS.Helpers.ProtectedCache"/>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ProtectedCacheHelper.Cache``1(System.Func{CMS.Helpers.CacheSettings,``0},System.Double,System.String)">
            <summary>
            Gets value from cache or loads it using load function of <see cref="T:CMS.Helpers.ProtectedCache`1"/>.
            </summary>
            <param name="loadFunc">Function, which loads value to be cached.</param>
            <param name="cacheKey">Cache key.</param>
            <param name="expirationMinutes">Cache expiration time in minutes.</param>
            <typeparam name="T">Type of the cached value.</typeparam>
        </member>
        <member name="T:CMS.Helpers.ProtectedCache`1">
            <summary>
            Represents cache protected against value tampering.
            The cache always has <see cref="F:CMS.Helpers.CMSCacheItemPriority.NotRemovable"/>.
            </summary>
            <typeparam name="T">Type of the cached value.</typeparam>
        </member>
        <member name="M:CMS.Helpers.ProtectedCache`1.#ctor(System.String,System.Double)">
            <summary>
            Creates instance of <see cref="T:CMS.Helpers.ProtectedCache`1"/> for value of type T.
            </summary>
            <param name="cacheKey">Cache key.</param>
            <param name="expirationMinutes">Cache expiration time in minutes.</param>
        </member>
        <member name="M:CMS.Helpers.ProtectedCache`1.GetValue(System.Func{CMS.Helpers.CacheSettings,`0})">
            <summary>
            Gets value from cache or loads it, if the cache is invalid.
            </summary>
            <param name="loadFunc">Function, which loads value to be cached.</param>
        </member>
        <member name="M:CMS.Helpers.ProtectedCache`1.SetPrivateCache(System.Func{CMS.Helpers.CacheSettings,`0},CMS.Helpers.CacheSettings)">
            <summary>
            Sets value into private memory cache.
            </summary>
            <param name="loadFunc">Function, which loads value to be cached.</param>
            <param name="cacheSettings">Cache settings.</param>
            <remarks>Return value is intended to be used, just to satisfy standard cache method delegate.</remarks>
        </member>
        <member name="T:CMS.Helpers.CacheHelperAccessor">
            <summary>
            Provides access to static members of <see cref="T:CMS.Helpers.CacheHelper"/> for <see cref="T:CMS.Helpers.ProgressiveCache"/>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheHelperAccessor.#ctor(CMS.Core.Internal.IDateTimeNowService)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.CacheHelperAccessor"/> class.
            </summary>
            <param name="dateTimeNowService">Provider of current date and time.</param>
        </member>
        <member name="M:CMS.Helpers.CacheHelperAccessor.TryGetItem``1(System.String,``0@)">
            <summary>
            Returns true if the cache contains an item with the specified key.
            </summary>
            <typeparam name="TData">Type of cached data.</typeparam>
            <param name="key">Cache key.</param>
            <param name="value">When the method returns true, contains the data retrieved from the cache. Otherwise contains the default value of the data type.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="key"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.CacheHelperAccessor.Add``1(CMS.Helpers.CacheSettings,``0)">
            <summary>
            Adds a new item to the cache.
            </summary>
            <typeparam name="TData">Type of cached data.</typeparam>
            <param name="settings">Settings configuring the cache.</param>
            <param name="value">Value to be cached.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="settings"/> is null.</exception>
        </member>
        <member name="T:CMS.Helpers.ICacheHelperAccessor">
            <summary>
            Provides access to static members of <see cref="T:CMS.Helpers.CacheHelper"/> for <see cref="T:CMS.Helpers.ProgressiveCache"/>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ICacheHelperAccessor.TryGetItem``1(System.String,``0@)">
            <summary>
            Returns true if the cache contains an item with the specified key.
            </summary>
            <typeparam name="TData">Type of cached data.</typeparam>
            <param name="key">Cache key.</param>
            <param name="value">When the method returns true, contains the data retrieved from the cache. Otherwise contains the default value of the data type.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="key"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.ICacheHelperAccessor.Add``1(CMS.Helpers.CacheSettings,``0)">
            <summary>
            Adds a new item to the cache.
            </summary>
            <typeparam name="TData">Type of cached data.</typeparam>
            <param name="settings">Settings configuring the cache.</param>
            <param name="value">Value to be cached.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="settings"/> is null.</exception>
        </member>
        <member name="T:CMS.Helpers.IProgressiveLoader">
            <summary>
            Provides optimization of parallel data loads. The data are loaded once and the result is shared.
            </summary>
        </member>
        <member name="M:CMS.Helpers.IProgressiveLoader.LoadAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="progressiveItemName">Name of the progressive item.</param>
            <param name="loadDataFuncAsync">Function returning the asynchronous data loading task.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="progressiveItemName"/> or <paramref name="loadDataFuncAsync"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <paramref name="progressiveItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            The progressive loader is not a persistent cache. Once the data is loaded and the result is distributed to all waiting threads, the data is freed from the memory.
            Use the method to avoid parallel load of the same data while still loading the latest version of the data for consecutive loads.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying progressive load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.IProgressiveLoader.LoadAsync``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="progressiveItemName">Name of the progressive item.</param>
            <param name="loadDataFuncAsync">Function accepting a cancellation token and returning the asynchronous data loading task.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="progressiveItemName"/> or <paramref name="loadDataFuncAsync"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <paramref name="progressiveItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            The progressive loader is not a persistent cache. Once the data is loaded and the result is distributed to all waiting threads, the data is freed from the memory.
            Use the method to avoid parallel load of the same data while still loading the latest version of the data for consecutive loads.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying progressive load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="T:CMS.Helpers.IProgressiveLoaderStore">
            <summary>
            Represents a store for data being progressively loaded.
            </summary>
            <seealso cref="T:CMS.Helpers.IProgressiveLoader"/>
        </member>
        <member name="M:CMS.Helpers.IProgressiveLoaderStore.GetOrAdd(System.String,CMS.Helpers.IProgressiveLoadItem)">
            <summary>
            Adds an item to the store if its key does not already exist. Returns the new item, or the existing item if its key exists.
            </summary>
            <param name="key">The key of the item to add.</param>
            <param name="item">The item to be added.</param>
            <returns>Returns the new item, or the existing item if <paramref name="key"/> is already present in the store.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="key"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.IProgressiveLoaderStore.Remove(System.String)">
            <summary>
            Removes an item from the store based on its key.
            </summary>
            <param name="key">The key of the item to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="key"/> is null.</exception>
        </member>
        <member name="T:CMS.Helpers.IProgressiveLoadItem">
            <summary>
            Represents data being progressively loaded using <see cref="T:CMS.Helpers.ProgressiveLoader"/>.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ProgressiveLoader">
            <summary>
            Provides optimization of parallel data loads. The data are loaded once and the result is shared.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ProgressiveLoader.#ctor(CMS.Helpers.IProgressiveLoaderStore)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.ProgressiveLoader"/> class.
            </summary>
            <param name="progressiveLoaderStore">Store for items being progressively loaded.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="progressiveLoaderStore"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.ProgressiveLoader.LoadAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="progressiveItemName">Name of the progressive item.</param>
            <param name="loadDataFuncAsync">Function returning the asynchronous data loading task.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="progressiveItemName"/> or <paramref name="loadDataFuncAsync"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <paramref name="progressiveItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            The progressive loader is not a persistent cache. Once the data is loaded and the result is distributed to all waiting threads, the data is freed from the memory.
            Use the method to avoid parallel load of the same data while still loading the latest version of the data for consecutive loads.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying progressive load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ProgressiveLoader.LoadAsync``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously loads data. If multiple threads are loading the same data, only one thread executes the load and the result is distributed to other waiting threads.
            If an exception is thrown during <paramref name="loadDataFuncAsync"/> execution, the exception is distributed as well.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
            <param name="progressiveItemName">Name of the progressive item.</param>
            <param name="loadDataFuncAsync">Function accepting a cancellation token and returning the asynchronous data loading task.</param>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the loaded data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="progressiveItemName"/> or <paramref name="loadDataFuncAsync"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when multiple threads are loading the same item (identified by <paramref name="progressiveItemName"/>) with incompatible <typeparamref name="TData"/>.</exception>
            <remarks>
            <para>
            The progressive loader is not a persistent cache. Once the data is loaded and the result is distributed to all waiting threads, the data is freed from the memory.
            Use the method to avoid parallel load of the same data while still loading the latest version of the data for consecutive loads.
            </para>
            <para>
            No assumptions must be made on which thread executes the <paramref name="loadDataFuncAsync"/>. The thread creating the underlying progressive load item
            is not necessarily the one executing the item. Any of the waiting threads can execute the item.
            </para>
            </remarks>
        </member>
        <member name="T:CMS.Helpers.ProgressiveLoaderStore">
            <summary>
            Represents a store for data being progressively loaded.
            </summary>
            <seealso cref="T:CMS.Helpers.ProgressiveLoader"/>
        </member>
        <member name="M:CMS.Helpers.ProgressiveLoaderStore.GetOrAdd(System.String,CMS.Helpers.IProgressiveLoadItem)">
            <summary>
            Adds an item to the store if its key does not already exist. Returns the new item, or the existing item if its key exists.
            </summary>
            <param name="key">The key of the item to add.</param>
            <param name="item">The item to be added.</param>
            <returns>Returns the new item, or the existing item if <paramref name="key"/> is already present in the store.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="key"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.ProgressiveLoaderStore.Remove(System.String)">
            <summary>
            Removes an item from the store based on its key.
            </summary>
            <param name="key">The key of the item to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="key"/> is null.</exception>
        </member>
        <member name="T:CMS.Helpers.ProgressiveLoadItem`1">
            <summary>
            Represents data being progressively loaded using <see cref="T:CMS.Helpers.ProgressiveLoader"/>.
            </summary>
            <typeparam name="TData">Type of data to be loaded.</typeparam>
        </member>
        <member name="M:CMS.Helpers.ProgressiveLoadItem`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}},System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.ProgressiveLoadItem`1"/> class.
            </summary>
            <param name="loadDataFuncAsync">Function accepting a cancellation token and returning the asynchronous data loading task.</param>
            <param name="finishCallbackAction">Action to be executed upon the <see cref="F:CMS.Helpers.ProgressiveLoadItem`1.loadDataFuncAsync"/> finishes.</param>
        </member>
        <member name="M:CMS.Helpers.ProgressiveLoadItem`1.GetResultAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the progressive load item result as an awaitable task. Only the first caller executes the load task and shares the result with other waiting threads.
            </summary>
            <param name="cancellationToken">The cancellation instruction.</param>
            <returns>Returns a task returning the result of the load operation.</returns>
        </member>
        <member name="T:CMS.Helpers.ComparisonStatus">
            <summary>
            Type of TextPart match against other string enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComparisonStatus.Unknown">
            <summary>
            Unknown status, TextPart was processed yet.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComparisonStatus.NoMatch">
            <summary>
            No match was found.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComparisonStatus.Match">
            <summary>
            Match found successfuly.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ComparisonTextPartSortBy">
            <summary>
            Type of TextPart sorting enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComparisonTextPartSortBy.TextLength">
            <summary>
            Default setting, sorting using text length property.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComparisonTextPartSortBy.SrcIndex">
            <summary>
            Sorting using index to source string.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComparisonTextPartSortBy.DestIndex">
            <summary>
            Sorting using index to destination string.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComparisonTextPartSortBy.BothIndexes">
            <summary>
            Sorting using lower index value.
            </summary>
        </member>
        <member name="T:CMS.Helpers.DiffStatus">
            <summary>
            Type of TextPart difference against other string enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiffStatus.Unknown">
            <summary>
            TextPart wasn't processed yet.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiffStatus.NotIncluded">
            <summary>
            TextPart wasn't included in particular string.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiffStatus.RemovedFromSource">
            <summary>
            TextPart is missing in destination string.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiffStatus.Matched">
            <summary>
            TextPart was found both in source and destination string.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiffStatus.AddedToDestination">
            <summary>
            TextPart is missing in source string.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiffStatus.HTMLPart">
            <summary>
            TextPart containing HTML markup.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiffStatus.HTMLNotIncluded">
            <summary>
            HTML part which wasn't included in particular string.
            </summary>
        </member>
        <member name="T:CMS.Helpers.TextComparisonModeEnum">
            <summary>
            Type of comparison in which should be compared text treated.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextComparisonModeEnum.HTML">
            <summary>
            Default mode in which HTML is treated as not compared container.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextComparisonModeEnum.PlainText">
            <summary>
            Whole text is compared including possible HTML.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextComparisonModeEnum.PlainTextWithoutFormating">
            <summary>
            Whole text is compared and no balacing is done.
            </summary>
        </member>
        <member name="T:CMS.Helpers.TextComparisonTypeEnum">
            <summary>
            Type of rendered diff text.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextComparisonTypeEnum.SourceText">
            <summary>
            Default setting, render source diff text.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextComparisonTypeEnum.DestinationText">
            <summary>
            Render destination diff text.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ObjectArrayComparer">
            <summary>
            Object array comarer.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ObjectArrayComparer.ComparableIndex">
            <summary>
            Gets or sets the comparison index in object array. Default is 1.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ObjectArrayComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two specified object arrays.
            </summary>
            <param name="x">First array to compare (object[])</param>
            <param name="y">Second array to compare  (object[])</param>
        </member>
        <member name="T:CMS.Helpers.ObjectArrayComparer`1">
            <summary>
            Object array comparer. Compares 2 lists just by string at index set in ComparableIndex property.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ObjectArrayComparer`1.ComparableIndex">
            <summary>
            Gets or sets the comparison index in object array. Default is 1.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ObjectArrayComparer`1.Compare(`0,`0)">
            <summary>
            Compares two specified object arrays.
            </summary>
            <param name="x">First list to compare</param>
            <param name="y">Second list to compare</param>
        </member>
        <member name="T:CMS.Helpers.ComparisonTextPart">
            <summary>
            Class suitable for comparing 2 TextData, contains index to both source and destination string.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ComparisonTextPart.DestIndex">
            <summary>
            Index to destination string.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ComparisonTextPart.SortBy">
            <summary>
            Determines using which property will be sorting done.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ComparisonTextPart.Status">
            <summary>
            Determines if string match was found.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ComparisonTextPart.#ctor(System.String,System.Int32,System.Int32,CMS.Helpers.ComparisonStatus)">
            <summary>
            TextPart class constructor.
            </summary>
            <param name="text">Text</param>
            <param name="srcIndex">Index in older version string</param>
            <param name="dstIndex">Index to newer version string</param>
            <param name="status">Result of the comparison</param>
        </member>
        <member name="M:CMS.Helpers.ComparisonTextPart.SubPart(System.Int32)">
            <summary>
            Creates new ComparisonTextPart from particular index as subpart of existing ComparisonTextPart.
            </summary>
            <param name="startIndex">Index from which should contained text start</param>
            <returns>New ComparisonTextPart create from already existing ComparisonTextPart</returns>
        </member>
        <member name="M:CMS.Helpers.ComparisonTextPart.SubPart(System.Int32,System.Int32)">
            <summary>
            Creates new ComparisonTextPart from particular index as subpart of existing ComparisonTextPart.
            </summary>
            <param name="startIndex">Index from which should contained text start</param>
            <param name="count">Length of new ComparisonTextPart</param>
            <returns>New ComparisonTextPart create from already existing ComparisonTextPart</returns>
        </member>
        <member name="M:CMS.Helpers.ComparisonTextPart.System#IComparable#CompareTo(System.Object)">
            <summary>
            Implementation of CompareTo method for sorting i ArrayList.
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Integer with result of comparison</returns>
        </member>
        <member name="T:CMS.Helpers.DiffTextPart">
            <summary>
            This class conatins reference to appropriate source string including its difference status.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiffTextPart.Status">
            <summary>
            Difference status.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DiffTextPart.#ctor(System.String,System.Int32,CMS.Helpers.DiffStatus)">
            <summary>
            Default contructor.
            </summary>
            <param name="text">Text of TextPart</param>
            <param name="srcIndex">Index to original source string</param>
            <param name="status">Diff status</param>
        </member>
        <member name="M:CMS.Helpers.DiffTextPart.SubPart(System.Int32)">
            <summary>
            Creates new DiffTextPart from particular index as subpart of existing DiffTextPart.
            </summary>
            <param name="startIndex">Index from which should contained text start</param>
            <returns>New DiffTextPart created from already existing DiffTextPart</returns>
        </member>
        <member name="M:CMS.Helpers.DiffTextPart.SubPart(System.Int32,System.Int32)">
            <summary>
            Creates new DiffTextPart from particular index as subpart of existing DiffTextPart.
            </summary>
            <param name="startIndex">Index from which should contained text start</param>
            <param name="count">Length of new DiffTextPart</param>
            <returns>New DiffTextPart created from already existing DiffTextPart</returns>
        </member>
        <member name="M:CMS.Helpers.DiffTextPart.System#IComparable#CompareTo(System.Object)">
            <summary>
            Implementation of CompareTo method for sorting i ArrayList.
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Integer with result of comparison</returns>
        </member>
        <member name="T:CMS.Helpers.TextData">
            <summary>
            Class for storing Text data for comparison.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextData.Text">
            <summary>
            Relevant string value.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextData.Length">
            <summary>
            Length of stored string value.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextData.Item(System.Int32)">
            <summary>
            Index operation specification.
            </summary>
            <param name="index">Index to character</param>
            <returns>Particular character on specified index</returns>
        </member>
        <member name="M:CMS.Helpers.TextData.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="str">Relevant string value</param>
        </member>
        <member name="T:CMS.Helpers.TextDataComparator">
            <summary>
            Divide TextData into pieces according to their resemblance.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextDataComparator.SourceLine">
            <summary>
            String containing text from previous version.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextDataComparator.DestLine">
            <summary>
            String containing text from newer version.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextDataComparator.LongestMatches">
            <summary>
            ArrayList with found longest possible string matches.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextDataComparator.#ctor(System.String,System.String)">
            <summary>
            Constructor using 2 strings.
            </summary> 
            <param name="src">Source string</param>
            <param name="dst">Destination string</param>
        </member>
        <member name="M:CMS.Helpers.TextDataComparator.DivideIntoParts">
            <summary>
            Analyze 2 strings and divide them into text parts.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextDataComparator.GetLongestMatches(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Find longest match in 2 strings, add it to LongestMatches arraylist and recursively call itself to text before found match and text after found match
            <param name="srcStart">Index to start of first substring</param>
            <param name="srcEnd">Index to end of first substring</param>
            <param name="destStart">Index to start of second substring</param>
            <param name="destEnd">Index to end of second substring</param>
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextDataComparator.CompareWithHTMLVersion">
            <summary>
            Compare HTML and clear text version.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextDataComparator.GetHTMLTagsList(System.String)">
            <summary>
            Gets list of HTML tags.
            </summary>
            <param name="text">Source text to inspect</param>
            <returns>List with ranges of HTML tags</returns>
        </member>
        <member name="T:CMS.Helpers.TextDiffList">
            <summary>
            Class for comparison 2 TextData, contains 2 lists of differences.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextDiffList.SrcText">
            <summary>
            Source text data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextDiffList.DestText">
            <summary>
            Destination text data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextDiffList.SrcDiffList">
            <summary>
            List for differences in source text data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextDiffList.DstDiffList">
            <summary>
            List for differences in destination text data.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextDiffList.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="src">Source text</param>
            <param name="dst">Destination text</param>
        </member>
        <member name="M:CMS.Helpers.TextDiffList.Analyze">
            <summary>
            Analyze 2 TextData and create appropriate difference lists.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextDiffList.SetNewDstList(System.Collections.Generic.List{CMS.Helpers.DiffTextPart})">
            <summary>
            Method to replace data of destination difference list.
            </summary>
            <param name="list">New list</param>
        </member>
        <member name="M:CMS.Helpers.TextDiffList.SetNewSrcList(System.Collections.Generic.List{CMS.Helpers.DiffTextPart})">
            <summary>
            Method to replace data of source difference list.
            </summary>
            <param name="list">New list</param>
        </member>
        <member name="M:CMS.Helpers.TextDiffList.AddMatch(CMS.Helpers.ComparisonTextPart)">
            <summary>
            Add DiffTextPart with match status to both difference lists.
            </summary>
            <param name="part">Part which should be add as match</param>
        </member>
        <member name="M:CMS.Helpers.TextDiffList.RemovedFromSource(CMS.Helpers.ComparisonTextPart)">
            <summary>
            Add TextPart as Removed from source -> means not included in newer version
            </summary>
            <param name="part">Text part to be added</param>
        </member>
        <member name="M:CMS.Helpers.TextDiffList.AddedToDestination(CMS.Helpers.ComparisonTextPart)">
            <summary>
            Add TextPart as Added to destination -> means not included in older version
            </summary>
            <param name="part">Comparison text part object</param>
        </member>
        <member name="T:CMS.Helpers.TextPart">
            <summary>
            General TextPart referencing to index of original Data as a start of TextPart.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextPart.SrcIndex">
            <summary>
            Readonly index to source string.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextPart.Text">
            <summary>
            Relevant string value.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextPart.Length">
            <summary>
            Length of stored string value.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextPart.#ctor(System.String,System.Int32)">
            <summary>
            TextPart class constructor.
            </summary>
            <param name="text">Particular text part</param>
            <param name="srcIndex">Index to previous version string</param>
        </member>
        <member name="M:CMS.Helpers.TextPart.SubPart(System.Int32,System.Int32)">
            <summary>
            Creates new TextPart from particular index as subpart of existing TextPart.
            </summary>
            <param name="startIndex">Index from which should contained text start</param>
            <param name="count">Length of new TextPart</param>
            <returns>New TextPart create from already existing TextPart</returns>
        </member>
        <member name="M:CMS.Helpers.TextPart.SubPart(System.Int32)">
            <summary>
            Creates new TextPart from particular index as subpart of existing TextPart.
            </summary>
            <param name="startIndex">Index from which should contained text start</param>
            <returns>New TextPart create from already existing TextPart</returns>
        </member>
        <member name="M:CMS.Helpers.TextPart.CompareTo(System.Object)">
            <summary>
            Implementation of CompareTo method for sorting i ArrayList.
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Integer with result of comparison</returns>
        </member>
        <member name="T:CMS.Helpers.UniGraphConfig.Connection">
            <summary>
            Configuration class for JSON serialization.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Connection.ID">
            <summary>
            ID of connection (not rendered to HTML).
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Connection.SourcePointID">
            <summary>
            ID of source point from which connection starts.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Connection.SourceNodeID">
            <summary>
            ID of HTML element representing node from which connection starts.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Connection.TargetNodeID">
            <summary>
            ID of HTML element representing node to which connection leads.
            </summary>
        </member>
        <member name="T:CMS.Helpers.UniGraphConfig.NodeTypeEnum">
            <summary>
            Summary description for NodeType.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.NodeTypeEnum.Standard">
            <summary>
            Standard node for general usage.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.NodeTypeEnum.Action">
            <summary>
            Node representing automatic action.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.NodeTypeEnum.Condition">
            <summary>
            Node representing IF/ELSE condition.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.NodeTypeEnum.Multichoice">
            <summary>
            Node representing SWITCH{CASE,DEFAULT} construction.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.NodeTypeEnum.Userchoice">
            <summary>
            Node representing branching by user choice.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.NodeTypeEnum.Note">
            <summary>
            Node representing automation process note.
            </summary>
        </member>
        <member name="T:CMS.Helpers.UniGraphConfig.Graph">
            <summary>
            Configuration class for JSON serialization.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.RESOURCES_PREFIX">
            <summary>
            Default prefix for resource strings in graph context.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.SERVICE_RESOURCES_PREFIX">
            <summary>
            Default prefix for resource strings in service context.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mNodes">
            <summary>
            Converted nodes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mConnections">
            <summary>
            Converted connections.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mAddresses">
            <summary>
            Addresses used in JS.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mResourcesPrefix">
            <summary>
            Prefix used in resource strings in graph context.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mServiceResourcesPrefix">
            <summary>
            Prefix used in resource strings in service context.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mServiceResourceStrings">
            <summary>
            Resource strings used in JS service.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mGraphResourceStrings">
            <summary>
            Resource strings used in graph JS.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Graph.mJsFiles">
            <summary>
            Contains addresses to all needed JS files.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.JsFiles">
            <summary>
            Addresses used in JS.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.Addresses">
            <summary>
            Addresses used in JS.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.ResourcesPrefix">
            <summary>
            Prefix used in resource strings in graph context.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.ServiceResourcesPrefix">
            <summary>
            Prefix used in resource strings in service context.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.GraphResourceStrings">
            <summary>
            Resource strings used in graph JS.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.ServiceResourceStrings">
            <summary>
            Resource strings used in graph JS.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.ID">
            <summary>
            ID of graph (not printed to HTML)
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.Nodes">
            <summary>
            Nodes in graph.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Graph.Connections">
            <summary>
            Connections in graph.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetDefaultConnections">
            <summary>
            Returns default list of connections.
            </summary>
            <returns>List of connections.</returns>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetDefaultNodes">
            <summary>
            Returns default list of nodes.
            </summary>
            <returns>List of nodes</returns>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetDefaultAddresses">
            <summary>
            Returns default dictionary of addresses.
            </summary>
            <returns>Dictionary of addresses</returns>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetDefaultGraphResources">
            <summary>
            Returns default dictionary of graph resource strings.
            </summary>
            <returns>Dictionary of resource strings</returns>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetString(System.String)">
            <summary>
            Gets the localized string
            </summary>
            <param name="key">String key</param>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetServicesString(System.String)">
            <summary>
            Gets the localized string for services
            </summary>
            <param name="key">String key</param>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetDefaultServiceResources">
            <summary>
            Returns default dictionary of service resource strings.
            </summary>
            <returns>Dictionary of resource strings</returns>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Graph.GetDefaultJsFiles">
            <summary>
            Return default list of JS files needed in graph.
            </summary>
            <returns>List of JS files to be registered</returns>
        </member>
        <member name="T:CMS.Helpers.UniGraphConfig.GraphPoint">
            <summary>
            Represents coordinates of a point in a two-dimensional space.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.GraphPoint.X">
            <summary>
            Gets or sets the x-coordinate.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.GraphPoint.Y">
            <summary>
            Gets or sets the y-coordinate.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.GraphPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.UniGraphConfig.GraphPoint"/> class with coordinates set to zero.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.GraphPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.UniGraphConfig.GraphPoint"/> class from given coordinates.
            </summary>
            <param name="x">Position on the x-axis.</param>
            <param name="y">Position on the y-axis.</param>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.GraphPoint.Clone">
            <summary>
            Returns a new instance of <see cref="T:CMS.Helpers.UniGraphConfig.GraphPoint"/> containing same data.
            </summary>
        </member>
        <member name="T:CMS.Helpers.UniGraphConfig.Node">
            <summary>
            Configuration class for JSON serialization.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UniGraphConfig.Node.mSourcePoints">
            <summary>
            Source points on node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.ID">
            <summary>
            ID of HTML element representing node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.Name">
            <summary>
            Name of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.IsNameLocalized">
            <summary>
            Whether or not is name of node resource string.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.Content">
            <summary>
            Content of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.Position">
            <summary>
            Absolute position of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.Type">
            <summary>
            Graphic type of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.CssClass">
            <summary>
            Extra css classes of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.SourcePoints">
            <summary>
            Source points node will have defined.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.HasTimeout">
            <summary>
            Whether or not item in state defined by this node should continue after defined amount of time.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.TimeoutDescription">
            <summary>
            User friendly description of timeout value.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.IsDeletable">
            <summary>
            Indicates if node can be deleted.
            Default value = true
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.ThumbnailImageUrl">
            <summary>
            URL to thumbnail image of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.ThumbnailClass">
            <summary>
            Thumbnail CSS class name of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.IconImageUrl">
            <summary>
            URL to icon image of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.IconClass">
            <summary>
            Icon CSS class name of node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.TypeName">
            <summary>
            Type as string used for better granularity.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.HasTargetPoint">
            <summary>
            Whether step has target point.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.TypeResourceStringPrefix">
            <summary>
            Prefix of resources of given type.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.Node.HasTimeoutSourcePoint">
            <summary>
            Whether the node has the explicit timeout source point.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Node.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.Node.GetDefaultSourcePoints">
            <summary>
            Method returning default list of source points.
            </summary>
            <returns>List of source points</returns>
        </member>
        <member name="T:CMS.Helpers.UniGraphConfig.NodeSourcePointsLimits">
            <summary>
            Object holding information about allowed source point counts for node.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.NodeSourcePointsLimits.Min">
            <summary>
            Minimum amount of source points with respect to node type.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.NodeSourcePointsLimits.Max">
            <summary>
            Maximum amount of source points with respect to node type.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.NodeSourcePointsLimits.GetDefaultMax">
            <summary>
            Method returning default maximal values in dictionary.
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.NodeSourcePointsLimits.GetDefaultMin">
            <summary>
            Method returning default minimal values in dictionary.
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.NodeSourcePointsLimits.GetSerializableObject">
            <summary>
            Returns serializable object containing all data.
            </summary>
        </member>
        <member name="T:CMS.Helpers.UniGraphConfig.SourcePoint">
            <summary>
            Configuration class for JSON serialization.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.SourcePoint.ID">
            <summary>
            ID of source point (not rendered to HTML).
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.SourcePoint.Type">
            <summary>
            Type of source point.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.SourcePoint.Label">
            <summary>
            Label of source point.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.SourcePoint.IsLabelLocalized">
            <summary>
            Whether or not is label of source point localized.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UniGraphConfig.SourcePoint.Tooltip">
            <summary>
            Tooltip of source point.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UniGraphConfig.SourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Helpers.SourcePointTypeEnum">
            <summary>
            Graph source point type enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SourcePointTypeEnum.Standard">
            <summary>
            Standard source point.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SourcePointTypeEnum.SwitchCase">
            <summary>
            Source point representing 'if' branch in conditional nodes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SourcePointTypeEnum.SwitchDefault">
            <summary>
            Source point representing 'else' branch in conditional nodes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SourcePointTypeEnum.Timeout">
            <summary>
            Source point representing timeout branch.
            </summary>
        </member>
        <member name="T:CMS.Helpers.AdministrationUrlHelper">
            <summary>
            UI helper methods.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AdministrationUrlHelper.ACCESSDENIED_PAGE">
            <summary>
            General access denied page
            </summary>
        </member>
        <member name="F:CMS.Helpers.AdministrationUrlHelper.DEFAULT_ADMINISTRATION_PATH">
            <summary>
            Administration UI path
            </summary>
        </member>
        <member name="F:CMS.Helpers.AdministrationUrlHelper.ADMIN_ACCESSDENIED_PAGE">
            <summary>
            Access denied page for administration
            </summary>
        </member>
        <member name="F:CMS.Helpers.AdministrationUrlHelper.ERROR_PAGE">
            <summary>
            General error page
            </summary>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetAccessDeniedUrl(System.String)">
            <summary>
            Gets URL for the access denied page which displays specified localized string.
            </summary>
            <param name="resourceString">Resource string to display</param>
            <returns>Access Denied page URL</returns>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetAccessDeniedUrlWithMessage(System.String)">
            <summary>
            Gets URL for the access denied page which displays specified message.
            </summary>
            <param name="message">Message to display.</param>
            <returns>Access Denied page URL</returns>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetImageUrl(System.String,System.Boolean)">
            <summary>
            Gets UI image path.
            </summary>
            <param name="imagePath">Partial image path starting from ~/App_Themes/(Skin_Folder)/Images/ (e.g. '/CMSModules/Membership/module.png')</param>
            <param name="ensureDefaultTheme">Indicates if default theme should be always used</param>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetImagePath(System.String,System.String,System.Boolean)">
            <summary>
            Gets UI image path for given theme.
            </summary>
            <param name="theme">Theme</param>
            <param name="imagePath">Partial image path starting from ~/App_Themes/(Skin_Folder)/Images/ (e.g. '/CMSModules/Membership/module.png')</param>
            <param name="ensureDefaultTheme">Indicates if default theme should be always used</param>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetDocumentTypeIconPath(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns path to the icon image for the specified document type.
            </summary>
            <param name="theme">Current theme</param>
            <param name="className">Name of the class</param>
            <param name="iconSet">Name of the subfolder where icon images are located</param>
            <param name="checkFile">Indicates if the required icon exists in the file system</param>
            <param name="ensureDefaultTheme">Indicates if default theme should be always used</param>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.ResolveImageUrl(System.String)">
            <summary>
            Resolves the path to an image
            </summary>
            <param name="path">Image path</param>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetCustomAdministrationPath">
            <summary>
            Gets custom administration path, or empty string if not set.
            </summary>
            <returns>Custom administration path.</returns>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetAdministrationPath">
            <summary>
            Gets administration path - custom, or default (if custom not set).
            </summary>
            <returns>Administration path.</returns>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetAdministrationUrl">
            <summary>
            Get administration Url (starts with ~/) - custom, or default (if custom not set)
            </summary>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetInformationUrl(System.String)">
            <summary>
            Gets URL for the info page which displays specified message.
            </summary>
            <param name="resourceString">Resource string to display</param>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetBestImagePath(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets best image path.
            </summary>
            <param name="filePattern">Image path pattern</param>
            <param name="themes">Array of themes</param>
            <param name="directions">Array of language directions</param>
            <param name="extensions">Array of file extensions</param>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetAccessDeniedUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the URL to Access denied page
            </summary>
            <param name="resourceName">Resource name that failed</param>
            <param name="permissionName">Permission name that failed</param>
            <param name="uiElementName">UI element name that failed</param>
            <param name="message">Custom message to display</param>
            <param name="pageUrl">Custom page URL to be used</param>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.AddDevelopmentDebugInfo(System.String)">
            <summary>
            Adds debug info if development mode is enabled.
            </summary>
            <param name="url">URL where will be added the debug info.</param>
            <returns>URL with debug info if development mode is enabled, otherwise original <paramref name="url"/>.</returns>
        </member>
        <member name="M:CMS.Helpers.AdministrationUrlHelper.GetErrorPageUrl(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Gets URL for the error page which displays specified message.
            </summary>
            <param name="titleResourceString">Resource string used as a title</param>
            <param name="textResourceString">Resource string used as a text</param>
            <param name="isDialog">Set to true if the error page should be displayed in the dialog</param>
            <param name="pageUrl">Custom page URL to be used</param>
            <returns>URL for the error page</returns>
        </member>
        <member name="T:CMS.Helpers.PermissionException">
            <summary>
            Permission exception.
            </summary>
        </member>
        <member name="M:CMS.Helpers.PermissionException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Helpers.PermissionException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.Helpers.PermissionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
            <param name="ex">Inner exception</param>
        </member>
        <member name="T:CMS.Helpers.AttachmentHelper">
            <summary>
            Methods to work with the files representing attachments.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AttachmentHelper.mScriptTimeout">
            <summary>
            Request timeout.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AttachmentHelper.ScriptTimeout">
            <summary>
            Gets or sets the script timeout in seconds.
            </summary>
        </member>
        <member name="M:CMS.Helpers.AttachmentHelper.GetFullFileName(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns full file name ([name.extension] if extension is specified) or ([name] only if extension is not specified), If width and height are specified, thumbnail file name is generated.
            </summary>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.Helpers.AttachmentHelper.GetFileSubfolder(System.String)">
            <summary>
            Gets the file subfolder (first two letters from the file name).
            </summary>
            <param name="filename">File name</param>
        </member>
        <member name="M:CMS.Helpers.AttachmentHelper.GetFileRelativePath(System.String,System.String)">
            <summary>
            Returns file relative path due to files folder.
            </summary>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="T:CMS.Helpers.ContextHelper">
            <summary>
            Wrapper around RequestStockHelper, SessionHelper and CookieHelper to access the context values. It always uses the case sensitive keys.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ContextHelper.GetItem(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the given session value.
            </summary>
            <param name="key">Value key</param>
            <param name="request">Use request storage</param>
            <param name="session">Use session storage</param>
            <param name="cookie">Use cookies</param>
        </member>
        <member name="M:CMS.Helpers.ContextHelper.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.DateTime,System.Nullable{System.Boolean})">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="request">Use request storage</param>
            <param name="session">Use session storage</param>
            <param name="cookie">Use cookies</param>
            <param name="cookieExpires">Time when the cookie expires</param>
            <param name="cookieHttpOnly">Defines httpOnly flag.</param>
        </member>
        <member name="M:CMS.Helpers.ContextHelper.Remove(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Removes the session value
            </summary>
            <param name="key">Item key</param>
            <param name="request">Remove from request storage</param>
            <param name="session">Remove from session storage</param>
            <param name="cookie">Remove from cookies</param>
        </member>
        <member name="T:CMS.Helpers.CookieHelper">
            <summary>
            Provides the cookie management methods.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.CookieSettings">
            <summary>
            Dictionary of the cookie levels [CookieName -> Level]
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.Instance">
            <summary>
            Singleton Instance of the cookie helper.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.AllowCookies">
            <summary>
            If true, the cookies are allowed to be used.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.HttpContext">
            <summary>
            Gets the HTTP context.
            </summary>
            <value>
            The HTTP context.
            </value>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.RequestCookiesCollection">
            <summary>
            Request cookies collection
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.ResponseCookiesCollection">
            <summary>
            Response cookies collection
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.RequestCookies">
            <summary>
            Request cookies status [CookieName -> true/false]
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.ResponseCookies">
            <summary>
            Response cookies collection [CookieName -> HttpCookie]
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.ReadOnly">
            <summary>
            Indicates if the cookies are read-only
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.IsCookieAllowed(System.String)">
            <summary>
            Returns true if the cookie is allowed based on current cookie level
            </summary>
            <param name="name">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetValue(System.String)">
            <summary>
            Returns the given cookie value.
            </summary>
            <param name="name">Cookie name to retrieve</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the given cookie value.
            </summary>
            <param name="name">Cookie name to retrieve</param>
            <param name="useDefaultValue">Indicates whether the registered cookie default value will be returned when the cookie is not present in the request</param>
            <param name="allowSensitiveData">Allows retrieving data from sensitive authentication cookies</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.SetValue(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="name">Cookie name</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie virtual path</param>
            <param name="expires">Expiration time</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.SetValue(System.String,System.String,System.String,System.DateTime,System.Nullable{System.Boolean})">
            <summary>
            Sets the cookie.
            </summary>
            <param name="name">Cookie name</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie virtual path</param>
            <param name="expires">Expiration time</param>
            <param name="httpOnly">Defines httpOnly flag.</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.SetValue(System.String,System.String,System.String,System.DateTime,System.Nullable{System.Boolean},System.String)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="name">Cookie name</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie virtual path</param>
            <param name="expires">Expiration time</param>
            <param name="httpOnly">Defines httpOnly flag.</param>
            <param name="domain">Domain to associate the cookie with.</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.SetValue(System.String,System.String,System.DateTime,System.String,System.Nullable{System.Boolean},System.String,CMS.Base.SameSiteMode,System.Boolean)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="name">Cookie name</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie virtual path</param>
            <param name="expires">Expiration time</param>
            <param name="httpOnly">Defines httpOnly flag.</param>
            <param name="domain">Domain to associate the cookie with.</param>
            <param name="sameSiteMode">Value of the same site attribute.</param>
            <param name="secure">Indicates whether the cookie should contain the secure attribute.</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.ChangeCookieExpiration(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the specific cookie expiration time.
            </summary>
            <param name="cookieName">Cookie name</param>
            <param name="expiration">Expiration time</param>
            <param name="onlyIfShorter">If true, the expiration is set only when the expiration is shorter</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RemoveAllCookies(System.Int32)">
            <summary>
            Removes all the user cookies above given level
            </summary>
            <param name="aboveLevel">Level above which the cookies should be removed</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.Remove(System.String)">
            <summary>
            Removes the cookie from the client side.
            </summary>
            <param name="name">Cookie name to remove</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RegisterCookie(System.String,System.Int32,System.Boolean)">
            <summary>
            Registers the given cookie within the system.
            </summary>
            <remarks>
            <para>
            Cookies which are registered within the system are deleted automatically when the current cookie level is decreased below their registered value.
            </para>
            <para>
            Current cookie level must be decreased via the <see cref="M:CMS.Helpers.ICurrentCookieLevelProvider.SetCurrentCookieLevel(System.Int32)"/> method to automatically handle the cookie deletion.
            </para>
            </remarks>
            <param name="name">Cookie name</param>
            <param name="level">Cookie level</param>
            <param name="isSensitive">Cookie sensitivity</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetExistingCookie(System.String)">
            <summary>
            Returns the existing cookie.
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.ResponseCookieExists(System.String)">
            <summary>
            Checks if response cookie exists.
            </summary>
            <param name="name">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.ResponseCookieExists(System.String,CMS.Base.Internal.IHttpCookie@)">
            <summary>
            Checks if response cookie exists.
            </summary>
            <param name="name">Cookie name</param>
            <param name="cookie">Output the existing cookie</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RequestCookieExists(System.String)">
            <summary>
            Checks if request cookie exists.
            </summary>
            <param name="name">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RestoreResponseCookies">
            <summary>
            Restores response cookies.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.EnsureResponseCookie(System.String)">
            <summary>
            Ensure response cookie.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetCookieTable(CMS.Base.Internal.IHttpCookieCollection,System.String)">
            <summary>
            Gets the table of cookies.
            </summary>
            <param name="cookies">Cookies collection</param>
            <param name="name">Table name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetResponseCookieTable">
            <summary>
            Gets the response cookies table.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetRequestCookieTable">
            <summary>
            Gets the response cookies table.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.ClearResponseCookies">
            <summary>
            Clears all cookies from cookie collection.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RemoveResponseCookie(System.String)">
            <summary>
            Removes cookie from response.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RegisterDefaultCookies">
            <summary>
            Registers the default cookies
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.ConvertCookieLevelToIntegerValue(System.String,System.Int32)">
            <summary>
            Gets the cookie level from a string value
            </summary>
            <param name="value">Level value, number or string representation</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RemoveAllCookiesInternal(System.Int32)">
            <summary>
            Removes all the user cookies
            </summary>
            <param name="aboveLevel">Level above which the cookies should be removed</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetCookieDefaultValueInternal(System.String)">
            <summary>
            Gets the default value of a cookie
            </summary>
            <param name="name">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.IsCookieAllowedInternal(System.String)">
            <summary>
            Returns true if the cookie is allowed based on current cookie level
            </summary>
            <param name="name">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetCookieLevelInternal(System.String)">
            <summary>
            Gets the cookie level for the given cookie
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.SetValueInternal(System.String,System.String,System.String@,System.DateTime,System.Nullable{System.Boolean},System.String,CMS.Base.SameSiteMode,System.Boolean)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="name">Cookie name</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie virtual path</param>
            <param name="expires">Expiration time</param>
            <param name="httpOnly">Defines httpOnly flag.</param>
            <param name="domain">Domain to associate the cookie with.</param>
            <param name="sameSite">Same site mode of the cookie.</param>
            <param name="secure">Indicates whether secure attribute should be set for the cookie.</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.SetCookieValues(CMS.Base.Internal.IHttpCookie,System.String,System.String@,System.DateTime,System.Nullable{System.Boolean},System.String,CMS.Base.SameSiteMode,System.Boolean)">
            <summary>
            Sets the cookie values
            </summary>
            <param name="cookie">Cookie to set</param>
            <param name="value">Cookie value</param>
            <param name="path">Cookie virtual path</param>
            <param name="expires">Expiration time</param>
            <param name="httpOnly">Defines httpOnly flag.</param>
            <param name="domain">Domain to associate the cookie with.</param>
            <param name="sameSite">Same site mode of the cookie.</param>
            <param name="secure">Indicates whether secure attribute should be set for the cookie.</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetValueInternal(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the given cookie value.
            </summary>
            <param name="name">Cookie name to retrieve</param>
            <param name="useDefaultValue">If true, the cookie is allowed to use the configured default value</param>
            <param name="allowSensitiveData">Allows retrieving data from sensitive authentication cookies.</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.IsSensitiveCookie(System.String)">
            <summary>
            Returns true for sensitive cookies.
            </summary>
            <param name="name">Name of the cookie</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.RemoveInternal(System.String)">
            <summary>
            Removes the cookie from the client side.
            </summary>
            <param name="name">Cookie name to remove</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.ChangeCookieExpirationInternal(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the specific cookie expiration time.
            </summary>
            <param name="cookieName">Cookie name</param>
            <param name="expiration">Expiration time</param>
            <param name="onlyIfShorter">If true, the expiration is set only when the expiration is shorter</param>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.CMS#Base#ISimpleDataContainer#Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.CMS#Base#ISimpleDataContainer#GetValue(System.String)">
            <summary>
            Gets the value from Cookie.
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.CMS#Base#ISimpleDataContainer#SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="cookieName">Cookie name</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.Helpers.CookieHelper.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.GetDistinctCookieNames">
            <summary>
            Gets names of both request and response cookies without duplicates.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Helpers.CookieHelper.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="T:CMS.Helpers.CookieLevel">
            <summary>
            Constants for the system cookie levels
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieLevel.None">
            <summary>
            Level value to disable all cookies "-1000"
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieLevel.System">
            <summary>
            Level value for the system cookies required to determine the user cookie level "-100"
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieLevel.Essential">
            <summary>
            Level value for the essential cookies (required to run the system) "0"
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieLevel.Editor">
            <summary>
            Level value for the cookies required for editors (for the editing UI to work properly) "100"
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieLevel.Visitor">
            <summary>
            Level value for normal visitor cookies (not necessarily required to run the system) "200"
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieLevel.All">
            <summary>
            Level value to allow all available cookies "1000"
            </summary>
        </member>
        <member name="T:CMS.Helpers.CookieName">
            <summary>
            System cookie name constants
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.CookieLevel">
            <summary>
            Cookie level
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.ASPNETSessionID">
            <summary>
            ASP.NET session ID cookie
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.WindowsUser">
            <summary>
            Remembered windows user that is logged in
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.PreferredCulture">
            <summary>
            Preferred content culture
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.MobileRedirected">
            <summary>
            Redirection flag for the mobile device
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.CurrentTheme">
            <summary>
            Current theme
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.LiveID">
            <summary>
            Live ID authentication
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.ShoppingCart">
            <summary>
            Shopping cart
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.BodyClass">
            <summary>
            Body CSS class cookie
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.CsrfCookie">
            <summary>
            CSRF cookie used to store CSRF token
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.VirtualContextAuthenticationCookie">
            <summary>
            VirtualContext authentication cookie.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.CrawlerAuthenticationCookie">
            <summary>
            Crawler authentication cookie.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.CookiePolicyDetectionCookie">
            <summary>
            A dummy cookie used to test whether the user's browser blocks 3rd party cookies. Does not carry any informational value.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.PreferredUICulture">
            <summary>
            Preferred UI culture
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.ViewMode">
            <summary>
            View mode
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.SpellCheckUserWords">
            <summary>
            Spell check user words
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.MacroDesignerTab">
            <summary>
            Macro designer tab
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.WebPartToolbarMinimized">
            <summary>
            Web part toolbar minimized
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.WebPartToolbarCategory">
            <summary>
            Web part toolbar category
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.WebPartToolbarCategoryUI">
            <summary>
            Web part toolbar category for UI template
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.SessionToken">
            <summary>
            Session token
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.PreviewState">
            <summary>
            Preview state for transformation/layout/css preview
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.SplitMode">
            <summary>
            State of the compare mode
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.UniGraph">
            <summary>
            Settings for UniGraph control
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.EditorPrefix">
            <summary>
            General prefix for editor cookies for the proper level
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.ABSelectorStatePrefix">
            <summary>
            Prefix for AB test result overview selectors
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.VariantSliderPositionsPrefix">
            <summary>
            Prefix for variant slider cookies
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieName.GetVariantSliderPositionsCookieName(System.Int32)">
            <summary>
            Gets the cookie name for the position of the variant slider
            </summary>
            <param name="templateId">Template ID</param>
        </member>
        <member name="F:CMS.Helpers.CookieName.Impersonation">
            <summary>
            Cookie key for user impersonation
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.DisplayContentInDesignMode">
            <summary>
            Cookie key for the indication whether content of web parts should be displayed in the design mode
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.DisplayContentInUIElementDesignMode">
            <summary>
            Cookie key for the indication whether content of UI web parts should be displayed in the design mode
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.MarketingAutomationSelectedView">
            <summary>
            Cookie key for the indication what view to display in the marketing automation process management
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieName.GetEditorCookieName(System.String)">
            <summary>
            Gets the editor level cookie name
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="F:CMS.Helpers.CookieName.VisitorStatus">
            <summary>
            Visitor status
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.Campaign">
            <summary>
            Campaign
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.CurrentContact">
            <summary>
            Current contact
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.WebAnalyticsData">
            <summary>
            Web analytics related data
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.LandingPageLoaded">
            <summary>
            Stores landing page visited flag.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.ABVariantCookiePrefix">
            <summary>
            A/B Testing variant selector cookie (existing even without cookie consent).
            </summary>
        </member>
        <member name="F:CMS.Helpers.CookieName.ABTestingCookiePrefix">
            <summary>
            Prefix of A/B test cookie names.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CookieSettings">
            <summary>
            Cookie settings
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieSettings.Level">
            <summary>
            Gets the cookie level.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieSettings.DefaultValue">
            <summary>
            Gets the cookie default value.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CookieSettings.IsSensitive">
            <summary>
            Gets the cookie sensitivity from security point of view.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CookieSettings.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:CMS.Helpers.CookieSettings"/> with given parameters.
            </summary>
            <param name="level">Cookie level.</param>
            <param name="defaultValue">Default value.</param>
            <param name="isSensitive">Cookie sensitivity.</param>
        </member>
        <member name="T:CMS.Helpers.CurrentCookieLevelProvider">
            <summary>
            Provides methods for obtaining and manipulation with the cookie level for the current request.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CurrentCookieLevelProvider.GetDefaultCookieLevel">
            <summary>
            Cookie level from site settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.Helpers.CurrentCookieLevelProvider.GetCurrentCookieLevel">
            <summary>
            Gets the cookie level of the current request.
            </summary>
            <remarks>
            <para>
            If the cookie level is not set yet, the application setting "CMSDefaultCookieLevel" specified in the settings is used.
            </para>
            <para>
            When calling this method, <see cref="F:CMS.Helpers.CookieName.CookieLevel" /> response cookie is set.
            </para>
            <para>
            Inbuilt cookie level values are represented by the constants in the <see cref="T:CMS.Helpers.CookieLevel"/> class. 
            </para>
            </remarks>
            <returns>Returns the cookie level of the current request.</returns>
        </member>
        <member name="M:CMS.Helpers.CurrentCookieLevelProvider.SetCurrentCookieLevel(System.Int32)">
            <summary>
            Sets the cookie level to the specified level.
            </summary>
            <remarks>
            This action clears all the cookies that have a cookie level set lower that the new cookie level.
            New cookie level value is stored into the response cookie <see cref="F:CMS.Helpers.CookieName.CookieLevel" />.
            </remarks>
            <param name="cookieLevel">Cookie level to be set. Predefined constants in the <see cref="T:CMS.Helpers.CookieLevel" /> class can be used.</param>
        </member>
        <member name="T:CMS.Helpers.ICurrentCookieLevelProvider">
            <summary>
            Provides methods for obtaining and manipulation with the cookie level for the current request.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ICurrentCookieLevelProvider.GetDefaultCookieLevel">
            <summary>
            Gets the default cookie level based on settings.
            </summary>
            <returns>Returns the default cookie level.</returns>
        </member>
        <member name="M:CMS.Helpers.ICurrentCookieLevelProvider.GetCurrentCookieLevel">
            <summary>
            Gets the cookie level of the current request.
            </summary>
            <remarks>
            <para>
            If the cookie level is not set yet, the application setting "CMSDefaultCookieLevel" specified in the settings is used.
            </para>
            <para>
            When calling this method, <see cref="F:CMS.Helpers.CookieName.CookieLevel" /> response cookie is set.
            </para>
            <para>
            Inbuilt cookie level values are represented by the constants in the <see cref="T:CMS.Helpers.CookieLevel"/> class. 
            </para>
            </remarks>
            <returns>Returns the cookie level of the current request.</returns>
        </member>
        <member name="M:CMS.Helpers.ICurrentCookieLevelProvider.SetCurrentCookieLevel(System.Int32)">
            <summary>
            Sets the cookie level to the specified level.
            </summary>
            <remarks>
            This action clears all the cookies that have a cookie level set lower that the new cookie level.
            New cookie level value is stored into the response cookie <see cref="F:CMS.Helpers.CookieName.CookieLevel" />.
            </remarks>
            <param name="cookieLevel">Cookie level to be set. Predefined constants in the <see cref="T:CMS.Helpers.CookieLevel" /> class can be used.</param>
        </member>
        <member name="T:CMS.Helpers.FileHelper">
            <summary>
            File helper methods.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FileHelper.IsTextFileExtension(System.String)">
            <summary>
            Returns true if the given file extension represents a text file.
            </summary>
            <param name="extension">Extension to check, can be in both format with and without dot (.jpg, jpg).</param>
            <remarks>
            This method contains only limited set of extensions used by system and should not be used in custom code.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.FileHelper.GetLiveFilePath(System.String)">
            <summary>
            Gets the live path for the given file
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.CheckExtension(System.String,System.String)">
            <summary>
            Checks if the extension is within the given list of allowed extensions.
            </summary>
            <param name="extension">Extension to check</param>
            <param name="allowedExtensions">List of allowed extensions separated by semicolon, e.g. "jpg;png"</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.ReplaceInFile(System.String,System.String,System.String)">
            <summary>
            Performs the string replacement within the file.
            </summary>
            <param name="filePath">File path</param>
            <param name="what">String to replace (old string)</param>
            <param name="replaceWith">Replacement (new string)</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.ReplaceInFile(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Performs the string replacement within the file.
            </summary>
            <param name="filePath">File path</param>
            <param name="what">String to replace (old string)</param>
            <param name="replaceWith">Replacement (new string)</param>
            <param name="encoding">File encoding</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.GetFullFilePhysicalPath(System.String,System.String)">
            <summary>
            Returns full physical path of a file or folder. Does not change the ending slash
            </summary>
            <param name="path">Path</param>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.GetFullFolderPhysicalPath(System.String,System.String)">
            <summary>
            Returns full physical path for a folder. Ensures the trailing slash.
            </summary>
            <param name="path">Path</param>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.GetFullPhysicalPath(System.String,System.String,System.String)">
            <summary>
            Returns full path of the given path. Does not change the trailing slash
            </summary>
            <param name="originalPath">Object part of the path (e.g. /Text/text.ascx)</param>
            <param name="startingPath">Starting path of the full path (e.g. ~/CMSWebParts)</param>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
            <returns>Full path (e.g. c:\WebProject\CMSWebParts\Text\text.ascx)</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.IsMatch(System.String,System.String)">
            <summary>
            Indicates if file name matches given pattern.
            </summary>
            <param name="fileName">File name</param>
            <param name="pattern">Pattern (for example '*.jpg')</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.FileExists(System.String)">
            <summary>
            Checks if a URL resolves to an existing file on the local file system.
            </summary>
            <param name="url">URL to check; can be absolute, relative or app-relative</param>
            <returns><c>true</c>, if the specified URL points to a locally stored file</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.DirectoryExists(System.String)">
            <summary>
            Checks if a URL resolves to an existing directory on the local file system.
            </summary>
            <param name="url">URL to check; can be absolute, relative or app-relative</param>
            <returns><c>true</c>, if the specified URL points to a locally stored directory</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.GetFileChecksum(System.String)">
            <summary>
            Gets file checksum
            </summary>
            <param name="path">File path</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.FilesMatch(System.String,System.String)">
            <summary>
            Checks if the content of two given files is same
            </summary>
            <param name="file1">First file path to compare</param>
            <param name="file2">Second file path to compare</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.CopyDirectory(System.String,System.String)">
            <summary>
            Copies specified directory including its subdirectories and all underlying files.
            </summary>
            <param name="sourcePath">Path of the source directory (can be relative starting with ~/)</param>
            <param name="targetPath">Path of the new copy of the directory including its name (can be relative starting with ~/)</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.CloneControlSource(System.String,System.String,System.String)">
            <summary>
            Clones source codes (.ascx, .ascx.cs(vb), .designer.cs(vb)) for given control.
            </summary>
            <param name="srcFile">Source file (full path to source .ascx file)</param>
            <param name="dstFile">Target files (full path to target .ascx file)</param>
            <param name="dstCodeFile">Target relative path</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.CopyControlFile(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Copies control's code behind file.
            </summary>
            <param name="className">Controls class name</param>
            <param name="srcFile">Source file</param>
            <param name="dstFile">Destination file</param>
            <param name="ext">Extension</param>
            <param name="isVB">Indicates if it should be handled like VB file or C# file.</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.ReplaceASCX(System.String,System.String,System.String)">
            <summary>
            Replaces 'CodeFile' and 'Inherits' parameters in .asxc file.
            </summary>
            <param name="text">Ascx file</param>
            <param name="fname">New code file</param>
            <param name="inher">New inherits class name</param>
            <returns>New ascx file</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.ReplaceASCXCS(System.String,System.String)">
            <summary>
            Replaces class name in .ascx.cs file.
            </summary>
            <param name="text">Ascx.cs file</param>
            <param name="classname">New class name</param>
            <returns>New ascx.cs file</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.ReplaceASCXVB(System.String,System.String)">
            <summary>
            Replaces class name in .ascx.vb file.
            </summary>
            <param name="text">Ascx.vb file</param>
            <param name="classname">New class name</param>
            <returns>New ascx.vb file</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.GetUniqueFileName(System.String)">
            <summary>
            Returns filePath based on the given filePath which is unique within the folder.
            If the path is relative, relative path is returned, if the input path was absolute, absolute path is returned.
            </summary>
            <param name="filePath">File path (relative with ~/ or absolute)</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.GetUniqueDirectoryName(System.String)">
            <summary>
            Returns dirPath based on the given direPath which is unique within the parent folder.
            If the path is relative, relative path is returned, if the input path was absolute, absolute path is returned.
            </summary>
            <param name="dirPath">Directory path (relative with ~/ or absolute)</param>
        </member>
        <member name="M:CMS.Helpers.FileHelper.UseSiteSpecificCustomFolder(System.String)">
            <summary>
            Indicates if site specific custom folder should be used for storing files.
            </summary>
            <param name="siteName">Site name</param>
            <returns>True if custom folder is used, otherwise false</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.FilesFolder(System.String)">
            <summary>
            Gets custom file folder path.
            </summary>
            <param name="siteName">Site name</param>
            <returns>Value of custom file folder</returns>
        </member>
        <member name="M:CMS.Helpers.FileHelper.FilesLocationType(System.String)">
            <summary>
            Gets the files location type.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.Helpers.BrowserHelper">
            <summary>
            Browser helper methods.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.ScreenResolution">
            <summary>
            Gets or sets the screen resolution.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.ScreenColorDepth">
            <summary>
            Gets or sets the screen color depth.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.OperatingSystem">
            <summary>
            Gets or sets the operating system of the user.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.SearchKeywords">
            <summary>
            Gets or sets the search keywords used to access the site.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.IsSilverlightInstalled">
            <summary>
            Indicates whether Silverlight is installed.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.IsJavaInstalled">
            <summary>
            Indicates whether Java is installed.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.IsFlashInstalled">
            <summary>
            Indicates whether Flash is installed.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetBrowserClass">
            <summary>
            Gets the browser specific CSS class name.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsIE">
            <summary>
            Indicates if browser is Internet explorer.
            </summary>        
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsGecko">
            <summary>
            Indicates if browser is based on Gecko.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsOpera">
            <summary>
            Indicates if browser is Opera.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsWin32">
            <summary>
            Indicates if client is a Win-32 based comupter.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsMobileDevice">
            <summary>
            Indicates if browser is mobile device.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsMobileDevice(System.Boolean)">
            <summary>
            Indicates if browser is mobile device.
            </summary>
            <param name="detectLargeDevice">Indicates if large devices should be detected as mobile</param>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetUserAgent">
            <summary>
            Returns mobile browser agent.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetUrlReferrer">
            <summary>
            Returns UrlReferrer from request.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetUserLanguages">
            <summary>
            Returns list of browser user languages from request.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsSafari">
            <summary>
            Returns true if current browser is Safari.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsChrome">
            <summary>
            Returns true if current browser is Chrome.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsWebKit">
            <summary>
            Indicates if browser is based on WebKit.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetBrowser">
            <summary>
            Gets the browser string from current request.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetRendererVersion(System.String,System.String)">
            <summary>
            Returns version based on rendering engine rather then on version declared by the browser itself for supported browsers. 
            If browser or its rendering engine version is not supported, <c>null</c> is returned.
            </summary>
            <param name="browser">Browser string that was sent by the browser in the User-Agent request header.</param>
            <param name="userAgent">Complete user-agent string of the client.</param>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetInternetExplorerVersionFromRendererVersion(System.String)">
            <summary>
            Gets version of Internet explorer from the rendering engine version. According to the server configuration, when browsing intranet sites
            Internet explorer automatically switches to the compatible mode, which is in general lower version of the browser. This is suitable for
            rendering but not for analytics, therefore real version has to be obtained based on the <paramref name="userAgent"/> string specifying version of the Trident 
            rendering engine. Version cannot be obtained using .NET browser capabilities object. 
            </summary>
            <remarks>
            More information can be found on MSDN: https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx.
            </remarks>
            <param name="userAgent">Browser user agent, that will be used for obtaining version of Trident rendering engine</param>
            <returns>Version obtained from given <paramref name="userAgent"/>. If no version can be determined, returns <c>null</c>.</returns>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetMajorVersion">
            <summary>
            Gets browser major version.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetMinorVersion">
            <summary>
            Gets browser minor version.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.IsCrawler">
            <summary>
            Returns whether browsing device is search engine crawler (spider, bot).
            </summary>       
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetMinorVersionFixed(System.Double)">
            <summary>
            Get browser minor version. Different .Net versions return different ways of minor version numbers.
            This method fixes differences.
            </summary>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.ColumnNames">
            <summary>
            Get the list of supported properties.
            </summary>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns given property from BrowserHelper
            </summary>
            <param name="columnName">Property name</param>
            <param name="value">Value will be returned here, if exists</param>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.ContainsColumn(System.String)">
            <summary>
            Returns true if given column exists.
            </summary>
            <param name="columnName">Name of the column</param>
        </member>
        <member name="P:CMS.Helpers.BrowserHelper.Item(System.String)">
            <summary>
            Returns given property from BrowserHelper. Setter is not implemented
            </summary>
            <param name="columnName">Property name</param>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.GetValue(System.String)">
            <summary>
            Returns given property from BrowserHelper. Setter is not implemented
            </summary>
            <param name="columnName">Property name</param>
        </member>
        <member name="M:CMS.Helpers.BrowserHelper.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Not implemented.</param>
            <param name="value">Not implemented.</param>
        </member>
        <member name="T:CMS.Helpers.HTTPHelper">
            <summary>
            Provides the methods for the safe access to the HTTPContext.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTTPHelper.mDispositionInlineExtensions">
            <summary>
            List of file extensions for which the disposition is set to inline.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTTPHelper.DispositionInlineExtensions">
            <summary>
            List of file extensions for which the default disposition is inline. 
            (Beside image, '.html' and '.htm' extensions, default extensions are '.pdf', '.swf')
            </summary>
        </member>
        <member name="M:CMS.Helpers.HTTPHelper.GetFileDisposition(System.String,System.String)">
            <summary>
            Gets the file disposition
            </summary>
            <param name="fileName">File name (e.g. image.png)</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.Helpers.HTTPHelper.GetDispositionFilename(System.String)">
            <summary>
            Gets file name in format to be used in response headers for content-disposition file name.
            </summary>
            <param name="filename">Original file name</param>
        </member>
        <member name="M:CMS.Helpers.HTTPHelper.SetFileDisposition(System.String,System.String)">
            <summary>
            Sets the file disposition to the output
            </summary>
            <param name="fileName">File name (e.g. image.png)</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.Helpers.HTTPHelper.AddContentDispositionHeader(CMS.Base.Internal.IResponse,System.Boolean,System.String)">
            <summary>
            Adds <see langword="Content-Disposition"/> Header to response.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HTTPHelper.AddContentDispositionHeader(System.Web.HttpResponse,System.Boolean,System.String)">
            <summary>
            Adds <see langword="Content-Disposition"/> Header to response.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HTTPHelper.IsDispositionInline(System.String)">
            <summary>
            Indicates if file with given extension should be displayed inline browser.
            </summary>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.Helpers.HTTPHelper.GetContentDispositionHeaderValue(System.Boolean,System.String)">
            <summary>
            Get Content-Disposition Header value.
            </summary>
            <param name="isAttachment">
            When <see langword="true"/> content disposition will be set to "attachment", otherwise to "inline".
            </param>
            <param name="fileName">File name presented to client browser.</param>
        </member>
        <member name="T:CMS.Helpers.Extensions.HttpRequestExtensions">
            <summary>
            Extension methods for request objects.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Extensions.HttpRequestExtensions.GetEffectiveUrl(CMS.Base.Internal.IRequest)">
            <summary>
            Returns effective URL with correct port number based on <see cref="P:CMS.Helpers.RequestContext.IsSSL"/> property for <see cref="P:CMS.Base.Internal.IRequest.Url"/> property.
            </summary>
            <param name="request"><see cref="T:CMS.Base.Internal.IRequest"/> object.</param>
            <remarks>
            When SSL offloading proxy is used <see cref="P:CMS.Base.Internal.IRequest.Url"/> does not contain valid port and scheme.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="request"/></exception>
        </member>
        <member name="M:CMS.Helpers.Extensions.HttpRequestExtensions.GetEffectiveUrl(System.Uri,System.Boolean)">
             <summary>
             Returns effective URL with correct port number based on <see cref="P:CMS.Helpers.RequestContext.IsSSL"/> property for <see cref="P:CMS.Base.Internal.IRequest.Url"/> property.
             </summary>
             <param name="url">Url of current request.</param>
             <param name="isSecureConnection">Indication whether HTTP connection uses secure sockets.</param>
             <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
             </remarks>
        </member>
        <member name="T:CMS.Helpers.Extensions.QueryCollectionExtensions">
            <summary>
            Provides additional methods from <see cref="T:CMS.Base.Internal.IQueryCollection"/> implementations.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Extensions.QueryCollectionExtensions.ToQueryString(CMS.Base.Internal.IQueryCollection)">
            <summary>
            Returns an <c>&amp;</c> separated serialization of <see cref="T:CMS.Base.Internal.IQueryCollection"/> object.
            </summary>
            <param name="queryCollection">The <see cref="T:CMS.Base.Internal.IQueryCollection"/>.</param>
        </member>
        <member name="M:CMS.Helpers.Extensions.QueryCollectionExtensions.ToQueryString(CMS.Base.Internal.IQueryCollection,System.Boolean)">
            <summary>
            Returns an <c>&amp;</c> separated serialization of <see cref="T:CMS.Base.Internal.IQueryCollection"/> object.
            </summary>
            <param name="queryCollection">The <see cref="T:CMS.Base.Internal.IQueryCollection"/>.</param>
            <param name="urlencoded">Should keys and values in output string be URLEncoded?</param>
        </member>
        <member name="T:CMS.Helpers.InvalidVirtualContextException">
            <summary>
            Thrown when path processed by <see cref="T:CMS.Helpers.VirtualContext"/> is invalid
            </summary>
        </member>
        <member name="M:CMS.Helpers.InvalidVirtualContextException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.InvalidVirtualContextException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:CMS.Helpers.InvalidVirtualContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.InvalidVirtualContextException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is a null reference</exception>
        </member>
        <member name="T:CMS.Helpers.QueryHelper">
            <summary>
            QueryString helper methods.
            </summary>
        </member>
        <member name="P:CMS.Helpers.QueryHelper.Instance">
            <summary>
            Singleton Instance of the query helper.
            </summary>
        </member>
        <member name="P:CMS.Helpers.QueryHelper.HashEnabled">
            <summary>
            If true, the hash check is enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.QueryHelper.QueryString">
            <summary>
            Query string
            </summary>
        </member>
        <member name="P:CMS.Helpers.QueryHelper.RouteValues">
            <summary>
            Route data
            </summary>
        </member>
        <member name="P:CMS.Helpers.QueryHelper.EncodedQueryString">
            <summary>
            Returns html encoded query string. 
            </summary>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetParameterString">
            <summary>
            Returns string containing all parameters and their values from <see cref="P:CMS.Helpers.QueryHelper.RouteValues"/> and <see cref="P:CMS.Helpers.QueryHelper.QueryString"/>.
            Parameters are sorted by their names and merged together with <see cref="P:CMS.Helpers.QueryHelper.QueryString"/> having precedence over <see cref="P:CMS.Helpers.QueryHelper.RouteValues"/>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.ToString">
            <summary>
            Returns the string representation of the query string
            </summary>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.BuildQueryWithHash(System.String[])">
            <summary>
            Build the query from the given items and adds the hash to the query
            </summary>
            <param name="items">Items of the query, in format [param1name, param1value, param2name, param2value], skips the items with empty value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.BuildQuery(System.String[])">
            <summary>
            Build the query from the given items
            </summary>
            <param name="items">Items of the query, in format [param1name, param1value, param2name, param2value], skips the items with empty value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetColor(System.String,System.Drawing.Color)">
            <summary>
            Returns the color representation of a query parameter or default value
            if parameter is not a valid color.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetInteger(System.String,System.Int32)">
            <summary>
            Returns the integer representation of a query parameter or default value
            if parameter is not an integer number.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetBoolean(System.String,System.Boolean)">
            <summary>
            Returns the boolean representation of a query parameter or default value
            if parameter is not boolean.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetDouble(System.String,System.Double)">
            <summary>
            Returns the double representation of a query parameter or default value if parameter is not a double number.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetDecimal(System.String,System.Decimal)">
            <summary>
            Returns the decimal representation of a query parameter or default value if parameter is not a decimal number.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetString(System.String,System.String)">
            <summary>
            Returns query string parameter or default value if query string is not defined.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetText(System.String,System.String)">
            <summary>
            Returns HTML encoded query string parameter or default value if query string is not defined.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetControlClientId(System.String,System.String)">
            <summary>
            Returns control client ID from a query parameter or default value
            if parameter is not a valid control client ID.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetGuid(System.String,System.Guid)">
            <summary>
            Returns the GUID representation of a query parameter or default value
            if parameter is not GUID.
            </summary>
            <param name="name">Query parameter</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.Contains(System.String)">
            <summary>
            Returns true if query parameter is present in the query string.
            </summary>
            <param name="name">Query parameter</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetHash(System.String)">
            <summary>
            Generates hash for given QueryString.
            </summary>
            <param name="input">Query string starting with '?' or complete URL</param>
            <returns>SHA256 hash of query string</returns>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetHash(System.String,System.Boolean)">
            <summary>
            Generates hash for given QueryString.
            </summary>
            <param name="input">Query string starting with '?' or complete URL</param>
            <param name="isQueryString">Indicates if input is query string or URL</param>
            <returns>SHA256 hash of query string</returns>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.ValidateHash(System.String,System.String,CMS.Helpers.HashSettings,System.Boolean)">
            <summary>
            Validates given QueryString against hash.
            </summary>
            <param name="name">Name of hash parameter in query string</param>
            <param name="excludedParameters">Parameters to exclude from hash validation. Multiple names separated by ';'.</param>
            <param name="validateWithoutExcludedParameters">Indicates if the query string is validated without the excluded parameters if validation with excluded parameters fails</param>
            <param name="settings">Hash settings</param>
            <returns>True if query string is valid.</returns>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.ValidateHash(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Validates given QueryString against hash.
            </summary>
            <param name="name">Name of hash parameter in query string</param>
            <param name="purpose">Hash purpose</param>
            <param name="salt">Custom hash salt</param>
            <param name="excludedParameters">Parameters to exclude from hash validation. Multiple names separated by ';'.</param>
            <param name="validateWithoutExcludedParameters">Indicates if the query string is validated without the excluded parameters if validation with excluded parameters fails</param>        
            <returns>True if query string is valid.</returns>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.RemoveParameters(System.String,System.String[])">
            <summary>
            Removes the specified parameters from the specified query string.
            </summary>
            <param name="queryString">Query string starting with '?'</param>
            <param name="paramsToRemove">Parameters to be removed from the query string</param>
            <returns>Specified query string without the specified parameters</returns>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.ValidateHashString(System.String,System.String,CMS.Helpers.HashSettings)">
            <summary>
            Validates given value against hash.
            </summary>
            <param name="value">Value to validate</param>
            <param name="hash">Hash value</param>
            <param name="settings">Hash settings</param>
            <returns>True if hash is valid.</returns>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.ValidateHashString(System.String,System.String,System.String,System.String)">
            <summary>
            Validates given value against hash.
            </summary>
            <param name="value">Value to validate</param>
            <param name="hash">Hash value</param>
            <param name="purpose">Hash purpose</param>
            <param name="salt">Custom hash salt</param>
            <returns>True if hash is valid.</returns>
        </member>
        <member name="P:CMS.Helpers.QueryHelper.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.GetValue(System.String)">
            <summary>
            Gets the value from QueryString.
            </summary>
            <param name="key">QueryString key</param>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="key">QueryString key</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.Helpers.QueryHelper.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Helpers.QueryHelper.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="T:CMS.Helpers.RequestContext">
            <summary>
            Request context properties
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.LogCurrentError">
            <summary>
            If true (default), the current application error should be logged
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.CurrentExcludedStatus">
            <summary>
            Returns current excluded status of the request path
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.CurrentStatus">
            <summary>
            Returns current request URL rewriting status.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.ResponseIsCompressed">
            <summary>
            Indicates whether the current response contains compressed data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.RawURL">
            <summary>
            Current request RawUrl.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.CurrentRelativePath">
            <summary>
            Current page relative path. e.g. "~/Home.aspx" has relative path "/Home.aspx"
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.CurrentQueryString">
            <summary>
            Returns the current request URL query string.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.CurrentScheme">
            <summary>
            Returns the current request URL scheme.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.CurrentURL">
            <summary>
            Returns the current request URL.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.URL">
            <summary>
            Gets information about URL of current request.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.IsSSL">
            <summary>
            Indicates whether current request is SSL request.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.IsSSLExplicit">
            <summary>
            Gets the value that was explicitly set for <see cref="P:CMS.Helpers.RequestContext.IsSSL"/> property.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.CurrentDomain">
            <summary>
            Returns current URL domain, without trailing slashes.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.FullDomain">
            <summary>
            Returns current URL domain with port if exist.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.UseNoCacheForRedirect">
            <summary>
            Indicates whether current redirect should add no-cache directive to the response header
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.IsUserAuthenticated">
            <summary>
            Returns true, if the user is authenticated
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.UserHostAddress">
            <summary>
            Gets or sets user host address. Returns empty string if HttpContext is not initialized and other value is not set.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.UserName">
            <summary>
            Gets user name or empty string if HttpContext is not initialized. The user name is in the exact format in which the user is authenticated (may not be safe name).
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.UserAgent">
            <summary>
            Returns user agent or empty string if HttPContext is not initialized.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.URLReferrer">
            <summary>
            Returns URL referrer or empty string if HttPContext is not initialized.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.ClientApplication">
            <summary>
            Dictionary to be used to collect data from server for client application.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.RequestEvents">
            <summary>
            Events that are fired and survive within current request.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestContext.HttpContext">
            <summary>
            Gets the HTTP context.
            </summary>
            <value>
            The HTTP context.
            </value>
        </member>
        <member name="M:CMS.Helpers.RequestContext.EnsureSourceItems">
            <summary>
            Ensures the context source items to be always distributed to thread in async mode
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestContext.ClearCachedUrlValues">
            <summary>
            Clears the cached values related to URL of the request
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestContext.CloneForNewThread">
            <summary>
            Clones the object for new thread
            </summary>
        </member>
        <member name="T:CMS.Helpers.RequestHelper">
            <summary>
            Request helping methods.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestHelper.RANGE_START">
            <summary>
            Range start constant
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestHelper.RANGE_END">
            <summary>
            Range end constant
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestHelper.AllowResourceCompression">
            <summary>
            Gets whether the resource compression is enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestHelper.GetFileEndRequest">
            <summary>
            Gets whether the request is completed or ended when request processing is finished.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestHelper.HttpMethod">
            <summary>
            Gets the HTTP data transfer method (such as GET, POST) used by client.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.IsPostBack">
            <summary>
            Returns <c>true</c> if current <see cref="P:CMS.Base.Internal.IRequest.HttpMethod"/> is POST.
            </summary>
            <remarks>This method is not equivalent to System.Web.UI.Page.IsPostBack.</remarks>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.IsAJAXRequest">
            <summary>
            Returns <c>true</c> if current request contains "x-microsoftajax" header item or "XMLHttpRequest" value.
            </summary>
            <remarks>
            <para>
            <see cref="P:System.Web.HttpRequestBase.HttpMethod"/> value is irrelevant. This method can return <c>true</c> even for GET request.
            </para>
            <para>
            If you need to detect asynchronous postback caused by <see cref="!:ScriptManager"/> use <see cref="!:ScriptManager.IsInAsyncPostBack"/>.
            </para>
            </remarks>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.IsCallback">
            <summary>
            Returns <c>true</c> if current <see cref="P:System.Web.HttpRequestBase.HttpMethod"/> is POST and "__CALLBACKID" request parameter is not null.
            </summary>
            <remarks>This method is similar to <see cref="P:System.Web.UI.Page.IsCallback"/>.</remarks>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.IsAsyncPostback">
            <summary>
            Returns <c>true</c> if current <see cref="P:System.Web.HttpRequestBase.HttpMethod"/> is POST and <see cref="M:CMS.Helpers.RequestHelper.IsAJAXRequest"/> or <see cref="M:CMS.Helpers.RequestHelper.IsCallback"/> is <c>true</c>.
            </summary>
            <remarks>
            If you need to detect asynchronous postback caused by <see cref="!:ScriptManager"/> use <see cref="!:ScriptManager.IsInAsyncPostBack"/>.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.IsGZipSupported">
            <summary>
            Returns true if GZip is supported by the client browser
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.GetHeader(System.String,System.String)">
            <summary>
            Returns the value of specified HTTP header or default value if header is not defined.
            </summary>
            <param name="name">HTTP header name</param>
            <param name="defaultValue">Default value to use if header not found</param>
            <returns>Header value or default value if not found</returns>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.GetRange(System.Int64,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Parses the range header from the request.
            </summary>
            <param name="size">Size of data.</param>
            <param name="isRangeRequest">Indicates whether it is range request.</param>
            <param name="isMultipart">Indicates whether it is multipart range request.</param>
            <param name="areRangesValid">Indicates whether ranges are valid (or request is not range request).</param>
            <returns>2D Array in format {{START_RANGE,END_RANGE},{START_RANGE, END_RANGE}}</returns>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.GetRange(System.Int64,System.Web.HttpContextBase,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Parses the range header from the request.
            </summary>
            <param name="size">Size of data.</param>
            <param name="currentContext">Current HTTP context</param>
            <param name="isRangeRequest">Indicates whether it is range request.</param>
            <param name="isMultipart">Indicates whether it is multipart range request.</param>
            <param name="areRangesValid">Indicates whether ranges are valid (or request is not range request).</param>
            <returns>2D Array in format {{START_RANGE,END_RANGE},{START_RANGE, END_RANGE}}</returns>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.GetRangeInternal(System.Int64,System.String,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Parses the range header from the request.
            </summary>
            <param name="size">Size of data.</param>
            <param name="rangeHeader">Value of <c>Range</c> request header.</param>
            <param name="isRangeRequest">Indicates whether it is range request.</param>
            <param name="isMultipart">Indicates whether it is multipart range request.</param>
            <param name="areRangesValid">Indicates whether ranges are valid (or request is not range request).</param>
            <returns>2D Array in format {{START_RANGE,END_RANGE},{START_RANGE, END_RANGE}}</returns>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.Respond400(System.String)">
            <summary>
            Sets the 400 status (Bad Request) and ends the response.
            </summary>
            <param name="explanationMessage">The optional message to include in the response.</param>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.Respond403">
            <summary>
            Sets the 403 status (Forbidden) and ends the response.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.Respond404">
            <summary>
            Sets the 404 status (Not Found) and ends the response.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.Respond500">
            <summary>
            Sets the 500 status (Internal Server Error) and ends the response.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.Respond503">
            <summary>
            Sets the 503 status (Service Unavailable) and ends the response.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.EndResponse">
            <summary>
            Ends current response (calls Response.End).
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.CompleteRequest">
            <summary>
            Completes current request (calls ApplicationInstance.CompleteRequest).
            </summary>
        </member>
        <member name="M:CMS.Helpers.RequestHelper.EnsureScriptTimeout">
            <summary>
            Set script timeout due to compilation delay
            </summary>
        </member>
        <member name="T:CMS.Helpers.RequestStatusEnum">
            <summary>
            URL rewriting results enum.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.Unknown">
            <summary>
            Unknown result.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.NotPage">
            <summary>
            Url path isn't document page.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.PathRedirected">
            <summary>
            Url path is redirected.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.PathExcluded">
            <summary>
            Url path is excluded.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.PathRewrittenDisableOutputFilter">
            <summary>
            Url path is rewritten and output filter is disabled.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.PageNotFound">
            <summary>
            Page not found.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.CustomHandler">
            <summary>
            Custom handler.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.GetFileHandler">
            <summary>
            Url path is processed by CMS handlers (GetAttachmentHandler, GetMetafileHandler, GetMediaHandler etc.)
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.SystemPage">
            <summary>
            System page.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.GetProduct">
            <summary>
            Gets product page.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.GetProductFile">
            <summary>
            Gets e-product file.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RequestStatusEnum.RESTService">
            <summary>
            REST Service request
            </summary>
        </member>
        <member name="T:CMS.Helpers.URLHelper">
            <summary>
            Url processing methods.
            </summary>
        </member>
        <member name="F:CMS.Helpers.URLHelper.SYSTEM_QUERY_PARAMETER">
            <summary>
            Used in system requests of live site pages, it prevents the system to log statistics or activities, e.g. when dynamic newsletter is generated.
            </summary>
        </member>
        <member name="F:CMS.Helpers.URLHelper.DEFAULT_HTTP_PORT">
            <summary>
            Constant for HTTP port.
            </summary>
        </member>
        <member name="F:CMS.Helpers.URLHelper.DEFAULT_HTTPS_PORT">
            <summary>
            Constant for HTTPS port.
            </summary>
        </member>
        <member name="T:CMS.Helpers.URLHelper.PathModifierHandler">
            <summary>
            Handler to modify the existing given path
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="P:CMS.Helpers.URLHelper.ProtocolRegex">
            <summary>
            Regex used to check or remove protocol
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.UseLimitURLReplacements">
            <summary>
            Gets the value that indicates whether multiple, starting and trailing replacements should be limited.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.ParamRegEx">
            <summary>
            Parameter regular expression [name] -> [RegEx]
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.RegExMakeLinksAbsolute">
            <summary>
            Make links absolute regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.LanguageParameterName">
            <summary>
            Language query parameter name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.AliasPathParameterName">
            <summary>
            Alias path query parameter name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.DefaultTheme">
            <summary>
            Default theme name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.CustomTheme">
            <summary>
            Custom theme name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.Host">
            <summary>
            Application's host. Is to be used for customizing host in case of having application behind a proxy.
            Can be set via AppSettings's key 'CMSUrlHost'.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.UrlPort">
            <summary>
            Application's URL port.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.SSLUrlPort">
            <summary>
            Application's SSL URL port.
            </summary>
        </member>
        <member name="P:CMS.Helpers.URLHelper.HasHttpContext">
            <summary>
            Gets a value indicating whether HTTP context is available.
            </summary>
            <value>
              <c>true</c> if HTTP context is available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsTldDomain(System.String)">
            <summary>
            Returns true if domain is IP address or top level domain e.g localhost
            </summary>
            <param name="domain">domain without protocol</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetAllowedURLCharacters(System.String)">
            <summary>
            Returns regular expression for allowed URL characters.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ForbiddenURLCharacters(System.String)">
            <summary>
            Returns string containing all forbidden characters that cannot be used in node alias and in the file system.
            </summary>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ForbiddenCharactersReplacement(System.String)">
            <summary>
            Returns string containing replacement for forbidden characters (chars that can't be used in node alias and in the file system).
            </summary>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetPhysicalPath(System.String)">
            <summary>
            Returns the physical file path that corresponds to the specified virtual path on the web server.
            </summary>
            <param name="path">File virtual path</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> contains illegal characters</exception>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetSafeFileName(System.String,System.String)">
            <summary>
            Returns the safe equivalent to the given file name (with extension).
            </summary>
            <param name="fileName">Original file name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetSafeFileName(System.String,System.String,System.Boolean)">
            <summary>
            Returns the safe equivalent to the given file name.
            </summary>
            <param name="fileName">Original file name</param>
            <param name="siteName">Site name</param>
            <param name="extensionIncluded">Indicates if given fileName contains extension</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetSafeUrlPart(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Returns the safe part of URL. This method doesn't process complete URL it handles only part of URL.
            </summary>
            <param name="part">String with URL part which may contain URL-unsafe characters. Enter only part of URL without any '/' characters</param>
            <param name="siteName">Site name from where forbidden characters should be taken</param>
            <param name="removeDiacritics">Indicates if diacritics should be removed from the URL part</param>
            <param name="limitReplacements">Indicates if replacements should be aggregated into single replacement character if found multiple invalid characters in row</param>
            <param name="additionalAllowedCharacters">Additional allowed characters for the URL part</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.LimitURLReplacements(System.String,System.Char)">
            <summary>
            Limits multiple replacements, starting and trailing replacements from URL. Can be disabled by app key: CMSLimitUrlReplacement.
            </summary>
            <param name="url">Input URL path</param>
            <param name="replacement">Replacement character</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.DomainMatch(System.String,System.String,System.Boolean)">
            <summary>
            Returns true if the given domain names match.
            </summary>
            <param name="first">First domain name</param>
            <param name="second">Second domain name</param>
            <param name="checkPort">If true, port is checked</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemovePort(System.String)">
            <summary>
            Removes the port part from the domain name.
            </summary>
            <param name="domain">Domain name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemovePortFromURL(System.String)">
            <summary>
            Removes the port part from the whole URL.
            </summary>
            <param name="url">URL</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetDomain(System.String)">
            <summary>
            Returns domain or domain with port if present from specific URL.
            </summary>
            <param name="url">Input URL in format http(s)://domain</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetDomainName(System.String)">
            <summary>
            Returns name (e.g. localhost) without port, www. prefix and application path.
            </summary>
            <param name="domain">Domain.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetApplicationUrl(System.String)">
            <summary>
            Returns the application URL (absolute), without trailing slashes.
            </summary>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetApplicationUrl">
            <summary>
            Returns current application URL (absolute), without trailing slashes.
            </summary>
        </member>
        <member name="M:CMS.Helpers.URLHelper.AddParameterToUrl(System.String,System.String,System.String)">
            <summary>
            Adds parameter to specified URL.
            </summary>
            <remarks>
            This method does NOT support URLs with anchor (#).
            </remarks>
            <param name="url">URL to be modified</param>
            <param name="parameterName">Parameter name</param>
            <param name="parameterValue">Parameter value</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetFullApplicationUrl(System.String)">
            <summary>
            Returns current application absolute URL.
            </summary>
            <param name="domainName">Domain name (the value can possibly contain protocol, port and application path), if not supplied <see cref="P:CMS.Helpers.RequestContext.FullDomain"/> is used instead.</param>
            <exception cref="T:System.ArgumentException"><paramref name="domainName"/> has an invalid format.</exception>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetAbsoluteUrl(System.String,System.String)">
            <summary>
            Returns the absolute URL (including port) representation for the given relative URL, uses given domain and application path.
            </summary>
            <param name="relativeUrl">Relative URL to translate</param>
            <param name="domainName">Domain name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetAbsoluteUrl(System.String)">
            <summary>
            Returns the absolute URL (including port) representation for the given relative URL, uses current domain and application path.
            </summary>
            <param name="relativeUrl">Relative URL to translate</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetAbsoluteUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the absolute URL for the given relative URL based on the given paths.
            </summary>
            <param name="relativeUrl">Relative URL to translate to absolute</param>
            <param name="domainUrl">Domain (server) URL, for /xxx URLs</param>
            <param name="applicationUrl">Application URL (including server), for ~/ URLs</param>
            <param name="currentPath">Current execution path, for directory relative URLs</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ContainsProtocol(System.String)">
            <summary>
            Returns true if the URL contains the protocol part.
            </summary>
            <param name="url">URL to check</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.AddUrlParameter(System.String,System.String,System.String)">
            <summary>
            Add parameter to query string, queryStringValue MUST start with "?".
            </summary>
            <param name="queryStringValue">Query string value</param>
            <param name="newKeyName">Key name</param>
            <param name="newKeyValue">Key value</param>
            <returns>return query string with new value</returns>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveUrlParameter(System.String,System.String)">
            <summary>
            Remove parameter from query string.
            </summary>
            <param name="queryStringValue">Query string value</param>
            <param name="keyName">Key name</param>
            <returns>return query string without query string value</returns>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveUrlParameters(System.String,System.String[])">
            <summary>
            Removes the given URL parameters
            </summary>
            <param name="url">URL to modify</param>
            <param name="names">Parameter names to remove</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.PropagateUrlParameters(System.String,System.String[])">
            <summary>
            Propagates the URL parameters from current URL to the given URL
            </summary>
            <param name="url">URL to modify</param>
            <param name="parameters">Parameters to propagate</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetQueryValue(System.String,System.String,System.Boolean@)">
            <summary>
            Gets the query string value for specified key name.
            </summary>
            <param name="url">Input URL</param>
            <param name="keyName">Query string key name</param>
            <param name="keyExists">Indicates whether query key exists</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetParamRegEx(System.String)">
            <summary>
            Gets the regular expression for the query string parameter
            </summary>
            <param name="name">Parameter name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetProtocol(System.String)">
            <summary>
            Returns protocol from url.
            e.g. http, https, ftp, ...
            If no protocol found, null is returned.
            </summary>
            <param name="url">Url that may contain any protocol in valid format</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetQueryValue(System.String,System.String)">
            <summary>
            Gets the query string value for specified key name.
            </summary>
            <param name="url">Input URL</param>
            <param name="keyName">Query string key name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveParametersFromUrl(System.String,System.String[])">
            <summary>
            Removes specified parameters from the given URL.
            </summary>
            <remarks>
            This method does NOT support URLs with anchor (#).
            </remarks>
            <param name="url">URL to be modified</param>
            <param name="parameters">Parameters to remove</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveParameterFromUrl(System.String,System.String)">
            <summary>
            Removes specified parameters from the given URL.
            </summary>
            <param name="url">URL to be modified</param>
            <param name="parameterName">Parameter name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.AppendQuery(System.String,System.String)">
            <summary>
            Appends the given query string to the URL. If the URL already contains query string, merges both.
            </summary>
            <param name="url">URL</param>
            <param name="newQuery">Query to append</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsExcludedSystemEnum(System.String,System.Boolean)">
            <summary>
            Checks if page with specified relative path is excluded from system paths and returns the category of the excluded page.
            </summary>
            <param name="relativePath">Page relative path</param>
            <param name="checkPhysicalPath">Indicates whether physical path should be checked. Returns Physical path type</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetExcludedStateForFileSpecificUrls(System.String,System.Boolean@)">
            <summary>
            Returns <see cref="T:CMS.Helpers.ExcludedSystemEnum"/> for relative path related to the file handled by the GetFileHandler.
            </summary>
            <param name="relativePath">Relative path</param>
            <param name="checkedPredicate">Indicates whether the path was already evaluated and if not process the method and cahnge the checked state.</param>
            <returns>
            Returns <see cref="F:CMS.Helpers.ExcludedSystemEnum.Unknown"/> if path does not match; otherwise specific enum type.
            </returns>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsSystemPath(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns true if the given path is a system path. The path is expected to be lowercase and start with slash, e.g. "/cmsmodules/..."
            </summary>
            <param name="path">path to check</param>
            <param name="codeFolders">Check code folders</param>
            <param name="virtualFolders">Check virtual folders</param>
            <param name="specialFolders">Special folders</param>
            <param name="cmsPages">Special CMS pages</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsAnchor(System.String)">
            <summary>
            Returns true for url's starting with hash (#) character.
            </summary>
            <param name="url">URL to process</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveAnchorFromUrl(System.String,System.String@)">
            <summary>
            Removes the anchor from the given <paramref name="url"/>.
            </summary>
            <param name="url">The URL to be stripped.</param>
            <param name="anchorValue">Returns the anchor value (including the anchor symbol).</param>
            <returns>The URL without the anchor.</returns>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsExcludedSystem(System.String)">
            <summary>
            Checks if page with specified relative path is excluded from system paths.
            </summary>
            <param name="relativePath">Page relative path</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsExcluded(System.String,System.String)">
            <summary>
            Checks if page with specified relative path is excluded from excluded paths.
            </summary>
            <param name="relativePath">Page relative path</param>
            <param name="excludedPaths">Excluded paths</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsExcludedCustom(System.String,System.String)">
            <summary>
            Checks if page with specified relative path is excluded from excluded paths.
            </summary>
            <param name="relativePath">Page relative path</param>
            <param name="excludedPaths">Excluded paths</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsExcluded(System.String,System.String[])">
            <summary>
            Checks if page with specified relative path is excluded from excluded paths.
            </summary>
            <param name="relativePath">Page relative path</param>
            <param name="excludedPaths">Excluded paths</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsRootDefaultDocumentRelativePath(System.String)">
            <summary>
            Indicates whether <paramref name="relativePath"/> starting from application root identifies a default document within application root.
            The default document is identified by '/default.aspx', '/' or empty string <paramref name="relativePath"/>.
            </summary>
            <param name="relativePath">Path relative to the application root.</param>
            <returns>Returns true if <paramref name="relativePath"/> identifies a default document, otherwise returns false.</returns>
            <seealso cref="P:CMS.Base.SystemContext.ApplicationPath"/>
        </member>
        <member name="M:CMS.Helpers.URLHelper.CombinePath(System.String,System.Char,System.String,System.String)">
            <summary>
            Resolves given path to be absolute (combines with given paths).
            </summary>
            <param name="path">Relative path</param>
            <param name="separator">Path separator</param>
            <param name="webSitePath">Web site path</param>
            <param name="serverPath">Server path</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveFirstPart(System.String,System.String)">
            <summary>
            Returns the string with first selector removed.
            </summary>
            <param name="expression">Expression</param>
            <param name="delimiter">Selector delimiter</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveQuery(System.String)">
            <summary>
            Removes the query from URL.
            </summary>
            <param name="url">URL to process</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetQuery(System.String)">
            <summary>
            Gets the query from URL.
            </summary>
            <param name="url">URL to process</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.UnMapPath(System.String)">
            <summary>
            Converts the physical file path to virtual path within the web application.
            </summary>
            <param name="physicalPath">Physical path to convert</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetVirtualPath(System.String)">
            <summary>
            Converts the absolute path to the virtual.
            </summary>
            <param name="path">Path to process (</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.UnResolveUrl(System.String,System.String)">
            <summary>
            Un-resolves the given URL (replaces application path with ~).
            </summary>
            <param name="url">URL to un-resolve</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveExtension(System.String)">
            <summary>
            Removes the potential extension from the given path.
            </summary>
            <param name="path">Path to process</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.AddHTTPToUrl(System.String)">
            <summary>
            Adds HTTP protocol to URL if it's not contain HTTP or HTTPS.
            </summary>
            <param name="url">URL for which HTTP is added.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveProtocol(System.String)">
            <summary>
            Removes the protocol part from the URL.
            </summary>
            <param name="url">URL to process (in format protocol://...)</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveProtocolAndDomain(System.String)">
            <summary>
            Removes the protocol and domain part from the URL.
            </summary>
            <param name="url">URL to process (in format protocol://domain/...)</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveApplicationPath(System.String)">
            <summary>
            Removes the Application path from the URL.
            </summary>
            <param name="url">URL to process (in format /ApplicationPath/...)</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetAppRelativePath(System.Uri)">
            <summary>
            Returns the relative path for specified URL.
            </summary>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ResolveUrl(System.String,System.Boolean)">
            <summary>
            Resolves an application relative URL to the absolute form.
            </summary>
            <param name="url">Virtual application root relative URL</param>
            <param name="ensurePrefix">If true, the current URL prefix is ensured for the URL</param>
            <returns>Absolute URL</returns>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="url" /> uses a leading .. to exit above the top directory.</exception>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveDotSegments(System.String)">
            <summary>
            Removes '.' and '..' segments in the <paramref name="path"/>.
            As side effect it fix double/triple/etc... slashes in path.
            </summary>
            <remarks>
            From virtual path '/Level1/../hello.aspx', '/./hello.aspx' or '//hello.aspx' it becomes in all three cases '/hello.aspx'
            From relative path '~/Level1/../hello.aspx', '~/./hello.aspx' or '~//hello.aspx' it becomes in all three cases '~/hello.aspx'
            </remarks>
            <param name="path">Path.</param>
            <returns>Processed path.</returns>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="path" /> uses a leading .. to exit above the top directory.</exception>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ResolveClientUrl(System.String,System.String)">
            <summary>
            Resolves and combine client URL with base URL.
            </summary>
            <param name="baseUrl">Base URL.</param>
            <param name="relativeUrl">Client URL.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetUrlExtension(System.String)">
            <summary>
            Gets the extension for the given URL. Returns the extension with the dot, e.g. ".gif"
            </summary>
            <param name="url">URL to analyze</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.EnsureURLPrefix(System.String,System.String,System.String,CMS.Helpers.URLHelper.PathModifierHandler)">
            <summary>
            Ensures that the given URLs has the given prefix
            </summary>
            <param name="url">URL</param>
            <param name="applicationPath">Application path</param>
            <param name="prefix">URL prefix to ensure</param>
            <param name="urlModifier">Callback for preview hash</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsURLPrefixIncluded(System.String,System.String,System.Int32)">
            <summary>
            Checks if the prefix is included in given URL.
            </summary>
            <param name="url">URL</param>
            <param name="prefix">URL prefix</param>
            <param name="position">Starting index of relative URL</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveWWW(System.String)">
            <summary>
            Trim www if input text starts with it.
            </summary>
        </member>
        <member name="M:CMS.Helpers.URLHelper.UpdateParameterInUrl(System.String,System.String,System.String)">
            <summary>
            Update parameter in specified URL.
            </summary>
            <param name="url">Raw URL</param>
            <param name="parameterName">Parameter name</param>
            <param name="parameterValue">Parameter value</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.MergeQueryStrings(System.String,System.String,System.Boolean)">
            <summary>
            Merges two query strings. Query string parameters should (but don't have to) start with question mark
            but they definitely must omit path part of URL.
            </summary>
            <param name="originalQuery">Query string to be merged with newQuery parameter.</param>
            <param name="newQuery">Query string to be merged with originalQuery parameter.</param>
            <param name="preferOriginal">If true, parameters from originalQuery takes first priority</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RefreshCurrentPage">
            <summary>
            Refreshes the current page by doing a redirect to self
            </summary>
        </member>
        <member name="M:CMS.Helpers.URLHelper.SeeOther(System.String)">
            <summary>
            Redirects the client to another URL using the GET method (303 H).
            </summary>
            <param name="url">Destination URL</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.Redirect(System.String)">
            <summary>
            Redirects the response using specified URL (302 HTTP status code).
            </summary>
            <param name="url">URL for redirection</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RedirectPermanent(System.String)">
            <summary>
            Redirects the response using specified URL using permanent redirection using 301.
            </summary>
            <param name="url">URL for redirection</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RedirectPermanentInternal(System.String)">
            <summary>
            Redirects the response using specified URL using permanent redirection using 301.
            </summary>
            <param name="url">URL for redirection</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ResponseRedirect(System.String,System.Boolean)">
            <summary>
            Redirects the response using specified URL using standard redirection with Response.Redirect.
            </summary>
            <param name="url">URL for redirection</param>
            <param name="endResponse">True to terminate the current process</param>
            <remarks>If calling this method with endResponse = false and the server
            redirect is performed, the request can be  ended using
            HttpApplication.CompleteRequest() method.</remarks>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ClientRedirect(System.String)">
            <summary>
            Performs client redirect.
            </summary>
            <param name="url">URL to be redirected to.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ServerRedirect(System.String,System.Boolean)">
            <summary>
            Performs server redirect.
            </summary>
            <param name="url">URL to be redirected to.</param>
            <param name="endResponse">True to terminate the current process</param>
            <remarks>If calling this method with endResponse = false, the request can be
            ended using HttpApplication.CompleteRequest() method.</remarks>
        </member>
        <member name="M:CMS.Helpers.URLHelper.ResolveRedirectUrl(System.String)">
            <summary>
            Resolves URL against current virtual path.
            </summary>
            <param name="url">URL to be resolved.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.CheckPrefix(System.String@,System.String,System.Boolean)">
            <summary>
            Checks the URL prefix. If the prefix is present, returns true and removes the prefix from the URL if removePrefix is true.
            </summary>
            <param name="path">Path to check</param>
            <param name="prefix">Prefix to check</param>
            <param name="removePrefix">Remove the prefix if matches</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.CheckPrefixes(System.String@,System.String[],System.Boolean)">
            <summary>
            Checks the URL prefixes. If one of the the prefixes is present, returns true and removes the prefix from the URL if removePrefix is true.
            </summary>
            <param name="path">Path to check</param>
            <param name="prefixes">Prefix to check</param>
            <param name="removePrefix">Remove the prefix if matches</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.GetUrlParameter(System.String,System.String)">
            <summary>
            Returns value of query parameter from URL.
            </summary>
            <param name="url">Input URL</param>
            <param name="parameterName">Name of query parameter</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.RemoveTrailingSlashFromURL(System.String)">
            <summary>
            Removes trailing slash from URL.
            </summary>
            <param name="url">URL</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.UseURLsWithTrailingSlash(System.String)">
            <summary>
            Gets the settings for the URL trailing slash rules.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.EnsureHashToQueryParameters(System.String)">
            <summary>
            Replaces {hash} macro by hash code for given query string parameters.
            </summary>
            <param name="url">URL</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.UrlEncodeQueryString(System.String)">
            <summary>
            URL encodes query string in given URL. Needs HttpContext.
            </summary>
            <param name="url">URL to update.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.EscapeSpecialCharacters(System.String)">
            <summary>
            Ensures URL without forbidden characters (%, &amp;, #).
            </summary>
            <param name="url">URL to replace special characters</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.LocalRedirect(System.String)">
            <summary>
            Redirects (302 HTTP status code) the response using specified URL in case it is local,
            otherwise redirects to <see cref="P:CMS.Base.SystemContext.ApplicationPath"></see>
            </summary>
            <remarks>Use this method when the specified URL comes as user input (query string, POST form data, etc.)
            in order to prevent unvalidated redirects.</remarks>
            <param name="url">URL within same domain.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsLocalUrl(System.String)">
            <summary>
            Returns true if the given URL is local.
            </summary>
            <param name="url">URL to check.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.EnsureProperPort(System.Boolean,System.Uri)">
            <summary>
            Sets proper port according to SSL option and custom port.
            </summary>
            <param name="isSSL">SSL option</param>
            <param name="uri">Uri to check</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.IsAbsoluteUrl(System.String,System.Uri@)">
            <summary>
            Returns true if provided URL is absolute and has http or https scheme. False otherwise.
            </summary>
            <param name="url">URL to check.</param>
            <param name="uri">When this method returns, contains the constructed System.Uri.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.TryCreateAbsoluteUrl(System.String,System.Uri@)">
            <summary>
            Returns true if provided URL is absolute in platform agnostic manner.
            On Windows platform preserves semantics of <see cref="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)" />.
            On Unix platforms it also ensures that relative urls are not considered as absolute file paths.
            </summary>
            <param name="url">URL to check.</param>
            <param name="result">When this method returns, contains the constructed System.Uri.</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.MakeLinksAbsolute(System.String,System.String)">
            <summary>
            Returns the absolute representation of the HTML links (image paths ...).
            </summary>
            <param name="text">Input HTML</param>
            <param name="domainName">Domain name</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.MakeLinksAbsolute(System.String)">
            <summary>
            Returns the absolute representation of the HTML links (image paths ...).
            </summary>
            <param name="text">Input HTML</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.LinkMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Link match evaluation function.
            </summary>
            <param name="m">Regular expression match</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.SiteLinkMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Link match for site evaluation function.
            </summary>
            <param name="m">Regular expression match</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.MakeAbsolute(System.String)">
            <summary>
            Returns the absolute URL representation for the given relative URL.
            </summary>
            <param name="relativeUrl">Relative URL to convert to absolute</param>
        </member>
        <member name="M:CMS.Helpers.URLHelper.MakeSiteAbsolute(System.String)">
            <summary>
            Returns the absolute URL representation for the given relative URL for site.
            </summary>
            <param name="relativeUrl">Relative URL to convert to absolute</param>
        </member>
        <member name="T:CMS.Helpers.VirtualContext">
            <summary>
            Stores the virtual context for the current request
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_WF_GUID">
            <summary>
            Name of the workflow cycle GUID parameter
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_USERNAME">
            <summary>
            Name of the user name parameter
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_VIEWMODE">
            <summary>
            Name of the view mode parameter
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_SITENAME">
            <summary>
            Name of the site name parameter
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_CULTURE">
            <summary>
            Name of the culture code parameter
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_PREVIEW_LINK">
            <summary>
            Name of the preview link parameter
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_PREVIEW_MODE">
            <summary>
            Name of the parameter indicating that the request is in the preview mode and the user name is stored in the cookie.
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_FORM_BUILDER_URL">
            <summary>
            Name of the parameter which indicates that data in the <see cref="T:CMS.Helpers.VirtualContext"/> URL belong to Form builder.
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_FORM_BUILDER_EXPIRATION">
            <summary>
            Name of the parameter which indicates form builder preview link expiration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_EMBEDED_IN_ADMINISTRATION">
            <summary>
            Name of the parameter which indicates if page is embedded in administration inside an iframe.
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_HASH">
            <summary>
            Name of the hash parameter
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.PARAM_READONLY_MODE">
            <summary>
            Name of the parameter which indicates that the virtual context is in readonly mode and cannot modify data.
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.ADMINISTRATION_DOMAIN_PARAMETER">
            <summary>
            Query string parameter that holds administration url (scheme + domain + appPath)
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.mVirtualContextPrefix">
            <summary>
            Default URL prefix for the pages virtual context
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.mVirtualContextSeparator">
            <summary>
            Default URL separator for the prefix and original URL for pages with virtual context. Default value is "-"
            </summary>
        </member>
        <member name="F:CMS.Helpers.VirtualContext.FormBuilderLinkExpiration">
            <summary>
            Represents period for which the form builder preview link is valid.
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.VirtualContextPrefix">
            <summary>
            Default URL prefix for the pages virtual context. Default value is "/cmsctx/"
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.VirtualContextSeparator">
            <summary>
            Default URL separator for the prefix and original URL for pages with virtual context. Default value is "-"
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.CurrentURLPrefix">
            <summary>
            Current prefix for the URL in the virtual context
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.IsInitialized">
            <summary>
            Returns true if some virtual context properties have been initialized
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.IsPreviewLinkInitialized">
            <summary>
            Returns true if preview link virtual context properties have been initialized
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.IsFormBuilderLinkInitialized">
            <summary>
            Returns true if form builder virtual context properties have been initialized.
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.ReadonlyMode">
            <summary>
            Returns true if virtual context is initialized in readonly mode only
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.CurrentItems">
            <summary>
            Current items
            </summary>
        </member>
        <member name="P:CMS.Helpers.VirtualContext.PathHashSettings">
            <summary>
            Returns an instance of <see cref="T:CMS.Helpers.HashSettings"/> which is used for path hash calculation.
            </summary>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.ItemIsSet(System.String)">
            <summary>
            Returns true, if the given item is set
            </summary>
            <param name="key">Key to check</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetItem(System.String)">
            <summary>
            Gets the particular item from virtual context
            </summary>
            <param name="key">Key to get </param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.SetItem(System.String,System.Object)">
            <summary>
            Sets the particular item in the virtual context
            </summary>
            <param name="key">Item key</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.Reset">
            <summary>
            Resets the current virtual context
            </summary>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.RemoveVirtualContextPrefix(System.String,System.String)">
            <summary>
            Removes the virtual context prefix from the given URL
            </summary>
            <param name="path">Path to modify</param>
            <param name="applicationPath">The application path. If not provided, current application path is used.</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.ReplaceVirtualContextPrefix(System.String,System.String,System.String)">
            <summary>
            Replaces the virtual context prefix from the given URL with a new one
            </summary>
            <param name="path">Path to modify</param>
            <param name="newPrefix">New prefix</param>
            <param name="applicationPath">The application path. If not provided, current application path is used.</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.ContainsVirtualContextPrefix(System.String)">
            <summary>
            Returns true if the URL contains virtual context prefix
            </summary>
            <param name="url">URL to check</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetVirtualContextPath(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Removes the virtual context prefix from the given URL
            </summary>
            <param name="path">Path to modify</param>
            <param name="values">Collection of the context parameters</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetVirtualContextPrefix(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the prefix for the virtual context URL
            </summary>
            <param name="values">Collection of the context parameters</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.AddPathHash(System.String)">
            <summary>
            Calculates hash for the given <paramref name="path"/> and appends it to the URL.
            </summary>
            <param name="path">Relative path of the document to get hash for.</param>
            <returns>URL passed via parameter <paramref name="path"/> appended with its calculated hash as a query parameter named "uh".</returns>
            <exception cref="T:System.ArgumentNullException">Is thrown when <paramref name="path"/> is null or empty.</exception>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.ValidatePathHash(System.String)">
            <summary>
            Validates the hash of the relative path of the document.
            </summary>
            <param name="path">Relative path of the document to get hash for.</param>
            <returns>True if validation succeeded, otherwise false.</returns>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.HandleVirtualContext(System.String@)">
            <summary>
            Loads and stores the virtual context values for the request.
            </summary>
            <param name="relativePath">Relative path. If loading succeeded, returns updated virtual path without the context values.</param>
            <returns>True, if loading of the virtual context succeeded and the request is a virtual context request, otherwise false.</returns>
            <exception cref="T:CMS.Helpers.InvalidVirtualContextException">When post back under preview link is made -or- link is invalid.</exception>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.LoadVirtualContextValues(System.String@)">
            <summary>
            Loads the virtual context values from the URL into a <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <param name="relativePath">Current relative path. If loading succeeded, returns updated virtual path without the context values.</param>
            <returns>Object containing parsed values, if loading of the virtual context succeeded and the request is a virtual context request, otherwise null.</returns>
            <exception cref="T:CMS.Helpers.InvalidVirtualContextException">When post back under preview link is made -or- link is invalid.</exception>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.StoreVirtualContextValues(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Stores key-value pairs into virtual context.
            </summary>
            <param name="nameValueCollection">Key-value pairs to store.</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.ValidatePrincipal(System.Security.Principal.IPrincipal)">
            <summary>
            Validates whether the request carries a valid user name.
            The username can be either in the URL or in a cookie.
            </summary>
            <exception cref="T:CMS.Helpers.InvalidVirtualContextException">When the given <paramref name="principal"/> does not carry any user or the user is disabled.</exception>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetPreviewModePathFromVirtualContext(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Gets preview path based on given path and current initialized context.
            </summary>
            <param name="path">Application absolute path to be converted.</param>
            <param name="readonlyMode">Indicates if readonly mode should be enabled to disallow modify actions and POST requests.</param>
            <param name="cultureCode">Defines a culture code for resulting preview path. If not provided, culture code from current initialized context is used.</param>
            <param name="embededInAdministration">Indicates if page is embedded in administration inside an iframe.</param>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetPreviewModeParameters(System.Guid,System.String,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Gets the collection of parameters for preview mode.
            </summary>
            <param name="userGuid">Context of user for the preview.</param> 
            <param name="cultureCode">Context of culture for the preview.</param>
            <param name="workflowCycleGuid">Context of workflow cycle GUID.</param>
            <param name="readonlyMode">Indicates if readonly mode should be enabled to disallow modify actions and POST requests.</param>
            <param name="embededInAdministration">Indicates if page is embedded in administration inside an iframe.</param>
            <remarks>
            Preview mode is used for the page builder and the preview tab.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetPreviewLinkParameters(System.Guid,System.String,System.Guid)">
            <summary>
            Gets the collection of parameters for preview path.
            </summary>
            <param name="userGuid">Context of user for the preview.</param> 
            <param name="cultureCode">Context of culture for the preview.</param>
            <param name="workflowCycleGuid">Context of workflow cycle GUID.</param>
            <remarks>
            Preview link URL can be used by external users. This URL does not need additional authentization.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetFormBuilderPath(System.String,System.Guid)">
            <summary>
            Returns path containing <see cref="T:CMS.Helpers.VirtualContext"/> data required by Form builder.
            </summary>
            <param name="path">Application absolute path to be converted.</param>
            <param name="userGuid">Context of user for the form builder.</param> 
        </member>
        <member name="M:CMS.Helpers.VirtualContext.AddAdministrationDomain(System.String)">
            <summary>
            Searches for <see cref="F:CMS.Helpers.VirtualContext.ADMINISTRATION_DOMAIN_PARAMETER"/> parameter in current HTTP request query string
            and adds it into the path (if the parameter was found).
            </summary>
            <param name="path">Application path.</param>
            <returns>Application path with administration domain (when applicable).</returns>
            <remarks>
            This API supports the framework infrastructure and is not intended to be used directly from your code.
            </remarks>
            <exclude />
        </member>
        <member name="M:CMS.Helpers.VirtualContext.GetFormBuilderLinkExpiration(System.DateTime)">
            <summary>
            Returns given <paramref name="dateTime"/> represented in UTC time as number of ticks.
            </summary>
        </member>
        <member name="M:CMS.Helpers.VirtualContext.AddParameterToUrl(System.String,System.String,System.String)">
            <summary>
            Adds a query string parameter to the given URL.
            Supports URLs with hash (#).
            </summary>
        </member>
        <member name="T:CMS.Helpers.AbstractStockHelper`1">
            <summary>
            Abstract class for the stock helpers
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractStockHelper`1.Instance">
            <summary>
            Helper instance
            </summary>
        </member>
        <member name="P:CMS.Helpers.AbstractStockHelper`1.CurrentItems">
            <summary>
            Current items collection.
            </summary>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.Remove(System.String,System.Boolean)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.Contains(System.String,System.Boolean)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.GetItem(System.String,System.Boolean)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.EnsureObject``1(System.String,System.Boolean)">
            <summary>
            Ensures the object in request items
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the object key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.ExecuteWithEmptyStorage(System.Action,System.String,System.Boolean)">
            <summary>
            Executes the given action while ensuring the empty storage under the given key for the time being of the action.
            Restores original storage after the action.
            </summary>
            <param name="action">Action to execute</param>
            <param name="key">Storage key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.GetStorage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the storage
            </summary>
            <param name="key">Storage key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
            <param name="ensure">If true, the storage is ensured if it doesn't exist</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.GetFullStorageKey(System.String)">
            <summary>
            Gets the storage key
            </summary>
            <param name="key">Storage key</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.DropStorage(System.String,System.Boolean)">
            <summary>
            Drops the storage
            </summary>
            <param name="key">Storage key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.AddToStorage(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Adds item to specific storage specified by <paramref name="storageKey"/>.
            </summary>
            <param name="storageKey">Storage key</param>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.Remove(System.String,System.String,System.Boolean)">
            <summary>
            Remove item.
            </summary>
            <param name="storageKey">Storage key</param>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="storageKey">Storage key</param>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="M:CMS.Helpers.AbstractStockHelper`1.GetItem(System.String,System.String,System.Boolean)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="storageKey">Storage key</param>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive, otherwise key is converted to lowercase before use</param>
        </member>
        <member name="T:CMS.Helpers.PersistentStorageHelper">
            <summary>
            Persistent storage management.
            </summary>
        </member>
        <member name="F:CMS.Helpers.PersistentStorageHelper.ITEM_LOCK_OBJECTS_KEY_PREFIX">
            <summary>
            Prefix used for unique identification of storage item locks.
            </summary>
        </member>
        <member name="F:CMS.Helpers.PersistentStorageHelper.PERSISTENT_ITEMS_KEEP_INTERVAL">
            <summary>
            Determines how long are the persistent items kept in persistent storage.
            </summary>
        </member>
        <member name="F:CMS.Helpers.PersistentStorageHelper.mValues">
            <summary>
            Cache for persisted items.
            </summary>
        </member>
        <member name="P:CMS.Helpers.PersistentStorageHelper.PersistentStorageManager">
            <summary>
            Persistent storage manager used by this helper. Guarantees persistence for <see cref="F:CMS.Helpers.PersistentStorageHelper.PERSISTENT_ITEMS_KEEP_INTERVAL"/>.
            The storage operates within the default directory.
            </summary>
        </member>
        <member name="P:CMS.Helpers.PersistentStorageHelper.PersistentDirectory">
            <summary>
            Persistent data directory.
            </summary>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageHelper.GetValue(System.String)">
            <summary>
            Gets the value of persistent item identified by <paramref name="key"/>.
            </summary>
            <param name="key">Persistent item key</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageHelper.SetValue(System.String,System.Object)">
            <summary>
            Sets a persistent item identified by <paramref name="key"/>.
            Setting a null <paramref name="value"/> has the same effect as a call to <see cref="M:CMS.Helpers.PersistentStorageHelper.RemoveValue(System.String)"/>.
            Does nothing when <paramref name="key"/> is null.
            </summary>
            <param name="key">Persistent item key</param>
            <param name="value">Persistent item value</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageHelper.RemoveValue(System.String)">
            <summary>
            Removes a persistent item identified by <paramref name="key"/> from storage.
            </summary>
            <param name="key">Persistent item key</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageHelper.RemoveKeyFromInternalCache(System.String)">
            <summary>
            Removes a key from <see cref="T:CMS.Helpers.PersistentStorageHelper"/> internal cache, so the next request for value
            of given key will be taken from file system.
            </summary>
            <param name="key">Persistent item key</param>
        </member>
        <member name="T:CMS.Helpers.PersistentStorageManager">
            <summary>
            Encapsulates management of persistent storage items.
            </summary>
        </member>
        <member name="F:CMS.Helpers.PersistentStorageManager.PERSISTENT_ITEM_FILE_EXTENSION">
            <summary>
            File extension of persisted items.
            </summary>
        </member>
        <member name="F:CMS.Helpers.PersistentStorageManager.mItemLockObjectsKeyPrefix">
            <summary>
            Prefix to uniquely identify locks for storage items (each lock is identified by this prefix and storage item key).
            </summary>
        </member>
        <member name="F:CMS.Helpers.PersistentStorageManager.mPersistentItemsKeepInterval">
            <summary>
            Defines how long the persisted items are guaranteed to exist.
            </summary>
        </member>
        <member name="P:CMS.Helpers.PersistentStorageManager.PersistentDirectory">
            <summary>
            Directory for storing persistent items.
            If not set, or set to null, default directory is used.
            </summary>
            <remarks>
            <para>
            The default persistence directory is determined by app setting <c>CMSPersistentDirectory</c>.
            If not set, directory <c>Persistent</c> within <c>App_Data</c> is used.
            </para>
            <para>
            If multiple <see cref="T:CMS.Helpers.PersistentStorageManager"/> instances operate within the same directory,
            the behavior is undefined.
            </para>
            </remarks>
        </member>
        <member name="P:CMS.Helpers.PersistentStorageManager.ItemLockObjectsKeyPrefix">
            <summary>
            Gets prefix used for unique identification of storage item locks.
            </summary>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.#ctor(System.String,System.TimeSpan,CMS.Core.IEventLogService)">
            <summary>
            Creates a new persistent storage manager.
            </summary>
            <param name="itemLockObjectsKeyPrefix">Prefix used for unique identification of storage item locks.</param>
            <param name="persistentItemsKeepInterval">Interval specifying how long (at least) the storage items must exist.</param>
            <param name="eventLogService">The event log service.</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.GetItemFromStorage(System.String,System.Func{System.Boolean},System.Action{System.Object},System.Func{System.Object})">
            <summary>
            Gets the specified item from the persistent storage.
            The value is loaded from the storage only if <paramref name="loadCondition"/> is met. Otherwise the result of <paramref name="notLoadedReturnFunc"/> is returned.
            The evaluation of condition and execution of either load action or return function are performed atomically.
            </summary>
            <param name="key">Persistent item key.</param>
            <param name="loadCondition">Condition evaluated atomically before the storage read operation. If the condition is evaluated to true (or is not provided),
            the read operation and <paramref name="loadAction"/> are performed.</param>
            <param name="loadAction">Action executed atomically when the <paramref name="loadCondition"/> is met. The value read from the storage is passed as the action argument.
            If the storage item does not exist, null value is passed as the action argument.
            </param>
            <param name="notLoadedReturnFunc">Function whose result is returned when <paramref name="loadCondition"/> is not met. If it is not provided, it is treated as if it returned null.</param>
            <returns>Item value loaded from the storage if the <paramref name="loadCondition"/> is met and the storage item exists.
            Result of <paramref name="notLoadedReturnFunc"/> when the <paramref name="loadCondition"/> is not met (if return function is not provided, it is treated as if it returns null).
            Null if <paramref name="loadCondition"/> is met, but the storage item does not exist.</returns>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.SaveItemToStorage(System.String,System.Object,System.Action)">
            <summary>
            Saves the item to the persistent storage.
            </summary>
            <param name="key">Persistent item key.</param>
            <param name="value">Persistent item value.</param>
            <param name="saveAction">Action executed atomically with the storage write operation.</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.DeleteItemFromStorage(System.String,System.Action)">
            <summary>
            Deletes the specified item from the persistent storage.
            If the storage item does not exist, no action is performed.
            </summary>
            <param name="key">Storage item key.</param>
            <param name="deleteAction">Action executed atomically with the storage delete operation.</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.DeleteExpiredStorageItems(System.Action{System.String})">
            <summary>
            Deletes storage items which are expired.
            </summary>
            <param name="deleteAction">Action executed atomically with the storage delete operation of each expired item. The deleted item key is passed as the action argument.</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.DeletePossiblyExpiredStorageItem(System.String,System.Action{System.String})">
            <summary>
            Deletes a storage item if it is expired.
            The check whether item is expired an its removal are performed atomically.
            </summary>
            <param name="fileName">Name of the file within persistent storage (with extension).</param>
            <param name="deleteAction">Action executed atomically with the delete operation of expired item. The deleted item key is passed as the action argument.</param>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.GetLockForKey(System.String)">
            <summary>
            Gets lock object for storage item identified by its key.
            </summary>
            <param name="key">Key of the storage item.</param>
            <returns>Lock object for synchronization of access to storage item.</returns>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.IsFileExpired(System.DateTime)">
            <summary>
            Tells you whether file representing a persistent storage item has expired.
            </summary>
            <param name="lastWriteTime">Date and time of last write to the file.</param>
            <returns>True if the file has expired, false otherwise.</returns>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.GetFilePath(System.String)">
            <summary>
            Gets the file path for specified key, or null if <see cref="P:CMS.Helpers.PersistentStorageManager.PersistentDirectory"/> is null.
            </summary>
            <param name="key">Object key</param>
            <returns>Path for the specified key, or null if <see cref="P:CMS.Helpers.PersistentStorageManager.PersistentDirectory"/> is null.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="key"/> is null or empty string.</exception>
        </member>
        <member name="M:CMS.Helpers.PersistentStorageManager.GetKey(System.String)">
            <summary>
            Gets persistent item key from file name.
            </summary>
            <param name="fileName">File name (without extension) for which to return the persistent item key.</param>
            <returns>Key for the file name.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when file name is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when file name does not contain extension <see cref="F:CMS.Helpers.PersistentStorageManager.PERSISTENT_ITEM_FILE_EXTENSION"/>.</exception>
        </member>
        <member name="T:CMS.Helpers.RequestStockHelper">
            <summary>
            Inserts items into RequestItems.Items.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RequestStockHelper.CurrentItems">
            <summary>
            Gets the current items.
            </summary>
        </member>
        <member name="T:CMS.Helpers.SessionHelper">
            <summary>
            Session management.
            </summary>
        </member>
        <member name="P:CMS.Helpers.SessionHelper.SessionIsAvailable">
            <summary>
            Returns true if the session is available
            </summary>
        </member>
        <member name="P:CMS.Helpers.SessionHelper.CurrentSession">
            <summary>
            Current session
            </summary>
        </member>
        <member name="P:CMS.Helpers.SessionHelper.SessionTimeout">
            <summary>
            Gets or sets the session timeout value (this value doesn't change the timeout period).
            </summary>
        </member>
        <member name="P:CMS.Helpers.SessionHelper.AllowSessionState">
            <summary>
            If true, the session state storage is allowed to be used.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.Abandon">
            <summary>
            Cancels the current session.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.Clear(System.String)">
            <summary>
            Clears the session content starting with given string
            </summary>
            <param name="startsWith">If null, removes all session items, if set, remove only items starting with given string</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.GetValue(System.String)">
            <summary>
            Returns the given session value.
            </summary>
            <param name="key">Value key</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.SetValue(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="allowVirtualContext">If true, the value is set even when virtual context is initialized</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.SetValue(System.String,System.String,System.Boolean)">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="allowVirtualContext">If true, the value is set even when virtual context is initialized</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.SetValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="allowVirtualContext">If true, the value is set even when virtual context is initialized</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.SetValue(System.String,System.DateTime,System.Boolean)">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="allowVirtualContext">If true, the value is set even when virtual context is initialized</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.SetValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="allowVirtualContext">If true, the value is set even when virtual context is initialized</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.SetValue(System.String,System.Guid,System.Boolean)">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="allowVirtualContext">If true, the value is set even when virtual context is initialized</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.SetValue(System.String,System.Decimal,System.Boolean)">
            <summary>
            Sets the session value.
            </summary>
            <param name="key">Item key</param>
            <param name="value">Value</param>
            <param name="allowVirtualContext">If true, the value is set even when virtual context is initialized</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.Remove(System.String)">
            <summary>
            Removes the given session item.
            </summary>
            <param name="key">Item key</param>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.GetSessionID">
            <summary>
            Returns the session ID.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SessionHelper.InitSessionTimeout">
            <summary>
            Initializes the session timeout variable
            </summary>
        </member>
        <member name="T:CMS.Helpers.WindowHelper">
            <summary>
            Window objects management.
            </summary>
        </member>
        <member name="M:CMS.Helpers.WindowHelper.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.WindowHelper.Remove(System.String,System.Boolean)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.WindowHelper.Contains(System.String,System.Boolean)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.WindowHelper.GetInternalKey(System.String,System.Boolean)">
            <summary>
            Gets the internal key representation for the given key
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.WindowHelper.GetItem(System.String,System.Boolean)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.Helpers.WindowHelper.Clear(System.String)">
            <summary>
            Clears the session content starting with given string
            </summary>
            <param name="startsWith">If null, removes all session items, if set, remove only items starting with given string</param>
        </member>
        <member name="T:CMS.Helpers.ContainerCustomData">
            <summary>
            Custom data container for data container.
            </summary>    
        </member>
        <member name="P:CMS.Helpers.ContainerCustomData.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="key">Column name</param>
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.LoadData(System.String)">
            <summary>
            Loads the XML to the content table.
            </summary>
            <param name="data">Content XML to load</param>
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.Remove(System.String)">
            <summary>
            Removes element with specified key from collection
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.SaveToDataContainer">
            <summary>
            Sets value to data container.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="ctxt">Streaming context</param>
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.#ctor">
            <summary>
            Constructor - creates empty ContainerCustomData object.
            Object created by this constructor works only as in-memory storage and does not reflects changes to DataClass and DB. 
            </summary>
        </member>
        <member name="M:CMS.Helpers.ContainerCustomData.#ctor(CMS.Base.IDataContainer,System.String)">
            <summary>
            Constructor - creates empty ContainerCustomData object.
            </summary>
            <param name="container">Related data container</param>
            <param name="columnName">Related column name</param>
        </member>
        <member name="T:CMS.Helpers.ConversionService">
            <summary>
            Service which converts object to specific types
            </summary>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetInteger(System.Object,System.Int32)">
            <summary>
            Returns the integer representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetBoolean(System.Object,System.Boolean)">
            <summary>
            Returns the boolean representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetDouble(System.Object,System.Double,System.String)">
            <summary>
            Returns the double representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetDecimal(System.Object,System.Decimal,System.String)">
            <summary>
            Returns the decimal representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetGuid(System.Object,System.Guid)">
            <summary>
            Returns the guid representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetString(System.Object,System.String)">
            <summary>
            Returns the string representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetIdentifier(System.String)">
            <summary>
            Gets the identifier created from the given name
            </summary>
            <param name="name">Display name</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetDateTime(System.Object,System.DateTime,System.String)">
            <summary>
            Returns the DateTime representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetValue``1(System.Object,``0)">
            <summary>
            Converts the value to specified type. If the value is null, default value is used.
            </summary>
            <typeparam name="T">Result type</typeparam>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ConversionService.GetCodeName(System.Object,System.String)">
            <summary>
            Gets the code name created from the given string.
            </summary>
            <param name="name">Display name</param>
            <param name="replacement">Replacement string for invalid characters</param>
        </member>
        <member name="T:CMS.Helpers.CustomData">
            <summary>
            Custom data container.
            </summary>    
        </member>
        <member name="F:CMS.Helpers.CustomData.CUSTOMDATAROOTNAME">
            <summary>
            Root element name of custom data.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CustomData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Helpers.CustomData.#ctor">
            <summary>
            Constructor - creates empty CustomData object.
            </summary>
        </member>
        <member name="T:CMS.Helpers.DataHelper">
            <summary>
            Methods to work with the Data.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DataHelper.FAKE_ID">
            <summary>
            Fake ID to use when the ID column requires a value, and needs to be faked
            </summary>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataContainer(System.Object)">
            <summary>
            Gets the data container able to read the given data object
            </summary>
            <param name="data">Data</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataContainerItem(System.Object,System.String)">
            <summary>
            Returns data from datarow, datarowview or ISimpleDataContainer objects for specified column.
            </summary>
            <param name="data">Data container</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetParentPath(System.String)">
            <summary>
            Returns the parent path for the specified path (any kind of path with "/" as a separator)
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetItemsCount(System.Object)">
            <summary>
            Gets the items count in the specified data source.
            </summary>
            <param name="dataSource">Data source</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.DataSourceIsEmpty(System.Data.DataSet)">
            <summary>
            Returns true if the given data source is empty.
            </summary>
            <param name="dataSource">Data source to check for emptiness</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.DataSourceIsEmpty(System.Object)">
            <summary>
            Returns true if the given data source is empty.
            </summary>
            <param name="dataSource">Data source to check for emptiness</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.TryGetDataRowValue(System.Data.DataRow,System.String,System.Object@)">
            <summary>
            Returns the value from the DataRow field.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="value">Returning the value</param>
            <returns>Returns true if the value (field) is not found</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataRowValue(System.Data.DataRow,System.String)">
            <summary>
            Returns the value from the DataRow field, or DBNull.Value if the field does not exist in the datarow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.TryGetDataRowViewValue(System.Data.DataRowView,System.String,System.Object@)">
            <summary>
            Returns the value from the DataRowView field.
            </summary>
            <param name="dr">DataRowView with the data</param>
            <param name="columnName">Column name</param>
            <param name="value">Returning the value</param>
            <returns>Returns true if the value (field) is not found</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataRowViewValue(System.Data.DataRowView,System.String)">
            <summary>
            Returns the value from the DataRowView field, or null if the field does not exist in the datarow.
            </summary>
            <param name="dr">DataRowView with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.SetDataRowValue(System.Data.DataRow,System.String,System.Object)">
            <summary>
            Sets value to data row. If value is null, DBNull will be used.
            </summary>
            <param name="dr">Data row</param>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetSingleColumnDataSet(System.String,System.String,System.Type)">
            <summary>
            Returns a DataSet containing single table with single column.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Column name</param>
            <param name="columnType">Column data type</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataSetFromXml(System.String)">
            <summary>
            Gets DataSet from the given XML string.
            </summary>
            <param name="xmlData">XML data</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.IsEmpty(System.Object)">
            <summary>
            Returns true, if the given value is empty (null, DBNull, or "").
            </summary>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetNotEmpty(System.Object,System.String)">
            <summary>
            Returns second parameter if the first is null or "".
            </summary>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ConvertValue(System.Object,System.Type)">
            <summary>
            Converts the value to a specific type.
            </summary>
            <param name="value">Value to convert</param>
            <param name="type">Target type</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ConvertValue(System.Object,System.Type,System.Object@)">
            <summary>
            Converts the value to a specific type. Returns true if conversion was possible, otherwise false.
            </summary>
            <param name="value">Value to convert</param>
            <param name="type">Target type</param>
            <param name="result">Result of the conversion</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ConvertValueToDefaultCulture(System.String,System.Type)">
            <summary>
            Converts value to its equivalent string representation using default culture format. Can be used to convert Double, Decimal, DateTime or TimeSpan values.
            </summary>
            <param name="value">Value to convert</param>
            <param name="type">Type of converted value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.IsValidID(System.Int32)">
            <summary>
            Returns true if the given value is a valid ID
            </summary>
            <param name="id">ID to check</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetScalarValue(System.Data.DataSet)">
            <summary>
            Gets the first value from the given DataSet.
            </summary>
            <param name="ds">DataSet with the data</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.IsZero(System.Object)">
            <summary>
            Returns true, if the given value is zero (null, DBNull, or 0).
            </summary>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetNotZero(System.Object,System.Int32)">
            <summary>
            Returns the object converted to integer or default value when the result of conversion equals zero.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value in case result is zero</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.SortDataTable(System.Data.DataTable,System.String)">
            <summary>
            Sorts the Data table using given OrderBy expression.
            </summary>
            <param name="dt">Table to sort</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.CreateUniqueTableColumn(System.Data.DataTable,System.String,System.Type)">
            <summary>
            Creates column with unique name int he given table.
            </summary>
            <param name="dt">Data table</param>
            <param name="columnName">Column name</param>
            <param name="type">Column data type</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataView(System.Object)">
            <summary>
            Returns the DataView from the given data source.
            </summary>
            <param name="dataSource">Data source</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataTable(System.Object)">
            <summary>
            Returns the DataTable from the given data source.
            </summary>
            <param name="dataSource">Data source</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetSizeString(System.Int64,CMS.Helpers.FileSizeUnitsEnum)">
            <summary>
            Returns the string for the specified file size.
            </summary>
            <param name="size">File size in bytes</param>    
            <param name="unit">Unit in which you want the result</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.CompareByteArrays(System.Byte[],System.Byte[])">
            <summary>
            Compares two byte arrays.
            </summary>
            <param name="data1">First array</param>
            <param name="data2">Second array</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.MergeTables(System.Data.DataTable,System.Data.DataTable,System.Boolean)">
            <summary>
            Merges two data tables into one
            </summary>
            <param name="dt">Source data table</param>
            <param name="destDT">Destination data table</param>
            <param name="handleUnique">If true, unique values are processed to maintain only one such record in the result</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.TransferTableRows(System.Data.DataTable,System.Data.DataTable,System.String,System.String)">
            <summary>
            Transfers table rows between two tables.
            </summary>
            <param name="destinationDT">Destination table</param>
            <param name="sourceDT">Source table</param>
            <param name="where">Where condition for rows</param>
            <param name="orderBy">Order BY</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.SetTableName(System.Data.DataSet,System.String)">
            <summary>
            Sets the table name in the specified DataSet.
            </summary>
            <param name="ds">DataSet</param>
            <param name="tableName">Table name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.RenameTable(System.Data.DataSet,System.String,System.String)">
            <summary>
            Renames the table in the given DataSet.
            </summary>
            <param name="ds">DataSet</param>
            <param name="tableName">Table name</param>
            <param name="newTableName">New table name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.DeleteRows(System.Data.DataSet,System.String)">
            <summary>
            Deletes the table rows matching the given where condition.
            </summary>
            <param name="ds">DataSet with the data</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.KeepOnlyRows(System.Data.DataTable,System.String)">
            <summary>
            Keeps only table rows matching the given where condition.
            </summary>
            <param name="dt">Data table</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.DeleteRows(System.Data.DataTable,System.String)">
            <summary>
            Deletes the table rows matching the given where condition.
            </summary>
            <param name="dt">Data table</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.LowerCaseTableNames(System.Data.DataSet)">
            <summary>
            Converts the table names of given DataSet to lowercase representation.
            </summary>
            <param name="ds">DataSet to convert</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.EnsureGUIDs(System.Data.DataTable,System.String)">
            <summary>
            Ensures GUID values in specified column.
            </summary>
            <param name="dt">Data table</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.SetColumnValues(System.Data.DataTable,System.String,System.Object)">
            <summary>
            Sets column values to specified value.
            </summary>
            <param name="dt">Data table</param>
            <param name="column">Column to set</param>
            <param name="value">Value to set</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.EnsureColumn(System.Data.DataTable,System.String,System.Type)">
            <summary>
            Ensures specified column.
            </summary>
            <param name="dt">Data table</param>
            <param name="columnName">Column name</param>
            <param name="columnType">Column type</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ChangeValuesToNull(System.Data.DataTable,System.String,System.String)">
            <summary>
            Changes the value in the given table to NULL.
            </summary>
            <param name="dt">Table to process</param>
            <param name="columnName">Column name</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ChangeStringValues(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            Changes the string value in the given table.
            </summary>
            <param name="dt">Table to process</param>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ChangeValues(System.Data.DataTable,System.String,System.Object,System.Object,System.String)">
            <summary>
            Changes the value in the given table.
            </summary>
            <param name="dt">Table to process</param>
            <param name="columnName">Column name</param>
            <param name="oldValue">Old value</param>
            <param name="newValue">New value</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.AddWhereCondition(System.String,System.String)">
            <summary>
            Adds where condition to the expression.
            </summary>
            <param name="where">Where condition</param>
            <param name="condition">Condition to add</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.DataSetPivot(System.Data.DataSet,System.String[])">
            <summary>
            Converts data set to it's pilot.
            </summary>
            <param name="sourceDs">Source data set</param>
            <param name="parameters">Name of new data set columns</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ChangeBooleanValues(System.Data.DataTable,System.String,System.Boolean,System.String)">
            <summary>
            Changes the boolean value in the given table.
            </summary>
            <param name="dt">Table to process</param>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ChangeBooleanValues(System.Data.DataTable,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Changes the boolean value in the given table.
            </summary>
            <param name="dt">Table to process</param>
            <param name="columnName">Column name</param>
            <param name="oldValue">Old value</param>
            <param name="newValue">New value</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ExtendParameters(System.Object[],System.Int32)">
            <summary>
            Extends the parameters array for new items.
            </summary>
            <param name="parameters">Original array</param>
            <param name="newItems">New items count</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ReadDataSetFromXml(System.Data.DataSet,System.Xml.XmlReader,System.Object[],System.String)">
            <summary>
            Reads the DataSet from given XML reader (expects "NewDataSet" as a root node).
            </summary>
            <param name="ds">DataSet to read</param>
            <param name="xml">XML to read</param>
            <param name="rootNode">Name of the root node to check (if null not check is done)</param>
            <param name="parameters">Callback parameters</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ReadDataSetFromXml(System.Data.DataSet,System.Xml.XmlReader,System.Object[],System.String,System.Collections.Generic.List{System.String}@,System.String)">
            <summary>
            Reads the DataSet from given XML reader.
            </summary>
            <param name="ds">DataSet to read</param>
            <param name="xml">XML to read</param>
            <param name="parameters">Callback parameters</param>
            <param name="rootNode">Name of the root node to check (if null not check is done)</param>
            <param name="updatedColumns">List of columns present in the xml (not all columns from DataSet have to be also in containing xml), this list is needed for update mode in CMSHierarchyHelper</param>
            <param name="cultureName">Name of the culture to use for parsing double, decimal and datetime values. English culture is used if not specified</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.EnsureTableColumn(System.Data.DataTable,System.String,System.Data.DataSet)">
            <summary>
            Ensures that the given table column is present. Creates the column if not. Returns the column object.
            </summary>
            <param name="dt">Data table</param>
            <param name="columnName">Column name</param>
            <param name="ds">Source data set where column definition is sought to get proper data type if not defined in table <paramref name="dt"/></param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ParseXmlValue(System.String,System.Type,System.String,System.String)">
            <summary>
            Parses given <paramref name="value"/> treated as value from XML, and converts it to given <paramref name="type"/>.
            </summary>
            <remarks>In case a special expression "##null##" is in <paramref name="value"/>, <c>DBNull.Value</c> is returned.</remarks>
            <param name="value">Value to parse.</param>
            <param name="type">Data type of the resulting parsed value.</param>
            <param name="columnName">Name of a XML element which value to parse.</param>
            <param name="cultureName">Culture to use for parsing values. English culture is used if not specified.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="value"/> is <c>null</c>.</exception>
            <returns>Parsed <paramref name="value"/> converted to given <paramref name="type"/>.</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ParseJsonValue(System.String,System.Type,System.String,System.String)">
            <summary>
            Parses given <paramref name="value"/> treated as value from JSON, and converts it to given <paramref name="type"/>.
            </summary>
            <remarks>In case that <paramref name="value"/> is <c>null</c>, <c>DBNull.Value</c> is returned.</remarks>
            <param name="value">Value to parse.</param>
            <param name="type">Data type of the resulting parsed value.</param>
            <param name="columnName">Name of a JSON element which value to parse.</param>
            <param name="cultureName">Name of culture used for parsing values from JSON.</param>
            <returns>Parsed <paramref name="value"/> converted to given <paramref name="type"/>.</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.WriteDataSetToXml(System.Data.DataSet,System.Xml.XmlWriter,System.String,System.Object[])">
            <summary>
            Writes the DataSet from given XML reader.
            </summary>
            <param name="ds">DataSet to read</param>
            <param name="xml">XML to read</param>
            <param name="filePathColumn">Column name with the file path to the binary file</param>
            <param name="parameters">Callback parameters</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDataContainerSize(CMS.Base.IDataContainer,System.Collections.Hashtable)">
            <summary>
            Gets the size of the given data container.
            </summary>
            <param name="container">Container</param>
            <param name="coveredItems">Table of the covered items</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetObjectSize(System.Object)">
            <summary>
            Gets the size of the given object.
            </summary>
            <param name="item">Object</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetObjectSize(System.Object,System.Collections.Hashtable)">
            <summary>
            Gets the size of the given object.
            </summary>
            <param name="item">Object</param>
            <param name="coveredItems">Table of the covered items</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetRowSize(System.Data.DataRow)">
            <summary>
            Returns the row data size (size of the contained data).
            </summary>
            <param name="dr">Data row</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetTableSize(System.Data.DataTable)">
            <summary>
            Returns the table data size (size of the contained data).
            </summary>
            <param name="dt">Data table</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetViewSize(System.Data.DataView)">
            <summary>
            Returns the view data size (size of the contained data).
            </summary>
            <param name="dv">Data view</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDBNull(System.Object)">
            <summary>
            Converts the standard null value to DBNull.value, keeps the object value if not null.
            </summary>
            <param name="value">Value to convert</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetNull(System.Object)">
            <summary>
            Converts the DBNull.value to standard null, keeps the object value if not null.
            </summary>
            <param name="value">Value to convert</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.Merge``3(``0,``0,System.Boolean)">
            <summary>
            Merges two objects implementing the IDictionary interface of type T with key of type K and value of type V.
            </summary>
            <typeparam name="T">Type of the object to merge</typeparam>
            <typeparam name="K">Type of the key</typeparam>
            <typeparam name="V">Type of the value</typeparam>
            <param name="obj1">First object</param>
            <param name="obj2">Second object</param>
            <param name="updateValue">Indicates if value of item with same key in obj1 should be overwritten</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetObjectString(System.Object,System.Int32)">
            <summary>
            Gets the object as a string (for structured objects the object type and its size).
            </summary>
            <param name="value">Value</param>
            <param name="maxLength">Maximum length of the value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetObjectString(System.Object,System.Int32,System.Int32@)">
            <summary>
            Gets the object as a string (for structured objects the object type and its size).
            </summary>
            <param name="value">Value</param>
            <param name="maxLength">Maximum length of the value</param>
            <param name="size">Returns the size</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetNewItemsInList(System.String,System.String)">
            <summary>
            Gets the list of new items in the given list as list separated by semicolon.
            </summary>
            <param name="oldList">Old list of items separated by separator</param>
            <param name="newList">New list of items separated by separator</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetNewItemsInList(System.String,System.String,System.Char)">
            <summary>
            Gets the list of new items in the given list as list separated by separator.
            </summary>
            <param name="oldList">Old list of items separated by separator</param>
            <param name="newList">New list of items separated by separator</param>
            <param name="separator">Separator</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetMaximumValue``1(System.Data.DataTable,System.String)">
            <summary>
            Gets the maximum value from the given column.
            </summary>
            <param name="dt">Data table with the data</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetMaximumValue``1(System.Data.DataView,System.String)">
            <summary>
            Gets the maximum value from the given column.
            </summary>
            <param name="dv">Data table with the data</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.MarkDuplicitRows(System.Data.DataTable,System.String,System.String,System.String[])">
            <summary>
            Marks the duplicate rows in the data table.
            </summary>
            <param name="dt">Table with the data</param>
            <param name="condition">Checks only rows matching the condition</param>
            <param name="resultColumn">Name of the column with the result</param>
            <param name="columns">Columns to check for duplicity</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetMinimumValue``1(System.Data.DataTable,System.String)">
            <summary>
            Gets the minimum value from the given column.
            </summary>
            <param name="dt">Data table with the data</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetUniqueValues(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Gets the list of unique values based on given column value.
            </summary>
            <param name="dt">Table with the data</param>
            <param name="column">Column name</param>
            <param name="caseSensitive">Case sensitive evaluation?</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetUniqueRows(System.Data.DataTable,System.String)">
            <summary>
            Gets the list of unique rows based on given column value.
            </summary>
            <param name="dt">Table with the data</param>
            <param name="idColumn">ID column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetPartialValue(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets value from string that has values separated by separator.
            </summary>
            <param name="values">String values</param>
            <param name="separator">Separator (for example: ';')</param>
            <param name="index">Index in split string array</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.SetPartialValue(System.String,System.String,System.String,System.Int32)">
            <summary>
            Sets new value to string that is separates by separator.
            </summary>
            <param name="values">String with values</param>
            <param name="newValue">New value</param>
            <param name="separator">Separator (for example: ';')</param>
            <param name="index">Index in split string array</param>
            <returns>String with new value</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ReduceDataSetData(System.Data.DataSet,System.Int32,System.Boolean,System.String)">
            <summary>
            Reduces the data set data.
            Works in two modes:
             1 - remove records (when calculateAverage is FALSE)
             2 - calculate average values for the intervals (when calculateAverage is TRUE)
            </summary>
            <param name="ds">The input dataset</param>
            <param name="keepEveryXItem">The keep every x-item</param>
            <param name="calculateAverage">if true: calculate average value for the interval. If false: pick every X-record</param>
            <param name="columnNames">Calculate average values just for given columns (Column1;Column2..). If null, calculate for all columns of types integer and double.</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ConvertToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Method to convert LINQ result to DataTable
            </summary>
            <typeparam name="T">Type to convert</typeparam>
            <param name="varlist">Variable list</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.TrimDataSetPage(System.Object,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Trims first data table from source to fit into page.
            </summary>
            <param name="source">Data source</param>
            <param name="offset">Index of first record belonging to result page</param>
            <param name="pageSize">Page size</param>
            <param name="totalRecords">Total records</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetBoolValue(System.Data.DataRow,System.String,System.Boolean)">
            <summary>
            Gets the bool variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetIntValue(System.Data.DataRow,System.String,System.Int32)">
            <summary>
            Gets the integer variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetGuidValue(System.Data.DataRow,System.String,System.Guid)">
            <summary>
            Gets the guid variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetStringValue(System.Data.DataRow,System.String,System.String)">
            <summary>
            Gets the string variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDateTimeValue(System.Data.DataRow,System.String,System.DateTime)">
            <summary>
            Gets the DateTime variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetBoolValue(CMS.Base.ISimpleDataContainer,System.String)">
            <summary>
            Gets the bool variable from given data container.
            </summary>
            <param name="data">Container with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetBoolValue(CMS.Base.ISimpleDataContainer,System.String,System.Boolean)">
            <summary>
            Gets the bool variable from given data container.
            </summary>
            <param name="data">Container with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetIntValue(CMS.Base.ISimpleDataContainer,System.String)">
            <summary>
            Gets the integer variable from given Data container.
            </summary>
            <param name="data">Container with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetGuidValue(CMS.Base.ISimpleDataContainer,System.String)">
            <summary>
            Gets the guid variable from given data container.
            </summary>
            <param name="data">Container with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetStringValue(CMS.Base.ISimpleDataContainer,System.String)">
            <summary>
            Gets the string variable from given data container.
            </summary>
            <param name="data">Container with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetDateTimeValue(CMS.Base.ISimpleDataContainer,System.String)">
            <summary>
            Gets the DateTime variable from given data container.
            </summary>
            <param name="data">Container with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetIntegerValues(System.Data.DataTable,System.String)">
            <summary>
            Gets the array of integer values from the given data table.
            </summary>
            <param name="dt">Source data table</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetStringValues(System.Data.DataTable,System.String)">
            <summary>
            Gets the array of string values from the given data table.
            </summary>
            <param name="dt">Source data table</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetValues``1(System.Data.DataTable,System.String)">
            <summary>
            Gets the array of the values from the given data table.
            </summary>
            <param name="dt">Source data table</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.RecomputeChildCount(System.Data.DataTable,System.String,System.String,System.Data.DataTable,System.String)">
            <summary>
            Re-computes count of child objects in <paramref name="parentObjects"/> data table's <paramref name="childCountColumn"/> column.
            </summary>
            <param name="parentObjects">Data table containing parent objects.</param>
            <param name="idColumn">Identity column name in <paramref name="parentObjects"/> table which the child objects reference.</param>
            <param name="childCountColumn">Child count column name where the computed child objects count is stored.</param>
            <param name="childObjects">Data table containing child objects.</param>
            <param name="parentIdColumn">Foreign key column name in <paramref name="childObjects"/> table which references the parent.</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetValuesFrequency(System.Data.DataTable,System.String)">
            <summary>
            Gets frequency of values in specified data table's column.
            </summary>
            <param name="dt">Data table.</param>
            <param name="columnName">Name of column for which the frequency is determined.</param>
            <returns>Pairs of (value, occurrences count) in <paramref name="dt"/>'s column named <paramref name="columnName"/>.</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.GetValuesFrequency``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Object})">
            <summary>
            Gets frequency of values in data collection.
            </summary>
            <typeparam name="TDataContainer">Data container (e.g. DataRow, AbstractInfo).</typeparam>
            <param name="dataCollection">Enumerable collection of data.</param>
            <param name="valueSelector">Function selecting item (value) within TDataContainer.</param>
            <returns>Pairs of (value, occurrences count) in <paramref name="dataCollection"/>.</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.RestrictRows(System.Data.DataSet,System.Int32)">
            <summary>
            Restricts the number of rows to the top N items.
            </summary>
            <param name="ds">DataSet</param>
            <param name="topN">Top N items</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.RestrictRows(System.Data.DataSet,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Restricts the given DataSet to only given rows starting with the offset, and leaving only maximum defined number of rows.
            </summary>
            <param name="ds">DataSet with the data</param>
            <param name="offset">Starting offset</param>
            <param name="maxRecords">Maximum number of the records</param>
            <param name="totalRecords">Returns the total number of available records</param>
            <returns>Returns the same DataSet object</returns>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ForEachRow(System.Data.DataSet,System.Action{System.Data.DataRow},System.Func{System.Data.DataRow,System.Boolean})">
            <summary>
            Executes the given action for each row in the given DataSet
            </summary>
            <param name="ds">DataSet with the data</param>
            <param name="rowAction">Row action</param>
            <param name="rowCondition">Row condition to filter rows</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.ForEachRow(System.Data.DataTable,System.Action{System.Data.DataRow},System.Func{System.Data.DataRow,System.Boolean})">
            <summary>
            Executes the given action for each row in the given DataSet
            </summary>
            <param name="dt">Table with the data</param>
            <param name="rowAction">Row action</param>
            <param name="rowCondition">Row condition to filter rows</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.Union(System.Data.DataSet,System.Data.DataSet,System.String)">
            <summary>
            Creates the union of two Datasets, the values are compared for uniqueness by the given ID column name.
            </summary>
            <param name="ds1">First DataSet</param>
            <param name="ds2">Second DataSet</param>
            <param name="idColumn">ID column name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.TransferTable(System.Data.DataSet,System.Data.DataSet,System.String)">
            <summary>
            Transfers tables from source DataSet to the destination DataSet and sets the source table name to specified value.
            </summary>
            <param name="destinationDS">Destination DataSet</param>
            <param name="sourceDS">Source DataSet</param>
            <param name="tableName">Source table name</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.TransferTables(System.Data.DataSet,System.Data.DataSet)">
            <summary>
            Transfers tables from source DataSet to the destination DataSet.
            </summary>
            <param name="destinationDS">Destination DataSet</param>
            <param name="sourceDS">Source DataSet</param>
        </member>
        <member name="M:CMS.Helpers.DataHelper.LockDataSet(System.Data.DataSet)">
            <summary>
            Makes the given DataSet read-only
            </summary>
            <param name="ds">DataSet</param>
        </member>
        <member name="T:CMS.Helpers.DummyItem">
            <summary>
            Dummy item.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DummyItem.ToString">
            <summary>
            ToString, returns (dummy item).
            </summary>
        </member>
        <member name="T:CMS.Helpers.EncryptionHelper">
            <summary>
            Provides validation RSA singed license key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.EncryptionHelper.ENCRYPT_PREFIX">
            <summary>
            Prefix used in encrypt/decrypt methods to identify encrypted data.
            </summary>
        </member>
        <member name="F:CMS.Helpers.EncryptionHelper.KEY">
            <summary>
            Key used for data encryption in <see cref="M:CMS.Helpers.EncryptionHelper.EncryptData(System.String)"/> and <see cref="M:CMS.Helpers.EncryptionHelper.DecryptData(System.String)"/> methods.
            </summary>
        </member>
        <member name="F:CMS.Helpers.EncryptionHelper.IV">
            <summary>
            Init vector used for data encryption in <see cref="M:CMS.Helpers.EncryptionHelper.EncryptData(System.String)"/> and <see cref="M:CMS.Helpers.EncryptionHelper.DecryptData(System.String)"/> methods.
            </summary>
        </member>
        <member name="P:CMS.Helpers.EncryptionHelper.CheckVersionKey">
            <summary>
            Indicates whether Kentico version is displayed only if valid key is provided.
            </summary>
        </member>
        <member name="M:CMS.Helpers.EncryptionHelper.VerifyVersionRSA(System.String)">
            <summary>
            Verifies RSA signed key which is used for getting Kentico version.
            </summary>
            <param name="inputKey">License key</param>
        </member>
        <member name="M:CMS.Helpers.EncryptionHelper.EncryptData(System.String)">
            <summary>
            Encrypts data using symmetric cryptography. Data can by decrypted by calling <see cref="M:CMS.Helpers.EncryptionHelper.DecryptData(System.String)"/> method. If null or empty string is on input, method returns it.
            The encrypted data is returned as a base 64 string.
            </summary>
            <param name="plainString">Data to encrypt.</param>
        </member>
        <member name="M:CMS.Helpers.EncryptionHelper.DecryptData(System.String)">
            <summary>
            Decrypts data encrypted by <see cref="M:CMS.Helpers.EncryptionHelper.EncryptData(System.String)"/> method.
            The input string is returned as is, if it is null or empty string or it was not encrypted using <see cref="M:CMS.Helpers.EncryptionHelper.EncryptData(System.String)"/> method.
            </summary>
            <param name="encryptedString">Encrypted data as a base 64 string.</param>
        </member>
        <member name="M:CMS.Helpers.EncryptionHelper.EncryptDataCore(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypts data using symmetric cryptography.
            </summary>
        </member>
        <member name="M:CMS.Helpers.EncryptionHelper.DecryptDataCore(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts data using symmetric cryptography.
            </summary>
        </member>
        <member name="T:CMS.Helpers.FileSizeUnitsEnum">
            <summary>
            Enumeration for file size units.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FileSizeUnitsEnum.B">
            <summary>
            Bytes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FileSizeUnitsEnum.kB">
            <summary>
            Kilobytes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FileSizeUnitsEnum.MB">
            <summary>
            Megabytes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FileSizeUnitsEnum.GB">
            <summary>
            Gigabytes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FileSizeUnitsEnum.Automatic">
            <summary>
            Automatic units changing.
            </summary>
        </member>
        <member name="T:CMS.Helpers.FilesLocationTypeEnum">
            <summary>
            Enumeration for Files location type setting key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FilesLocationTypeEnum.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="F:CMS.Helpers.FilesLocationTypeEnum.FileSystem">
            <summary>
            File system
            </summary>
        </member>
        <member name="F:CMS.Helpers.FilesLocationTypeEnum.Both">
            <summary>
            Database and file system.
            </summary>
        </member>
        <member name="T:CMS.Helpers.FilterState">
            <summary>
            Represents a state of the filter control.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FilterState.mValues">
            <summary>
            The dictionary that holds name/value pairs.
            </summary>
        </member>
        <member name="P:CMS.Helpers.FilterState.Names">
            <summary>
            Returns stored state names
            </summary>
        </member>
        <member name="M:CMS.Helpers.FilterState.#ctor">
            <summary>
            Initializes a new instance of the FilterState class.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FilterState.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the FilterState class with the specified serialization context.
            </summary>
            <param name="info">The SerializationInfo with data.</param>
            <param name="context">The source of this deserialization.</param>
        </member>
        <member name="M:CMS.Helpers.FilterState.AddValue(System.String,System.Object)">
            <summary>
            Adds a value into the filter state.
            </summary>
            <param name="name">The name to associate with the value.</param>
            <param name="value">The value to serialize.</param>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetBoolean(System.String,System.Boolean)">
            <summary>
            Retrieves a boolean value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The boolean value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetByte(System.String,System.Byte)">
            <summary>
            Retrieves an 8-bit unsigned integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 8-bit unsigned integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetChar(System.String,System.Char)">
            <summary>
            Retrieves a Unicode character from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The Unicode character associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetDateTime(System.String,System.DateTime)">
            <summary>
            Retrieves a DateTime value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The DateTime value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetDecimal(System.String,System.Decimal)">
            <summary>
            Retrieves a decimal value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The decimal value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetDouble(System.String,System.Double)">
            <summary>
            Retrieves a double-precision floating-point value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The double-precision floating-point value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetInt16(System.String,System.Int16)">
            <summary>
            Retrieves a 16-bit signed integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 16-bit signed integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetInt32(System.String,System.Int32)">
            <summary>
            Retrieves a 32-bit signed integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 32-bit signed integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetInt64(System.String,System.Int64)">
            <summary>
            Retrieves a 64-bit signed integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 64-bit signed integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetSByte(System.String,System.SByte)">
            <summary>
            Retrieves an 8-bit signed integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 8-bit signed integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetSingle(System.String,System.Single)">
            <summary>
            Retrieves a single-precision floating-point value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The single-precision floating-point value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetString(System.String,System.String)">
            <summary>
            Retrieves a String value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The String value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetUInt16(System.String,System.UInt16)">
            <summary>
            Retrieves a 16-bit unsigned integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 16-bit unsigned integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetUInt32(System.String,System.UInt32)">
            <summary>
            Retrieves a 32-bit unsigned integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 32-bit unsigned integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetUInt64(System.String,System.UInt64)">
            <summary>
            Retrieves a 64-bit unsigned integer value from the filter state.
            </summary>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The 64-bit unsigned integer value associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetObject(System.String,System.Object)">
            <summary>
            Retrieves an object from the filter state.
            </summary>
            <param name="name">The name associated with the object to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The object associated with the specified name.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetValue``1(System.String,``0)">
            <summary>
            Retrieves a value from the filter state.
            </summary>
            <typeparam name="T">The type of the value to retrieve.</typeparam>
            <param name="name">The name associated with the value to retrieve.</param>
            <param name="defaultValue">The default value that will be returned if state doesn't contain value for specified name.</param>
            <returns>The value associated with the specified name, if found, otherwise the default value.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection of name/value pairs.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection of name/value pairs.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection of name/value pairs.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection of name/value pairs.</returns>
        </member>
        <member name="M:CMS.Helpers.FilterState.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="T:CMS.Helpers.AbstractOutputFile">
            <summary>
            Abstract output file with the base functionality.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractOutputFile.mInstantiated">
            <summary>
            Initialization time
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractOutputFile.mWidth">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractOutputFile.mHeight">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractOutputFile.mMaxSideSize">
            <summary>
            Max side size
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractOutputFile.mOutputData">
            <summary>
            Binary output data
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractOutputFile.mDataLoaded">
            <summary>
            Indicates whether data were loaded
            </summary>
        </member>
        <member name="F:CMS.Helpers.AbstractOutputFile.mResized">
            <summary>
            Indicates whether image was resized
            </summary>
        </member>
        <member name="P:CMS.Helpers.AbstractOutputFile.OutputData">
            <summary>
            Output file data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AbstractOutputFile.Width">
            <summary>
            Requested output width.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AbstractOutputFile.Height">
            <summary>
            Requested output Height.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AbstractOutputFile.MaxSideSize">
            <summary>
            Requested output MaxSideSize.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AbstractOutputFile.DataLoaded">
            <summary>
            Returns true if the data is loaded to the object.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AbstractOutputFile.Resized">
            <summary>
            If true, the file is resized version of the file.
            </summary>
        </member>
        <member name="T:CMS.Helpers.MimeTypeHelper">
            <summary>
            Mime type helper.
            </summary>
        </member>
        <member name="M:CMS.Helpers.MimeTypeHelper.GetExtension(System.String,System.String)">
            <summary>
            Gets the extension by mime type.
            </summary>
            <param name="mimetype">Mimetype</param>
            <param name="defaultValue">Default value when extension is not found</param>
        </member>
        <member name="M:CMS.Helpers.MimeTypeHelper.GetMimetype(System.String,System.String)">
            <summary>
            Gets the mimetype by extension.
            </summary>
            <param name="extension">Extension</param>
            <param name="defaultValue">Default value when extension is not found</param>
        </member>
        <member name="M:CMS.Helpers.MimeTypeHelper.AddRule(System.String,System.String)">
            <summary>
            Adds the conversion rule to the conversion tables.
            </summary>
            <param name="mimetype">Mime type</param>
            <param name="extension">Extension</param>
        </member>
        <member name="T:CMS.Helpers.IReadOnlyFlag">
            <summary>
            ObjectDataSet interface
            </summary>
        </member>
        <member name="P:CMS.Helpers.IReadOnlyFlag.IsReadOnly">
            <summary>
            If true, the dataset is read-only (not allowed to modify, must be cloned)
            </summary>
        </member>
        <member name="T:CMS.Helpers.ObjectParameters">
            <summary>
            Object parameters container.
            </summary>    
        </member>
        <member name="F:CMS.Helpers.ObjectParameters.PARAMETERSROOTNAME">
            <summary>
            Root element name of custom data.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ObjectParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Helpers.ObjectParameters.#ctor">
            <summary>
            Constructor - creates empty ObjectParameters object.
            </summary>
        </member>
        <member name="T:CMS.Helpers.RegexHelper">
            <summary>
            Regular expression helper.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RegexHelper.mDefaultOptions">
            <summary>
            Default regular expression options.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RegexHelper.mExpressions">
            <summary>
            Cached regular expressions
            </summary>
        </member>
        <member name="P:CMS.Helpers.RegexHelper.DefaultOptions">
            <summary>
            Default regular expression options.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RegexHelper.GetRegex(System.String)">
            <summary>
            Gets the regular expression specified by a matching pattern.
            </summary>
            <param name="pattern">Pattern to match</param>
        </member>
        <member name="M:CMS.Helpers.RegexHelper.GetRegex(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Gets the regular expression specified by a matching pattern, optionally specifying processing options.
            </summary>
            <param name="pattern">Pattern to match</param>
            <param name="options">Processing options</param>
        </member>
        <member name="M:CMS.Helpers.RegexHelper.CreateRegex(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Creates a new regular expression
            </summary>
            <param name="pattern">Pattern to match</param>
            <param name="options">Processing options</param>
        </member>
        <member name="M:CMS.Helpers.RegexHelper.GetRegex(System.String,System.Boolean)">
            <summary>
            Gets the regular expression specified by a matching pattern, optionally specifying processing options.
            </summary>
            <param name="pattern">Pattern to match</param>
            <param name="ignoreCase">If true, the regular expression is case insensitive</param>
        </member>
        <member name="T:CMS.Helpers.RSAKeyExtensions">
            <summary>
            Helper class to manually add missing .NetStandard <see cref="M:System.Security.Cryptography.RSA.FromXmlString(System.String)"/> overload method.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RSAKeyExtensions.FromXmlString(System.Security.Cryptography.RSA,System.String)">
            <summary>
            Initializes an <see cref="T:System.Security.Cryptography.RSA"/> object from the key information from an XML string.
            </summary>
            <param name="rsa"><see cref="T:System.Security.Cryptography.RSA"/> to be initialized.</param>
            <param name="xmlString">The XML string containing <see cref="T:System.Security.Cryptography.RSA"/> key information.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when any of parameters are null.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">Thrown when the format of the <paramref name="xmlString"/> parameter is not valid.</exception>
        </member>
        <member name="T:CMS.Helpers.UserDataInfo">
            <summary>
            Custom data container.
            </summary>    
        </member>
        <member name="F:CMS.Helpers.UserDataInfo.USERDATAROOTNAME">
            <summary>
            Root element name of custom data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UserDataInfo.IPAddress">
            <summary>
            Gets or sets the IP address.
            </summary>
        </member>
        <member name="P:CMS.Helpers.UserDataInfo.Agent">
            <summary>
            Gets or sets the agent(browser) information.
            </summary>
        </member>
        <member name="M:CMS.Helpers.UserDataInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Helpers.UserDataInfo.#ctor">
            <summary>
            Constructor - creates empty CustomData object.
            </summary>
        </member>
        <member name="T:CMS.Helpers.HashSettings">
            <summary>
            Hash settings container
            </summary>
        </member>
        <member name="P:CMS.Helpers.HashSettings.Redirect">
            <summary>
            Gets or sets value indicating whether or not should hash validation method redirect in case of invalid hash.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HashSettings.HashStringSaltOverride">
            <summary>
            Gets or sets custom salt string. If not specified then default salt <see cref="P:CMS.Helpers.ValidationHelper.HashStringSalt"/> is used. 
            </summary>
        </member>
        <member name="P:CMS.Helpers.HashSettings.Purpose">
            <summary>
            Gets purpose of the hash.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HashSettings.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:CMS.Helpers.HashSettings"/> with hash <paramref name="purpose"/>.
            The same purpose must be used in <see cref="T:CMS.Helpers.HashSettings"/> when validating hash.
            </summary>
            <param name="purpose">Purpose of the hash.</param>
        </member>
        <member name="M:CMS.Helpers.HashSettings.Clone">
            <summary>
            Clones the settings.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ValidationHelper">
            <summary>
            Global class providing Validation methods.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.APP_SETTINGS_HASH_STRING_SALT">
            <summary>
            App setting key for hash string salt. 
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.CMS_SETTINGS_JWT_TOKEN_ENCRYPTION_KEY">
            <summary>
            CMS setting key for JWT token encryption security key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.MULTIPLE_EMAILS_LENGTH">
            <summary>
            Maximum length of multiple e-mails
            </summary>
            <remarks>
            According to RFC 2822 line length must be no more than 998 characters long. 
            As multiple e-mail addresses are in one line, this length should not exceed.
            </remarks>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.SINGLE_EMAIL_LENGTH">
            <summary>
            Maximum length of e-mail 
            </summary>
            <remarks>According to RFC 5321 e-mail address should be no more than 254 characters long</remarks>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mColorSet">
            <summary>
            Contains set of string colors in LowerCSafe format.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mFileNameForbiddenCharRegExp">
            <summary>
            Regular expression to match forbidden characters in file name.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mIntRegExp">
            <summary>
            Regular expression to match the integer.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mLongRegExp">
            <summary>
            Regular expression to match the long.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mIdentifierRegExp">
            <summary>
            Regular expression to match the identifier.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mCodenameRegExp">
            <summary>
            Regular expression to match the codename.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mUnicodeCodenameRegExp">
            <summary>
            Regular expression to match the codename with support of Unicode letters.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mUsernameRegExp">
            <summary>
            Regular expression to match the username.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mFolderRegExp">
            <summary>
            Regular expression to match the folder name.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mEmailRegExp">
            <summary>
            Regular expression to match the email.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mColorRegExp">
            <summary>
            Regular expression to match the hexa color code expression.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mURLRegExp">
            <summary>
            Regular expression to match the URL expression.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mGuidRegExp">
            <summary>
            Regular expression to match the GUID.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mUsPhoneNumberRegExp">
            <summary>
            Regular expression to match the U.S. Phone number.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mIsClientIdRegEx">
            <summary>
            Regular expression to match client id.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mUserNameCharReplacement">
            <summary>
            Replacement for forbidden username characters.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mRoleNameCharReplacement">
            <summary>
            Replacement for forbidden rolename characters.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mUseSafeUserName">
            <summary>
            Indicates if user safe names should be used.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mUseSafeRoleName">
            <summary>
            Indicates if role safe names should be used.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mCustomUsernameRegExpString">
            <summary>
            Custom user name regular expression string from web.config for user name validation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mCustomEmailRegExpString">
            <summary>
            Custom email regular expression string from web.config for email validation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mHashStringSalt">
            <summary>
            Salt used for hashing string in GetHashString() method.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mJwtTokenEncryptionKey">
            <summary>
            JWT token encryption security key.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.mConversionFunctions">
            <summary>
            Dictionary of conversion functions for standard system data types
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidationHelper.RESERVED_FILE_SYSTEM_NAMES">
            <summary>
            File names which cannot be used on Windows (regardless of extension).
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.ColorSet">
            <summary>
            Contains set of string colors in LowerCSafe format.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.UserNameCharReplacement">
            <summary>
            Replacement for forbidden username characters.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.RoleNameCharReplacement">
            <summary>
            Replacement for forbidden Rolename characters.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.ConversionFunctions">
            <summary>
            Dictionary of conversion functions in format DataType => ConversionFunction
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.HashStringSalt">
            <summary>
            Returns salt used for hashing string in GetHashString() method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.JwtTokenEncryptionKey">
            <summary>
            JWT token encryption security key.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDefaultHashStringSalt">
            <summary>
            Gets the default hash string salt
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.FileNameForbiddenCharRegExp">
            <summary>
            Regular expression to match forbidden characters in file name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.UseSafeUserName">
            <summary>
            Indicates whether to use safe or normal user names.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.UseSafeRoleName">
            <summary>
            Indicates whether to use safe or normal role names.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.IntRegExp">
            <summary>
            Integer regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.LongRegExp">
            <summary>
            Long regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.IdentifierRegExp">
            <summary>
            Identifier regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.CodenameRegExp">
            <summary>
            Codename regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.UnicodeCodenameRegExp">
            <summary>
            Codename regular expression with support of Unicode letters.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.ClientIDRexExp">
            <summary>
            Gets or sets the regular expression for client id validation.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.CustomUsernameRegExpString">
            <summary>
            Custom user name regular expression string from web.config for user name validation.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.UsernameRegExp">
            <summary>
            Username regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.FolderRegExp">
            <summary>
            Folder regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.CustomEmailRegExpString">
            <summary>
            Custom email regular expression string from web.config for email validation.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.EmailRegExp">
            <summary>
            Gets the regular expression used to validate e-mail addresses.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.ColorRegExp">
            <summary>
            Hexa color code regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.URLRegExp">
            <summary>
            URL regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.GuidRegExp">
            <summary>
            GUID regular expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ValidationHelper.UsPhoneNumberRegExp">
            <summary>
            U.S. Phone number regular expression.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetSafeXML(System.String)">
            <summary>
            Removes forbidden characters from given xml string.
            </summary>
            <param name="xml">XML to sanitize</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.Base64Decode(System.String)">
            <summary>
            Method used to obtain original text formatted to UTF-8 and encoded in base64
            </summary>
            <param name="data">Base64 encoded text</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDefaultCultureInfo">
            <summary>
            Gets the culture info of default culture.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetCultureInfo(System.String@)">
            <summary>
            Gets the culture info for the given culture.
            </summary>
            <param name="culture">Culture to get</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetStringFromHash(System.Byte[])">
            <summary>
            Gets string from byte array.
            </summary>
            <param name="hashBytes">Hash</param>
            <returns>Text interpretation of hash</returns>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsBoolean(System.Object)">
            <summary>
            Returns true if the object representation matches the Boolean type.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsInteger(System.Object)">
            <summary>
            Returns true if the object representation matches the Integer type.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsLong(System.Object)">
            <summary>
            Returns true if the object representation matches the Long type.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsPositiveNumber(System.Object,System.String)">
            <summary>
            Returns true if the object representation matches the positive number.
            </summary>
            <param name="value">Value to check</param>
            <param name="culture">Culture to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsInRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns true if value is higher than or equal to minimum and lesser than or equal to maximum.
            </summary>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsInRange(System.Double,System.Double,System.Double)">
            <summary>
            Returns true if value is higher than or equal to minimum and lesser than or equal to maximum.
            </summary>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsInRange(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Returns true if value is higher than or equal to minimum and lesser than or equal to maximum.
            </summary>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsDouble(System.Object,System.String)">
            <summary>
            Returns true if the object representation matches the Double type.
            </summary>
            <param name="value">Value to check</param>
            <param name="culture">Optional culture code. If null, culture of current thread is used.</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsUnsupportedDouble(System.String,System.Globalization.CultureInfo)">
            <summary>
            Indicates whether input string is double format not supported in previous version
            </summary>
            <remarks>
            Previous version did not support following format (+-){numbers}{group separator}{number}. This format should be supported but we can't change this behavior within hotfix.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsDoubleSystem(System.Object)">
            <summary>
            Returns true if the object representation matches the Double type in English culture.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsDecimal(System.Object,System.String,System.Int32,System.Int32)">
            <summary>
            Returns true if the object representation matches the decimal type.
            </summary>
            <param name="value">Value to check</param>
            <param name="culture">Culture code</param>
            <param name="precision">Maximum number of digits</param>
            <param name="scale">Maximum number of decimal places</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsTimeSpan(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns true if the object representation matches the TimeSpan type.
            </summary>
            <param name="value">Value to check</param>
            <param name="culture">Culture for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsGuid(System.Object)">
            <summary>
            Returns true if the object representation matches the Guid type.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsIdentifier(System.Object)">
            <summary>
            Returns true if the object representation matches the IdentifierRegExp.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsDateTime(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns true if the object representation matches the date time format.
            </summary>
            <param name="value">Value to check</param>
            <param name="culture">Culture for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsUserName(System.Object)">
            <summary>
            Returns true if the object representation matches the User name.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsCodeName(System.Object,System.Boolean)">
            <summary>
            Returns true if the object representation matches the Code name.
            </summary>
            <param name="value">Value to check</param>
            <param name="useUnicode">If true, unicode letters are allowed in the codename, otherwise only a-Z are allowed</param>        
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsFullName(System.Object)">
            <summary>
            Returns true if the object representation matches full name form ([namespace].[classname].[identifier]).
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsValidClientID(System.Object)">
            <summary>
            Returns true if the object representation matches the criteria for valid client id value.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsRegularExp(System.Object,System.String)">
            <summary>
            Returns true if the object representation matches given regular expression.
            </summary>
            <param name="value">Value to check</param>
            <param name="regExp">Regular expression</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsFileName(System.Object)">
            <summary>
            Returns true if the object representation matches the file name.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsFolderName(System.Object)">
            <summary>
            Returns true if the object representation matches the folder name.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsSpecialFileName(System.String)">
            <summary>
            Returns true if the file name is restricted.
            </summary>
            <param name="name">File name to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsSpecialFolderName(System.String)">
            <summary>
            Returns true if the folder name is restricted.
            </summary>
            <param name="name">Folder name to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.FindReservedFileSystemNamePrefix(System.String)">
            <summary>
            Searches for occurrence of one of <see cref="F:CMS.Helpers.ValidationHelper.RESERVED_FILE_SYSTEM_NAMES"/> as a prefix in <paramref name="name"/>, delimited by a '.' (dot) character.
            If such prefix is found, its value is returned (without the delimiter).
            </summary>
            <param name="name">Name which to search for reserved prefixes.</param>
            <returns>Reserved prefix found in <paramref name="name"/>, or null if no matching prefix is found.</returns>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsEmail(System.Object,System.Boolean)">
            <summary>
            Returns <c>true</c> if the object representation matches the Email.
            </summary>
            <param name="value">Value to check</param>
            <param name="checkLength">if <c>true</c> checks whether e-mail is no longer than <see cref="F:CMS.Helpers.ValidationHelper.SINGLE_EMAIL_LENGTH"/></param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsUsPhoneNumber(System.Object)">
            <summary>
            Returns true if the object representation matches the U.S. Phone number.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsIntervalValid(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Returns true if fromDate precedes toDate.
            </summary>
            <param name="fromDate">Start time</param>
            <param name="toDate">End time</param>
            <param name="nullFriendly">Tolerate nil dates</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.AreEmails(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if the object representation matches the Email list separated by specified character (default separator is semicolon).
            </summary>
            <param name="value">Value to check</param>
            <param name="separator">String that delimits the addresses</param>
            <param name="checkLength">if <c>true</c> checks whether <paramref name="value"/> length is no longer than <see cref="F:CMS.Helpers.ValidationHelper.MULTIPLE_EMAILS_LENGTH"/>and each individual e-mail is no longer than <see cref="F:CMS.Helpers.ValidationHelper.SINGLE_EMAIL_LENGTH"/></param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsColor(System.Object)">
            <summary>
            Returns true if the object representation matches the hexa color code expression or value is an existing string representation of color.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsURL(System.Object)">
            <summary>
            Returns true if the given URL is valid.
            </summary>
            <param name="value">URL to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsAllowedXMLCharacter(System.Int32)">
            <summary>
            Returns true if the character is within range of allowed characters.
            </summary>
            <param name="character">Character to check</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsType(System.Type,System.Object)">
            <summary>
            Returns true if value is of type.
            </summary>
            <param name="type">Type</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsEmailInternal(System.String,System.Boolean)">
            <summary>
            Returns <c>true</c> if <paramref name="email"/> is not empty and has expected length and is in correct format.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.AreEmailsInternal(System.String,System.String,System.Boolean)">
            <summary>
            Returns <c>true</c> if <paramref name="emails"/> is not empty, has correct length and contains valid e-mails.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetBoolean(System.Object,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Returns the boolean representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture used for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetBooleanFromString(System.String,System.Nullable{System.Boolean})">
            <summary>
            Gets the boolean value from string value
            </summary>
            <param name="value">Value</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetNullableBoolean(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Returns the boolean representation of an object or default value if a conversion doesn't exist.
            </summary>
            <param name="value">The value to convert</param>
            <param name="defaultValue">The default value to substitute</param>
            <returns>Successful conversion of value to boolean or a default value.</returns>
            <remarks>
            This method allows to use <c>null</c> as a default and return value, usable in cases
            where unknown value (3-state logic) has to behave differently under certain conditions.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetColor(System.String,System.Drawing.Color)">
            <summary>
            Returns the color representation of a query parameter or default value
            if parameter is not a valid color.
            </summary>
            <param name="name">Color name in HTML format</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetInteger(System.Object,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Returns the integer representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture used for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetIntegers(System.Object[],System.Int32)">
            <summary>
            Returns array of integer representations of supplied values or default value when not an int.
            </summary>
            <param name="values">Values to be converted</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetLong(System.Object,System.Int64,System.Globalization.CultureInfo)">
            <summary>
            Returns the long representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture used for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetSafeInteger(System.Object,System.Int32)">
            <summary>
            Returns the integer representation of an object or default value if not.
            Consumes all exceptions.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDouble(System.Object,System.Double,System.String)">
            <summary>
            Returns the double representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDouble(System.Object,System.Double,System.Globalization.CultureInfo)">
            <summary>
            Returns the double representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture info</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDecimalSystem(System.Object,System.Decimal)">
            <summary>
            Converts the given object to a decimal value
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDecimal(System.Object,System.Decimal,System.String)">
            <summary>
            Returns the decimal representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDecimal(System.Object,System.Decimal,System.Globalization.CultureInfo)">
            <summary>
            Returns the decimal representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture for the conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetFloat(System.Object,System.Single,System.Globalization.CultureInfo)">
            <summary>
            Returns the double representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture used for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDoubleSystem(System.Object,System.Double)">
            <summary>
            Returns the double representation of an object (using English representation of floating point numbers) or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetGuid(System.Object,System.Guid,System.Globalization.CultureInfo)">
            <summary>
            Returns the GUID representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture used for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetString(System.Object,System.String,System.String)">
            <summary>
            Returns the string representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetString(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns the string representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetString(System.Object,System.String,System.String,System.String)">
            <summary>
            Returns the string representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture</param>
            <param name="format">Formatting string</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetBinary(System.Object,System.Byte[],System.Globalization.CultureInfo)">
            <summary>
            Returns the byte[] representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture used for conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDateTime(System.Object,System.DateTime,System.String)">
            <summary>
            Returns the DateTime representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture to use for processing of the string</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDateTimeSystem(System.Object,System.DateTime)">
            <summary>
            Returns the DateTime representation of an object (using English representation of date and time) or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDateTime(System.Object,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Returns the DateTime representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture to convert</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDateSystem(System.Object,System.DateTime)">
            <summary>
            Returns the DateTime representation of an object (using English representation of date and time) or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDate(System.Object,System.DateTime)">
            <summary>
            Returns the DateTime representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetDate(System.Object,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Returns the DateTime representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture to use</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetTimeSpanSystem(System.Object,System.TimeSpan)">
            <summary>
            Returns the TimeSpan representation of an object (using English representation of date and time) or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetTimeSpan(System.Object,System.TimeSpan,System.String)">
            <summary>
            Returns the TimeSpan representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture for the conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetTimeSpan(System.Object,System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Returns the TimeSpan representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture for the conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetControlClientId(System.Object,System.String)">
            <summary>
            Returns the given string if it matches the criteria for valid client ID value.
            </summary>
            <param name="value">Value to check</param>
            <param name="defaultValue">Value to return in case given value is not a valid client ID</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetValue``1(System.Object)">
            <summary>
            Converts the value to specified type.
            </summary>
            <typeparam name="ReturnType">Result type</typeparam>
            <param name="value">Value to convert</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetValue``1(System.Object,``0,System.Globalization.CultureInfo)">
            <summary>
            Converts the value to specified type. If the value is null, default value is used.
            </summary>
            <typeparam name="T">Result type</typeparam>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.EnsureConversionFunctions">
            <summary>
            Registers system type conversion methods
            </summary>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.AddConversion``1(System.Collections.Generic.Dictionary{System.Type,System.Func{System.Object,System.Object,System.Globalization.CultureInfo,System.Object}},System.Func{System.Object,``0,System.Globalization.CultureInfo,``0})">
            <summary>
            Registers conversion method for given data type
            </summary>
            <typeparam name="T">Data type</typeparam>
            <param name="functions">Dictionary of conversion functions</param>
            <param name="conversion">Conversion method</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetHResult(System.Int32)">
            <summary>
            Converts HResult (ErrorCode) from exception to format comparable with error codes in hex format.
            </summary>
            <param name="code">Code to convert</param>
            <returns>Code in comparable format (0x800ABCDE)</returns>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetCodeName(System.String,System.String,System.String)">
            <summary>
            Gets the code name created from the given display name.
            </summary>
            <param name="name">Display name</param>
            <param name="prefix">Prefix of the display name</param>
            <param name="suffix">Suffix of the display name</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetCodeName(System.Object,System.Int32)">
            <summary>
            Gets the code name created from the given string.
            </summary>
            <param name="name">Display name</param>
            <param name="maxLength">Maximal length of the codename</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetCodeName(System.Object,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            Gets the code name created from the given string.
            </summary>
            <param name="name">Display name</param>
            <param name="replacement">Replacement string for invalid characters</param>
            <param name="maxLength">Maximal length of the codename</param>
            <param name="useUnicode">If true, Unicode letters are allowed in the codename, otherwise only a-Z are allowed</param>
            <param name="removeDiacritics">If true, diacritics is removed from Latin characters</param>
            <param name="allowedCharacters">Characters which should be allowed within the current name</param>
            <param name="useCamelCase">If true, camel case is used for the code name</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetSafeUserName(System.String,System.String)">
            <summary>
            Gets safe version of username.
            </summary>
            <param name="userName">Username</param>
            <param name="siteName">Name of site</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetSafeRoleName(System.String,System.String)">
            <summary>
            Gets safe version of rolename.
            </summary>
            <param name="roleName">Name of role</param>
            <param name="siteName">Name of site</param>
            <returns>Safe version of role name</returns>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetLanguage(System.Object,System.String)">
            <summary>
            Gets the language created from the given string.
            </summary>
            <param name="lang">Language code</param>
            <param name="replacement">Replacement string for invalid characters</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetIdentifier(System.Object,System.String)">
            <summary>
            Gets the identifier created from the given name.
            </summary>
            <param name="name">Display name</param>
            <param name="replacement">Replacement string for invalid characters</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetSafeFileName(System.String,System.String)">
            <summary>
            Get safe file name in which forbidden characters are replaced with specified replacement
            </summary>
            <param name="value">File name</param>
            <param name="replacement">Replacement string</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.GetHashString(System.String,CMS.Helpers.HashSettings)">
            <summary>
            Gets the SHA2 hash for the given value (salt unique to certain user session and database is added).
            </summary>
            <param name="value">Value to hash</param>
            <param name="settings">Hash settings</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.ValidateHash(System.String,System.String,CMS.Helpers.HashSettings)">
            <summary>
            Validates the hash for the given value.
            </summary>
            <param name="value">Value</param>
            <param name="hash">Hash</param>
            <param name="settings">Hash settings</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.RedirectToBadHash">
            <summary>
            Redirects to the bad hash information page
            </summary>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.ValidateHash(System.String,System.String,System.String,System.String)">
            <summary>
            Validates the hash for the given value.
            </summary>
            <param name="value">Value</param>
            <param name="hash">Hash</param>
            <param name="hashSalt">Custom hash salt</param>
            <param name="purpose">Purpose of the hash</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.ValidateHashInternal(System.String,System.String,CMS.Helpers.HashSettings)">
            <summary>
            Validates the hash for the given value.
            </summary>
            <param name="value">Value</param>
            <param name="hash">Hash</param>
            <param name="settings">Hash settings</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.ValidateHashes(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},CMS.Helpers.HashSettings)">
            <summary>
            Validates the hashes for the given values.
            </summary>
            <param name="values">Values</param>
            <param name="hashes">Hashes</param>
            <param name="settings">Hash settings</param>
            <exception cref="T:System.ArgumentNullException">If either values or hashes are null.</exception>
            <exception cref="T:System.ArgumentException">If number of hashes does not match the number of values.</exception>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadString(System.String@,System.Object)">
            <summary>
            Attempts to load the given new value as a string to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadInteger(System.Int32@,System.Object)">
            <summary>
            Attempts to load the given new value as an integer to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadLong(System.Int64@,System.Object)">
            <summary>
            Attempts to load the given new value as a long to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadDouble(System.Double@,System.Object)">
            <summary>
            Attempts to load the given new value as a double to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadDoubleSystem(System.Double@,System.Object)">
            <summary>
            Attempts to load the given new value as a double to the result (it uses en-us culture). Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadDecimal(System.Decimal@,System.Object)">
            <summary>
            Attempts to load the given new value as a decimal to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadDecimalSystem(System.Decimal@,System.Object)">
            <summary>
            Attempts to load the given new value as a decimal to the result (it uses en-us culture). Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadDateTime(System.DateTime@,System.Object)">
            <summary>
            Attempts to load the given new value as a DateTime to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadDateTimeSystem(System.DateTime@,System.Object)">
            <summary>
            Attempts to load the given new value as a DateTime to the result (it uses en-us culture). Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadTimeSpanSystem(System.TimeSpan@,System.Object)">
            <summary>
            Attempts to load the given new value as a TimeSpan to the result (it uses en-us culture). Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadGuid(System.Guid@,System.Object)">
            <summary>
            Attempts to load the given new value as a Guid to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadBoolean(System.Boolean@,System.Object)">
            <summary>
            Attempts to load the given new value as a bool to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadValue``1(``0@,System.Object,System.Func{System.Object,``0,``0},``0)">
            <summary>
            Attempts to load the given new value as a specific type to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
            <param name="conversion">Conversion method</param>
            <param name="specialValue">Special value to detect invalid conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.LoadValue``1(``0@,System.Object,System.Func{System.Object,``0,System.Globalization.CultureInfo,``0},``0)">
            <summary>
            Attempts to load the given new value as a specific type to the result. Returns true if the conversion of the new value was successful, if not, returns false and keeps the value the same.
            </summary>
            <param name="value">Value to load</param>
            <param name="newValue">New value</param>
            <param name="conversion">Conversion method</param>
            <param name="specialValue">Special value to detect invalid conversion</param>
        </member>
        <member name="M:CMS.Helpers.ValidationHelper.IsNull(System.Object)">
            <summary>
            Returns true if the given value is considered NULL value
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="T:CMS.Helpers.Validator">
            <summary>
            Provides fluent interface for validation of user input.
            </summary>
        </member>
        <member name="F:CMS.Helpers.Validator.mIsValid">
            <summary>
            A value indicating whether the validation was successful.
            </summary>
        </member>
        <member name="F:CMS.Helpers.Validator.mResult">
            <summary>
            The last validation error message.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Validator.Result">
            <summary>
            Gets the last validation error message.
            </summary>
        </member>
        <member name="P:CMS.Helpers.Validator.IsValid">
            <summary>
            Gets a value indicating whether the validation was successful.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Validator.NotEmpty(System.Object,System.String)">
            <summary>
            Validates source control for emptiness.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control is empty</param>
        </member>
        <member name="M:CMS.Helpers.Validator.NotNull(System.Object,System.String)">
            <summary>
            Validates source control for null value.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control is null</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsInteger(System.Object,System.String)">
            <summary>
            Determines whether source control's value is integer.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not integer</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsPositiveNumber(System.Object,System.String,System.Boolean)">
            <summary>
            Determines whether source control's value is positive number.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not integer</param>
            <param name="allowEmpty">If true, an empty value is allowed</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsDouble(System.Object,System.String)">
            <summary>
            Determines whether source control's value is double.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not double</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsDecimal(System.Object,System.String)">
            <summary>
            Determines whether source control's value is decimal.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not decimal</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsBoolean(System.Object,System.String)">
            <summary>
            Determines whether source control's value is boolean.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not boolean</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsEmail(System.Object,System.String,System.Boolean)">
            <summary>
            Determines whether source control's value is valid email.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not valid email</param>
            <param name="checkLength">if <c>true</c> checks whether email length is no longer than <see cref="F:CMS.Helpers.ValidationHelper.SINGLE_EMAIL_LENGTH"/></param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsFileName(System.Object,System.String)">
            <summary>
            Determines whether source control's value matches file name.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not file name</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsFolderName(System.Object,System.String)">
            <summary>
            Determines whether source control's value matches folder name.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not folder name</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsIdentifier(System.Object,System.String)">
            <summary>
            Determines whether source control's value is identifier.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not identifier</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsCodeName(System.Object,System.String,System.Boolean)">
            <summary>
            Determines whether source control's value is code name.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not code name</param>
            <param name="useUnicode">If true, unicode letters are allowed in codename</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsUserName(System.Object,System.String)">
            <summary>
            Determines whether source control's value is user name.
            </summary>
            <param name="source">Control to validate</param>
            <param name="errorMessage">It is returned when control's value is not user name</param>
        </member>
        <member name="M:CMS.Helpers.Validator.IsRegularExp(System.Object,System.String,System.String)">
            <summary>
            Determines whether source control's value matches the regular expression.
            </summary>
            <param name="source">Control to validate</param>
            <param name="regExp">Regular expression</param>
            <param name="errorMessage">It is returned when control's value doesn't match the regular expression</param>
        </member>
        <member name="M:CMS.Helpers.Validator.MatchesCondition``1(``0,System.Func{``0,System.Boolean},System.String)">
            <summary>
            Validates whether the specified value meets the specified condition.
            </summary>
            <typeparam name="T">The type of value to validate.</typeparam>
            <param name="source">A value to validate.</param>
            <param name="condition">A condition to match.</param>
            <param name="errorMessage">The error message to report when validation fails.</param>
        </member>
        <member name="M:CMS.Helpers.Validator.Fail(System.String)">
            <summary>
            Fails validation with the specified error message.
            </summary>
            <param name="errorMessage">The error message to report.</param>
        </member>
        <member name="T:CMS.Helpers.Trackable`1">
            <summary>
            Defines a base class for the classes that can be tracked
            </summary>
        </member>
        <member name="F:CMS.Helpers.Trackable`1.TypeName">
            <summary>
            Type name
            </summary>
        </member>
        <member name="F:CMS.Helpers.Trackable`1.Track">
            <summary>
            If true, the tracking of this type is enabled. Default false, configurable with web.config key CMSTrack[TypeName].
            </summary>
        </member>
        <member name="M:CMS.Helpers.Trackable`1.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:CMS.Helpers.Trackable`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.Helpers.Trackable`1.TrackAllOpen(System.String)">
            <summary>
            Tracks all open trackable objects of this type. Only tracks the section if the tracking of current object is enabled. 
            </summary>
            <param name="reason">Track reason</param>
        </member>
        <member name="T:CMS.Helpers.TrackedSection">
            <summary>
            Defines a concurrent section within the code
            </summary>
        </member>
        <member name="F:CMS.Helpers.TrackedSection.mOpenSections">
            <summary>
            List of currently opened concurrent sections organized by track name
            </summary>
        </member>
        <member name="F:CMS.Helpers.TrackedSection.lockObject">
            <summary>
            Object for locking the context
            </summary>
        </member>
        <member name="F:CMS.Helpers.TrackedSection.mTracks">
            <summary>
            List of guids identifying the tracks on which this section belongs to
            </summary>
        </member>
        <member name="P:CMS.Helpers.TrackedSection.Name">
            <summary>
            Section name
            </summary>
        </member>
        <member name="P:CMS.Helpers.TrackedSection.Started">
            <summary>
            Time when the section has started
            </summary>
        </member>
        <member name="P:CMS.Helpers.TrackedSection.ThreadID">
            <summary>
            Section thread ID
            </summary>
        </member>
        <member name="M:CMS.Helpers.TrackedSection.TrackOpenSections(System.String,System.String)">
            <summary>
            Tracks the current list of running concurrent sections
            </summary>
            <param name="name">Track name</param>
            <param name="reason">Track reason</param>
        </member>
        <member name="M:CMS.Helpers.TrackedSection.AddTrack(System.Guid)">
            <summary>
            Adds the given track to the section
            </summary>
            <param name="trackGuid">Track GUID</param>
        </member>
        <member name="M:CMS.Helpers.TrackedSection.RemoveTrack(System.Guid)">
            <summary>
            Removes the given track from the section
            </summary>
            <param name="trackGuid">Track GUID</param>
        </member>
        <member name="M:CMS.Helpers.TrackedSection.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name of the track</param>
        </member>
        <member name="M:CMS.Helpers.TrackedSection.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="M:CMS.Helpers.TrackedSection.WriteTrack(System.String,System.Guid,System.String)">
            <summary>
            Writes the given track to the track file
            </summary>
            <param name="name">Track name</param>
            <param name="track">Track guid</param>
            <param name="text">Track text</param>
        </member>
        <member name="T:CMS.Helpers.DocumentationHelper">
            <summary>
            Helper methods for documentation links.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentationHelper.DOCUMENTATION_BASE_URL">
            <summary>
            Base URL for product documentation
            </summary>
        </member>
        <member name="M:CMS.Helpers.DocumentationHelper.GetDocumentationRootUrl">
            <summary>
            Gets URL for product documentation root.
            </summary>
            <returns>URL for product documentation root.</returns>
        </member>
        <member name="M:CMS.Helpers.DocumentationHelper.GetDocumentationTopicUrl(System.String)">
            <summary>
            Gets URL for product documentation topic. Topic is either a topic ID, or an absolute URL.
            </summary>
            <param name="topic">Topic identifier or permanent link to documentation topic.</param>
            <returns>URL for product documentation topic</returns>
        </member>
        <member name="M:CMS.Helpers.DocumentationHelper.GetDocumentationSearchUrlPattern">
            <summary>
            Gets URL pattern for product documentation search.
            Pass searched text as 0th substitution.
            </summary>
            <returns>URL pattern for product documentation search</returns>
        </member>
        <member name="M:CMS.Helpers.DocumentationHelper.GetDocumentationRootUrlInternal">
            <summary>
            Gets URL for product documentation root.
            </summary>
            <returns>URL for product documentation root.</returns>
        </member>
        <member name="M:CMS.Helpers.DocumentationHelper.GetDocumentationTopicUrlInternal(System.String)">
            <summary>
            Gets URL for product documentation topic. Topic is either a topic ID, or an absolute URL.
            </summary>
            <param name="topic">Topic identifier or permanent link to documentation topic.</param>
            <returns>URL for product documentation topic</returns>
        </member>
        <member name="M:CMS.Helpers.DocumentationHelper.GetDocumentationSearchUrlPatternInternal">
            <summary>
            Gets URL pattern for product documentation search.
            Pass searched text as 0th substitution.
            </summary>
            <returns>URL pattern for product documentation search</returns>
        </member>
        <member name="T:CMS.Helpers.EnumCategoryAttribute">
            <summary>
            Allows to differentiate enum's members to categories.
            </summary>
        </member>
        <member name="P:CMS.Helpers.EnumCategoryAttribute.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="M:CMS.Helpers.EnumCategoryAttribute.#ctor(System.String)">
            <summary>
            Specifies the category for an enum field.
            </summary>
            <param name="category">Category of the attributed enum field</param>
        </member>
        <member name="T:CMS.Helpers.EnumDefaultValueAttribute">
            <summary>
            Marks the enum value as the default value for the containing enum type.
            </summary>
        </member>
        <member name="T:CMS.Helpers.EnumOrderAttribute">
            <summary>
            Specifies the order for an enum field.
            </summary>
        </member>
        <member name="P:CMS.Helpers.EnumOrderAttribute.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="M:CMS.Helpers.EnumOrderAttribute.#ctor(System.Int32)">
            <summary>
            Specifies the order for an enum field.
            </summary>
            <param name="order">Order of the attributed enum field</param>
        </member>
        <member name="T:CMS.Helpers.EnumStringRepresentationAttribute">
            <summary>
            Specifies the string representation for an enum field.
            </summary>
        </member>
        <member name="P:CMS.Helpers.EnumStringRepresentationAttribute.StringRepresentation">
            <summary>
            Gets the string representation value.
            </summary>
        </member>
        <member name="M:CMS.Helpers.EnumStringRepresentationAttribute.#ctor(System.String)">
            <summary>
            Specifies the string representation for an enum field.
            </summary>
            <param name="stringRepresentation">String representation of the attributed enum field</param>
        </member>
        <member name="T:CMS.Helpers.ContentCodingEnum">
            <summary>
            Contains enumeration of supported HTTP content codings used for content compression (RFC 2616).
            </summary>
        </member>
        <member name="F:CMS.Helpers.ContentCodingEnum.IDENTITY">
            <summary>
            Uses no transformation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ContentCodingEnum.DEFLATE">
            <summary>
            The "zlib" format defined in RFC 1950 [31] in combination with the "deflate" compression mechanism described in RFC 1951.
            </summary>
        </member>
        <member name="T:CMS.Helpers.DocumentMarkEnum">
            <summary>
            Document mark type.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.Link">
            <summary>
            Document is link mark.
            </summary> 
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.Redirect">
            <summary>
            Document uses redirect mark.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.NoTranslation">
            <summary>
            Document is not translated mark.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.Archived">
            <summary>
            Document is archived mark.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.CheckedOut">
            <summary>
            Document is checked out mark.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.Published">
            <summary>
            Document is published mark.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.Unpublished">
            <summary>
            Document is unpublished mark.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.VersionNotPublished">
            <summary>
            Document version is not published.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.ScheduledToBePublished">
            <summary>
            Document is scheduled to be published.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DocumentMarkEnum.DocumentWaitingForTranslation">
            <summary>
            Document is waiting for translation (from external translation service).
            </summary>
        </member>
        <member name="T:CMS.Helpers.EnumHelper">
            <summary>
            Provides helper methods for working with the <c>Enum</c> types.
            </summary>
        </member>
        <member name="M:CMS.Helpers.EnumHelper.GetDefaultValue``1">
            <summary>
            Gets the default value fo the specified enum type.
            </summary>
            <typeparam name="TEnum">Enum type</typeparam>
            <returns>
            Returns the default enum value, if it is specified using the <see cref="T:CMS.Helpers.EnumDefaultValueAttribute"/>.
            Otherwise returns the first declared enum value.
            </returns>
        </member>
        <member name="M:CMS.Helpers.EnumHelper.GetDefaultValue(System.Type)">
            <summary>
            Gets the default value fo the specified enum type.
            </summary>
            <param name="enumType">Enum type</param>
            <returns>
            Returns the default enum value, if it is specified using the <see cref="T:CMS.Helpers.EnumDefaultValueAttribute"/>.
            Otherwise returns the first declared enum value.
            </returns>
        </member>
        <member name="M:CMS.Helpers.EnumHelper.GetEnumsByCategories(System.Type,System.Collections.Generic.List{System.String})">
            <summary>
            Gets enums with category attribute, which have given category name.
            </summary>
            <param name="enumType">Enum type</param>
            <param name="categories">Categories</param>
            <returns>Return enums with category attribute, with given category name.</returns>
        </member>
        <member name="T:CMS.Helpers.EnumStringRepresentationExtensions">
            <summary>
            Provides extension methods for working with the <c>Enum</c> types.
            </summary>
        </member>
        <member name="M:CMS.Helpers.EnumStringRepresentationExtensions.GetOrder(System.Enum)">
            <summary>
            Gets the order of the enum value.
            </summary>
            <param name="value">Enum value</param>
            <returns>
            Returns the order of enum item if it is specified using the <see cref="T:CMS.Helpers.EnumOrderAttribute"/>.
            Otherwise returns the int value of the enum value if the enum is based on an int type.
            Otherwise returns 0.
            </returns>
        </member>
        <member name="M:CMS.Helpers.EnumStringRepresentationExtensions.ToStringRepresentation``1(``0)">
            <summary>
            Converts the enum value to it's string representation.
            </summary>
            <typeparam name="TEnum">Enum type</typeparam>
            <param name="value">Enum value</param>
            <returns>
            Returns the string representation of the enum value if it is specified using the <see cref="T:CMS.Helpers.EnumStringRepresentationAttribute"/>.
            Otherwise returns the enum field name.
            </returns>
        </member>
        <member name="M:CMS.Helpers.EnumStringRepresentationExtensions.ToStringRepresentation(System.Enum)">
            <summary>
            Converts the enum value to it's string representation.
            </summary>
            <param name="value">Enum value</param>
            <returns>
            Returns the string representation of the enum value if it is specified using the <see cref="T:CMS.Helpers.EnumStringRepresentationAttribute"/>.
            Otherwise returns the enum field name.
            </returns>
        </member>
        <member name="M:CMS.Helpers.EnumStringRepresentationExtensions.ToLocalizedString``1(``0,System.String)">
            <summary>
            Converts the enum value to it's localized string representation.
            </summary>
            <param name="value">Enum value</param>
            <param name="resourcePrefix">Resource prefix</param>
        </member>
        <member name="M:CMS.Helpers.EnumStringRepresentationExtensions.ToEnum``1(System.String)">
            <summary>
            Converts the string representation of the enum value to the actual enum value.
            </summary>
            <typeparam name="TEnum">Enum type</typeparam>
            <param name="stringRepresentation">String representation of the enum value</param>
            <returns>
            Returns the enum value if it is specified using the <see cref="T:CMS.Helpers.EnumStringRepresentationAttribute"/>.
            Otherwise returns the default enum value.
            </returns>
        </member>
        <member name="M:CMS.Helpers.EnumStringRepresentationExtensions.ToEnum(System.String,System.Type)">
            <summary>
            Converts the string representation of the enum value to the actual enum value.
            </summary>
            <param name="stringRepresentation">String representation of the enum value</param>
            <param name="enumType">Enum type</param>
            <returns>
            Returns the enum value if it is specified using the <see cref="T:CMS.Helpers.EnumStringRepresentationAttribute"/>.
            Otherwise returns the default enum value.
            </returns>
        </member>
        <member name="T:CMS.Helpers.ExcludedSystemEnum">
            <summary>
            Enumeration for excluded pages by the system.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.Unknown">
            <summary>
            Unknown excluded status.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.NotExcluded">
            <summary>
            Not excluded.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.Excluded">
            <summary>
            Excluded page - Not specific.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.Administration">
            <summary>
            Administration page.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.GetFileHandler">
            <summary>
            Request is processed by CMS handlers (GetAttachmentHandler, GetMetafileHandler, GetMediaHandler etc.)
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.LogonPage">
            <summary>
            Logon page.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.CMSDialog">
            <summary>
            CMS dialog (requires authentication).
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.PhysicalFile">
            <summary>
            Physical file.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.GetResource">
            <summary>
            GetResource.ashx request
            </summary>
        </member>
        <member name="F:CMS.Helpers.ExcludedSystemEnum.AppThemes">
            <summary>
            App_Themes folder
            </summary>
        </member>
        <member name="T:CMS.Helpers.SplitModeEnum">
            <summary>
            Split mode enumeration for frameset split view control.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SplitModeEnum.Vertical">
            <summary>
            Vertical split view.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SplitModeEnum.Horizontal">
            <summary>
            Horizontal split view.
            </summary>
        </member>
        <member name="T:CMS.Helpers.TextCompareOperatorEnum">
            <summary>
            Specifies possible operators for comparing text (used mostly in CMSFormControls/Filters/TextFilter control).
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.Like">
            <summary>
            Like/Contains
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.NotLike">
            <summary>
            Not like/Doesn't contain
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.Equals">
            <summary>
            Equals/=
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.NotEquals">
            <summary>
            Does not equal/!=
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.StartsWith">
            <summary>
            Starts with
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.NotStartsWith">
            <summary>
            Doesn't start with
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.EndsWith">
            <summary>
            Ends with
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.NotEndsWith">
            <summary>
            Does not end with
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.Empty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextCompareOperatorEnum.NotEmpty">
            <summary>
            Is not empty
            </summary>
        </member>
        <member name="T:CMS.Helpers.TrailingSlashEnum">
            <summary>
            Trailing slash enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TrailingSlashEnum.DontCare">
            <summary>
            Proceed URLs with or without slash at the and.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TrailingSlashEnum.Never">
            <summary>
            Never proceed URLs with slash at the end.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TrailingSlashEnum.Always">
            <summary>
            Always proceed URLs with slash at the end.
            </summary>
        </member>
        <member name="T:CMS.Helpers.UserAgentEnum">
            <summary>
            User agent enum.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UserAgentEnum.Unknown">
            <summary>
            Unknow browser.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UserAgentEnum.BlackBerry">
            <summary>
            BlackBerry.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UserAgentEnum.IPhone">
            <summary>
            IPhone.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UserAgentEnum.IPad">
            <summary>
            IPad.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UserAgentEnum.Nokia">
            <summary>
            Nokia.
            </summary>
        </member>
        <member name="F:CMS.Helpers.UserAgentEnum.Android">
            <summary>
            Android.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ValidityEnum">
            <summary>
            Validity period enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidityEnum.Days">
            <summary>
            Validity in days.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidityEnum.Weeks">
            <summary>
            Validity in weeks.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidityEnum.Months">
            <summary>
            Validity in months.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidityEnum.Years">
            <summary>
            Validity in years.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ValidityEnum.Until">
            <summary>
            Validity until specific date and time.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CultureHelper">
            <summary>
            Provides the global methods for culture helping operations.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CultureHelper.ENGLISH_CULTURE_CODE">
            <summary>
            English culture code
            </summary>
        </member>
        <member name="F:CMS.Helpers.CultureHelper.mDefaultCulture">
            <summary>
            Default culture.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CultureHelper.mDefaultUICultureCode">
            <summary>
            Default UI culture code (e.g., "en-US").
            </summary>
        </member>
        <member name="P:CMS.Helpers.CultureHelper.EnglishCulture">
            <summary>
            English culture (default culture for storing data).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CultureHelper.DefaultUICulture">
            <summary>
            Default culture (default culture of user interface).
            </summary>
        </member>
        <member name="P:CMS.Helpers.CultureHelper.DefaultUICultureCode">
            <summary>
            Returns default UI culture code.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CultureHelper.PreferredUICultureCode">
            <summary>
            Returns preferred UI culture code.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CultureHelper.PreferredUICultureInfo">
            <summary>
            Preferred UI culture info object.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CultureHelper.DefaultUICultureCodeInternal">
            <summary>
            Returns default UI culture code.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.GetCultureInfo(System.String)">
            <summary>
            Gets the culture info for specified culture.
            If culture code is invalid, then english culture is returned.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.GetPreferredCulture">
            <summary>
            Returns the user preferred culture (reflects the virtual context).
            </summary>
            <remarks>On live site, the preferred culture is based on thread culture.</remarks>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.GetOriginalPreferredCulture">
            <summary>
            Returns the user original preferred culture.
            </summary>
            <remarks>On live site, the preferred culture is based on thread culture.</remarks>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.SetPreferredCulture(System.String)">
            <summary>
            Sets the user preferred culture.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.SetPreferredCulture(System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets the user preferred culture.
            </summary>
            <param name="cultureCode">Culture code to set</param>
            <param name="setCookie">Set the culture to a cookie as well</param>
            <param name="handleLifeTime">If true, the life time support of the culture is allowed</param>
            <remarks>The method has no effect on live site.</remarks>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.GetPreferredUICultureCode">
            <summary>
            Returns the user preferred UI Culture code.
            </summary>
            <remarks>Returns null on live site, unless the culture is specified within virtual context.</remarks>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.SetPreferredUICultureCode(System.String)">
            <summary>
            Sets the user preferred UI Culture code.
            </summary>
            <remarks>The method has no effect on live site.</remarks>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.IsPreferredCultureRTL">
            <summary>
            Returns true is current content culture is right to left culture.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.IsUICultureRTL">
            <summary>
            Returns true if current UI culture is right to left culture.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.IsCultureRTL(System.String)">
            <summary>
            Returns true if specified culture is right to left culture.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.GetDefaultCultureCode(System.String)">
            <summary>
            Returns the default culture code.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.GetShortCultureCode(System.String)">
            <summary>
            Returns the short culture part, just the main culture identifier ("en-us" => "en").
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.IsValidCultureInfoName(System.String)">
            <summary>
            Check if culture code is valid DotNet culture code 
            (All cultures that ship with the .NET Framework, including neutral and specific 
            cultures, cultures installed in the Windows operating system, and 
            custom cultures created by the user).
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.IsNeutralCulture(System.String)">
            <summary>
            Checks if culture code is neutral culture code.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.Helpers.CultureHelper.GetDefaultCultureCodeInternal(System.String)">
            <summary>
            Returns the default culture code.
            </summary>
            <param name="siteName">Site name</param>
            <seealso cref="M:CMS.Helpers.CultureHelper.GetDefaultCultureCode(System.String)"/>
        </member>
        <member name="T:CMS.Helpers.DateTimeHelper">
            <summary>
            Methods to work with the DateTime.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DateTimeHelper.ZERO_TIME">
            <summary>
            Zero time constant.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DateTimeHelper.UNIX_TIME_START">
            <summary>
            Start date/time for the Unix time stamp
            </summary>
        </member>
        <member name="F:CMS.Helpers.DateTimeHelper.MACRO_TIME_NOW">
            <summary>
            Macro representing current date and time.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DateTimeHelper.MACRO_DATE_TODAY">
            <summary>
            Macro representing current date.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetMinuteStart(System.DateTime)">
            <summary>
            Gets current date without seconds.
            </summary>
            <param name="date">Date</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetHourStart(System.DateTime)">
            <summary>
            Gets current date without minutes and seconds.
            </summary>
            <param name="date">Date</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetDayStart(System.DateTime)">
            <summary>
            Gets start of the day of specific date.
            </summary>
            <param name="date">Date</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetWeekStart(System.DateTime)">
            <summary>
            Gets the date from the beginning of week.
            </summary>
            <param name="date">Date of week</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetWeekStart(System.DateTime,System.String)">
            <summary>
            Gets the date from the beginning of week.
            </summary>
            <param name="date">Date of week</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetMonthStart(System.DateTime)">
            <summary>
            Gets the first day of the month from specific date.
            </summary>
            <param name="date">Date</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetYearStart(System.DateTime)">
            <summary>
            Gets the first day of the year from specific date.
            </summary>
            <param name="date">Date</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetFirstDayOfWeek">
            <summary>
            Gets the first day of the week.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetFirstDayOfWeek(System.String)">
            <summary>
            Gets the first day of the week.
            </summary>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetWeekOfYear(System.DateTime)">
            <summary>
            Gets the week of year number.
            </summary>
            <param name="time">DateTime value</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetWeekOfYear(System.DateTime,System.String)">
            <summary>
            Gets the week of year number.
            </summary>
            <param name="time">DateTime value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.NumberOfWeeks(System.DateTime,System.DateTime)">
            <summary>
            Gets number of weeks in specified time interval.
            </summary>
            <param name="dateFrom">Time from</param>
            <param name="dateTo">Time to</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.NumberOfWeeks(System.DateTime,System.DateTime,System.String)">
            <summary>
            Gets number of weeks in specified time interval.
            </summary>
            <param name="dateFrom">Time from</param>
            <param name="dateTo">Time to</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetValidityEnum(System.String)">
            <summary>
            Returns validity enumeration.
            </summary>
            <param name="validity">Validity</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetValidityString(CMS.Helpers.ValidityEnum)">
            <summary>
            Returns validity enumeration as string.
            </summary>
            <param name="validity">Validity</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetFormattedValidity(CMS.Helpers.ValidityEnum,System.Int32,System.DateTime)">
            <summary>
            Returns validity as formatted string.
            </summary>
            <param name="validity">Validity type</param>
            <param name="validFor">Multiplier for time period set by validity type</param>
            <param name="validUntil">Valid until date and time</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.GetValidTo(System.DateTime,CMS.Helpers.ValidityEnum,System.Int32)">
            <summary>
            Calculate valid to date and time according to given parameters.
            </summary>
            <param name="orignalValidTo">Original valid to date and time</param>
            <param name="unitsType">Type of time units to add or subtract</param>
            <param name="units">Time units count</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.IsValidFromTo(System.DateTime,System.DateTime)">
            <summary>
            Returns true if DateTime "from" is lower than or equal to DateTime "to" or one of them is equal to ZeroTime.
            </summary>
            <param name="from">DateTime From</param>
            <param name="to">DateTime To</param>
        </member>
        <member name="M:CMS.Helpers.DateTimeHelper.IsNowOrToday(System.String)">
            <summary>
            Returns true, if the given value is ##NOW## or ##TODAY## macro
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="T:CMS.Helpers.DefaultCultureService">
            <summary>
            Default <see cref="T:CMS.Helpers.ICultureService"/> implementation
            </summary>
        </member>
        <member name="M:CMS.Helpers.DefaultCultureService.IsUICulture(System.String)">
            <summary>
            Returns true when culture with given code is defined as UICulture.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ICultureService">
            <summary>
            Defines culture-related methods
            </summary>
        </member>
        <member name="M:CMS.Helpers.ICultureService.IsUICulture(System.String)">
            <summary>
            Returns true when culture with given code is defined as UICulture.
            </summary>
        </member>
        <member name="T:CMS.Helpers.PreferredCultureOnDemand">
            <summary>
            Encapsulates the site name but doesn't request it until it is demanded by Value.
            </summary>
        </member>
        <member name="P:CMS.Helpers.PreferredCultureOnDemand.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ResHelper">
            <summary>
            Provides methods to provide localized resource strings
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.Colon">
            <summary>
            Colon symbol.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.Semicolon">
            <summary>
            Semicolon symbol.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.Comma">
            <summary>
            Comma symbol.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.Dash">
            <summary>
            Dash symbol.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.Slash">
            <summary>
            Slash symbol.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.Dot">
            <summary>
            Dot symbol.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.RequiredMark">
            <summary>
            RequiredMark symbol.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ResHelper.RegExLocalize">
            <summary>
            Localization regular expression.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ResHelper.GetStringFormat(System.String,System.Object[])">
            <summary>
            Gets the given string and formats it with the standard String.Format method
            </summary>
            <param name="stringName">String name</param>
            <param name="parameters">Parameters for the formatting</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.GetString(System.String,System.String,System.Boolean)">
            <summary>
            Returns specified string.
            </summary>
            <param name="stringName">Key of the string</param>
            <param name="culture">Culture</param>
            <param name="useDefaultCulture">If true the default culture translation is used if translation in chosen culture doesn't exist</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.GetFileString(System.String,System.String,System.Boolean)">
            <summary>
            Returns specified string.
            </summary>
            <param name="stringName">Key of the string</param>
            <param name="culture">Culture</param>
            <param name="useDefaultCulture">If true the default culture translation is used if translation in chosen culture doesn't exist</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.GetFileString(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns specified string from the resource files.
            </summary>
            <param name="stringName">Name of the string</param>
            <param name="culture">Culture</param>
            <param name="defaultValue">Default value to return in case no string found</param>
            <param name="useDefaultCulture">If true the default culture translation is used if translation in chosen culture doesn't exists</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.GetAPIString(System.String,System.String)">
            <summary>
            Returns specified string for the API usage (the default value is used when string is not found).
            </summary>
            <param name="stringName">Key of the string</param>
            <param name="defaultValue">Value to return in case string not found</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.GetAPIString(System.String,System.String,System.String)">
            <summary>
            Returns specified string.
            </summary>
            <param name="stringName">Key of the string</param>
            <param name="culture">Culture</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.TranslationFoundForLocalizedString(System.String)">
            <summary>
            Detects whether translation can be found for the given localized string
            </summary>
            <param name="inputText">Input text with localizable expressions</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.LocalizeString(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces "{$stringname$}" expressions in given text with localized strings using given culture.
            </summary>
            <param name="inputText">Input text with localizable expressions</param>
            <param name="culture">Culture</param>
            <param name="encode">If true, translations (replacements) are HTML encoded</param>
            <param name="useDefaultCulture">If true the default culture translation is used if translation in chosen culture doesn't exist</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.LocalizeFileString(System.String)">
            <summary>
            Replaces "{$stringname$}" expressions in given text with localized strings.
            </summary>
            <param name="inputText">Input text with localizable expressions</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.ContainsLocalizationMacro(System.String)">
            <summary>
            Returns true, if the given text contains a localization macro
            </summary>
            <param name="inputText">Text to check</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.LocalizedStringMatch(System.Text.RegularExpressions.Match,System.Func{System.String,System.String,System.Boolean,System.String},System.String,System.Boolean,System.Boolean)">
            <summary>
            Match evaluator for the string localization.
            </summary>
            <param name="m">Regular expression match</param>
            <param name="culture">Culture to use for localization</param>
            <param name="encode">If true, translations (replacements) are HTML encoded</param>
            <param name="getStringMethod">Method to provide the resource string in case of localization</param>
            <param name="useDefaultCulture">If true the default culture translation is used if translation in chosen culture doesn't exist</param>
        </member>
        <member name="M:CMS.Helpers.ResHelper.LocalizeExpression(System.String,System.String,System.Boolean,System.Func{System.String,System.String,System.Boolean,System.String},System.Boolean)">
            <summary>
            Localizes the given expression, handles two types of expressions:
            
            stringkey - Simple localization
            
            =default string|cs-cz=localized string - advanced localization
            </summary>
            <param name="expression">Expression to localize</param>
            <param name="culture">Culture to use for localization</param>
            <param name="encode">If true, translations (replacements) are HTML encoded</param>
            <param name="getStringMethod">Method to get the resource string for localization</param>
            <param name="useDefaultCulture">If true the default culture translation is used if translation in chosen culture doesn't exist</param>
        </member>
        <member name="T:CMS.Helpers.ComponentEvents">
            <summary>
            Events that serve for communication of the components within the system.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.NEXT">
            <summary>
            Next event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.PREVIOUS">
            <summary>
            Previous event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.FINISH">
            <summary>
            Finish event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.SUBMIT">
            <summary>
            Submit event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.CANCEL">
            <summary>
            Cancel event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.LOAD_STEP">
            <summary>
            Load step event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.STEP_LOADED">
            <summary>
            Step loaded event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.VALIDATE_STEP">
            <summary>
            Validate step event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.FINISH_STEP">
            <summary>
            Finish step event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.STEP_FINISHED">
            <summary>
            Step finished event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.CANCEL_STEP">
            <summary>
            Cancel step event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.SAVE">
            <summary>
            Save event (saves data to database).
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.SAVE_DATA">
            <summary>
            Save data event - only propagates changes to manager control (doesn't save data to database).
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.VALIDATE_DATA">
            <summary>
            Validate data.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.COMMENT">
            <summary>
            Comment for workflow action.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.DELETE">
            <summary>
            Delete event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.AUTOMATION_MOVE_NEXT">
            <summary>
            Move to next automation step event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.AUTOMATION_MOVE_PREVIOUS">
            <summary>
            Move to previous automation step event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.AUTOMATION_REMOVE">
            <summary>
            Remove automation process event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.AUTOMATION_START">
            <summary>
            Start automation process event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.AUTOMATION_MOVE_SPEC">
            <summary>
            Move to specific step event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.CHECKIN">
            <summary>
            Object check-in event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.CHECKOUT">
            <summary>
            Object check-out event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.UNDO_CHECKOUT">
            <summary>
            Object undo check-out event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.CUSTOMIZE">
            <summary>
            Customize event.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ComponentEvents.mGlobalEvents">
            <summary>
            Global events.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ComponentEvents.GlobalEvents">
            <summary>
            Global events that are fired and survive across requests during the whole application lifetime.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ComponentEvents.RequestEvents">
            <summary>
            Events that are fired and survive within current request.
            </summary>
        </member>
        <member name="T:CMS.Helpers.HelpersExtensions">
            <summary>
            Extension methods.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.Append(System.Text.StringBuilder,System.Object[])">
            <summary>
            Appends the specified items to the string builder.
            </summary>
            <param name="sb">String builder object</param>
            <param name="parts">Objects to append</param>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.AppendIndent(System.Text.StringBuilder,System.Int32)">
            <summary>
            Appends the specified indentation to the string builder.
            </summary>
            <param name="sb">String builder object</param>
            <param name="level">Indentation level</param>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.AppendIndent(System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Appends the specified indentation to the string builder.
            </summary>
            <param name="sb">String builder object</param>
            <param name="level">Indentation level</param>
            <param name="indentString">Indentation string</param>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.NewLine(System.Text.StringBuilder)">
            <summary>
            Adds the new line into the string builder in case there is already some content.
            </summary>
            <param name="sb">String builder object</param>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.Join(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Joins the given list of values with a given separator.
            </summary>
            <remarks>
            Null entries from input are skipped. Returns empty string if <paramref name="values"/> is null. Consider using framework method <see cref="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})"/>
            </remarks>
            <param name="values">Values</param>
            <param name="separator">Separator</param>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.NthIndexOf(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Finds index of nth occurrence of string.
            </summary>
            <param name="str">String to examine</param>
            <param name="value">String to find</param>
            <param name="n">Number determining index of which occurrence to return</param>
            <param name="fromBegining">Whether to search from beginning or end</param>
            <returns>If found, returns an index of the nth occurrence. Otherwise returns -1.</returns>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Truncates string to specified length.
            </summary>
            <param name="str">Given string</param>
            <param name="length">Length to truncate string to</param>
            <returns>Truncated string.</returns>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.TryReadXml(System.Data.DataSet,System.String)">
            <summary>
            Tries to read xml and load the data from it to the DataSet via standard .NET method. If the load fails, it removes all the forbidden whitespace characters and tries it again.
            </summary>
            <param name="ds">DataSet to fill</param>
            <param name="xml">XML with data</param>
        </member>
        <member name="M:CMS.Helpers.HelpersExtensions.ReadXmlToDataSet(System.Data.DataSet,System.String,System.Xml.XmlParserContext,System.Xml.XmlReaderSettings)">
            <summary>
            Reads XML string to data set using the supplied XML context and settings.
            </summary>
        </member>
        <member name="T:CMS.Helpers.JsonConverters.ResourceStringConverter">
            <summary>
            JSON converter for string representing resource string
            </summary>
        </member>
        <member name="M:CMS.Helpers.JsonConverters.ResourceStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:CMS.Helpers.JsonConverters.ResourceStringConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
              <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.Helpers.JsonConverters.ResourceStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:CMS.Helpers.AJAXHelper">
            <summary>
            AJAX helper.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AJAXHelper.SCRIPT_PATH_TYPE">
            <summary>
            Type of response part containing script path
            </summary>
        </member>
        <member name="F:CMS.Helpers.AJAXHelper.FIELD_LENGTH">
            <summary>
            Length field index.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AJAXHelper.FIELD_TYPE">
            <summary>
            Type field index.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AJAXHelper.FIELD_ID">
            <summary>
            ID field index.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AJAXHelper.FIELD_CONTENT">
            <summary>
            Content field index.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AJAXHelper.SEPARATOR">
            <summary>
            Field separator.
            </summary>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.GetNextField(System.String,System.Int32)">
            <summary>
            Gets the next field from the AJAX response (all text until next separator).
            </summary>
            <param name="response">Response string</param>
            <param name="start">Start index</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.ParseResponse(System.String)">
            <summary>
            Parses the AJAX response returning the list of string arrays [length, type, id, content].
            </summary>
            <param name="response">Response string</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.BuildResponse(System.Collections.ArrayList,System.Int32)">
            <summary>
            Builds the response string from given response array.
            </summary>
            <param name="response">Response array</param>
            <param name="expectedSize">Expected size of the response in bytes</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.ResolveURLs(System.Collections.ArrayList,System.String)">
            <summary>
            Resolves URLs in the response array content.
            </summary>
            <param name="response">Response array</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.ResolveURLs(System.String,System.String)">
            <summary>
            Resolves URLs in the response array content.
            </summary>
            <param name="response">Response string</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.EnsureURLPrefixes(System.Collections.ArrayList,System.String,System.String)">
            <summary>
            Ensures that all local URLs have given prefix
            </summary>
            <param name="response">Html code</param>
            <param name="applicationPath">Application path</param>
            <param name="urlPrefix">URL prefix to ensure</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.EnsureURLPrefixes(System.Collections.ArrayList,System.String,System.String,CMS.Helpers.URLHelper.PathModifierHandler)">
            <summary>
            Ensures that all local URLs have given prefix
            </summary>
            <param name="response">Html code</param>
            <param name="applicationPath">Application path</param>
            <param name="urlPrefix">URL prefix to ensure</param>
            <param name="urlModifier">URL modifier to apply</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.EnsureURLPrefixes(System.String,System.String,System.String)">
            <summary>
            Ensures that all local URLs have given prefix
            </summary>
            <param name="response">Html code</param>
            <param name="applicationPath">Application path</param>
            <param name="urlPrefix">URL prefix to ensure</param>
        </member>
        <member name="M:CMS.Helpers.AJAXHelper.EnsureURLPrefixes(System.String,System.String,System.String,CMS.Helpers.URLHelper.PathModifierHandler)">
            <summary>
            Ensures that all local URLs have given prefix
            </summary>
            <param name="response">Html code</param>
            <param name="applicationPath">Application path</param>
            <param name="urlPrefix">URL prefix to ensure</param>
            <param name="urlModifier">URL modifier to apply</param>
        </member>
        <member name="T:CMS.Helpers.DiscussionActionEnum">
            <summary>
            Discussion action enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.InsertURL">
            <summary>
            Insert URL (using simple dialog).
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.InsertImage">
            <summary>
            Insert image (using simple dialog).
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.InsertQuote">
            <summary>
            Insert quote.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.InsertCode">
            <summary>
            Insert code snippet.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.FontBold">
            <summary>
            Change font to bold format.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.FontItalics">
            <summary>
            Change font to italics format.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.FontUnderline">
            <summary>
            Change font to underline format.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.FontStrike">
            <summary>
            Change font to strike format.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.FontColor">
            <summary>
            Change font color.
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.InsertAdvancedURL">
            <summary>
            Insert URL (using advanced dialog).
            </summary>
        </member>
        <member name="F:CMS.Helpers.DiscussionActionEnum.InsertAdvancedImage">
            <summary>
            Insert simple Image (using advanced dialog).
            </summary>
        </member>
        <member name="T:CMS.Helpers.DiscussionMacroHelper">
            <summary>
            Methods for resolving macros within discussion posts.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroHelper.CurrentDiscussionResolver">
            <summary>
            Current discussion macro resolver.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroHelper.ResolveDiscussionMacros(System.String)">
            <summary>
            Resolves the discussion macros.
            </summary>
            <param name="inputText">Text to resolve</param>
        </member>
        <member name="T:CMS.Helpers.DiscussionMacroResolver">
            <summary>
            Methods for resolving macros within discussion posts.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.RegExBBTagExpression">
            <summary>
            Regular expression for the parsed BB tag expression.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.RegExBBTag">
            <summary>
            Regular expression for the BB tag.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.UseNoFollowForLinks">
            <summary>
            Gets or sets the value that indicates whether rel="nofollow" should be used for resolved links
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableStrikeThrough">
            <summary>
            Gets or sets the value that indicates whether strikeThrough macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableUnderline">
            <summary>
            Gets or sets the value that indicates whether underline macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableItalics">
            <summary>
            Gets or sets the value that indicates whether italics macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableBold">
            <summary>
            Gets or sets the value that indicates whether bold macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableCode">
            <summary>
            Gets or sets the value that indicates whether code macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableColor">
            <summary>
            Gets or sets the value that indicates whether color macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableSize">
            <summary>
            Gets or sets the value that indicates whether size macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableURL">
            <summary>
            Gets or sets the value that indicates whether URL macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableQuote">
            <summary>
            Gets or sets the value that indicates whether Quote macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EnableImage">
            <summary>
            Gets or sets the value that indicates whether Image macros are enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.MaxImageSideSize">
            <summary>
            Gets or sets max side size of image.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.MaxTextSize">
            <summary>
            Gets or sets max text size of image.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.TextSizeUnit">
            <summary>
            Gets or sets the text size unit which should be used.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.QuotePostText">
            <summary>
            Gets or sets the text which should be displayed in quote area after user name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.EncodeText">
            <summary>
            If true, the text outside of the macros is encoded.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.ConvertLineBreaksToHTML">
            <summary>
            If true, the line breaks are converted to HTML br tags.
            </summary>
        </member>
        <member name="P:CMS.Helpers.DiscussionMacroResolver.ResolveToPlainText">
            <summary>
            If true, the tags are resolved to the plain text version.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.#ctor">
            <summary>
            Discussion macro helper constructor.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.Boolean)">
            <summary>
            Discussion macro helper constructor.
            </summary>
            <param name="enableImage">Indicates whether image macro is enabled</param>
            <param name="enableQuote">Indicates whether quote macro is enabled</param>
            <param name="enableUrl">Indicates ehether URL macro is enabled</param>
            <param name="maxSideSize">Sets  image maxsidesize</param>
            <param name="quotePostText">Sets the text which should be displayed in quote area after user name</param>
            <param name="invalidateJavaScript">Sets whether JavaScript should be invalidated</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetBold(System.String)">
            <summary>
            Returns the forum discussion bold tag.
            </summary>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetItalics(System.String)">
            <summary>
            Returns the forum discussion italics tag.
            </summary>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetUnderline(System.String)">
            <summary>
            Returns the forum discussion underline tag.
            </summary>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetStrikeThrough(System.String)">
            <summary>
            Returns the forum discussion strike through tag.
            </summary>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetURL(System.String,System.String)">
            <summary>
            Returns the forum discussion URL tag.
            </summary>
            <param name="url">URL</param>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetImage(System.String)">
            <summary>
            Returns the forum discussion image tag.
            </summary>
            <param name="url">Image URL</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetColor(System.String,System.String)">
            <summary>
            Returns the forum discussion color tag.
            </summary>
            <param name="color">Color</param>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetSize(System.Int32,System.String)">
            <summary>
            Returns the forum discussion size tag.
            </summary>
            <param name="size">Size</param>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetQuote(System.String,System.String)">
            <summary>
            Returns the forum discussion Quote tag.
            </summary>
            <param name="userName">User name</param>
            <param name="text">Text within the tag</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.RemoveTags(System.String)">
            <summary>
            Remove all BB tags from the text.
            </summary>
            <param name="sourceText">Text containing BB macros to be removed</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.ResolveMacros(System.String)">
            <summary>
            Resolves BB macros in a given text.
            </summary>
            <param name="sourceText">Text to resolve</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.ResolveMacros(System.String,System.String)">
            <summary>
            Resolves BB macros in a given text.
            </summary>
            <param name="sourceText">Text to resolve</param>
            <param name="domainName">Domain name for URL resolving</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.ProcessText(System.String)">
            <summary>
            Processes the standard text.
            </summary>
            <param name="text">Text to process</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetClosingTag(System.String)">
            <summary>
            Gets the closing tag for specified BB tag.
            </summary>
            <param name="tagName">Tag name</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.IsBBCodeEnabled(System.Int32,CMS.Helpers.DiscussionActionEnum)">
            <summary>
            Returns true if BBcode is enabled for given actions set (for DB column with stored enabled actions).
            </summary>
            <param name="enabledActions">Set of enabled actions</param>
            <param name="action">Dsicussion action</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.SetBBCode(System.Int32,CMS.Helpers.DiscussionActionEnum,System.Boolean)">
            <summary>
            Sets enabled BBcode (for DB column with stored enabled actions).
            </summary>
            <param name="currentActions">Current enabled actions</param>
            <param name="action">Discussion action to enable</param>
            <param name="enable">Indicates if the BBcode should be allowed</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.IsURL(System.String)">
            <summary>
            Returns true if the given string is URL, decodes the string before the validation.
            </summary>
            <param name="url">URL to check</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetMaxWidthHeightExpression(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the CSS expression to limit the max width of the element.
            </summary>
            <param name="width">Max width</param>
            <param name="height">Max height</param>
            <param name="maxSideSize">Max side size</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetMaxWidthExpression(System.Int32)">
            <summary>
            Gets the CSS expression to limit the max width of the element.
            </summary>
            <param name="width">Max width</param>
        </member>
        <member name="M:CMS.Helpers.DiscussionMacroResolver.GetMaxHeightExpression(System.Int32)">
            <summary>
            Gets the CSS expression to limit the max Height of the element.
            </summary>
            <param name="height">Max Height</param>
        </member>
        <member name="T:CMS.Helpers.CssHelper">
            <summary>
            Utility methods for CSS manipulation.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CssHelper.GetStyle(System.String)">
            <summary>
            Encloses a style declaration block in an HTML style element.
            </summary>
            <param name="style">Style block containing CSS rules</param>
            <returns>HTML style element with enclosed CSS rules</returns>
        </member>
        <member name="M:CMS.Helpers.CssHelper.GetCssClassAttribute(System.String)">
            <summary>
            Returns class attribute or empty string if no class is defined.
            </summary>
            <param name="cssClass">Css class</param>
        </member>
        <member name="M:CMS.Helpers.CssHelper.EnsureClass(System.String,System.String)">
            <summary>
            Ensures the given class in the CSS class
            </summary>
            <param name="origClass">Original CSS class</param>
            <param name="newClass">CSS class to ensure</param>
        </member>
        <member name="M:CMS.Helpers.CssHelper.JoinClasses(System.String[])">
            <summary>
            Joins the given list of CSS classes. Omits empty and null strings.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CssLinkHelper">
            <summary>
            Utility methods for CSS url manipulation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.CssLinkHelper.CSS_LINK_PREFIX">
            <summary>
            CSS Link Prefix
            </summary>
        </member>
        <member name="P:CMS.Helpers.CssLinkHelper.MinifyCurrentRequest">
            <summary>
            If true, the current request links are minified.
            </summary>
        </member>
        <member name="P:CMS.Helpers.CssLinkHelper.StylesheetMinificationEnabled">
            <summary>
            Gets if stylesheet minification is enabled.
            </summary>        
        </member>
        <member name="M:CMS.Helpers.CssLinkHelper.GetThemeCssUrl(System.String,System.String,System.Boolean)">
            <summary>
            Gets the URL for the Theme CSS file. Based in ~/App_Themes/[Theme] or ~/App_Themes/Default.
            </summary>
            <param name="theme">Stylesheet theme</param>
            <param name="fileName">Name of the stylesheet file</param>
            <param name="useOnlySpecifiedTheme">If true, then return the url only for the specified theme, if the file not found return null</param>
        </member>
        <member name="M:CMS.Helpers.CssLinkHelper.GetPhysicalCssUrl(System.String)">
            <summary>
            Gets the URL used to retrieve external physical stylesheet.
            </summary>
            <param name="url">URL to the stylesheet file</param>
            <returns>URL to stylesheet file</returns>
        </member>
        <member name="M:CMS.Helpers.CssLinkHelper.GetCssUrl(System.String)">
            <summary>
            Returns path to the stylesheet handler
            </summary>
            <param name="parameters">Querystring arguments for the request, including the leading question mark</param>        
            <returns>URL to the stylesheet, using the querystring arguments</returns>
        </member>
        <member name="M:CMS.Helpers.CssLinkHelper.GetCssFileLink(System.String)">
            <summary>
            Returns the HTML link element that links to external stylesheet.
            </summary>
            <param name="url">URL pointing to an external stylesheet</param>
            <returns>HTML link to a stylesheet</returns>
        </member>
        <member name="T:CMS.Helpers.ConvertTableEnum">
            <summary>
            Table to DIV conversion setting enum
            </summary>
        </member>
        <member name="F:CMS.Helpers.ConvertTableEnum.None">
            <summary>
            No conversion
            </summary>
        </member>
        <member name="F:CMS.Helpers.ConvertTableEnum.All">
            <summary>
            All except marked with class="_nodivs"
            </summary>
        </member>
        <member name="F:CMS.Helpers.ConvertTableEnum.Marked">
            <summary>
            All explicitly marked with class="_divs"
            </summary>
        </member>
        <member name="T:CMS.Helpers.FixXHTMLSettings">
            <summary>
            Container for the XHTML fixing settings.
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.LowerCase">
            <summary>
            Lowercase tags filter, lowercases tag names and attribute names in the HTML
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.Attributes">
            <summary>
            Fix attribute names and values to make sure they are in valid format and using correct quotes
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.SelfClose">
            <summary>
            Self close filter, closes all tags that are self-closing, and missing the end tag
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.ResolveUrl">
            <summary>
            Resolve URL filter, resolves all relative URLs starting with ~/
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.Javascript">
            <summary>
            Fix javascript filter, ensures that all javascript tags contain the type attribute
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.HTML5">
            <summary>
            Fix HTML5 obsolete attributes, converts the attributes to corresponding CSS classes or CSS styles, such as class="cellspacing_0"
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.TableToDiv">
            <summary>
            Converts TABLE tags to DIV tags
            </summary>
        </member>
        <member name="F:CMS.Helpers.FixXHTMLSettings.Indent">
            <summary>
            Ensures proper indentation of the HTML (make it nice).
            </summary>
        </member>
        <member name="P:CMS.Helpers.FixXHTMLSettings.AnyEnabled">
            <summary>
            Returns true if any of the filters is enabled
            </summary>
        </member>
        <member name="P:CMS.Helpers.FixXHTMLSettings.ProcessTagContent">
            <summary>
            Returns true, if the settings indicate that the tag content should be processed
            </summary>
        </member>
        <member name="P:CMS.Helpers.FixXHTMLSettings.MayModifyCssClass">
            <summary>
            Returns true if the filter may modify CSS class
            </summary>
        </member>
        <member name="T:CMS.Helpers.HTMLHelper">
            <summary>
            HTML utility methods.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.DOCTYPE_HTML5">
            <summary>
            HTML 5 document type.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.HTML_BREAK">
            <summary>
            HTML break tag - "&lt;br /&gt;".
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.DEFAULT_XMLNS_ATTRIBUTE">
            <summary>
            XMLNS attribute used in XHTML documents.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.HTML_SPECIAL_CHARS">
            <summary>
            Array of special characters 
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.NO_DIVS">
            <summary>
            CSS class marker to disable conversion of TABLE to DIV
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.DIVS">
            <summary>
            CSS class marker to enable conversion of TABLE to DIV
            </summary>
        </member>
        <member name="T:CMS.Helpers.HTMLHelper.DecoratePathArbiterHandler">
            <summary>
            Handler to decide whether the given path should be decorated with a virtual context prefix.
            </summary>
            <param name="path">The original path.</param>
            <param name="applicationPath">The application path.</param>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.NOT_CONVERT">
            <summary>
            Conversion level for no conversion
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mSelfClosingTags">
            <summary>
            List of self-closing tags
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mConvertToCssClass">
            <summary>
            List of attributes converted to CSS class
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mDivConvertToCssClass">
            <summary>
            List of div attributes converted to CSS class (not valid for DIV tag)
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mAttributesConvertibleToInlineStyle">
            <summary>
            List of attributes convertible to CSS style.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mPixelOrPercentageAttributes">
            <summary>
            Collection of attribute names whose value represents unit of length.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExHTMLEncode">
            <summary>
            Regular expression for HTML encoding.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExAnyTags">
            <summary>
            Tag regular expression for any tags (including ASPX ones).
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExFixUrl">
            <summary>
            Regular expression to match the URL that needs to be fixed.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExStartsWithAmpNumber">
            <summary>
            Regular expression indicates if string starts with ampersand numbered char.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExFixXHTML">
            <summary>
            Complete fix HTML regular expression (matches the HTML tag).
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExResolveCSSUrl">
            <summary>
            Regular expression pattern for URLs in CSS rules (used for server-relative URLs).
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExResolveCSSClientUrl">
            <summary>
            Regular expression pattern for URLs in CSS rules (used for client-relative URLs).
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExRemoveScripts">
            <summary>
             Regular expression match for the scripts.
             </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExStripTagsSpaces">
            <summary>
            Regular expression match for new lines and spaces between tags.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExStripTagsTags">
            <summary>
            Regular expression match for the tags.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExStripTagsComments">
            <summary>
            Regular expression match for the comments.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegExStripTagsEntities">
            <summary>
            Regular expression match for the HTML entities.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegexHtmlToTextHead">
            <summary>
            Regular expression for removing entire head tag.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegexHtmlToTextStyle">
            <summary>
            Regular expression for removing entire style tag.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegexHtmlToTextScript">
            <summary>
            Regular expression for removing entire script tag.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegexHtmlToTextTags">
            <summary>
            Regular expression for removing tags but keeps their content.
            </summary>
        </member>
        <member name="F:CMS.Helpers.HTMLHelper.mRegexHtmlToTextWhiteSpace">
            <summary>
            Regular expression for removing white spaces
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegexHtmlToTextHead">
            <summary>
            Regular expression for removing entire head tag.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegexHtmlToTextStyle">
            <summary>
            Regular expression for removing entire script tag.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegexHtmlToTextScript">
            <summary>
            Regular expression for removing entire script tag.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegexHtmlToTextTags">
            <summary>
            Regular expression for removing tags but keeps their content.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegexHtmlToTextWhiteSpace">
            <summary>
            Regular expression for removing white spaces
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExHTMLEncode">
            <summary>
            Regular expression for HTML encoding.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExFixUrl">
            <summary>
            Regular expression to match the URL that needs to be fixed.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExStartsWithAmpNumber">
            <summary>
            Regular expression indicates if string starts with ampersand numbered char.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExAnyTags">
            <summary>
            Tag regular expression for any tags (including ASPX ones).
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExFixXHTML">
            <summary>
            Complete fix HTML regular expression (matches the HTML tag).
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExResolveCSSUrl">
            <summary>
            Regular expression pattern for URLs in CSS rules (used for server-relative URLs).
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExResolveCSSClientUrl">
            <summary>
            Regular expression pattern for URLs in CSS rules (used for client-relative URLs).
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExRemoveScripts">
            <summary>
            Regular expression match for the scripts.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExStripTagsSpaces">
            <summary>
            Regular expression match for new lines and spaces between tags.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExStripTagsTags">
            <summary>
            Regular expression match for the tags in strip tags method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExStripTagsComments">
            <summary>
            Regular expression match for the HTML comment tags in strip tags method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.HTMLHelper.RegExStripTagsEntities">
            <summary>
            Regular expression match for the HTML entities.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.FixRTLText(System.String)">
            <summary>
            Fixes RTL text. Adds special marks at the end (at the beginning) of the text if it ends (starts) with weak unicode symbol.
            </summary>
            <param name="text">Text to fix</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.GetLink(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the HTML link element that links to a related document.
            </summary>
            <param name="url">URL pointing to external document.</param>
            <param name="type">(Optional) Specifies the MIME type of the linked document.</param>
            <param name="rel">(Optional) Relationship between the current document and the linked document.</param>
            <param name="media">(Optional) What device the linked document will be displayed on.</param>
            <param name="title">(Optional) Specifies extra information about an element.</param>
            <param name="sizes">(Optional) Specifies size of files. This attribute is defined in HTML5.</param>
            <returns>HTML link to the related document</returns>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.SpanMsg(System.String,System.String)">
            <summary>
            Returns span (of specified CSS class) containing message.
            </summary>
            <param name="msg">Message</param>
            <param name="className">CSS class</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.UnResolveUrls(System.String,System.String,System.Func{System.String,System.String})">
            <summary>
            Unresolves relative URI if used in "src=" or "href=" or "poster=" or "srcset=" or "url(".
            </summary>
            <param name="mHtml">HTML code.</param>
            <param name="applicationPath">Application path.</param>
            <param name="pathModifier">Method that is called after each of the local path is unresolved. Input parameter format: "~/relativePath?query=.."</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ResolveUrls(System.String,System.String)">
            <summary>
            Resolves relative URLs in the given HTML(string). 
            </summary>
            <remarks>
            In the live site it resolves all URLs ("~/").
            In the administration interface only URLs in "src", "href", "poster", "srcset" attributes and "url()" CSS function are resolved.
            </remarks>
            <param name="mHtml">HTML code</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ResolveAllUrls(System.String,System.String)">
            <summary>
            Resolves all relative URLs ("~/") in the given HTML.
            </summary>
            <param name="html">HTML code to resolve</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ResolveAttributesUrls(System.String,System.String)">
            <summary>
            Resolves relative URLs in "src", "href", "poster", "srcset" attributes and "url()" CSS functions.
            </summary>
            <param name="html">HTML code to resolve</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.EnsureURLPrefixes(System.String,System.String,System.String,CMS.Helpers.URLHelper.PathModifierHandler,System.Boolean,CMS.Helpers.HTMLHelper.DecoratePathArbiterHandler)">
            <summary>
            Ensures that all local URLs have given prefix
            </summary>
            <param name="mHtml">HTML code</param>
            <param name="applicationPath">Application path</param>
            <param name="urlPrefix">URL prefix to ensure</param>
            <param name="urlModifier">Callback for URL modification, optional</param>
            <param name="decorateHrefAttributes">Indicates whether 'href' attributes should be decorated with the virtual context prefix.</param>
            <param name="decoratePathArbiter">The arbiter which decides whether the given path should be decorated with a virtual context prefix or kept as is.</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.EnsureURLPrefix(System.Text.RegularExpressions.Match,System.String,System.String,CMS.Helpers.URLHelper.PathModifierHandler,CMS.Helpers.HTMLHelper.DecoratePathArbiterHandler)">
            <summary>
            Ensures the URL prefix in the given match
            </summary>
            <param name="m">RegEx match</param>
            <param name="applicationPath">Application path</param>
            <param name="urlPrefix">URL prefix</param>
            <param name="urlModifier">URL modifier</param>
            <param name="decoratePathArbiter">The arbiter which decides whether the given path should be decorated with a virtual context prefix or kept as is.</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ResolveCSSUrls(System.String,System.String)">
            <summary>
            Resolves application-relative URLs in CSS rules to absolute URLs (used with database style sheets).
            </summary>
            <param name="inputText">CSS text to search and re-base</param>
            <param name="applicationPath">Base URL to use when resolving application relative URLs</param>
            <returns>CSS rules containing absolute URLs to resources</returns>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ResolveCSSClientUrls(System.String,System.String)">
            <summary>
            Resolves client-relative URLs in CSS rules to absolute URLs (used with css files).
            </summary>
            <param name="inputText">CSS text to search and re-base</param>
            <param name="baseUrl">Base URL to use when resolving client relative URLs</param>
            <returns>CSS rules containing absolute URLs to resources</returns>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.StripTags(System.String,System.Boolean,System.String)">
            <summary>
            Remove HTML tags from text.
            </summary>
            <param name="htmlText">HTML text</param>
            <param name="replaceEntities">True if replace special entities</param>
            <param name="tagReplacement">Replacement for HTML tags - inner of tag is string "$2"</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.StripTags(System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Remove HTML tags from text.
            </summary>
            <param name="htmlText">HTML text</param>
            <param name="replaceEntities">True if replace special entities</param>
            <param name="replaceComments">Whether to replace HTML comments</param>
            <param name="tagReplacement">Replacement for HTML tags - inner of tag is string "$2"</param>
            <param name="entitiesReplacement">Replacement for HTML entities</param>
            <param name="commentsReplacement">Replacement for HTML comments</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.RemoveComments(System.String,System.String)">
            <summary>
            Remove HTML comments from given text.
            </summary>
            <param name="htmlText">HTML text</param>
            <param name="commentsReplacement">Replacement for HTML comments</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.MayContainEntities(System.String)">
            <summary>
            Returns true if the given text may contain HTML entities
            </summary>
            <param name="text">Text to check</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.MayContainTags(System.String)">
            <summary>
            Returns true if the given text may contain HTML entities
            </summary>
            <param name="text">Text to check</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.HtmlToPlainText(System.String)">
            <summary>
            Converts HTML to the plain text (body part).
            </summary>
            <param name="htmlCode">HTML code</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.RemoveScripts(System.String)">
            <summary>
            Removes the scripts from the given HTML text.
            </summary>
            <param name="htmlText">HTML text to process</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.EnsureHtmlLineEndings(System.String)">
            <summary>
            Ensures the HTML line endings (&lt;br /&gt;) in the given text.
            </summary>
            <param name="text">Text to process</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ReformatHTML(System.String,System.String,System.Int32)">
            <summary>
            Reformats the HTML code indentation.
            </summary>
            <param name="inputText">Input text</param>
            <param name="indentationString">Indentation string, "\t" is used by default</param>
            <param name="maxIndent">Maximum indentation level, <c>Int32.MaxValue</c> is used by default</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.HighlightHTML(System.String)">
            <summary>
            Highlight HTML.
            </summary>
            <param name="inputHtml">Input HTML</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.GetSafeColorFromHtml(System.String,System.Drawing.Color)">
            <summary>
            Returns color from HTML string color definition.
            </summary>
            <param name="color">HTML color definition</param>
            <param name="defaultColor">Default color to return</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.GetUniqueControlID(System.String)">
            <summary>
            Gets the unique ID for the control, if some other control has the same base ID, adds the number at the end.
            </summary>
            <param name="baseId">Base control ID</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.AppendAttribute(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Adds attribute to the html tag only if <paramref name="attributeValue" /> is not <c>null</c>.
            Attribute duplicates are not checked.
            </summary>
            <param name="link">Link to add attribute to</param>
            <param name="attributeName">Name of the attribute to add</param>
            <param name="attributeValue">Value of the attribute to add</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.HTMLDecode(System.String)">
            <summary>
            HTML decoding function. Returns a string converted into an HTML-decoded string.
            </summary>
            <param name="inputText">Input text to encode</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.HTMLEncode(System.String)">
            <summary>
            HTML encoding function. Returns a string converted into an HTML-encoded string.
            Function does not encode previously encoded HTML entity (avoiding double HTML escaping).
            </summary>
            <param name="inputText">Input text to encode</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.EncodeMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Matching function.
            </summary>
            <param name="m">Regular expression match</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.HTMLEncodeLineBreaks(System.String)">
            <summary>
            HTML encoding function. HTML encodes given text and replaces standard line breaks with "&lt;br /&gt;" tag.
            </summary>
            <param name="inputText">Input text to encode</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.EncodeForHtmlAttribute(System.String)">
            <summary>
            Encodes string to be used as the HTML attribute value.
            </summary>
            <param name="inputText">Input text to encode</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.EncodeForHtmlComment(System.String)">
            <summary>
            Encodes string to be used in a HTML comment.
            </summary>
            <param name="inputText">Input text to encode</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.FixUrl(System.String)">
            <summary>
            Fixes the URL within given HTML code. The output code is HTML valid.
            
            <![CDATA[
            It changes '&' to '&amp;' and backwards if needed.
            
            '?test=1&test2=2' is changed to '?test=1&amp;test2=2'
            '&amp;#13;' is changed to '&#13;'.
            '&amp;lt;' is changed to '&lt;'.
            ]]>
            </summary>
            <param name="sourceHtml">Source HTML</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.GetConvertTableEnum(System.String)">
            <summary>
            Converts the string representation to the ConvertTableEnum
            </summary>
            <param name="value">Value to convert</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.LimitLength(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Limits the string length.
            </summary>
            <param name="text">Text to trim</param>
            <param name="maxLength">Max length</param>
            <param name="padString">Trim character</param>
            <param name="wholeWords">If true, the text won't be cut in the middle of the word</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.FixXHTML(System.String,CMS.Helpers.FixXHTMLSettings,System.String)">
            <summary>
            Performs the HTML code fix to become valid XHTML. Method for complete fix solution.
            </summary>
            <param name="sourceHtml">Source HTML code</param>
            <param name="settings">Settings</param>
            <param name="applicationPath">Application path (for resolving URLs)</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.DecreaseLevel(System.Collections.Generic.Stack{System.Int32},System.Int32@,System.Int32@)">
            <summary>
            Decreases the current level and resets conversion level if leaving out
            </summary>
            <param name="convertLevels">Stack of the backup of the levels</param>
            <param name="currentLevel">Current level</param>
            <param name="convertLevel">Conversion level</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ConvertTag(System.String,System.String@,System.String@)">
            <summary>
            Converts the given tag to its appropriate alternative
            </summary>
            <param name="lowerTagName">Lowercase tag name</param>
            <param name="extraCssClass">Extra CSS class to add to the new tag</param>
            <param name="renderTag">Returning the tag to render in the place of the given tag</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.ProcessTagAttributes(CMS.Helpers.FixXHTMLSettings,System.String,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.RegularExpressions.Match,System.Boolean,System.String,System.String,System.Boolean,System.Nullable{System.Boolean}@)">
            <summary>
            Processes the attributes within the given tag
            </summary>
            <param name="settings">Filter configuration</param>
            <param name="applicationPath">Application path for resolving filter</param>
            <param name="tagsb">Output string builder</param>
            <param name="classSb">Helper string builder for the class attribute</param>
            <param name="styleSb">Helper string builder for the style attribute</param>
            <param name="m">Tag matching object</param>
            <param name="scriptTag">Flag whether the tag is script tag</param>
            <param name="lowerTagName">Lower case tag name</param>
            <param name="extraCssClass">Extra CSS class to add to class attribute</param>
            <param name="allowConvert">Returning flag whether the tag is allowed to be converted or not</param>
            <param name="changeConvert">Returning flag whether the conversion should be enabled or not</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.GetLengthValueForCss(System.String)">
            <summary>
            Use the method to convert element attribute value that represents a length in pixels or percentage to CSS compliant value. If the value doesn't represent 
            a length then the original value is returned unmodified.
            </summary>
            <param name="rawValue">Element attribute value.</param>
            <returns>String representation of length including a unit.</returns>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.AddExtraAttribute(System.Text.StringBuilder,System.Text.StringBuilder,System.String,System.Boolean,System.String)">
            <summary>
            Adds the extra attributes to the end of the tag
            </summary>
            <param name="tagsb">Tag string builder</param>
            <param name="attrSb">Attribute string builder</param>
            <param name="extraValue">Extra value</param>
            <param name="attrAtTheEnd">Flag whether the attribute is moved to the end of the tag</param>
            <param name="attributeName">Attribute name</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.TrimQuotes(System.String)">
            <summary>
            Trims the quotes from the given value
            </summary>
            <param name="value">Value to trim</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.AllowIndent(System.Boolean,System.String,System.String)">
            <summary>
            Returns true if the indentation is allowed under given parameters
            </summary>
            <param name="endTag">End tag flag</param>
            <param name="lowerTagName">Lower tag name</param>
            <param name="innerText">Inner tag text</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.IsSelfClosing(System.String)">
            <summary>
            Returns true if the tag is a self closing tag
            </summary>
            <param name="lowerTagName">Tag name</param>
        </member>
        <member name="M:CMS.Helpers.HTMLHelper.FixUrlEvaluator(System.Text.RegularExpressions.Match)">
            <summary>
            Match evaluator for FixUrl regex replacement.
            </summary>
            <param name="match">Match</param>
        </member>
        <member name="T:CMS.Helpers.RichTextLinksConverter">
            <summary>
            Converts local links in a rich text HTML to a relative form.
            </summary>
            <remarks>
            Replaces all links in the format "/applicationPath/xxx*" to "~/xxx*". 
            External link modification is available via the <see cref="M:CMS.Helpers.RichTextLinksConverter.#ctor(System.String,System.String,System.Func{System.String,System.String})"/>.
            </remarks>
        </member>
        <member name="F:CMS.Helpers.RichTextLinksConverter.pathModifier">
            <summary>
            Function that is called after each of the absolute URL paths is unresolved.
            </summary>
        </member>
        <member name="F:CMS.Helpers.RichTextLinksConverter.linksRegex">
            <summary>
            The regular expression that searches for all local links (absolute path without a domain).
            </summary>
        </member>
        <member name="M:CMS.Helpers.RichTextLinksConverter.#ctor(System.String,System.String,System.Func{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.Helpers.RichTextLinksConverter"/> class.
            </summary>
            <param name="domain">The domain that identifies links of the current site. Can be with or without port number, same as <seealso cref="P:System.Uri.Authority"/>.</param>
            <param name="applicationPath">The application path of links to be unresolved</param>
            <param name="pathModifier">Function that is called after each of the absolute URL paths is unresolved.</param>
            <exception cref="T:System.ArgumentNullException">Is thrown when <paramref name="domain"/> or <paramref name="applicationPath"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.RichTextLinksConverter.Unresolve(System.String)">
            <summary>
            Unresolves URL paths in the given <paramref name="html"/> if used in "src=" or "href=" or "background=" or "url(" HTML attributes.
            </summary>
            <param name="html">HTML code to unresolve.</param>
        </member>
        <member name="M:CMS.Helpers.RichTextLinksConverter.GetLinksRegex">
            <summary>
            Gets a regular expression that searches for all local links.
            </summary>
        </member>
        <member name="T:CMS.Helpers.WebLanguagesContext">
            <summary>
            Context values shared with web languages helpers.
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebLanguagesContext.CurrentCSSBlocks">
            <summary>
            Key-value collection of all registered CSS inline blocks. The value is a flag indicating whether the given CSS block represented by key is registered.
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebLanguagesContext.CurrentCSSLinks">
            <summary>
            Key-value collection of all registered CSS links.
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebLanguagesContext.MinifyCurrentRequest">
            <summary>
            If true, the current request links are minified.
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebLanguagesContext.MinifyCurrentRequestScripts">
            <summary>
            If true, the scripts in current request are minified.
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebLanguagesContext.CurrentClientScriptBlocks">
            <summary>
            Key-value collection of all registered client script blocks. The value is a flag indicating whether the given script represented by key is registered.
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebLanguagesContext.CurrentStartupScripts">
            <summary>
            Key-value collection of all registered start-up script blocks. The value is a flag indicating whether the given start-up script represented by key is registered.
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebLanguagesContext.CurrentHTMLUniqueIDs">
            <summary>
            Key-value collection of all registered HTML identifiers. The value is a flag indicating whether the given HTML ID represented by key is registered.
            </summary>
        </member>
        <member name="T:CMS.Helpers.FormattedXmlWriter">
            <summary>
            Custom XML writer to nicely format the document
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.GetInfiniteIndent(System.String)">
            <summary>
            Returns infinite collections of indent strings
            </summary>
            <remarks>This collection will never stop yielding next items, thus should only be used to obtain finite number of its items</remarks>
            <param name="indentChars">The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.EnsureSettings(System.Xml.XmlWriterSettings)">
            <summary>
            Ensures not-null XmlWriterSettings object is returned. If null settings are provided, result of <see cref="M:CMS.Helpers.FormattedXmlWriter.GetDefaultSettings"/> method is used.
            </summary>
            <param name="settings">Provided settings</param>
            <returns>XmlWriterSettings object, never null</returns>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.IsSingleLine(System.String)">
            <summary>
            Returns true if provided text contains no line characters
            </summary>
            <param name="text">Text to check</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.GetDefaultSettings">
            <summary>
            Gets the default writer settings
            </summary>
        </member>
        <member name="P:CMS.Helpers.FormattedXmlWriter.IndentCData">
            <summary>
            If true, the CDATA elements are automatically indented to their own line
            </summary>
        </member>
        <member name="P:CMS.Helpers.FormattedXmlWriter.Settings">
            <summary>
            Specifies a set of features to support on the System.Xml.XmlWriter object created by the Overload:System.Xml.XmlWriter.Create method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.FormattedXmlWriter.WriteState">
            <summary>
            Gets the state of the writer.
            </summary>
        </member>
        <member name="P:CMS.Helpers.FormattedXmlWriter.XmlLang">
            <summary>
            When overridden in a derived class, gets the current xml:lang scope.
            </summary>
        </member>
        <member name="P:CMS.Helpers.FormattedXmlWriter.XmlSpace">
            <summary>
            When overridden in a derived class, gets an XmlSpace representing the current xml:space scope.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.#ctor(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
            <summary>
            Constructor
            </summary>
            <param name="stringBuilder">Output string builder</param>
            <param name="settings">XML Writer settings</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.#ctor(System.IO.Stream,System.Xml.XmlWriterSettings)">
            <summary>
            Constructor
            </summary>
            <param name="stream">Output stream</param>
            <param name="settings">XML Writer settings</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.IncreaseIndent">
            <summary>
            Based on settings increases current indention level.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.DecreaseIndent">
            <summary>
            Based on settings decreases current indention level.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteIndent">
            <summary>
            Writes out the current indentation.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteNewLine">
            <summary>
            Writes out a new line.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteCDataIndentEnd">
            <summary>
            Writes out the current indentation at the end of a CData block.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteCData(System.String)">
            <summary>
            Writes out a <![CDATA[...]]> block containing the specified text.
            </summary>
            <param name="text">The text to place inside the CDATA block.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>
            Writes the specified start tag and associates it with the given name space and prefix.
            </summary>
            <param name="prefix">The name space prefix of the element.</param>
            <param name="localName">The local name of the element.</param>
            <param name="namespace">The name space URI to associate with the element.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteEndElement">
            <summary>
            Closes one element and pops the corresponding name space scope.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteFullEndElement">
            <summary>
            Closes one element and pops the corresponding name space scope.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteStartDocument">
            <summary>
            Writes the XML declaration with the version
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteStartDocument(System.Boolean)">
            <summary>
            Writes the XML declaration with the version "1.0" and the standalone attribute.
            </summary>
            <param name="standalone">If true, it writes "standalone=yes"; if false, it writes "standalone=no"</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteEndDocument">
            <summary>
            Closes any open elements or attributes and puts the writer back in the Start state.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <summary>
            Writes an element with the specified local name and value.
            </summary>
            <param name="name">The name of the DOCTYPE. This must be non-empty.</param>
            <param name="publicId">If non-null it also writes PUBLIC "publicId" "systemId" where publicId and systemId are replaced with the value of the given arguments.</param>
            <param name="systemId">If publicId is null and systemId is non-null it writes SYSTEM "systemId" where publicId is replaced with the value of this argument.</param>
            <param name="subset">If non-null it writes [subset] where subset is replaced with the value of this argument.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
            <summary>
            Writes the start of an attribute with the specified prefix, local name, and name space URI.
            </summary>
            <param name="prefix">Name space prefix of the attribute.</param>
            <param name="localName">LocalName of the attribute.</param>
            <param name="namespace">Name space URI of the attribute</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteEndAttribute">
            <summary>
            Closes the previous System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) call.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <!--...--> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteProcessingInstruction(System.String,System.String)">
            <summary>
            Writes out a processing instruction with a space between the name and text as follows: <?name text?>.
            </summary>
            <param name="name">The name of the processing instruction.</param>
            <param name="text">The text to include in the processing instruction.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteEntityRef(System.String)">
            <summary>
            Writes out an entity reference as &amp;name;.
            </summary>
            <param name="name">The name of the entity reference.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteCharEntity(System.Char)">
            <summary>
            Forces the generation of a character entity for the specified Unicode character value.
            </summary>
            <param name="character">The Unicode character for which to generate a character entity.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteWhitespace(System.String)">
            <summary>
            Writes out the given white space.
            </summary>
            <param name="whiteSpace">The string of white space characters.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteString(System.String)">
            <summary>
            Writes the given text content.
            </summary>
            <param name="text">The string of white space characters.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
            <summary>
            Generates and writes the surrogate character entity for the surrogate character pair.
            </summary>
            <param name="lowChar">The low surrogate. This must be a value between 0xDC00 and 0xDFFF.</param>
            <param name="highChar">The high surrogate. This must be a value between 0xD800 and 0xDBFF.</param>
            <exception cref="T:System.ArgumentException">An invalid surrogate character pair was passed.</exception>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes text one buffer at a time.
            </summary>
            <param name="buffer">Character array containing the text to write.</param>
            <param name="index">The position in the buffer indicating the start of the text to write.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes raw markup manually from a character buffer.
            </summary>
            <param name="buffer">Character array containing the text to write.</param>
            <param name="index">The position within the buffer indicating the start of the text to write.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteRaw(System.String)">
            <summary>
            Writes raw markup manually from a string.
            </summary>
            <param name="data">String containing the text to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encodes the specified binary bytes as Base64 and writes out the resulting text.
            </summary>
            <param name="buffer">Byte array to encode.</param>
            <param name="index">The position in the buffer indicating the start of the bytes to write.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.LookupPrefix(System.String)">
            <summary>
            Returns the closest prefix defined in the current name space scope for the name space URI.
            </summary>
            <param name="namespace">The name space URI whose prefix you want to find.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
            <summary>
            When overridden in a derived class, writes out all the attributes found at the current position in the XmlReader.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> from which to copy the attributes.</param>
            <param name="copyDefaultAttributes">If true copy the default attributes from the <see cref="T:System.Xml.XmlReader"/>; otherwise, false.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, encodes the specified binary bytes as BinHex and writes out the resulting text.
            </summary>
            <param name="buffer">Byte array to encode.</param>
            <param name="index">The position in the buffer indicating the start of the bytes to write.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteName(System.String)">
            <summary>
            When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<a href="http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).
            </summary>
            <param name="name">The name to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteNmToken(System.String)">
            <summary>
            When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<a href="http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).
            </summary>
            <param name="name">The name to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
            <summary>
            Copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator"/> object to the writer. The position of the <see cref="T:System.Xml.XPath.XPathNavigator"/> remains unchanged.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to read from.</param>
            <param name="copyDefaultAttributes">If true copy the default attributes from the <see cref="T:System.Xml.XmlReader"/>; otherwise, false.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
            <summary>
            When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> to read from.</param>
            <param name="copyDefaultAttributes">If true copy the default attributes from the <see cref="T:System.Xml.XmlReader"/>; otherwise, false.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteQualifiedName(System.String,System.String)">
            <summary>
            When overridden in a derived class, writes out the name-space-qualified name. This method looks up the prefix that is in scope for the given name space.
            </summary>
            <param name="localName">The local name to write.</param>
            <param name="namespace">The name space URI for the name.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.Single)">
            <summary>
            Writes a single-precision floating-point number.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.Int32)">
            <summary>
            Writes an <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.Int64)">
            <summary>
            Writes an <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.Object)">
            <summary>
            Writes the object value.
            </summary>
            <param name="value">The object value to write.</param>
        </member>
        <member name="M:CMS.Helpers.FormattedXmlWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="T:CMS.Helpers.XElementExtensions">
            <summary>
            Extension methods for <see cref="T:System.Xml.Linq.XElement"/> type to be able query XML data with ignoring case.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XElementExtensions.GetElement(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the child element of <paramref name="element"/> element given by <paramref name="elementName"/>.
            Ignores case in element name and defined namespace.
            </summary>
            <param name="element">Source XML element</param>
            <param name="elementName">Element name</param>
        </member>
        <member name="M:CMS.Helpers.XElementExtensions.GetElements(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the child elements from <paramref name="element"/> source XML data given by <paramref name="elementName"/>.
            Ignores case in element name and defined namespace.
            </summary>
            <param name="element">Source XML element</param>
            <param name="elementName">Element name</param>
        </member>
        <member name="M:CMS.Helpers.XElementExtensions.GetAttribute(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets the attribute of <paramref name="element"/> element given by <paramref name="attributeName"/>.
            Ignores case in attribute name and defined namespace.
            </summary>
            <param name="element">Source XML element</param>
            <param name="attributeName">Attribute name</param>
        </member>
        <member name="M:CMS.Helpers.XElementExtensions.GetAttributeValue``1(System.Xml.Linq.XElement,System.String,``0)">
            <summary>
            Gets the attribute value of <typeparamref name="T"/> type of <paramref name="element"/> element given by <paramref name="attributeName"/>.
            If no attribute is found or source data are not provided returns <paramref name="defaultValue"/> default value.
            Ignores case in attribute name and defined namespace.
            </summary>
            <remarks>This method doesn't work with nullable types such as bool? or int?</remarks>
            <typeparam name="T">Type of return value</typeparam>
            <param name="element">Source XML element</param>
            <param name="attributeName">Attribute name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Helpers.XElementExtensions.GetAttributeStringValue(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Gets the attribute value as string type from <paramref name="element"/> source data given by <paramref name="attributeName"/>.
            If no attribute is found or source data are not provided returns <paramref name="defaultValue"/> default value.
            Ignores case in attribute name and defined namespace.
            </summary>
            <param name="element">Source XML element</param>
            <param name="attributeName">Attribute name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="T:CMS.Helpers.XmlData">
            <summary>
            XML data container.
            </summary>
        </member>
        <member name="F:CMS.Helpers.XmlData.mData">
            <summary>
            Collection of the data contents.
            </summary>
        </member>
        <member name="F:CMS.Helpers.XmlData.mMacros">
            <summary>
            Collection of the macros.
            </summary>
        </member>
        <member name="F:CMS.Helpers.XmlData.mXmlRootName">
            <summary>
            Default xml root element name.
            </summary>
        </member>
        <member name="P:CMS.Helpers.XmlData.XmlRootName">
            <summary>
            Gets name of xml root element.
            </summary>
        </member>
        <member name="P:CMS.Helpers.XmlData.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="P:CMS.Helpers.XmlData.ExcludedColumns">
            <summary>
            List of excluded column name prefixes (delimited by ';'). Columns starting with these won't be loaded to collection.
            </summary>
        </member>
        <member name="P:CMS.Helpers.XmlData.MacroTable">
            <summary>
            Macro table
            </summary>
        </member>
        <member name="P:CMS.Helpers.XmlData.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="key">Column name</param>
        </member>
        <member name="P:CMS.Helpers.XmlData.AllowMacros">
            <summary>
            Indicates if macro values are allowed
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlData.ConvertToHashtable">
            <summary>
            Converts XML data to Hashtable.
            </summary>        
        </member>
        <member name="M:CMS.Helpers.XmlData.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Helpers.XmlData.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.XmlData.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.Helpers.XmlData.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Helpers.XmlData.LoadData(System.String)">
            <summary>
            Loads the XML to the content table.
            </summary>
            <param name="data">Content XML to load</param>
        </member>
        <member name="M:CMS.Helpers.XmlData.LoadFromXmlElement(System.Xml.XmlElement)">
            <summary>
            Loads the data from the given XML element
            </summary>
            <param name="element">XML element</param>
        </member>
        <member name="M:CMS.Helpers.XmlData.GetData">
            <summary>
            Returns the XML code of the data.
            </summary>
            <remarks>Data are represented as a string values</remarks>
        </member>
        <member name="M:CMS.Helpers.XmlData.GetXmlElement(System.Xml.XmlDocument)">
            <summary>
            Gets the XML element for the data
            </summary>
            <param name="document">Parent XML document</param>
        </member>
        <member name="M:CMS.Helpers.XmlData.Clear">
            <summary>
            Clears the custom data.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlData.Clone">
            <summary>
            Returns the cloned object.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlData.Remove(System.String)">
            <summary>
            Removes element with specified key from collection
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.Helpers.XmlData.ToString">
            <summary>
            Returns xml as a string.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Helpers.XmlData.#ctor">
            <summary>
            Constructor - creates empty XmlData object.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlData.#ctor(System.String)">
            <summary>
            Constructor with root element name specification.
            </summary>
            <param name="rootName">Root element name</param>
        </member>
        <member name="T:CMS.Helpers.XmlExtensions">
            <summary>
            Extension methods for <see cref="N:System.Xml" /> classes.
            </summary>
        </member>
        <member name="P:CMS.Helpers.XmlExtensions.CDataEndTagRegExp">
            <summary>
            Regular expression to match CDATA end tag.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlExtensions.ToFormattedXmlString(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Returns formatted XML content.
            </summary>
            <remarks>
            Ensures indentation and line breaking after each element.
            </remarks>
            <param name="document">XML document</param>
            <param name="omitXmlDeclaration">If true, the XML declaration is not included into the output</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="document"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.XmlExtensions.WriteFormattedXmlToStream(System.Xml.XmlDocument,System.IO.Stream,System.Boolean,System.Text.Encoding)">
            <summary>
            Writes formatted XML content to given stream.
            </summary>
            <remarks>
            Ensures indentation and line breaking after each element.
            </remarks>
            <param name="document">XML document</param>
            <param name="stream">The stream to write to.</param>
            <param name="omitXmlDeclaration">If true, the XML declaration is not included into the output.</param>
            <param name="encoding">Encoding to be used when writing the content to stream.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="document"/> is null.</exception>
        </member>
        <member name="M:CMS.Helpers.XmlExtensions.AddAttributes(System.Xml.XmlElement,System.Collections.IDictionary,System.Boolean)">
            <summary>
            Adds the given list of attributes to the XML node. Adds the attributes in alphabetic order to maintain stability of order.
            </summary>
            <param name="node">XML node to add attributes to.</param>
            <param name="attributes">Attributes to be added.</param>
            <param name="removeEmptyEntries">If true, only attributes with non-empty value are added to the element.</param>
            <exception cref="T:System.ArgumentException">Some key of <paramref name="attributes"/> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Keys of <paramref name="attributes"/> cannot be ordered.</exception>
            <exception cref="T:System.Xml.XmlException">Some key of <paramref name="attributes"/> contains characters not suitable for an XML attribute name.</exception>
        </member>
        <member name="M:CMS.Helpers.XmlExtensions.AddChildElements(System.Xml.XmlElement,System.Collections.IDictionary,System.String,System.Action{System.Xml.XmlElement,System.String,System.Object},System.Boolean)">
            <summary>
            Adds the collection of values into the XML element, each value as a nested element. Ensures the alphabetic order of the values in the element.
            </summary>
            <param name="node">Parent XML element.</param>
            <param name="values">Collection of element values.</param>
            <param name="elementName">If set, the elements are added with the given name and the key is stored in attribute name. Key is used for the element name otherwise.</param>
            <param name="transform">Function allowing to modify the added element that has three parameters - XML element to modify, string key and value from the collection <paramref name="values"/>.</param>
            <param name="removeEmptyEntries">If true, only elements with non-empty value are added to the parent element <paramref name="node"/>.</param>
            <exception cref="T:System.ArgumentException"><paramref name="elementName"/> was not supplied and some keys of <paramref name="values"/> are an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Keys of <paramref name="values"/> cannot be ordered or <paramref name="node"/> is missing owner document.</exception>
            <exception cref="T:System.Xml.XmlException"><paramref name="elementName"/> was not supplied and some keys of <paramref name="values"/> contain characters not suitable for an XML element name.</exception>
        </member>
        <member name="M:CMS.Helpers.XmlExtensions.AppendCData(System.Xml.XmlElement,System.String)">
            <summary>
            Appends CDATA sections to the XML element based on the input text. If the text already contains CDATA tags, the text is split into corresponding number of CDATA sections in place of the CDATA end tags.
            </summary>
            <param name="node">Parent XML node</param>
            <param name="text">Input text</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/> is null.</exception>
        </member>
        <member name="T:CMS.Helpers.XmlHelper">
            <summary>
            Class providing xml validation methods.
            </summary>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.GetAttributeValue(System.Xml.XmlNode,System.String)">
            <summary>
            Returns value of the specified attribute from the given node representing a form field.
            </summary>
            <param name="node">Node representing a form field</param>
            <param name="attributeName">Attribute name</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.GetAttributeValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Returns value of the specified attribute from the given node representing a form field.
            </summary>
            <param name="node">Node representing a form field</param>
            <param name="attributeName">Attribute name</param>
            <param name="defaultValue">Default value returned when attribute is not found</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.XmlAttributeIsEmpty(System.Xml.XmlAttribute)">
            <summary>
            Determines whether specified xml attribute is defined.
            </summary>
            <param name="attribute">Xml attribute to check</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.GetXmlAttributeValue(System.Xml.XmlAttribute,System.String)">
            <summary>
            Returns string value of the specified xml attribute.
            </summary>
            <param name="attribute">Xml attribute to get value of</param>
            <param name="defValue">Default value if xml attribute is not defined</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.GetXmlAttributes(System.Xml.XmlAttributeCollection)">
            <summary>
             Returns attributes as an array (0 - attribute name, 1 - value).
            </summary>
            <param name="attribute">Node attributes collection</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.SetXmlNodeAttributes(System.Xml.XmlNode,System.String[0:,0:],System.Boolean)">
            <summary>
            Sets (updates or inserts) xml attributes to specified xml node.
            </summary>
            <param name="node">Xml node</param>
            <param name="attributes">Array of attributes (0 - name, 1 - value]) to set</param>
            <param name="insertEmpty">Indicates whether attributes with value "" (empty string) should be inserted to the XML</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.WriteDataTableToXml(System.Xml.XmlWriter,System.Data.DataTable)">
            <summary>
            Writes DataRow to Xml writer.
            </summary>
            <param name="xml">Xml writer</param>
            <param name="dt">DataTable to write</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.ReadContentAsBase64(System.Xml.XmlReader,System.Int32)">
            <summary>
            Reads the current content from the XML reader as Base64 value.
            </summary>
            <param name="xml">Xml reader</param>
            <param name="expectedSize">Expected size of the data</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.WriteFileAsBase64(System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the given physical file to the XML as Base64.
            </summary>
            <param name="xml">Xml writer</param>
            <param name="filePath">File path</param>
            <returns>Returns the file size</returns>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.ReplaceNamespaceColon(System.Xml.XmlReader,System.Xml.XmlWriter)">
            <summary>
            Replaces the namespace colons (:) in the XML from the input XML reader with the dash (-) and writes the resulting XML using the output XML writer.
            E.g. atom:item element is translated to atom-item element.
            </summary>
            <param name="inputReader">Input XML reader</param>
            <param name="outputWriter">Output XML writer</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.XMLEncode(System.String)">
            <summary>
            XML encoding function.
            </summary>
            <param name="inputText">Input text to encode</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.XMLDecode(System.String)">
            <summary>
            Converts a string that has been XML encoded into a decoded string.
            </summary>
            <param name="inputText">Input text to encode</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.RemoveIllegalCharacters(System.String)">
            <summary>
            Removes illegal characters from the given string (i.e. all non-printable characters except \t, \r, \n).
            </summary>
            <param name="inputText">Input text to process</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.ConvertToString(System.Object)">
            <summary>
            Uses <see cref="T:System.Xml.XmlConvert"/> to convert these value types: <see cref="T:System.DateTime"/>, <see cref="T:System.Double"/>,
            <see cref="T:System.Decimal"/>, <see cref="T:System.Single"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.Guid"/>, 
            <see cref="T:System.Boolean"/> to their string representation. If value is of other type, returns result of its ToString() method.
            Value type is determined by GetType() invocation.
            </summary>
            <param name="value">Value to convert.</param>
        </member>
        <member name="M:CMS.Helpers.XmlHelper.ConvertToString(System.Object,System.Type)">
            <summary>
            Uses <see cref="T:System.Xml.XmlConvert"/> to convert these value types: <see cref="T:System.DateTime"/>, <see cref="T:System.Double"/>,
            <see cref="T:System.Decimal"/>, <see cref="T:System.Single"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.Guid"/>, 
            <see cref="T:System.Boolean"/> to their string representation. If value is of other type, returns result of its ToString() method.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="type">Type of the value.</param>
        </member>
        <member name="T:CMS.Helpers.ImageHelper">
            <summary>
            Class providing methods for image processing.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.AUTOSIZE">
            <summary>
            Used when resizing image. (Old dimensions: x = 10, y = 20; Resizing: x = AUTOSIZE; y = 10, New dimensions: x = 5, y = 10).
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.ImageRotationEnum">
            <summary>
            Enumeration used to specify angle for image rotation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageRotationEnum.Rotate90">
            <summary>
            Rotate 90 degrees clockwise.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageRotationEnum.Rotate180">
            <summary>
            Rotate 180 degrees clockwise.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageRotationEnum.Rotate270">
            <summary>
            Rotate 270 degrees clockwise.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.ImageFlipEnum">
            <summary>
            Enumeration used to specify flipping axis.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageFlipEnum.FlipVertical">
            <summary>
            Flip vertically.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageFlipEnum.FlipHorizontal">
            <summary>
            Flip horizontally.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.ImageTrimAreaEnum">
            <summary>
            Enumeration used to specify trimming area.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.TopLeft">
            <summary>
            Trim area around top left corner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.TopCenter">
            <summary>
            Trim area around top center.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.TopRight">
            <summary>
            Trim area around top right corner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.MiddleLeft">
            <summary>
            Trim area around middle left.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.MiddleCenter">
            <summary>
            Trim area around middle center.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.MiddleRight">
            <summary>
            Trim area around middle right.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.BottomLeft">
            <summary>
            Trim area around bottom left corner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.BottomCenter">
            <summary>
            Trim area around bottom center.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTrimAreaEnum.BottomRight">
            <summary>
            Trim area around bottom right corner.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.ImagePositionEnum">
            <summary>
            Enumeration of the image positioning within another image or object.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.TopLeft">
            <summary>
            Top left corner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.TopCenter">
            <summary>
            Top center.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.TopRight">
            <summary>
            Top right corner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.MiddleLeft">
            <summary>
            Middle left.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.MiddleCenter">
            <summary>
            Middle center.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.MiddleRight">
            <summary>
            Middle right.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.BottomLeft">
            <summary>
            Bottom left corner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.BottomCenter">
            <summary>
            Bottom center.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.BottomRight">
            <summary>
            Bottom right corner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.FullSize">
            <summary>
            Cover full size of the image.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImagePositionEnum.CenterMaxSize">
            <summary>
            Locate to the center, maximize the size (keeps aspect ratio).
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetPositionEnum(System.String)">
            <summary>
            Gets the enumeration of the given position string.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.ImageTypeEnum">
            <summary>
            Available image types.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTypeEnum.None">
            <summary>
            Image type is not specified.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTypeEnum.Attachment">
            <summary>
            Image is attachment.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTypeEnum.Metafile">
            <summary>
            Image is metafile.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTypeEnum.MediaFile">
            <summary>
            Image is mediafile.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.ImageTypeEnum.PhysicalFile">
            <summary>
            Image is physical file.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.SupportedTypesEnum">
            <summary>
            Supported image types for conversion.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.SupportedTypesEnum.bmp">
            <summary>
            Image type is BMP.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.SupportedTypesEnum.gif">
            <summary>
            Image type is GIF.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.SupportedTypesEnum.jpg">
            <summary>
            Image type is JPG/JPEG/PJPEG
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.SupportedTypesEnum.png">
            <summary>
            Image type is PNG.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.ImageData">
            <summary>
            Returns image data.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.SourceData">
            <summary>
            Source data for the image.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.ImageWidth">
            <summary>
            Image width.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.ImageHeight">
            <summary>
            Image height.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.ImageHorizontalResolution">
            <summary>
            Horizontal resolution of the image.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.ImageVerticalResolution">
            <summary>
            Vertical resolution of the image.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.LastError">
            <summary>
            Last processing error.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.JPEGEncoder">
            <summary>
            JPEG image encoder.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.DefaultQuality">
            <summary>
            Default quality to be used when an image is being re-sized. (Default quality is set to 85% by default).
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.DefaultCompositingMode">
            <summary>
            Default composition mode is set to SourceCopy.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.DefaultCompositingQuality">
            <summary>
            Default composing quality is set to HighQuality.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.DefaultInterpolationMode">
            <summary>
            Default mode is set to HighQualityBicubic.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.DefaultSmoothingMode">
            <summary>
            Default smoothing mode is set to HighQuality.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.DefaultPixelOffsetMode">
            <summary>
            Default offset mode is set to HighQuality.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.DefaultWrapMode">
            <summary>
            Default mode is set to TileFlipXY.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.UseGDIForResize">
            <summary>
            Indicates if GDI resizing will be used for resizing indexed images.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.UseFixedEnsureImageDimensions">
            <summary>
            Gets value that indicates if use of new image resizing is enabled.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.ImageExtensions">
            <summary>
            Image extensions supported by the system
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.#ctor">
            <summary>
            Empty constructor.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.#ctor(System.Byte[])">
            <summary>
            Constructor with image data to load.
            </summary>
            <param name="imageData">Image data</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Constructor with image data to load.
            </summary>
            <param name="imageData">Image data</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.LoadImage(System.Byte[])">
            <summary>
            Load image data.
            </summary>
            <param name="img">Image data to load</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.StringToImageFormat(System.String)">
            <summary>
            Gets string name of image format.
            </summary>
            <returns>Converted format</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.ImageFormatToString">
            <summary>
            Gets image format.
            </summary>
            <returns>Converted format</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetResizedImageData(System.Int32,System.Int32)">
            <summary>
            Returns resized image as the data array. For quality is used DefaultQuality.
            </summary>
            <param name="width">Width of the resized image</param>
            <param name="height">Height of the resized image</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetResizedImageData(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns resized image as the data array.
            </summary>
            <param name="width">Width of the resized image</param>
            <param name="height">Height of the resized image</param>
            <param name="quality">Thumbnail quality</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetResizedImage(System.Int32,System.Int32)">
            <summary>
            Returns resized image.
            </summary>
            <param name="width">Width of the resized image</param>
            <param name="height">Height of the resized image</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetResizedImage(System.Int32)">
            <summary>
            Returns resized image according to max side size.
            </summary>
            <param name="maxSideSize">Max side size</param>        
        </member>
        <member name="M:CMS.Helpers.ImageHelper.ResizeImage(System.Int32,System.Int32)">
            <summary>
            Returns resized image. Input dimensions are none zero.
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.EnsureImageDimensions(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns new image dimensions (int[2]: 0 - width, 1 - height) .
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.ImageToBytes(System.Drawing.Image)">
            <summary>
            Converts Image to byte array.
            </summary>
            <param name="img">Image object</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.ImageToBytes(System.Drawing.Image,System.Int32)">
            <summary>
            Converts Image to byte array.
            </summary>
            <param name="img">Image object</param>
            <param name="quality">Quality for JPG images</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetGrayscaledImage">
            <summary>
            Transforms image to grayscale.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetGrayscaledImageData">
            <summary>
            Transforms image to grayscale.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.RotateImage(CMS.Helpers.ImageHelper.ImageRotationEnum)">
            <summary>
            Rotates image by specified angle.
            </summary>
            <param name="rotation">Rotation angle enumeration</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetRotatedImage(CMS.Helpers.ImageHelper.ImageRotationEnum)">
            <summary>
            Rotates image by specified angle.
            </summary>
            <param name="rotation">Rotation angle enumeration</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetRotatedImageData(CMS.Helpers.ImageHelper.ImageRotationEnum)">
            <summary>
            Rotates image by specified angle.
            </summary>
            <param name="rotation">Rotation angle enumeration</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetImage(System.String)">
            <summary>
            Gets the image based on the file name. The method's return value is cached for 60 minutes.
            </summary>
            <param name="filename">File name</param>
            <remarks>
            As the return value is cached, the returned <see cref="T:System.Drawing.Image"/> is a shared resource. Performing
            any operation which modifies the image state has inherently side effects.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetImageWithWatermarkData(System.String,CMS.Helpers.ImageHelper.ImagePositionEnum)">
            <summary>
            Gets the image.
            </summary>
            <param name="filename">File name of the watermark image</param>
            <param name="position">Watermark position</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.DrawImage(System.Drawing.Image,CMS.Helpers.ImageHelper.ImagePositionEnum)">
            <summary>
            Draws the given image into the current one.
            </summary>
            <param name="image">Image to draw</param>
            <param name="position">Position of the image in the current image</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the given image into the current one.
            </summary>
            <param name="image">Image to write</param>
            <param name="x">X coordinate of the image in the target</param>
            <param name="y">Y coordinate of the image in the target</param>
            <param name="height">Height of the image in the target</param>
            <param name="width">Width of the image in the target</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.FlipImage(CMS.Helpers.ImageHelper.ImageFlipEnum)">
            <summary>
            Flips image.
            </summary>
            <param name="flip">Flip image horizontally or vertically</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetFlippedImage(CMS.Helpers.ImageHelper.ImageFlipEnum)">
            <summary>
            Flips image.
            </summary>
            <param name="flip">Flip image horizontally or vertically</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetFlippedImageData(CMS.Helpers.ImageHelper.ImageFlipEnum)">
            <summary>
            Flips image.
            </summary>
            <param name="flip">Flip image horizontally or vertically</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetConvertedImage(System.Drawing.Imaging.ImageFormat,System.Int32)">
            <summary>
            Transforms image to different format.
            </summary>
            <param name="format">New image format</param>
            <param name="quality">Image quality applied when converting to JPG</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetConvertedImageData(System.Drawing.Imaging.ImageFormat,System.Int32)">
            <summary>
            Transforms image to different format.
            </summary>
            <param name="format">New image format</param>
            <param name="quality">Image quality applied when converting to JPG</param>/// 
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetConvertedImageStream(System.Drawing.Imaging.ImageFormat,System.Int32)">
            <summary>
            Transforms image to different format.
            </summary>
            <param name="format">New image format</param>
            <param name="quality">Image quality applied when converting to JPG</param>
            <returns>MemoryStream</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.TrimImage(System.Int32,System.Int32,CMS.Helpers.ImageHelper.ImageTrimAreaEnum)">
            <summary>
            Trim image by specified area.
            </summary>
            <param name="width">New width of the image</param>
            <param name="height">New height of the image</param>
            <param name="area">Enumeration to specify the area to keep</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.TrimImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Trim image by specified area.
            </summary>
            <param name="width">New width of the image</param>
            <param name="height">New height of the image</param>
            <param name="xPos">X coordinates of trimmed area</param>
            <param name="yPos">Y coordinates of trimmed area</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.TrimGifImage(System.Drawing.Rectangle)">
            <summary>
            Trims GIF image according to <paramref name="cropArea"/>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.ConvertToPngBitmap(System.Drawing.Image)">
            <summary>
            Converts <paramref name="image"/> to PNG <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.ConvertToGifImage(System.Drawing.Image)">
            <summary>
            Converts <paramref name="image"/> to GIF <see cref="T:System.Drawing.Image"/>.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetTrimmedImage(System.Int32,System.Int32,CMS.Helpers.ImageHelper.ImageTrimAreaEnum)">
            <summary>
            Trim image by specified area.
            </summary>
            <param name="width">New width of the image</param>
            <param name="height">New height of the image</param>
            <param name="area">Enumeration to specify the area to keep</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetTrimmedImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Trim image by specified area.
            </summary>
            <param name="width">New width of the image</param>
            <param name="height">New height of the image</param>
            <param name="xPos">X coordinates of trimmed area</param>
            <param name="yPos">Y coordinates of trimmed area</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetTrimmedImageData(System.Int32,System.Int32,CMS.Helpers.ImageHelper.ImageTrimAreaEnum)">
            <summary>
            Trim image by specified area.
            </summary>
            <param name="width">New width of the image</param>
            <param name="height">New height of the image</param>
            <param name="area">Enumeration to specify the area to keep</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetTrimmedImageData(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crop image by specified area.
            </summary>
            <param name="width">New width of the image</param>
            <param name="height">New height of the image</param>
            <param name="xPos">X coordinates of trimmed area</param>
            <param name="yPos">Y coordinates of trimmed area</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetImageInDefaultImageFormat(System.Drawing.Bitmap)">
            <summary>
            Returns given image <paramref name="rawImage"/> in original image format.
            </summary>
            <param name="rawImage">Raw data of modified image</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.CanResizeImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Indicates if current image can be resized to the specified dimensions.
            </summary>
            <param name="width">Required width</param>
            <param name="height">Required height</param>
            <param name="maxSideSize">Required max side size</param>        
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetBytes(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets the binary data for the given image
            </summary>
            <param name="img">Image</param>
            <param name="format">Format of the output</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.IsSupportedByImageEditor(System.String)">
            <summary>
            Checks if image format is supported by Image Editor.
            </summary>
            <param name="extension">Format of given image</param>
            <returns>True if image format is supported by Image Editor</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.EnsureImageDimensions(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Computes new image dimensions according to the specified parameters, and returns it.
            </summary>
            <remarks>
            This method prevents image enlargement.
            Both image width and image height must be positive integers, otherwise specified image dimensions are returned.
            Specified image dimensions are also returned when neither width, height or maxSideSize is a positive integer.
            </remarks>
            <param name="width">Required image width (optional)</param>
            <param name="height">Required image height (optional)</param>
            <param name="maxSideSize">Required max image size (overrides both required width and height, optional)</param>
            <param name="imageWidth">Image width (required)</param>
            <param name="imageHeight">Image height (required)</param>
            <returns>An array with computed width ([0]) and height ([1])</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetImageThumbnailFileName(System.String,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail file name.
            </summary>
            <param name="guid">File GUID</param>        
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.IsImage(System.String)">
            <summary>
            Determines whether it is an image extension or not. Accepts extensions in both formats ".gif", and "gif"
            </summary>
            <param name="extension">File extension to check</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.IsMimeImage(System.String)">
            <summary>
            Determines whether image is an image depending on mimetype.
            </summary>
            <param name="mimetype">Mime type of image</param>
            <returns>True if mimetype starts with 'image/'</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.IsHtml(System.String)">
            <summary>
            Determines whether it is a html/htm extension or not.
            </summary>
            <param name="extension">File extension to check</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetAutoResizeDimensions(System.Collections.Hashtable,System.String,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets dimensions from settings into width, height and max side size parameters.
            </summary>
            <param name="settings">Form field info settings</param>
            <param name="siteName">Site name</param>
            <param name="width">Required width</param>
            <param name="height">Required height</param>
            <param name="maxSideSize">Required max side size</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.UnifyFileExtension(System.String)">
            <summary>
            Unifies file extensions.
            </summary>
            <param name="extension">Extension of the file (e.x. 'jpg')</param>
            <returns>Correct extension of file.</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetResizeEnum(System.String)">
            <summary>
            Returns image resize enumeration for given string.
            </summary>
            <param name="resizeString">Enumeration string</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetAutoResizeToWidth(System.String)">
            <summary>
            Returns WIDTH the images should be automatically resized to. Value is returned from the site settings.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetAutoResizeToHeight(System.String)">
            <summary>
            Returns HEIGHT the images should be automatically resized to. Value is returned from the site settings.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetAutoResizeToMaxSideSize(System.String)">
            <summary>
            Returns MAX SIDE SIZE the images should be automatically resized to. Value is returned from the site settings.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.GetResizedImageData(System.Byte[],System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            If posted file is image, resizes it to the required dimensions if possible and returns resized data. If it is not image, original data are returned.
            </summary>
            <param name="fileBinary">Posted file data</param>
            <param name="fileExtension">Extension of the file</param>
            <param name="width">Image required width</param>
            <param name="height">Image required height</param>
            <param name="maxSideSize">Image required max side size</param>        
        </member>
        <member name="M:CMS.Helpers.ImageHelper.CreateIndexedImage(System.Drawing.Bitmap)">
            <summary>
            Creates an indexed image from a bitmap with a given palette.
            </summary>
            <param name="src">The source image</param>
            <returns>An indexed image.</returns>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.Quantizer">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.Quantizer.mSinglePass">
            <summary>
            Flag used to indicate whether a single pass or two passes are needed for quantization.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.#ctor(System.Boolean)">
            <summary>
            Construct the quantizer.
            </summary>
            <param name="singlePass">If true, the quantization only needs to loop through the source pixels once</param>
            <remarks>
            If you construct this class with a true value for singlePass, then the code will, when quantizing your image,
            only call the 'QuantizeImage' function. If two passes are required, the code will call 'InitialQuantizeImage'
            and then 'QuantizeImage'.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.Quantize(System.Drawing.Image)">
            <summary>
            Quantize an image and return the resulting output bitmap.
            </summary>
            <param name="source">The image to quantize</param>
            <returns>A quantized version of the image</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.FirstPass(System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Execute the first pass through the pixels in the image.
            </summary>
            <param name="sourceData">The source data</param>
            <param name="width">The width in pixels of the image</param>
            <param name="height">The height in pixels of the image</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.SecondPass(System.Drawing.Imaging.BitmapData,System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Execute a second pass through the bitmap.
            </summary>
            <param name="sourceData">The source bitmap, locked into memory</param>
            <param name="output">The output bitmap</param>
            <param name="width">The width in pixels of the image</param>
            <param name="height">The height in pixels of the image</param>
            <param name="bounds">The bounding rectangle</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.InitialQuantizePixel(CMS.Helpers.ImageHelper.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the first pass of the algorithm.
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <remarks>
            This function need only be overridden if your quantize algorithm needs two passes,
            such as an Octree quantizer.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.QuantizePixel(CMS.Helpers.ImageHelper.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm.
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image.
            </summary>
            <param name="original">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.Quantizer.Color32">
            <summary>
            Struct that defines a 32 bpp colour.
            </summary>
            <remarks>
            This struct is used to read data from a 32 bits per pixel image
            in memory, and is ordered in this manner as this is the way that
            the data is layed out in memory
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.Quantizer.Color32.#ctor(System.IntPtr)">
            <summary>
            Constructor of Color32.
            </summary>
            <param name="pSourcePixel">Source pixel pointer</param>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.Quantizer.Color32.Blue">
            <summary>
            Holds the blue component of the colour.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.Quantizer.Color32.Green">
            <summary>
            Holds the green component of the colour.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.Quantizer.Color32.Red">
            <summary>
            Holds the red component of the colour.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.Quantizer.Color32.Alpha">
            <summary>
            Holds the alpha component of the colour.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.Quantizer.Color32.ARGB">
            <summary>
            Permits the color32 to be treated as an int32.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.Quantizer.Color32.Color">
            <summary>
            Returns the color for this Color32 object.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.OctreeQuantizer">
            <summary>
            Quantize using an Octree.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.mOctree">
            <summary>
            Stores the tree.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.mMaxColors">
            <summary>
            Maximum allowed color depth.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct the octree quantizer.
            </summary>
            <remarks>
            The Octree quantizer is a two pass algorithm. The initial pass sets up the octree,
            the second pass quantizes a color based on the nodes in the tree
            </remarks>
            <param name="maxColors">The maximum number of colors to return</param>
            <param name="maxColorBits">The number of significant bits</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.InitialQuantizePixel(CMS.Helpers.ImageHelper.Quantizer.Color32)">
            <summary>
            Process the pixel in the first pass of the algorithm.
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <remarks>
            This function need only be overridden if your quantize algorithm needs two passes,
            such as an Octree quantizer.
            </remarks>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.QuantizePixel(CMS.Helpers.ImageHelper.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm.
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image.
            </summary>
            <param name="original">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree">
            <summary>
            Class which does the actual quantization.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.mask">
            <summary>
            Mask used when getting the appropriate pixels for a given node.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.mRoot">
            <summary>
            The root of the octree.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.mLeafCount">
            <summary>
            Number of leaves in the tree.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.mReducibleNodes">
            <summary>
            Array of reducible nodes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.mMaxColorBits">
            <summary>
            Maximum number of significant bits in the image.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.mPreviousNode">
            <summary>
            Store the last node quantized.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.mPreviousColor">
            <summary>
            Cache the previous color quantized.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.Leaves">
            <summary>
            Get/Set the number of leaves in the tree
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.ReducibleNodes">
            <summary>
            Returns the array of reducible nodes.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.#ctor(System.Int32)">
            <summary>
            Construct the octree.
            </summary>
            <param name="maxColorBits">The maximum number of significant bits in the image</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.AddColor(CMS.Helpers.ImageHelper.Quantizer.Color32)">
            <summary>
            Add a given color value to the octree.
            </summary>
            <param name="pixel">Pixel</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.Reduce">
            <summary>
            Reduce the depth of the tree.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.TrackPrevious(CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode)">
            <summary>
            Keep track of the previous node that was quantized.
            </summary>
            <param name="node">The node last quantized</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.Palletize(System.Int32)">
            <summary>
            Convert the nodes in the octree to a palette with a maximum of colorCount colors.
            </summary>
            <param name="colorCount">The maximum number of colors</param>
            <returns>An arraylist with the palettized colors</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.GetPaletteIndex(CMS.Helpers.ImageHelper.Quantizer.Color32)">
            <summary>
            Gets the palette index for the passed color.
            </summary>
            <param name="pixel">Pixel</param>
        </member>
        <member name="T:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode">
            <summary>
            Class which encapsulates each node in the tree.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mLeaf">
            <summary>
            Flag indicating that this is a leaf node.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mPixelCount">
            <summary>
            Number of pixels in this node.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mRed">
            <summary>
            Red component.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mGreen">
            <summary>
            Green Component.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mBlue">
            <summary>
            Blue component.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mChildren">
            <summary>
            Pointers to any child nodes.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mNextReducible">
            <summary>
            Pointer to next reducible node.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.mPaletteIndex">
            <summary>
            The index of this node in the palette.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.NextReducible">
            <summary>
            Get/Set the next reducible node
            </summary>
        </member>
        <member name="P:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.Children">
            <summary>
            Returns the child nodes.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.#ctor(System.Int32,System.Int32,CMS.Helpers.ImageHelper.OctreeQuantizer.Octree)">
            <summary>
            Construct the node.
            </summary>
            <param name="level">The level in the tree = 0 - 7</param>
            <param name="colorBits">The number of significant color bits in the image</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.AddColor(CMS.Helpers.ImageHelper.Quantizer.Color32,System.Int32,System.Int32,CMS.Helpers.ImageHelper.OctreeQuantizer.Octree)">
            <summary>
            Add a color into the tree.
            </summary>
            <param name="pixel">The color</param>
            <param name="colorBits">The number of significant color bits</param>
            <param name="level">The level in the tree</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.Reduce">
            <summary>
            Reduce this node by removing all of its children.
            </summary>
            <returns>The number of leaves removed</returns>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.ConstructPalette(System.Collections.ArrayList,System.Int32@)">
            <summary>
            Traverse the tree, building up the color palette.
            </summary>
            <param name="palette">The palette</param>
            <param name="paletteIndex">The current palette index</param>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.GetPaletteIndex(CMS.Helpers.ImageHelper.Quantizer.Color32,System.Int32)">
            <summary>
            Returns the palette index for the passed color.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ImageHelper.OctreeQuantizer.Octree.OctreeNode.Increment(CMS.Helpers.ImageHelper.Quantizer.Color32)">
            <summary>
            Increment the pixel count and add to the color information.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ImageResizeEnum">
            <summary>
            Image resize enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageResizeEnum.Auto">
            <summary>
            Default resize behavior according to site settings.
            </summary>
        </member>
        <member name="F:CMS.Helpers.ImageResizeEnum.Force">
            <summary>
            Use URL settings
            </summary>
        </member>
        <member name="T:CMS.Helpers.HelpersHandlers">
            <summary>
            Event handlers for the module Helpers
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.PreInit">
            <summary>
            Pre-initializes the handlers
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.Init">
            <summary>
            Initialize the handlers
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.GetFileUrlForPath(System.Object,CMS.Base.CMSEventArgs{CMS.FileSystemStorage.GetFileUrlEventArgs})">
            <summary>
            Gets the URL from path for default file system storage
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.RegisterManagedCompilationPath(System.Object,System.EventArgs)">
            <summary>
             Register managed compilation folder
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.InitZippedStorage(System.Object,System.EventArgs)">
            <summary>
            Initializes the project file system
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.BlockURLWithCookielessSessionPattern(System.Object,System.EventArgs)">
            <summary>
            Returns 404 response if request url contains a cookieless session pattern, which is potentially unsafe.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.HandleClickjacking(System.Object,System.EventArgs)">
            <summary>
            Handles click jacking in current request
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.BeginRequest(System.Object,System.EventArgs)">
            <summary>
            Runs the actions for the begin request event
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.LogDebugs(System.Object,System.EventArgs)">
            <summary>
            Actions executed when the request is finalized
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.InitSessionTimeout(System.Object,System.EventArgs)">
            <summary>
            Initializes the session timeout
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersHandlers.MapZippedImages">
            <summary>
            Maps the zipped images folder
            </summary>
        </member>
        <member name="T:CMS.Helpers.HelpersModule">
            <summary>
            Represents the helpers module.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersModule.OnPreInit">
            <summary>
            Pre-initializes the module
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="T:CMS.Helpers.HelpersModuleMetadata">
            <summary>
            Represents the helpers module metadata.
            </summary>
        </member>
        <member name="M:CMS.Helpers.HelpersModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Helpers.AzureHelper">
            <summary>
            Helper methods and properties for Microsoft Azure integration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AzureHelper.QUEUE_TIMEOUT">
            <summary>
            Timeout for getting message from queue.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AzureHelper.AZURE_FILE_PAGE">
            <summary>
            Path to azure file page.
            </summary>
        </member>
        <member name="F:CMS.Helpers.AzureHelper.SQLAZURE_DOMAIN">
            <summary>
            Domain of SQL Azure service.
            </summary>
        </member>
        <member name="P:CMS.Helpers.AzureHelper.BlobUrl">
            <summary>
            Gets or sets URL of blob endpoint. 
            </summary>        
        </member>
        <member name="M:CMS.Helpers.AzureHelper.GetDownloadPath(System.String)">
            <summary>
            Returns download path for given path.
            </summary>
            <param name="path">Path</param>
        </member>
        <member name="M:CMS.Helpers.AzureHelper.IsSQLAzureServer(System.String)">
            <summary>
            Returns whether SQL server is SQL Azure according to its name.
            </summary>
            <param name="serverName">Server name to check</param>
        </member>
        <member name="M:CMS.Helpers.AzureHelper.IsAzureStagingDomain(System.String)">
            <summary>
            Returns true if current domain is Azure staging domain.
            </summary>
            <param name="domain">Domain to check.</param>
        </member>
        <member name="M:CMS.Helpers.AzureHelper.EnsureUrl(System.String)">
            <summary>
            Returns URL ending with slash and starting with https:// if no protocol is given.
            </summary>
            <param name="url">Input URL.</param>
        </member>
        <member name="T:CMS.Helpers.ProjectHelper">
            <summary>
            Class provides helper methods used during installation and import/export process.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ProjectHelper.ReplaceMarkupAttr(System.String,System.String,System.String,System.String)">
            <summary>
            Changes first occurrence of string to new value in text file.
            </summary>
            <param name="inFile">Input file</param>
            <param name="outFile">Output file</param>
            <param name="oldValue">String to be replaced</param>
            <param name="newValue">String to replace first occurrence</param>
        </member>
        <member name="M:CMS.Helpers.ProjectHelper.ChangeCodeBehindToCodeFile(System.String,System.String)">
            <summary>
            Changes attribute "CodeBehind" to "CodeFile" in input file and saves changes to output file.
            </summary>
            <param name="inFile">Input file</param>
            <param name="outFile">Output file</param>
        </member>
        <member name="M:CMS.Helpers.ProjectHelper.ChangeCodeFileToCodeBehind(System.String,System.String)">
            <summary>
            Changes attribute "CodeFile" to "CodeBehind" in input file and saves changes to output file.
            </summary>
            <param name="inFile">Input file</param>
            <param name="outFile">Output file</param>
        </member>
        <member name="M:CMS.Helpers.ProjectHelper.ChangeCodeBehindToCodeFileForFolder(System.String)">
            <summary>
            Loop through directories structure (recursively) and replace "codebehind" attribute to "codefile".
            </summary>
            <param name="path">Directory</param>
        </member>
        <member name="T:CMS.Helpers.SystemHelper">
            <summary>
            System operations.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.APPLICATION_NAME_MAX_LENGTH">
            <summary>
            Maximum length of application name.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.APP_NAME_KEY_NAME">
            <summary>
            Key name in the web.config for application name
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.APP_GUID_KEY_NAME">
            <summary>
            Key name in the web.config for application GUID.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.mSanitizeXML">
            <summary>
            True if web project is compiled in debug mode.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.mApplicationInstanceGUID">
            <summary>
            Application instance (current run) GUID.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.mApplicationName">
            <summary>
            Application name.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.mApplicationGuidRaw">
            <summary>
            Unvalidated application GUID.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.mApplicationIdentifier">
            <summary>
            Application identifier.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SystemHelper.mRestartApplicationIfInitFails">
            <summary>
            Indicates if application restart should occur after application initialization fails.
            </summary>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.ApplicationInstanceGUID">
            <summary>
            Application instance (current run) GUID.
            </summary>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.ApplicationName">
            <summary>
            Gets application name from application configuration file.
            </summary>
            <remarks>
            Application configuration file must contain a value for key <see cref="F:CMS.Helpers.SystemHelper.APP_NAME_KEY_NAME"/>. If <see cref="F:CMS.Helpers.SystemHelper.APP_NAME_KEY_NAME"/> is missing, a fallback to <see cref="P:CMS.Helpers.SystemHelper.ApplicationGuid"/> is performed.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the application configuration file does not specify value for any key of <see cref="F:CMS.Helpers.SystemHelper.APP_NAME_KEY_NAME"/> and <see cref="F:CMS.Helpers.SystemHelper.APP_GUID_KEY_NAME"/>.</exception>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.ApplicationGuid">
            <summary>
            Gets application GUID from application configuration file.
            </summary>
            <remarks>
            Application configuration file must contain a value for key <see cref="F:CMS.Helpers.SystemHelper.APP_GUID_KEY_NAME"/> which is different from <see cref="F:System.Guid.Empty"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the application configuration file does not specify a value for key <see cref="F:CMS.Helpers.SystemHelper.APP_GUID_KEY_NAME"/>.</exception>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.ApplicationGuidRaw">
            <summary>
            Gets application GUID from application configuration file, or <see cref="F:System.Guid.Empty"/> if its value is either missing or is not a valid GUID.
            </summary>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.ApplicationIdentifier">
            <summary>
            Gets application identifier.
            </summary>
            <remarks>
            Application identifier is derived from <see cref="P:CMS.Helpers.SystemHelper.ApplicationGuid"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when <see cref="P:CMS.Helpers.SystemHelper.ApplicationGuid"/> is not specified.</exception>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.WinServicesForceUsage">
            <summary>
            Indicates if usage of win services should be forced.
            </summary>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.SanitizeXML">
            <summary>
            Indicates if XML will be preprocessed by CMS.IO streams (removes illegal characters).
            </summary>
        </member>
        <member name="P:CMS.Helpers.SystemHelper.RestartApplicationIfInitFails">
            <summary>
            Indicates if application restart should occur after application initialization fails.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.GetVirtualMemorySize">
            <summary>
            Gets the virtual memory size.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.GetWorkingSetSize">
            <summary>
            Gets the working set size.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.GetPeakWorkingSetSize">
            <summary>
            Gets the peak working set size.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.Clear">
            <summary>
            Clears static properties (initializes fields of properties).
            </summary>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.SetApplicationName(System.String)">
            <summary>
            Sets the application name
            </summary>
            <param name="applicationName">Application name</param>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.SetApplicationGuid(System.Guid)">
            <summary>
            Sets the application GUID
            </summary>
            <param name="applicationGuid">Application GUID</param>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.RestartApplication">
            <summary>
            Tries to restart application and returns if restart was successful.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.FormatApplicationIdentifier(System.Guid)">
            <summary>
            Formats the application identifier retrieved from the configuration file.
            </summary>
            <param name="value">The value to format.</param>
        </member>
        <member name="M:CMS.Helpers.SystemHelper.FormatApplicationName(System.String,System.Guid)">
            <summary>
            Formats the application name retrieved from the configuration file.
            </summary>
            <param name="value">The value to format.</param>
            <param name="identifierValue">The application identifier to use when the name is empty.</param>
        </member>
        <member name="T:CMS.Helpers.DateTimeUrlFormatter">
            <summary>
            Provides support for formatting and parsing <see cref="T:System.DateTime"/> values for usages in url links.
            </summary>
            <see cref="T:CMS.Helpers.SecurityHelper"/>
        </member>
        <member name="F:CMS.Helpers.DateTimeUrlFormatter.EMAIL_CONFIRMATION_DATETIME_FORMAT">
            <summary>
            Date time format used in e-mail confirmation hashing methods.
            </summary>
        </member>
        <member name="M:CMS.Helpers.DateTimeUrlFormatter.Format(System.DateTime)">
            <summary>
            Returns given date time in custom culture independent format.
            </summary>
            <seealso cref="M:CMS.Helpers.SecurityHelper.GenerateConfirmationEmailHash(System.String,System.DateTime)"/>
            <seealso cref="M:CMS.Helpers.SecurityHelper.ValidateConfirmationEmailHash(System.String,System.String,System.DateTime)"/>
        </member>
        <member name="M:CMS.Helpers.DateTimeUrlFormatter.Parse(System.String)">
            <summary>
            Returns date time parsed from custom culture independent format.
            </summary>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:CMS.Helpers.DateTimeUrlFormatter.TryParse(System.String,System.DateTime@)">
            <summary>
            Attempts to parse date time in custom culture independent format.
            </summary>
            <returns>
            True when parsing succeeded, false otherwise.
            </returns>
        </member>
        <member name="T:CMS.Helpers.SecurityDebug">
            <summary>
            Security debug methods
            </summary>
        </member>
        <member name="P:CMS.Helpers.SecurityDebug.Settings">
            <summary>
            Debug settings
            </summary>
        </member>
        <member name="P:CMS.Helpers.SecurityDebug.CurrentRequestLog">
            <summary>
            Current request log.
            </summary>
        </member>
        <member name="P:CMS.Helpers.SecurityDebug.DebugCurrentRequest">
            <summary>
            Debug current request security operations.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.GetDebugSettings">
            <summary>
            Gets the debug settings
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.FinalizeData(System.Data.DataTable)">
            <summary>
            Finalizes the debug data
            </summary>
            <param name="dt">Data</param>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.NewLogTable">
            <summary>
            Creates a new table for the security log.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.StartSecurityOperation(System.String)">
            <summary>
            Logs the security operation. Logs the security operation to the file and to current request log for debugging.
            </summary>
            <param name="operation">Operation</param>
            <returns>Returns the DataRow with new log item</returns>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.SetLogItemImportant(System.Data.DataRow)">
            <summary>
            Sets the log item as important one
            </summary>
            <param name="dr">Security log item</param>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.FinishSecurityOperation(System.Data.DataRow,System.String,System.String,System.String,System.Object,System.String)">
            <summary>
            Sets the log item result.
            </summary>
            <param name="dr">Security log item</param>
            <param name="userName">User name</param>
            <param name="resource">Resource or class name</param>
            <param name="name">Permission or UI element name</param>
            <param name="result">Result of the check</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.LogSecurityOperation(System.String,System.String,System.String,System.String,System.Object,System.String,System.Int32)">
            <summary>
            Logs the security operation. Logs the security operation to the file and to current request log for debugging.
            </summary>
            <param name="userName">User name</param>
            <param name="operation">Operation</param>
            <param name="resource">Resource or class name</param>
            <param name="name">Permission or UI element name</param>
            <param name="result">Result of the check</param>
            <param name="siteName">Site name</param>
            <param name="indent">Indentation of the item</param>
            <returns>Returns the DataRow with new log item</returns>
        </member>
        <member name="M:CMS.Helpers.SecurityDebug.LogToFile(System.String,System.String,System.String,System.String,System.Object,System.String,System.Int32)">
            <summary>
            Logs the security operation to the log file.
            </summary>
            <param name="userName">User name</param>
            <param name="operation">Operation</param>
            <param name="resource">Resource or class name</param>
            <param name="name">Permission or UI element name</param>
            <param name="result">Result of the check</param>
            <param name="siteName">Site name</param>
            <param name="indent">Indentation of the item</param>
        </member>
        <member name="T:CMS.Helpers.HashValidationSalts">
            <summary>
            This class contains constants with 
            </summary>
        </member>
        <member name="F:CMS.Helpers.HashValidationSalts.REDIRECT_PAGE">
            <summary>
            Salt for CMSMessages/Redirect.aspx
            </summary>
        </member>
        <member name="F:CMS.Helpers.HashValidationSalts.GET_IMAGE_VERSION">
            <summary>
            Salt for request on handler running under page CMSPages/GetImageVersion.aspx
            </summary>
        </member>
        <member name="T:CMS.Helpers.OptInApprovalResultEnum">
            <summary>
            General enumeration for opt-in validation results
            </summary>
        </member>
        <member name="F:CMS.Helpers.OptInApprovalResultEnum.Success">
            <summary>
            Represents that subscription was found and successfully approved.
            </summary>
        </member>
        <member name="F:CMS.Helpers.OptInApprovalResultEnum.Failed">
            <summary>
            Represents that subscription has failed.
            </summary>
        </member>
        <member name="F:CMS.Helpers.OptInApprovalResultEnum.NotFound">
            <summary>
            Represents that subscription wasn't found.
            </summary>
        </member>
        <member name="F:CMS.Helpers.OptInApprovalResultEnum.TimeExceeded">
            <summary>
            Represents that subscription interval for approving request has exceeded.
            </summary>
        </member>
        <member name="T:CMS.Helpers.SecurityAccessEnum">
            <summary>
            General access enumeration.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.AllUsers">
            <summary>
            All users.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.AuthenticatedUsers">
            <summary>
            Authenticated users.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.AuthorizedRoles">
            <summary>
            Authorized roles.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.GroupMembers">
            <summary>
            Group members.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.Nobody">
            <summary>
            Nobody.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.Owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.GroupAdmin">
            <summary>
            Admnin of the current group.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityAccessEnum.GlobalAdmin">
            <summary>
            Global administrator.
            </summary>
        </member>
        <member name="T:CMS.Helpers.SecurityHelper">
            <summary>
            Contains methods for ensuring security
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.SESSION_TOKEN_HEADER">
            <summary>
            HTTP header which can contain session token.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.PBKDF2_SUBKEY_BYTES">
            <summary>
            Length of sub-key derived from user password. 
            <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes"/> uses internally HMACSHA1 which returns 20 bytes long output, so a longer derived sub-key adds no additional security.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.PBKDF2_SALT_BYTES">
            <summary>
            Length of salt generated within <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes"/>.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.securityCallbackSet">
            <summary>
            Indicates whether security callback was set.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.RegSquerBrackets">
            <summary>
            Regular expression for replacing square brackets from like expressions.
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.mStagingAcceptAllCertificates">
            <summary>
            Indicates whether staging accepts all certificates (including invalid certificates).
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.mAcceptAllCertificates">
            <summary>
            Indicates whether application requests should accept all certificates (including invalid certificates).
            </summary>
        </member>
        <member name="F:CMS.Helpers.SecurityHelper.mPbkdf2IterationsCount">
            <summary>
            Iterations count used within <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes"/>. 
            More iterations will generate more resistant hashes to brute-force attacks, however performance issues might arise when set to high. 
            </summary>
        </member>
        <member name="P:CMS.Helpers.SecurityHelper.StagingAcceptAllCertificates">
            <summary>
            Indicates whether staging accepts all certificates (including invalid certificates).
            </summary>
        </member>
        <member name="P:CMS.Helpers.SecurityHelper.AcceptAllCertificates">
            <summary>
            Indicates whether application requests should accept all certificates (including invalid certificates).
            </summary>
        </member>
        <member name="P:CMS.Helpers.SecurityHelper.Pbkdf2IterationsCount">
            <summary>
            Iterations count used within <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes"/>. 
            More iterations will generate more resistant hashes to brute-force attacks, however performance issues might arise when set to high. 
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.EnsureCertificateSecurity">
            <summary>
            If some module allows acceptation of untrusted or expired certificate, this method registers certificate validation callback.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.ValidateCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Returns true if current request should be excluded from checking
            Otherwise return real value
            </summary>
            <param name="sender">Sender</param>
            <param name="certificate">Certificate</param>
            <param name="chain">Chain</param>
            <param name="errors">Errors</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetSecurityAccessEnum(System.Int32,System.Int32)">
            <summary>
            Gets the SecurityAccessEnum equivalent of the permission information from the given access encoded info.
            </summary>
            <param name="access">Encoded information on access parameters of permissions</param>
            <param name="position">Position of the permission within the access parameter</param> 
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.SetSecurityAccessEnum(System.Int32,CMS.Helpers.SecurityAccessEnum,System.Int32)">
            <summary>
            Gets the integer equivalent of the permission information specified by the SecurityAccessEnum.
            </summary>
            <param name="access">SecurityAccessEnum information of access permission</param>
            <param name="securityAccess">Encoded information on access parameters of permissions</param>
            <param name="position">Position of the permission within the access parameter</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetCurrentAccessValue(System.Int32,System.Int32)">
            <summary>
            Returns the value of the permission from the access info at specified position.
            </summary>
            <param name="access">Encoded information on access parameters of permissions</param> 
            <param name="position">Position of the permission within the access parameter</param>  
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GenerateConfirmationEmailHash(System.String,System.DateTime)">
            <summary>
            Generates hash for confirmation email which approves certain action (password change, ...).  
            </summary>
            <param name="identifier">Request identifier.</param>
            <param name="time">Time when request was sent.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.ValidateConfirmationEmailHash(System.String,System.String,System.DateTime)">
            <summary>
            Returns whether hash for confirmation email is valid.
            </summary>
            <param name="hash">Validated hash.</param>
            <param name="identifier">Request identifier.</param>
            <param name="time">Time in format "ddMMyyyyhhmmss" when request was sent.</param>        
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetPBKDF2Hash(System.String)">
            <summary>
            Returns PBKDF2 hash for password.
            <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes"/> implements PBKDF2 with HMACSHA1 (hard coded in the class).
            </summary>
            <remarks>
            Use this method for generating password hashes only. Because this method is by design CPU consuming it generally is not suitable for hashing 
            arbitrary input data. The performance/security relation can be adjusted by modifying the <see cref="T:CMS.Helpers.SecurityHelper.Pbkdf2IterationsCount"/> property.
            </remarks>
            <param name="password">Password to be hashed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="password"/> is null.</exception>
            <returns>Base64 encoded hash containing iteration count, salt and derived sub-key.</returns>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.VerifyPBKDF2Hash(System.String,System.String)">
            <summary>
            Returns true in case given password matches given PBKDF2 hash. 
            </summary>
            <param name="password">Password to be hashed and compared with <paramref name="hash"/>.</param>
            <param name="hash">Hash to compare hashed <paramref name="password"/> with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="password"/> or <paramref name="hash"/> are null.</exception>
            <returns>True for hashes generated using <see cref="T:CMS.Helpers.SecurityHelper.GetPBKDF2Hash"/> method (for given password).</returns>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetSHA2Hash(System.String)">
            <summary>
            Returns SHA2 hash for input data.
            </summary>
            <param name="inputData">Data to by hashed.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetHMACSHA2Hash(System.String,System.Byte[])">
            <summary>
            Returns HMAC SHA256 hash for input data with key.
            </summary>
            <param name="inputData">Data to be hashed.</param>
            <param name="key">Key on which data will be hashed.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetSHA1Hash(System.String)">
            <summary>
            Returns the SHA1 hash byte array for given password string.
            </summary>
            <param name="inputData">Data to be hashed.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetMD5Hash(System.String)">
            <summary>
            Returns SHA2 hash for input data.
            </summary>
            <param name="inputData">Data to by hashed.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.CheckPasswordPolicy(System.String,System.String)">
            <summary>
            Check password policy for specified password
            </summary>
            <param name="password">Password to check for policy fulfillment</param>
            <param name="siteName">Name of site containing policy to be met</param>
            <returns>True if policy met, false otherwise</returns>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.CheckPasswordPolicy(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Check password policy for specified password
            </summary>
            <param name="password">Password to check for policy fulfillment</param>
            <param name="siteName">Name of site containing policy to be met</param>
            <param name="minLength">Minimum password length</param>
            <param name="minNonAlphaNum">Minimal number of non-alpha numeric characters</param>
            <param name="regularExpression">Regular expression to be met</param>
            <returns>True if policy met, false otherwise</returns>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.ValidateSessionToken(System.String,System.String)">
            <summary>
            Validates if session token is equal given token. In case that session doesn't contain token returns true.
            </summary>
            <param name="token">Token to validate.</param>
            <param name="sessionTokenName">Name of the session token to compare the token value with. If no token name is defined, SESSION_TOKEN_HEADER is used instead.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetSecondsToShowScreenLockAction(System.String)">
            <summary>
            Gets the time period when client should contact server to check ScreenLock state.
            </summary>
            <param name="sitename">Site name.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.LogScreenLockAction">
            <summary>
            Logs the call of this method as request for ScreenLock feature.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.TryParseBasicAuthorizationHeader(System.String,System.String@,System.String@)">
            <summary>
            Tries to parse Authorization header (Basic Authentication). Retrieves both username and password from header if parsing succeeded.
            </summary>
            <param name="authorizationHeader">HTTP Authorization header</param>
            <param name="username">Is set to username from the header if parsing was successful</param>
            <param name="password">Is set to password from the header if parsing was successful</param>
            <returns>True if parsing was successful, false otherwise</returns>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.IsAutoCompleteEnabledForLogin(System.String)">
            <summary>
            Returns whether Autocomplete is enabled for login usernames.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.IsScreenLockEnabled(System.String)">
            <summary>
            Returns whether ScreenLock feature is enabled for given site.
            </summary>
            <param name="sitename">Site name.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.HandleClickjacking">
            <summary>
            Adds protection against clickjacking.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.BlockURLWithCookielessSessionPattern">
            <summary>
            Returns 404 response if request url contains a cookieless session pattern, which is potentially unsafe.
            </summary>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.GetHash(System.String,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Returns hash of given data in given type.
            </summary>
            <param name="inputData">Input data.</param>
            <param name="algorithm">Algorithm to use.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.ByteArraysEqual(System.Byte[],System.Byte[])">
            <summary>
            Compares two byte arrays.
            </summary>
            <param name="first">First byte array.</param>
            <param name="second">Second byte array.</param>
        </member>
        <member name="M:CMS.Helpers.SecurityHelper.IsValidCookielessPattern(System.String,System.Int32,System.Int32)">
            <summary>
            Make sure sub-string is of the pattern: A(XXXX)N(XXXXX)P(XXXXX) and so on.
            </summary>
        </member>
        <member name="T:CMS.Helpers.CutTextEnum">
            <summary>
            Defines the cut location for the text when shortened
            </summary>
        </member>
        <member name="F:CMS.Helpers.CutTextEnum.End">
            <summary>
            Cut at the end of the text
            </summary>
        </member>
        <member name="F:CMS.Helpers.CutTextEnum.Middle">
            <summary>
            Cut in the middle of the text
            </summary>
        </member>
        <member name="F:CMS.Helpers.CutTextEnum.Start">
            <summary>
            Cut at the start of the text
            </summary>
        </member>
        <member name="T:CMS.Helpers.Markup.FormattedText">
            <summary>
            Class for formatting text by HTML tags.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.SetText(System.String)">
            <summary>
            Sets the inner text, doesn't change already added tags.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.AddTag(System.String,System.String)">
            <summary>
            Adds tag enclosing the text.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.ToString">
            <summary>
            Returns formatted string.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.ColorRed">
            <summary>
            Adds span HTML tag and uses alert-status-error CSS class.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.ColorGreen">
            <summary>
            Adds span HTML tag and uses alert-status-success CSS class.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.ColorOrange">
            <summary>
            Adds span HTML tag and uses alert-status-warning CSS class.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.AddTooltip(System.String)">
            <summary>
            Adds span tag with set title attribute.
            </summary>
        </member>
        <member name="M:CMS.Helpers.Markup.FormattedText.OnClientClick(System.String)">
            <summary>
            Adds JavaScript that gets called when text is clicked.
            </summary>
        </member>
        <member name="T:CMS.Helpers.LoremIpsumGenerator">
            <summary>
            Lorem ipsum text generator.
            </summary>
        </member>
        <member name="F:CMS.Helpers.LoremIpsumGenerator.mWords">
            <summary>
            List of available words.
            </summary>
        </member>
        <member name="F:CMS.Helpers.LoremIpsumGenerator.mRandom">
            <summary>
            Random generator.
            </summary>
        </member>
        <member name="P:CMS.Helpers.LoremIpsumGenerator.Random">
            <summary>
            Random generator.
            </summary>
        </member>
        <member name="P:CMS.Helpers.LoremIpsumGenerator.Words">
            <summary>
            List of available words.
            </summary>
        </member>
        <member name="M:CMS.Helpers.LoremIpsumGenerator.GetText(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the paragraphs.
            </summary>
            <param name="paragraphs">Number of paragraphs</param>
            <param name="wordsPerParagraph">Maximum number of words per paragraph</param>
            <param name="charsPerParagraph">Maximum number of characters per paragraph</param>
            <param name="maxWords">Maximum number of words</param>
            <param name="maxChars">Maximum number of characters</param>
        </member>
        <member name="M:CMS.Helpers.LoremIpsumGenerator.GetTextByLength(System.Int32)">
            <summary>
            Gets the lorem ipsum text with specified number of words. Always starts with "Lorem ipsum dolor sit amet".
            </summary>
            <param name="chars">Number of characters</param>
        </member>
        <member name="M:CMS.Helpers.LoremIpsumGenerator.GetTextByNumberOfWords(System.Int32)">
            <summary>
            Gets the lorem ipsum text with specified number of words. Always starts with "Lorem ipsum dolor sit amet".
            </summary>
            <param name="words">Number of words</param>
        </member>
        <member name="M:CMS.Helpers.LoremIpsumGenerator.GetWord">
            <summary>
            Gets the random word.
            </summary>
        </member>
        <member name="T:CMS.Helpers.TextHelper">
            <summary>
            Contains various methods for text formatting and transformation.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextHelper.DEFAULT_ELLIPSIS">
            <summary>
            Default ellipsis for the limit length methods.
            </summary>
        </member>
        <member name="F:CMS.Helpers.TextHelper.NewLine">
            <summary>
            Newline symbol.
            </summary>
        </member>
        <member name="T:CMS.Helpers.TextHelper.OnBeforeRemoveDiacriticsEventHandler">
            <summary>
            Represents the method that will handle an event that should be called before remove diacritics.
            </summary>
            <param name="text">Input text with diacritics</param>
            <param name="e">EventArgs</param>
            <returns>Returns false if original remove method should not be used.</returns>
        </member>
        <member name="E:CMS.Helpers.TextHelper.OnBeforeRemoveDiacritics">
            <summary>
            Occurs when the RemoveDiacritics method is called, returns false if original remove method should not be used.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.EncodeValues">
            <summary>
            Indicates whether to encode merged text.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExLineBreak">
            <summary>
            Gets or sets the regular expression for line break method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExLineEnd">
            <summary>
            Regular expression for the line ending.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExLineEndWithSpaces">
            <summary>
            Regular expression for the line ending with the spaces before and after.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegeExWhiteSpaces">
            <summary>
            Regular expression for white spaces.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExSplitPagesTags">
            <summary>
            Regular expression for the tag match for SplitPages method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExSplitPagesSentences">
            <summary>
            Regular expression for the tag match for SplitPages method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExToTitleCaseWords">
            <summary>
            Regular expression for the word match for ToTitleCase method.
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExRemoveMultipleCommas">
            <summary>
            Regular expression to identify multiple occurrences of comma (surrounded by white space).
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextHelper.RegExRemoveMultipleCommasStartEnd">
            <summary>
             Regular expression to identify comma at the beginning and at the end of a text.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextHelper.SplitByString(System.String,System.String,System.Int32)">
            <summary>
            Splits the given string by a defined string separator
            </summary>
            <param name="text">Text to split</param>
            <param name="separator">Separator</param>
            <param name="minItems">If defined, the output array is filled with empty (null) items up to the given count</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.ContentEquals(System.String@,System.String@,System.Boolean,CMS.Helpers.TextNormalizationSettings)">
            <summary>
            Checks if two text contents are equal. Ignores extra white spaces, and is case insensitive.
            </summary>
            <param name="text1">First text</param>
            <param name="text2">Second text</param>
            <param name="returnDifference">If true, the difference (remainders that don't match) are returned through original values</param>
            <param name="settings">If true, the input texts are normalized to avoid mismatch on whitespaces</param>
            <exception cref="T:System.ArgumentNullException">When text paramater is null</exception>
        </member>
        <member name="M:CMS.Helpers.TextHelper.RemoveDiacritics(System.String)">
            <summary>
            Removes diacritics from Latin characters, non-Latin characters are not changed.
            </summary>
            <param name="s">Input string</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.IsLatinExtendedA(System.Char)">
            <summary>
            Indicates whether <paramref name="character"/> belongs to Unicode block Latin Extended-A.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextHelper.RemoveCharacters(System.String,System.Globalization.UnicodeCategory)">
            <summary>
            Removes the invalid characters from the given string
            </summary>
            <param name="s">String to process</param>
            <param name="category">Unicode category to remove</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.SetLine(System.String,System.String,System.Int32)">
            <summary>
            Sets the specific line of the text to a new value
            </summary>
            <param name="text">Complete text</param>
            <param name="newValue">New line value</param>
            <param name="line">Line number to set (indexed from 1)</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.BreakLine(System.String,System.Int32,System.String)">
            <summary>
            Add specified break tag into the input text in specified index.
            </summary>
            <param name="inputText">Input text</param>
            <param name="size">Index, where text should be broken</param>
            <param name="breakTag">Break tag</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.SplitPages(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns an array of text pages created from the input string according to the page size.
            </summary>
            <param name="text">Input string to create pages from</param>
            <param name="pageSize">Page size</param>
            <param name="processTextDecoded">If true, the plain text within the given text is processed decoded (with entities resolved)</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.SplitCamelCase(System.String)">
            <summary>
            Splits the camel cased input text into separate words.
            </summary>
            <param name="text">Camel cased text</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.EnsureMaximumLineLength(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Limits the line length of given plain text.
            </summary>
            <param name="text">Text to process</param>
            <param name="maxLength">Max line length</param>
            <param name="separation">String which will be used as line separator</param>
            <param name="encode">If true, original string will be encoded (all the separators remain un-encoded)</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.LimitFileNameLength(System.String,System.Int32)">
            <summary>
            Limits the filename length (leaves extension).
            </summary>
            <param name="fileName">File name</param>
            <param name="maxLength">Max length</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.LimitLength(System.String,System.Int32,CMS.Helpers.CutTextEnum)">
            <summary>
            Limits the string length.
            </summary>
            <param name="text">Text to trim</param>
            <param name="maxLength">Max length</param>
            <param name="cutLocation">Location in the text where the cut of extra text occurs</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.LimitLength(System.String,System.Int32,System.String,System.Boolean,CMS.Helpers.CutTextEnum)">
            <summary>
            Limits the string length.
            </summary>
            <param name="text">Text to trim</param>
            <param name="maxLength">Max length</param>
            <param name="padString">Trim character</param>
            <param name="wholeWords">If true, the text won't be cut in the middle of the word</param>
            <param name="cutLocation">Location in the text where the cut of extra text occurs</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.GetCharAt(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets the character at the given position of the text
            </summary>
            <param name="text">Source text</param>
            <param name="index">Index of the character</param>
            <param name="reverse">If true, the character is retrieved in the reversed order (from the end)</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.EnsureLineEndings(System.String,System.String)">
            <summary>
            Ensures the specified line endings in the given text.
            </summary>
            <param name="text">Text to process</param>
            <param name="lineEnd">New line ending</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.ReformatCode(System.String,System.Int32,System.String)">
            <summary>
            Reformats the C# or JS code so it is properly indented.
            </summary>
            <param name="text">Text to indent</param>
            <param name="indent">Initial indent level</param>
            <param name="indentString">Indentation string</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.EnsureIndentation(System.String,System.Int32,System.String)">
            <summary>
            Ensures the specified line endings in the given text.
            </summary>
            <param name="text">Text to process</param>
            <param name="level">Level of the indentation</param>
            <param name="indentString">New line ending</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.EncodeRegexSubstitutes(System.String)">
            <summary>
            Encodes regex substitutions like $_, $+, ... so they don't apply as substitutes in the replacement string.
            </summary>
            <param name="text">Text to encode</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.ReduceWhiteSpaces(System.String,System.String)">
            <summary>
            Replace whitespaces in input text to specified replacement.
            </summary>
            <param name="text">Input text</param>
            <param name="replacement">Replacement</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.TrimEndingWord(System.String,System.String)">
            <summary>
            Removes specified word from the end of the text (if the text ends with the word).
            Note: Ignore case enabled.
            </summary>
            <param name="text">Input text</param>
            <param name="word">Text to be removed</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.TrimNumberSuffix(System.String)">
            <summary>
            Trims the number suffix from an identifier
            </summary>
            <param name="id">Base web part id (required)</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.ToTitleCase(System.String)">
            <summary>
            Converts the specified string to title case.
            </summary>
            <param name="text">Input text</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.FirstLetterToUpper(System.String)">
            <summary>
            Converts the first character to upper case.
            </summary>
            <param name="text">Text to process</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.Join(System.String,System.Collections.IEnumerable)">
            <summary>
            Joins the given list of values with a given separator.
            </summary>
            <param name="separator">Separator</param>
            <param name="items">Items to join</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.Merge(System.String,System.Object[])">
            <summary>
            Joins the given list of values with a given separator.
            </summary>
            <param name="separator">Separator</param>
            <param name="values">Values</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.MergeIfNotEmpty(System.String,System.Object[])">
            <summary>
            Joins the given list of values with a given separator. Each value is inserted into the final string only if not empty.
            </summary>
            <param name="separator">Separator</param>
            <param name="values">Values</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.RemoveMultipleCommas(System.String)">
            <summary>
            Removes multiple commas (i.e. transforms text "a,,b,," to "a, b").
            </summary>
        </member>
        <member name="M:CMS.Helpers.TextHelper.GetAmountText(System.Int32,System.String,System.String)">
            <summary>
            If amount is equal to 1, expression using singular formatting string is returned, otherwise expression using plural formatting string is returned.
            </summary>
            <param name="amount">Amount to be used</param>
            <param name="singular">Singular formatting string. If formatting item {0} is not included, it is formatted as '[amount] [singular]', e.g.: 1 unit</param>
            /// <param name="plural">Plural formatting string. If formatting item {0} is not included, it is formatted as '[amount] [plural]', e.g.: 3 units</param>
        </member>
        <member name="M:CMS.Helpers.TextHelper.BulkReplace(System.String,System.String[0:,0:],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Performs bulk replace of given replacements
            </summary>
            <param name="text">Text to process</param>
            <param name="replacements">Key-Value pairs of replacements</param>
            <param name="encode">If true, replacements are encoded</param>
            <param name="useRegEx">If true, regular expressions are used to perform the replace</param>
            <param name="escapeRegExSubstitutions">If true, regex special characters are escaped so the replacement value is the value of the result, not the regular expression of replace.</param>
        </member>
        <member name="T:CMS.Helpers.TextNormalizationSettings">
            <summary>
            Normalization settings for text comparison
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextNormalizationSettings.NormalizeLineEndings">
            <summary>
            If true, line endings in the given text are normalized
            </summary>
        </member>
        <member name="P:CMS.Helpers.TextNormalizationSettings.NormalizeWhiteSpaces">
            <summary>
            If true, all whitespaces in the given text are normalized
            </summary>
        </member>
        <member name="T:CMS.Helpers.CacheTasks">
            <summary>
            Web farm synchronization for cache.
            </summary>
        </member>
        <member name="M:CMS.Helpers.CacheTasks.Init">
            <summary>
            Initializes the tasks.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ClearCacheItemsWebFarmTask">
            <summary>
            Web farm task used to clear cache items.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.Helpers.ClearCacheItemsWebFarmTask.KeyPrefix">
            <summary>
            Gets or sets prefix of all identifiers of caches to be flushed.
            </summary>
        </member>
        <member name="P:CMS.Helpers.ClearCacheItemsWebFarmTask.IsCaseSensitive">
            <summary>
            Get or sets a value that indicates whether cache prefix key is case sensitive.
            </summary>
        </member>
        <member name="M:CMS.Helpers.ClearCacheItemsWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.Helpers.CacheHelper.ClearCache(System.String,System.Boolean,System.Boolean)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.Helpers.ClearFullPageCacheWebFarmTask">
            <summary>
            Web farm task used to clear full page caches.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="M:CMS.Helpers.ClearFullPageCacheWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.Helpers.CacheHelper.ClearFullPageCache(System.Boolean)"/> method.
            </summary>
        </member>
        <member name="T:CMS.Helpers.RemoveCacheItemWebFarmTask">
            <summary>
            Web farm task used to clear cache.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.Helpers.RemoveCacheItemWebFarmTask.Key">
            <summary>
            Gets or sets the identifier of the cache to be flushed.
            </summary>
        </member>
        <member name="P:CMS.Helpers.RemoveCacheItemWebFarmTask.IsCaseSensitive">
            <summary>
            Get or sets a value that indicates if cache key is case sensitive.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RemoveCacheItemWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.Helpers.CacheHelper.Remove(System.String,System.Boolean,System.Boolean,System.Boolean)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.Helpers.RemovePersistentStorageKeyWebFarmTask">
            <summary>
            Web farm task used to remove key from internal cache.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.Helpers.RemovePersistentStorageKeyWebFarmTask.Key">
            <summary>
            Gets or sets cache identifier of the cache to be flushed.
            </summary>
        </member>
        <member name="M:CMS.Helpers.RemovePersistentStorageKeyWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.Helpers.PersistentStorageHelper.RemoveKeyFromInternalCache(System.String)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.Helpers.TouchCacheItemWebFarmTask">
            <summary>
            Web farm task used to touch cache items.
            </summary>
            <seealso cref="P:CMS.Core.IWebFarmTask.TaskTextData"/>
        </member>
        <member name="P:CMS.Helpers.TouchCacheItemWebFarmTask.Keys">
            <summary>
            Gets or sets collection of cache keys which will be touched.
            </summary>
        </member>
        <member name="M:CMS.Helpers.TouchCacheItemWebFarmTask.ExecuteTask">
            <summary>
            Processes the web farm task by invoking the <see cref="M:CMS.Helpers.CacheHelper.TouchKey(System.String,System.Boolean,System.Boolean)"/> method while passing it current class' properties as its parameters.
            </summary>
        </member>
        <member name="T:CMS.Helpers.WebFarmHelper">
            <summary>
            Web farm helper
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebFarmHelper.WebFarmEnabled">
            <summary>
            Returns true if the web farm is enabled
            </summary>
        </member>
        <member name="P:CMS.Helpers.WebFarmHelper.ServerName">
            <summary>
            Returns unique identifier of the server
            </summary>
        </member>
        <member name="M:CMS.Helpers.WebFarmHelper.RegisterTask(System.Type,System.Boolean,CMS.Core.WebFarmTaskOptimizeActionEnum)">
            <summary>
            Registers the given web farm task.
            </summary>
            <param name="type">Type of the web farm task.</param>
            <param name="isMemoryTask">Indicates if the task modifies only memory. Memory tasks can be deleted on application start.</param>
            <param name="webFarmTaskOptimize">Determines type of optimization which is used for reducing number of generated web farm tasks of particular type.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="type"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="type"/> does not inherit <see cref="T:CMS.Core.WebFarmTaskBase"/> or does not have parameterless constructor.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when task with type <paramref name="type"/> has been already registered.</exception>
        </member>
        <member name="M:CMS.Helpers.WebFarmHelper.RegisterTask``1(System.Boolean,CMS.Core.WebFarmTaskOptimizeActionEnum)">
            <summary>
            Registers the given web farm task.
            </summary>
            <param name="isMemoryTask">Indicates if the task modifies only memory. Memory tasks can be deleted on application start.</param>
            <param name="webFarmTaskOptimize">Determines type of optimization which is used for reducing number of generated web farm tasks of particular type.</param>
            <exception cref="T:System.ArgumentException">Thrown when task to be registered does not have parameterless constructor.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when task has been already registered.</exception>
        </member>
        <member name="M:CMS.Helpers.WebFarmHelper.CreateTask(CMS.Core.WebFarmTaskBase)">
            <summary>
            Creates task.
            </summary>
            <param name="task">Web farm task with its data to be created.</param>
            <returns>Returns true if the task was created (web farm is set up and task was allowed)</returns>
        </member>
        <member name="M:CMS.Helpers.WebFarmHelper.CreateIOTask(CMS.Core.WebFarmTaskBase)">
            <summary>
            Creates task.
            </summary>
            <param name="task">Web farm task with its data to be created.</param>
            <returns>Returns true if the task was created (web farm is set up and task was allowed)</returns>
        </member>
        <member name="M:CMS.Helpers.WebFarmHelper.GetServerNamesToUpdate">
            <summary>
            Gets the list of names of servers to be updated. Current server is excluded.
            </summary>
        </member>
        <member name="T:CMS.Base.ObjectLifeTimeEnum">
            <summary>
            Enumeration of object lifetime.
            </summary>
        </member>
        <member name="F:CMS.Base.ObjectLifeTimeEnum.Request">
            <summary>
            Selected mode is used only for current request.
            </summary>
        </member>
        <member name="F:CMS.Base.ObjectLifeTimeEnum.Cookies">
            <summary>
            Selected mode is stored to cookies.
            </summary>
        </member>
        <member name="T:CMS.Base.ObjectLifeTimeFunctions">
            <summary>
            Class transformation functions for ObjectLifeTimeEnum
            </summary>
        </member>
        <member name="F:CMS.Base.ObjectLifeTimeFunctions.OBJECT_LIFE_TIME_KEY">
            <summary>
            Query string name/suffix used to retrieve object lifetime value.
            </summary>
        </member>
        <member name="M:CMS.Base.ObjectLifeTimeFunctions.GetCurrentObjectLifeTime(System.String)">
            <summary>
            Gets the current life time value
            </summary>
            <param name="prefix">Allows use specific lifetime value</param>
        </member>
        <member name="M:CMS.Base.ObjectLifeTimeFunctions.ObjectLifeTimeToString(CMS.Base.ObjectLifeTimeEnum)">
            <summary>
            Converts enum to string 
            </summary>
            <param name="mode">Enum representation</param>
        </member>
        <member name="M:CMS.Base.ObjectLifeTimeFunctions.ObjectLifeTimeFromString(System.String)">
            <summary>
            Converts string to enum representation
            </summary>
            <param name="mode">String mode</param>
        </member>
    </members>
</doc>
